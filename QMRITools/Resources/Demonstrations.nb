(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    665432,      14503]
NotebookOptionsPosition[    591228,      13257]
NotebookOutlinePosition[    606355,      13631]
CellTagsIndexPosition[    604110,      13542]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["QMRITools Demonstration", "Title",
 CellChangeTimes->{{3.7548942958959026`*^9, 3.754894302342204*^9}},
 CellTags->"c:1",ExpressionUUID->"934d8265-4fcc-4427-9f34-640074773381"],

Cell["\<\
In this demo notebook some functionality of the QMRI toolbox is demonstrated.
Not all functionality is covered, some functions are very specialized for \
experiments only run in our lab. 
Furthermore some functionality is still under development and therefore will \
also be excluded from the demos.
If you need any extra information about one of the function please feel free \
to contact me at m.froeling@gmail.com\
\>", "Text",
 CellChangeTimes->{{3.7548942642000513`*^9, 3.7548942928369303`*^9}, {
  3.7548943313614855`*^9, 3.7548943407731633`*^9}, {3.75843311938348*^9, 
  3.7584332200049214`*^9}, {3.8380934605959826`*^9, 
  3.838093484743886*^9}},ExpressionUUID->"22b0e3d8-9903-4283-b556-\
9ad31d8e7f65"],

Cell[CellGroupData[{

Cell["Initialization", "Chapter",
 CellChangeTimes->{{3.7548943063775883`*^9, 3.754894325780166*^9}, {
   3.757848451841284*^9, 3.757848453039485*^9}, 3.7983499996870766`*^9, {
   3.8380961207242875`*^9, 
   3.8380961249989786`*^9}},ExpressionUUID->"4d401d3b-2658-4bc0-bbef-\
6cc2152ecc5c"],

Cell[CellGroupData[{

Cell["Loading the toolbox definitions", "Subsection",
 CellChangeTimes->{{3.7548980189899817`*^9, 3.7548980262380056`*^9}, {
  3.838093292882322*^9, 3.838093299909398*^9}},
 CellTags->"c:2",ExpressionUUID->"d9089451-56b6-4385-8261-4b613f418e39"],

Cell["\<\
Load the toolbox and specify the directory of the demo data folder. It \
assumes the demo data folder is in the same folder as the demo.nb\
\>", "Text",
 CellChangeTimes->{{3.7548943517375546`*^9, 3.754894370341078*^9}, {
  3.758433278150164*^9, 
  3.7584333047881756`*^9}},ExpressionUUID->"a102f725-94d2-43a9-822e-\
d1dd3b7c0c23"],

Cell[BoxData[{
 RowBox[{"<<", "QMRIToolsDev`"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtractDemoData", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DirectoryName", "[", 
       RowBox[{"GetAssetLocation", "[", "\"\<DemoData\>\"", "]"}], "]"}], 
      ",", "\"\<DemoData\>\""}], "}"}], "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6907975416819487`*^9, 3.6907975437981606`*^9}, 
   3.7066051241018443`*^9, {3.7548942442159195`*^9, 3.754894244741446*^9}, {
   3.7578490603381467`*^9, 3.7578490607001114`*^9}, {3.8673868759011*^9, 
   3.8673868780919075`*^9}, 3.8722309910071054`*^9, {3.872231273744875*^9, 
   3.872231274288929*^9}, {3.8723160319514484`*^9, 3.8723160404959493`*^9}, {
   3.8723162873627505`*^9, 3.8723162876809*^9}, {3.8723163334597664`*^9, 
   3.8723163482402725`*^9}, 3.872316437329891*^9, {3.874637671571088*^9, 
   3.8746376721471047`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"cae7997b-5732-4630-8297-a72d2ca96db1"],

Cell[BoxData[{
 RowBox[{"pack", "=", 
  RowBox[{"First", "[", 
   RowBox[{"PacletFind", "[", "\"\<QMRITools\>\"", "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Information", "@", "pack"}]}], "Input",
 CellChangeTimes->{{3.7983489419994574`*^9, 3.7983489542227497`*^9}, {
   3.7983498620226765`*^9, 3.798349880765444*^9}, 3.852953866315629*^9, {
   3.8684316300594335`*^9, 3.868431631192344*^9}, 3.87231606848203*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"806bff7c-106b-4eb2-952c-cd89f993a8f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verbose loading", "Subsection",
 CellChangeTimes->{{3.7548980189899817`*^9, 3.7548980262380056`*^9}, {
  3.838093292882322*^9, 3.838093313840153*^9}},
 CellTags->"c:3",ExpressionUUID->"39e70345-88c4-43ed-a9b1-cbbbf33d0989"],

Cell["\<\
If the private parameter verbose is set to True the initialization of the \
toolbox is done printing all the steps done by the init.m file.\
\>", "Text",
 CellChangeTimes->{{3.7548943517375546`*^9, 3.754894370341078*^9}, {
  3.758433278150164*^9, 3.7584333047881756`*^9}, {3.8380933393328323`*^9, 
  3.8380933821649847`*^9}},ExpressionUUID->"d87aed66-5047-4dad-9433-\
3a26fa35e172"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"QMRITools`$Verbose", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "QMRITools`"}]}], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"a558d44a-819d-4c6d-8542-a3c82d017a78"]
}, Open  ]],

Cell[CellGroupData[{

Cell["List all Packages and toolboxes", "Subsection",
 CellChangeTimes->{{3.7548980189899817`*^9, 3.7548980262380056`*^9}},
 CellTags->"c:4",ExpressionUUID->"1037c5ba-e19a-4732-8360-f60e7a2fa01d"],

Cell["\<\
List of all the QMRITool packages and functions that are loaded. For more \
information about the functions open the \
\[OpenCurlyDoubleQuote]All-Functions.nb\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.7548944148778186`*^9, 3.754894435542356*^9}, {
   3.758433347012531*^9, 3.7584333792364187`*^9}, 
   3.758456464343998*^9},ExpressionUUID->"9def143d-308d-45ea-9146-\
337b684f48fb"],

Cell[BoxData[
 RowBox[{"Column", "@", 
  RowBox[{"QMRIToolsPackages", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.6905384062405696`*^9, 3.690538415376483*^9}, {
   3.7205166672714324`*^9, 3.7205166714124327`*^9}, 3.7519491491125264`*^9, {
   3.7519502607371855`*^9, 3.75195026609664*^9}, {3.7541410126212564`*^9, 
   3.7541410154539833`*^9}, {3.7546767448038144`*^9, 
   3.7546767457753997`*^9}, {3.7584343247944927`*^9, 3.7584343283449416`*^9}},
 CellLabel->
  "In[428]:=",ExpressionUUID->"66f0941d-b74d-4f23-a6d3-c5e28a3d33c5"],

Cell[BoxData[
 RowBox[{"QMRIToolsFunctions", "[", "25", "]"}]], "Input",
 CellChangeTimes->{{3.75195384157756*^9, 3.7519538451427054`*^9}, {
  3.751953883350589*^9, 3.751953894726776*^9}, {3.751954298264811*^9, 
  3.75195431300511*^9}, {3.7541411531669445`*^9, 3.7541411772612*^9}, {
  3.7546318724060435`*^9, 3.754631887081112*^9}, {3.754631931343922*^9, 
  3.7546319316547194`*^9}, {3.7548944382622967`*^9, 3.7548944389976683`*^9}},
 CellLabel->
  "In[429]:=",ExpressionUUID->"2daef7a9-1b9d-41bf-a8ae-40d232f006a0"],

Cell[BoxData[
 RowBox[{"CompilebleFunctions", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7548979688171806`*^9, 3.754897973478301*^9}, {
  3.768799206937463*^9, 3.76879921041768*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"017dd998-8132-4761-a2ee-0fc908034fca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NotebookOpen", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"PacletFind", "[", "\"\<QMRITools\>\"", "]"}], "]"}], "[", 
       "\"\<Location\>\"", "]"}], ",", "\"\<All-Functions.nb\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8374908586072235`*^9, 3.8374909507656727`*^9}, 
   3.837491232736039*^9},
 CellLabel->
  "In[452]:=",ExpressionUUID->"aab0b17b-4665-4b8a-a984-f94dd7cd5cc1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Memory Usage", "Subsection",
 CellChangeTimes->{{3.754898004573657*^9, 3.754898010080146*^9}},
 CellTags->"c:5",ExpressionUUID->"8ee5c0ae-81ad-4d98-953f-c7e16140406d"],

Cell["\<\
MemoryUsage gives a visual overview of all datasets in memory.\
\>", "Text",
 CellChangeTimes->{
  3.7548980027240057`*^9, {3.754898034906535*^9, 3.754898050783702*^9}, {
   3.7968832190760508`*^9, 3.7968832206492825`*^9}, {3.8380934022277136`*^9, 
   3.8380934050957375`*^9}},ExpressionUUID->"0f188b1d-4afc-4876-b969-\
fb73e86a3aa4"],

Cell[BoxData[
 RowBox[{"MemoryUsage", "[", "]"}]], "Input",
 CellChangeTimes->{{3.754897976850383*^9, 3.7548979821966505`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a66d2a05-f5eb-4f7c-8218-62ea88883b7a"],

Cell["\<\
Imaging datasets can become large so it can be good to clear them from memory \
if needed.\
\>", "Text",
 CellChangeTimes->{
  3.7548980027240057`*^9, {3.754898034906535*^9, 3.754898050783702*^9}, {
   3.7968832190760508`*^9, 3.7968832206492825`*^9}, {3.8380934022277136`*^9, 
   3.838093436790033*^9}},ExpressionUUID->"0b15c18e-462f-410c-a373-\
4af09d51be09"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
SpufqzrU9bnuVXVvPt1/nKnqXZrWs7+jBzNItDjMGCTNSa/9KVyTeWFUA+6U
nH/OwonKXxlvylz+cW9p327iFsom8n90ZtFSCLOtGUP1D81/nke0o6930s/P
W6YQ3RRRlBHrbK0/OSvnBcfxd3tEfTVosv77j5B/bM6uZn+37e41J9g3dZC0
HXn+aFXmSG2oEbIV3prYjHMWi6NuMxTGxpuT3JmYvOG0LZRt5N85S8g/XObt
xkj3n+44fxC+3Sxr6XrpTBF1ysjZF87Q8eA4C/fPy0j/nSiZf3CtXmvdf5b8
pw4SeaD9+VlWi5Rakfdp7jmLRc38Y+MtOpd/+t3IfxdsJX9zx9wPjiAxiM3r
t5pUA3iLLMqUcdWfknIq8vdPJuv1K8gif++SM03+I7dOfjDHr7Zz5B8/Z7HE
5K/HOTaX3Y2wNZvJv3u+6Mvf3kir87q/z39//PX/YMr46v9JCI5cuPGmsiJ/
P/PPsezTLeio+35mDZIhUTcEVzanjPw6nGWfWecsFn3NPxbnYC7bkfO8JB5i
Bu+fX81hUfk7K6bmTtE+DdbntXuz+R4zy6A/xXW2npQoiLJzgyNy97j8Y2dc
7W1PvU4tDjMGiSpqtSY14HKzunw9fM7CiT3w1cabMpedh+hk/nsht/xhX9zT
s/c13/QHgLVB/gfncU+z/4qv+QNABpD/4Xk8HtmOAoC9gPwBAA4I8gcAOCDI
HwDggGSW/wkAoGQWEe8eIPMHADggyB8A4IAgfwCAA4L8AaB0vnKxdUeXBPkD
QOnUWv679UH+AAC7AvkngPwBoHSQfwLIHwBKB/kngPwBoHSQfwLIHwDSaf9M
y+Z/nQX5J1Ca/MVfBNq6Katg+uf+4aQe7y9DTfyjeOGfk939n0ObF4dZJ507
ciL1Ki2UZee2ME8t6UT/IuVU+a/7B7w0+X9/fvQR/fj8brbcLv1PyP+nPPk/
ede/BGf/Lq/359s7wr8rW1VjoXjOWv/v78bOuQ/mxWH6SSeEa5C7/LOEYQvF
37SNx3svtczk5T9HnFf+rfgvN/vx84b8ffLL/16dr/cwn7F/+VT+VdRTsLHf
szthLYs6rbW/pDoxFFFN7PxvjI/H4Yn4Q+96KjoQrtFjB+qVLRSCVu4x8tSy
GlqrIrfh4ibG/KVlhxVa7Mq/Ub81vwX5O2whf+dvPbcDwWY4uth9Bby//N0e
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
l2NJ73B/o7WMZ9HhOpr52CU5avw3qeVFJsu/605QOK/89QTfyF9cBW4Xt6ws
498nIP+XiMm/GbtV97/zoeUfcdHASu5giNpbbpk8V3f3yeleV9YGnBzrcp0+
VNXA6oTS38FaYid0zuzl5Kaozej9+G9Ty4tMl79thDOw9pT5i0fBNtW3qX9w
gUD+i8jfDkyZ7zQDo7q2KUwzD+QgOZb84y6Kzmh/h+OBH2edTXmuudPwjjlZ
i4VdNRy+FrpJ9MCa2fgJBx7EmFgPxz9XLS8zV/7BMes0q2femn+4324xtw3I
f2n5O0+JzLCxt7LiCZj7mGjFgbMfvCdj8irpbRQllSeV2n24nuDvU/5qHOJd
/vEWgsQgUso5xaJ3PyMnVL8UZ7O3UKO3O08tS+A2JfhGTuq01d5XXqeB/ts+
bRoff9snWNIxe5qrAPJfS/4AAMuivOcv13bC9/zl3uYi0X9unvEif+QPAGXA
b/gmgPwBoHSQfwLIHwBKB/kngPwBoHSQfwLIHwBKB/kngPwBoHSQfwLIHwBK
B/kngPwBoHS+crF1R5cE+QMAHBDkDwBwQJA/AMABQf4AAAcE+QMAHBDkDwBw
QJA/AJQOr3omgPwBoHS++CWv+SB/ACgd5J8A8geA0kH+CSB/ACgd5J8A8geA
0kH+CSB/AEjncT2fTtV941Yg/wSQ/464VyfJ+fpotrazyzA0zWTJ7uDIOXeP
6YptsNa7lJPOFVWkXqWFsuzcFuapJZ26Tr2yqfKvB+KKlwhN/t+fH31EPz6/
my23S/8T8v9B/rvFzpXotJt2+NjGPVJ3uWto3WSl80kdaSxVVS+FwPlSwhY2
F1q7P7miPLXMJGkUSvLKvxX/5WY/ft6Qv09u+d+rc1Wd25zlWtlMVuandoi4
OW8pSesSyKmWMu20Y16evlug6k3pSTOA5J2SdkyzUVPQ6LED9coWCkEr9xh5
almNyIjSbkfFtH0e4t19rtFiV/6N+q35LcjfIb/8T90cbAaGMqLUUV5MyroQ
Tn9nLXf08ywsWGYM3VbHe2eLqv00oyoShaFjR+o1x8g6nrmNf648taxDPHXw
uhMrmDHzj7lfyt+uCXUl633Bho/LxbmBQP4v4Y5/O1Cc5ODg8o/fzIs7/hH8
5ZKMCwTL0TQ6JhJteywTFp2PjqRJWXRQr2xhO5jvZkP0IrR+LWswWf5dH4PC
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
    "], {{0, 709}, {511, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{511, 709},
  PlotRange->{{0, 511}, {0, 709}}]], "Input",ExpressionUUID->"538c1a9a-c29d-\
462c-aafe-1d9d7b0e26f9"]
}, Closed]],

Cell[CellGroupData[{

Cell["List of Resources", "Subsection",
 CellChangeTimes->{{3.754898004573657*^9, 3.754898010080146*^9}, {
  3.879501999694695*^9, 3.8795020036466846`*^9}, {3.879502387919468*^9, 
  3.879502388863566*^9}},
 CellTags->"c:5",ExpressionUUID->"07251170-7051-4f33-9d8a-0ab8b7bd8936"],

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"#", ",", 
      RowBox[{"GetAssetLocation", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Elastix\>\"", ",", "\"\<Transformix\>\"", ",", "\"\<DcmToNii\>\"", 
     ",", "\"\<Demo\>\"", ",", "\"\<DemoData\>\"", ",", 
     "\"\<GradientTool\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8795023376566267`*^9, 3.8795024297603703`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"7337997b-0a60-4555-8711-cf95c8769a1d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Data manipulation and visualisation", "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7548957249234715`*^9, 3.7548957340260887`*^9}, 
   3.754896730602828*^9},ExpressionUUID->"fa1ebb06-be4c-4fd9-86a2-\
22990e083b10"],

Cell[CellGroupData[{

Cell["Importing Data", "Subsection",
 CellChangeTimes->{{3.838093824664033*^9, 3.8380938305380044`*^9}},
 CellTags->"c:6",ExpressionUUID->"1e0a6fa4-16c6-4324-b877-be71023bb362"],

Cell["\<\
QMRITools mostly uses the nii file format for importing and exporting data. \
ImportNii imports the data and the voxel size.\
\>", "Text",
 CellChangeTimes->{{3.8380938400888624`*^9, 3.838093863994013*^9}, {
  3.877339544240182*^9, 
  3.877339550185604*^9}},ExpressionUUID->"efd8d2f7-3c25-48fa-8a75-\
1436a1fefc61"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"data", ",", "vox"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<twoLegs.nii\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7548957374891505`*^9, 3.754895753834767*^9}, {
  3.7549964692498875`*^9, 3.7549964755607624`*^9}, {3.8773395073678513`*^9, 
  3.877339508489859*^9}, {3.877362507696331*^9, 3.8773625098923645`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"1ba38701-07bb-494e-82ee-7d21f0bb7296"],

Cell["With NiiMethod other hdr elements can be imported", "Text",
 CellChangeTimes->{{3.8773413072894554`*^9, 
  3.8773413328237047`*^9}},ExpressionUUID->"47e0ae29-e4f6-4ece-bfcd-\
674eecb33cc7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"data", ",", "vox", ",", "hdr"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", 
    RowBox[{"\"\<twoLegs.nii\>\"", ",", 
     RowBox[{"NiiMethod", "->", "\"\<header\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"hdr", "//", "Column"}]}], "Input",
 CellChangeTimes->{{3.877339642995406*^9, 3.877339675958595*^9}, {
   3.8773397111276617`*^9, 3.8773397113272324`*^9}, {3.877341215302144*^9, 
   3.87734123128615*^9}, 3.8773412874297314`*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"31c3e0bc-c61d-426e-82ac-feccd46599ec"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"data", ",", "vox", ",", "rot"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", 
    RowBox[{"\"\<twoLegs.nii\>\"", ",", 
     RowBox[{"NiiMethod", "->", "\"\<rotation\>\""}]}], "]"}]}], 
  ";"}], "\n", "rot"}], "Input",
 CellChangeTimes->{{3.877341267140443*^9, 3.8773413006218452`*^9}, 
   3.878893286286653*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"8d7d191a-ae42-4151-a83e-42b5c7e817d7"],

Cell["To convert Dcm to nii format used DcmToNii", "Text",
 CellChangeTimes->{{3.8380938768734818`*^9, 
  3.8380938801996226`*^9}},ExpressionUUID->"61e99b7e-eee7-40e2-bb66-\
b5dfceb70997"],

Cell[BoxData[
 RowBox[{"DcmToNii", "[", "]"}]], "Input",
 CellChangeTimes->{{3.758440329175229*^9, 
  3.7584403314135933`*^9}},ExpressionUUID->"b43b9775-acff-4fd1-995d-\
6f0beb3f15d3"],

Cell["\<\
All Nii files in a folders can be compressed or uncompressed using \
\"CompressNiiFiles\" and \"ExtractNiiFiles\".
The nii import function is blind to the .gz extension.  \
\>", "Text",
 CellChangeTimes->{{3.758439698486055*^9, 3.7584397588478365`*^9}, {
  3.758440313504073*^9, 3.7584403278589478`*^9}, {3.838093875892956*^9, 
  3.838093886820865*^9}},ExpressionUUID->"d94c84c5-f9c9-40aa-9e19-\
7f2d8597b49a"],

Cell[BoxData[
 RowBox[{"CompressNiiFiles", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7584403338440795`*^9, 
  3.7584403404572797`*^9}},ExpressionUUID->"ec69b542-77af-4c0e-bf6a-\
9c11fe192c0f"],

Cell[BoxData[
 RowBox[{"ExtractNiiFiles", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7584403422927895`*^9, 
  3.758440345373513*^9}},ExpressionUUID->"fbd8dc75-cbe9-45b8-b0ca-\
9e88bdcb7310"]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting data Data", "Subsection",
 CellChangeTimes->{{3.7549994514814043`*^9, 3.7549994633790565`*^9}, {
  3.838093819509627*^9, 3.8380938213969173`*^9}},
 CellTags->"c:7",ExpressionUUID->"ef8f60c6-1123-44e0-aa4c-01d9fab680a3"],

Cell["\<\
QMRITools contains various function for displaying multi dimensional data .\
\>", "Text",
 CellChangeTimes->{{3.8380935488436594`*^9, 
  3.8380935764205422`*^9}},ExpressionUUID->"f051523a-5e41-48b6-80af-\
3536deff8048"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"plot", " ", "the", " ", "data"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"PlotData", "[", 
   RowBox[{"data", ",", "data", ",", "vox"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.75489575524968*^9, 3.7548957584863043`*^9}, {
  3.754995988097462*^9, 3.754995993429183*^9}, {3.8774192359426975`*^9, 
  3.877419236833438*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"7d5996b5-b119-4a70-987f-a14d8037aa23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "plot", " ", "the", " ", "data", " ", "with", " ", "predefined", " ", 
    "range", " ", "and", " ", "color", " ", "function"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"PlotData", "[", 
   RowBox[{"data", ",", "vox", ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{"10", ",", "90"}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8380936249173255`*^9, 3.8380936465080476`*^9}, {
  3.8380936796240845`*^9, 3.8380936949027395`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"b4b1c6b9-f877-461e-a79b-2b02af76c0f4"],

Cell["\<\
Using GridData a mosaic of the slices can be generated, to minimize \
background AutoCropData can be used.\
\>", "Text",
 CellChangeTimes->{{3.8380935488436594`*^9, 3.8380935764205422`*^9}, {
  3.838093712996046*^9, 
  3.838093755029067*^9}},ExpressionUUID->"f189dc01-e90e-463b-b0e9-\
f84b0047f19b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "plot", " ", "the", " ", "data", " ", "as", " ", "a", " ", "grid"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"PlotData", "[", 
   RowBox[{"GridData", "[", 
    RowBox[{"data", ",", "5"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7548978782380743`*^9, 3.7548979239802003`*^9}, {
  3.7968834573206654`*^9, 3.796883506106614*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"8df64434-479f-48f3-bbf6-1802ed564d7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "plot", " ", "every", " ", "third", " ", "slice", " ", "of", " ", "the", 
    " ", "the", " ", "data", " ", "as", " ", "a", " ", "grid"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"PlotData", "[", 
   RowBox[{"GridData", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{";;", ";;", "3"}], "]"}], "]"}], ",", "3"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.796883522563427*^9, 3.7968835410341206`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"badbbd02-e57d-4ec4-810d-6622b65b0f90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "plot", " ", "every", " ", "third", " ", "slice", " ", "of", " ", "the", 
     " ", "the", " ", "data", " ", "as", " ", "a", " ", "grid"}], ",", " ", 
    RowBox[{"with", " ", "auto", " ", "cropping"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"PlotData", "[", 
   RowBox[{"GridData", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"First", "[", 
       RowBox[{"AutoCropData", "[", "data", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", ";;", "3"}], "]"}], "]"}], ",", "3"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.796883550169964*^9, 3.796883555922459*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"81cf639d-6f31-468e-b872-cad9f6306326"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"3", "D", " ", "data", " ", "viewer"}], ",", " ", 
    RowBox[{"Still", " ", "work", " ", "in", " ", "progress"}], ",", " ", 
    RowBox[{"currently", " ", "broken"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"PlotData3D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"AutoCropData", "[", "data", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "vox"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.755579992373293*^9, 3.7555799968214226`*^9}, {
   3.7555800831520844`*^9, 3.7555800968222437`*^9}, {3.755582133406342*^9, 
   3.7555821460149403`*^9}, {3.838093792055047*^9, 3.838093798472372*^9}, {
   3.865652313716716*^9, 3.865652330574695*^9}, 3.877341348286872*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"c8c8f4f5-4916-4152-948c-043243f8ee7f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Automatically find cross section images", "Subsection",
 CellChangeTimes->{{3.754900085790572*^9, 3.7549001005289216`*^9}},
 CellTags->"c:8",ExpressionUUID->"b78c9120-ccf2-40e5-87d7-a484213417b3"],

Cell["\<\
GetSlicsPosition automatically finds the slices with the highest signal \
intensity in all three orientations
By also providing the voxel size the pos is in mm else it will be in voxel \
position.\
\>", "Text",
 CellChangeTimes->{{3.7549970681669893`*^9, 3.754997097646651*^9}, {
  3.838094343592039*^9, 
  3.8380943847283025`*^9}},ExpressionUUID->"dc9dff42-f5b7-4251-8736-\
a0dca6b379bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "get", " ", "the", " ", "positions", " ", "and", " ", "the", " ", "data", 
    " ", "on", " ", "those", " ", "positions"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pos", "=", 
     RowBox[{"GetSlicePositions", "[", 
      RowBox[{"data", ",", 
       RowBox[{"MakeCheckPlot", "\[Rule]", "True"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pdat", "=", 
     RowBox[{"GetSliceData", "[", 
      RowBox[{"data", ",", "pos"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7549001402595067`*^9, 3.7549001450991135`*^9}, {
  3.754900182877452*^9, 3.75490019767517*^9}, {3.7549971051334467`*^9, 
  3.75499710529536*^9}, {3.83809438877864*^9, 3.838094405178377*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"696f126b-efab-4a13-8aa9-b44de55e3f44"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQEf7B8Wz/x9N+KzPVTAodLJeGZQyXcon8NB89zi
y/crYHwBh6Qpdzv3VMP4Ig4p4isNhWJhfAmHsg/CYiscYXwZh4shn6bxCcD4
Cg6mlYKB6ce+QflKDoydEdInwmF8FYe3Z8Iffrn1FcpXc5Aq0p56rgnG13Bo
mMH+4IAHjK/lEPC25UO0Eoyv43AuvmFG4fcvUL6eg9qB7RfXHIDxDRwucPze
Pm0qjG/oMHtZm71xJ4xv5MD0wLdmUweMb+yw/PP2SrdeGN/EoT3r0SLNShjf
1OHCrA1BZpEwvpnDRAHrvy8UYHxzhyfTI2zmPIGFr4XDxe8xi/P7YXxLB1j4
AwCTNnpB
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Large], 
          RGBColor[1, 0, 0]], 
         PointBox[{{4., 1.4677091012356631`}, {4., 
          1.4677091012356631`}}]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Large], 
          RGBColor[0, 1, 0]], 
         PointBox[{{4., 1.4677091012356631`}, {4., 
          1.4677091012356631`}}]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Large], 
          RGBColor[0, 0, 1]], 
         PointBox[{{12.5, 1.338452587770242}, {12.5, 
          1.338452587770242}}]}}}, {{}, {}}}}, {
    Axes -> True, ImageSize -> 200, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 1.1948342394753324`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 25.}, {1.1948342394753324`, 1.4677091012356631`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxd1H9M1HUcx/GPuRhtGcSsAWPIBWlzWCpERIgvFUnyhLvjjvspd17iiNXs
h4YuGF/mlGb2A90Iq+UxpGC1wd1WhhF+/8Cw4Y9YuiYUuxYnUURWmNmvVeP9
bfH6brfbY6977rN9v3dnCu60Vd+klAr98/r3fe66ulbNvzCf8eRE8mJyMjmN
nEG+i5xFXkq+h7ycnE2+l7ySvIq8mpxDziXfT84jP0DOJz9ILiA/RC4kryEX
kdeSMd8aWa2jnazW005WG2gnq2LayWoj7WRVQjtZPUw7WW2inaxKaSerR2gn
q820k5WZdjP2xAXN7Ufj5Xe4Ba82ryprChbMWduCwcanUZPmk70MpXWtp1ps
z8hehr6sFU3dxQdkL8cR59D0zPNtspcjsr2mOVbXLbsFr3106430zz6YMyz4
Pf1y5rvDp+XzFrQ/tjcl/btP56xbsGnRNkv8sc+lt2Jp1fI7Yhnj0ltR1JlU
3zbxlfRWJCW6F16qmpDeik8Ot96WPnxFehvyUhNjzQempLdhQf/o142Raelt
OJrurTp0i/wv6Tbs2PrXjO/9H6WvQO1Awzuvb/5Z+gpYRz2RhPCs9BXoXVRr
vW/4mvQVKFpz9VzJvl+ktyPy68j+4JgYdqzY0LXz5KRYs2OswVzf2y/W7djh
7zuevNvoHRhYWPBcZ47RO5AbHk8LLTZ6B7rCy14ZyTB6B/x5fxaarUZfiYMv
ljtqW42+Ev5Iy2R1zOgrcW7gzQXfrrwufSUaTlfZq58QKyfOjKVYit8Qw4k/
TLMjcX1izYnBF7qevPCe0Tth+v5L0xf7jN6Fm4eQtutOo3dhKqlEb3nKON+F
G7GPC/M7jfvnwvX9rolTZ+T+KjcSOuJ6TKPG/Xej0FPfsTryk/Ru3N5a2pua
Lc9Ld6Ptgqku59kZ6T1o6u9enz9pPH8PjvnjfY0pMek9uNg5FT7eHpXeg29O
bEwd++Gy9F6oyfMnd+VelN6Lng8PDg3sOS+9F4eveMLjlwal9+Ltu8/2xGXJ
91358Nt09jprzVvS+zBrOrtk2ZKXpffhpczka6G9j0vvw6GE3ScyO+T3qLZC
/f8CWSPrZFVFPVkj62Tlp56skXWyCsx3BhnkAFkjh8g6OUpW2+h8MsgBskYO
kXVylKyCdD4Z5ABZI4fIOjlKVo/S+WSQA2SNHCLr5ChZbf/PfwNoNHdZ
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Large], 
          RGBColor[1, 0, 0]], 
         PointBox[{{93., 1.48267251980917}, {93., 
          1.48267251980917}}]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Large], 
          RGBColor[0, 1, 0]], 
         PointBox[{{93., 1.48267251980917}, {93., 
          1.48267251980917}}]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Large], 
          RGBColor[0, 0, 1]], 
         PointBox[{{80., 0.741336259904585}, {80., 
          0.741336259904585}}]}}}, {{}, {}}}}, {
    Axes -> True, ImageSize -> 200, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 160.}, {0, 1.48267251980917}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxd1AlQVHUcB/ANbERl0PLi0jSJJPFOXLn2CwIix3IvCyzwgEwxHUOFgBVd
IXWQVALEUFNENAcVb4lCeJoihggMpw7mZim2iojEpWjH8Ps3+X8zOzuf+c73
f7z3f29q9Br/ZXoSiST/n9+//0PXM5nkzQtv0oDzGM7jOBtzNuc8hfP7nC04
W3KezvkjztacZ3Gew3ku53mc53P+mPMCzjacF2LlAeUL+5JZdJ+luPK89Ni5
4mDyIiQbLbw859Basi26svdWGphsIdth7TnF8ndKssj2qPvsQeej1n1kB6hr
f1reF3+Y7IhEpexy96cnyTIcUHefXzOjlAzY6w7tG5lZOWQNsMHYzcZhWgPl
Tsi7OMcuSnqXciecvbXwg2n6v1PujB9zPIZPNPmDcmfIgyte2qg7KF+M2jOO
3YMaOleaxbC8KJPJW7sod0GWvpFrXv1zyl1QYT69PTOxm3JXjLQOiJY1kjWu
yDGq6mrsYLkbHny5eYdHE8vdoK3pT9hUwPIlePfazVF98Sxfgk5t2YU7y1ju
jk7nrpapq1nujgmpr33Gp7B8KWJkbRlxmSxfCllaV1L1EZZ74HWARXnKzyz3
wIKVNdtjjP6k3BO74nTLB1eQNZ5YW9Cr3d/Mci+4GHyFtpgeyr1Q5/BK7W7U
S7k3qtq17sYiWeMNx/7JiePlfZTLMVDuNbN9B1kjh4VhScezLSz3QbH1oN06
f5b7wP+RSZPvMJb7IvbVvplFxTQ+fFHbYF9r4MPm80XCilQHk9u0PvGfvOqp
s7sLWeKHa2OfvHc0ivYDP1RMLBwz2M+epx88jwXNkvbR8xf9cNascNwF8Qn1
/XG6/lRI53cPqe+POl30vIN2Wur7w9T0kmGG2Eh9f4SrrAzbVNepHwAr055m
lFykfgB2tqUnu2QUUD8ATVVeGeoPt1M/AM5JKbKa40nUD8Tzs/uba0anUT8Q
7q2eb+mqsqkfiPkFHiNULTSeGIgNvbMLI+POUD8Itxou2RxJq6B+EF7G532d
MKqa+kFYZVT3cNTWJuoH4Y4wvNQp9B71FcgboZOkD9D7BAUGfliqFz9aR30F
7I/Vj1MLT6mvQNyJ3UFoZd/pYMTe3jPQNYzuN4Ix3lyy8f4ddv+DceICfqvI
pvMpBmPvXWWquRs7f0qUjL7+2KSbPT8lWlzHmtw9yM6jEveVN51uONJ5EJXI
rXxcOKGKnc8QRJ6e3OYspfOEEDxLndliEcvOWwiK9eszG2eTxRCY/mJmuyiZ
9UNhqyibmMrOP0KRNONp0T0pe19CoSePyhPkbP2hMCvTO3D1Ku1PEoYXZeu1
prvY/sNQu8ogy30b238Y4ioOZ1WzXAyD9crdf31byvoqhM/d+ijRksaHCsHZ
/RuybrD3WYX1Nobx6s9pPaIKm9NvrJ+kY/cvHANbcjfvNGXrD8fV1cONC/vY
+sOxK9fkyss01g+H3Z7j3i/K2fcjAvk3a1B0nK0/AmV5lad2+9H3UROB5r0u
LhZendSPwNsnynsU0sfUj0ROR2JR6Dr2/kSivFVWr3D8lfqRqEkxuN8rbaV+
JA4ZbwzMab9FfQG5J2VjyiZdGfIUAcIXSzbJZ5+n8QQYitKgWNXRIQsCCuu7
s05f+4bGF+Bq++D7Xrf0IecLmHdvW49lXALNJ8Cxqtpqo37EkLUCLnmPaEia
bk/zR0FhlXy41MyQ5o+C5P8XOAucNZzzOYuctZwl0W96CmdwFjhrOOdzFjlr
OUtiuPk5g7PAWcM5n7PIWctZ8sl//hvkq2Jk
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Large], 
          RGBColor[1, 0, 0]], 
         PointBox[{{60., 1.4721442956469544`}, {101., 1.463169899500084}, {
          116., 1.318983560755781}}]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Large], 
          RGBColor[0, 1, 0]], 
         PointBox[{{60., 1.4721442956469544`}, {101., 
          1.463169899500084}}]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Large], 
          RGBColor[0, 0, 1]], 
         PointBox[{{80., 0.7360721478234772}, {80., 
          0.7360721478234772}}]}}}, {{}, {}}}}, {
    Axes -> True, ImageSize -> 200, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 160.}, {0, 1.4721442956469544`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.8656523416392546`*^9, 3.8656523487757373`*^9}, 
   3.8662556175914507`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"c8595e3b-1c54-4fb4-a178-be69b55183bc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"make", " ", "images", " ", "of", " ", "the", " ", "data"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Grid", "[", 
   RowBox[{"MakeSliceImages", "[", 
    RowBox[{"pdat", ",", "vox", ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
     RowBox[{"ImageLegend", "\[Rule]", "True"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.754900330522708*^9, 3.754900358891019*^9}, {
  3.838094407481036*^9, 3.8380944188749914`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"41ec57c1-ef10-4a83-b8a8-146c45bdf378"]
}, Closed]],

Cell[CellGroupData[{

Cell["Rescaling Data", "Subsection",
 CellChangeTimes->{{3.7548972317539077`*^9, 3.7548972416276026`*^9}},
 CellTags->"c:9",ExpressionUUID->"0d830d7c-dc92-4a0f-96b0-5cb8ad6ed729"],

Cell["Datasets can be rescaled to different resolutions.", "Text",
 CellChangeTimes->{{3.838094508589285*^9, 
  3.838094526792285*^9}},ExpressionUUID->"aef90da1-5cda-43d0-ba41-\
fc9641543c86"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"to", " ", "specific", " ", "dimensions"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataReD", "=", 
     RowBox[{"RescaleData", "[", 
      RowBox[{"data", ",", 
       RowBox[{"{", 
        RowBox[{"50", ",", "100", ",", "100"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "data", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "dataReD", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7548972474095426`*^9, 3.754897282795484*^9}, {
  3.7548973385554056`*^9, 3.7548973428257017`*^9}, {3.75491362838943*^9, 
  3.75491362884214*^9}, {3.754996052863373*^9, 3.754996054764976*^9}, {
  3.754996104164212*^9, 3.7549961231872067`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"2c5f1eed-b1d2-413a-a711-e9e26a4cb615"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"to", " ", "specific", " ", "voxel", " ", "Size"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"voxNew", "=", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2", ",", "2"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataRe", "=", 
     RowBox[{"RescaleData", "[", 
      RowBox[{"data", ",", 
       RowBox[{"{", 
        RowBox[{"vox", ",", "voxNew"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "data", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "dataRe", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7548972474095426`*^9, 3.754897349049699*^9}, {
  3.7549136307567587`*^9, 3.754913632740061*^9}, {3.7549960717341003`*^9, 
  3.754996116028576*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"0711c021-52b7-4374-b710-c62812e3419e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Data Operations", "Subsection",
 CellChangeTimes->{{3.7584552323003864`*^9, 3.7584552380227914`*^9}},
 CellTags->"c:20",ExpressionUUID->"f6a0af4d-c709-4e10-972b-30d8c0b63b74"],

Cell[CellGroupData[{

Cell["Rotate data Dimensions", "Subsubsection",
 CellChangeTimes->{{3.869797265894533*^9, 
  3.8697972759044476`*^9}},ExpressionUUID->"014127e0-d730-46e1-bfe9-\
a6f749fdb158"],

Cell["Rotate the dimensions left or right", "Text",
 CellChangeTimes->{{3.758455269368188*^9, 
  3.7584552810795007`*^9}},ExpressionUUID->"f5dfccdd-d0a8-49d0-9956-\
18c3955c2e22"],

Cell[BoxData[
 RowBox[{"Dimensions", "/@", 
  RowBox[{"{", 
   RowBox[{"data", ",", 
    RowBox[{"RotateDimensionsLeft", "@", "data"}], ",", 
    RowBox[{"RotateDimensionsRight", "@", "data"}], ",", 
    RowBox[{"RotateDimensionsLeft", "[", 
     RowBox[{"data", ",", "2"}], "]"}], ",", 
    RowBox[{"ReverseDimensions", "@", "data"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.869797227848858*^9, 3.8697972575666513`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"0cc0a0a1-1e6b-4975-916e-86206f067c29"]
}, Closed]],

Cell[CellGroupData[{

Cell["Remove singleton dimensions from data", "Subsubsection",
 CellChangeTimes->{{3.86979827665543*^9, 
  3.8697983089167886`*^9}},ExpressionUUID->"23fea064-6b37-41fa-9165-\
a2081fe0b5aa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataS", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "#", "}"}], "&"}], "/@", "data"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "@", "dataS"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "@", 
  RowBox[{"Squeeze", "@", "dataS"}]}]}], "Input",
 CellChangeTimes->{{3.8697983187784405`*^9, 3.869798335429855*^9}, {
  3.8697983828224196`*^9, 3.8697984181658196`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"e25e9312-5f35-40c7-bfca-fe72bc85ed2c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Data array to vector", "Subsubsection",
 CellChangeTimes->{{3.86979731093499*^9, 
  3.869797319271755*^9}},ExpressionUUID->"143d21bd-6321-4173-ad93-\
05a606106c8b"],

Cell["Convert non zero values to data vector", "Text",
 CellChangeTimes->{{3.869797322859672*^9, 
  3.869797334975584*^9}},ExpressionUUID->"3134327b-eef2-428f-94bf-\
02a86341a4d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vec", ",", 
     RowBox[{"{", 
      RowBox[{"dim", ",", " ", "coor"}], "}"}]}], "}"}], "=", 
   RowBox[{"DataToVector", "[", "data", "]"}]}], ";"}], "\n", 
 RowBox[{"Dimensions", "/@", 
  RowBox[{"{", 
   RowBox[{"data", ",", "vec"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.869797377628072*^9, 3.869797407999939*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"87060ca1-4ed9-453e-b81b-530b00a81a85"],

Cell["Convert vector back to array", "Text",
 CellChangeTimes->{{3.8697975448768067`*^9, 
  3.8697975541074796`*^9}},ExpressionUUID->"dad8cf23-94a8-4b2e-8483-\
0afd4b43de7d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{"VectorToData", "[", 
    RowBox[{"vec", ",", 
     RowBox[{"{", 
      RowBox[{"dim", ",", "coor"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"data", "===", "data2"}]}], "Input",
 CellChangeTimes->{{3.8697974110407486`*^9, 3.8697974252457933`*^9}, 
   3.869797526313775*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"645596ea-f203-4c73-8ef1-2d912a79b250"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cropping", "Subsection",
 CellChangeTimes->{{3.754895767888637*^9, 3.7548957752315803`*^9}},
 CellTags->"c:10",ExpressionUUID->"d51e43d8-34ee-4df9-8bf3-5b69733ed3ff"],

Cell[CellGroupData[{

Cell["Automatic crop", "Subsubsection",
 CellChangeTimes->{{3.7548959281933174`*^9, 3.754895939466611*^9}},
 CellTags->"c:11",ExpressionUUID->"968fa70b-c4b4-4d48-a949-8da4355d6428"],

Cell["\<\
To automatically remove the background from images FindCrop or AutoCropData \
can be used .\
\>", "Text",
 CellChangeTimes->{{3.8380945593184867`*^9, 
  3.838094580045287*^9}},ExpressionUUID->"8247c756-42fb-4cde-ab32-\
71f7738c8599"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "corp", " ", "finds", " ", "the", " ", "crop", " ", "values", 
    " ", "to", " ", "remove", " ", "zero", " ", "background"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"crop", "=", 
   RowBox[{"FindCrop", "[", "data", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7548957772353544`*^9, 3.75489578023491*^9}, {
   3.7548958558205953`*^9, 3.754895858171589*^9}, {3.796883647542039*^9, 
   3.796883665395658*^9}, 3.838094547726042*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"0ec03379-9273-43c8-969d-41d370813788"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"apply", " ", "thecropping"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dataCrop", "=", 
    RowBox[{"ApplyCrop", "[", 
     RowBox[{"data", ",", "crop"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.754895864337891*^9, 3.754895874794386*^9}, {
  3.79688366999612*^9, 3.7968836752993383`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"74538836-333a-4a62-b9e6-38ff5ee95d7f"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataCrop", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548958768655567`*^9, 3.7548958814837*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"5d2b3531-cdd4-413e-b108-ae67e2b9af5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"do", " ", "this", " ", "in", " ", "one", " ", "go"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dataCrop", ",", "crop"}], "}"}], "=", 
    RowBox[{"AutoCropData", "[", "data", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7584345511696253`*^9, 3.758434577431771*^9}, {
  3.796883683501377*^9, 3.79688368861938*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"63dc3f77-e418-418a-bf38-bffe8d178bb3"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataCrop", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548958768655567`*^9, 3.7548958814837*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"13b3872f-1f90-4567-aefb-ea163cfd148c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Apply To Rescaled Data", "Subsubsection",
 CellChangeTimes->{{3.754996141489622*^9, 3.754996149022614*^9}},
 CellTags->"c:12",ExpressionUUID->"267579d6-9b73-4c4b-aa48-be3e08dfda04"],

Cell["\<\
When the crop dimensions were defined on a dataset with different voxel size \
this can still be used .\
\>", "Text",
 CellChangeTimes->{{3.838094605246358*^9, 
  3.838094638305482*^9}},ExpressionUUID->"8a76c358-d64d-4f4b-b485-\
c80d35efd628"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataCR", "=", 
   RowBox[{"ApplyCrop", "[", 
    RowBox[{"dataRe", ",", "crop", ",", 
     RowBox[{"{", 
      RowBox[{"vox", ",", "voxNew"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754996151823556*^9, 3.754996180449548*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"9298008e-ebb6-4839-b787-3eb2650efb20"],

Cell[BoxData[
 RowBox[{"PlotData", "[", "dataCR", "]"}]], "Input",
 CellChangeTimes->{{3.754996181470619*^9, 3.754996185551729*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"c002fff5-58c3-459d-bd3c-c4ccbb6ca90d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Manual crop", "Subsubsection",
 CellChangeTimes->{{3.7548959281933174`*^9, 3.7548959469545145`*^9}},
 CellTags->"c:13",ExpressionUUID->"9c3fe646-8c82-4fa5-ba13-4d6d8bf9eb94"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "manually", " ", "find", " ", "the", " ", "crop", " ", "dimensions", " ", 
    "with", " ", "a", " ", "interactive", " ", "viewer"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dataCropM", ",", "crop"}], "}"}], "=", 
     RowBox[{"CropData", "[", 
      RowBox[{"data", ",", "vox"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "dataCropM", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.754895886578994*^9, 3.754895900203232*^9}, {
  3.754898147470261*^9, 3.7548981511626015`*^9}, {3.8380946571775484`*^9, 
  3.838094674859564*^9}, {3.865652470936756*^9, 3.865652476637435*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"8d1daacd-8970-4659-9835-8f732610f46c"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataCropM", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548959110895987`*^9, 3.754895916314752*^9}, 
   3.865652479510805*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"30981062-8ace-4811-b1a0-840f0ffb8e73"]
}, Closed]],

Cell[CellGroupData[{

Cell["Reverse the Crop", "Subsubsection",
 CellChangeTimes->{{3.796883884010044*^9, 3.796883892212609*^9}},
 CellTags->"c:14",ExpressionUUID->"55749168-63df-4963-aab6-cb1fc8c970cf"],

Cell["\<\
When the data was cropped the original dimensions can be restored.\
\>", "Text",
 CellChangeTimes->{{3.8380947033420153`*^9, 
  3.838094727736802*^9}},ExpressionUUID->"a314f89f-489d-428a-b3e4-\
44c58b98ad36"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "reverse", " ", "the", " ", "crop", " ", "to", " ", "the", " ", "original",
     " ", "dimensions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dim", "=", 
    RowBox[{"Dimensions", "[", "data", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataRev", "=", 
     RowBox[{"ReverseCrop", "[", 
      RowBox[{"dataCrop", ",", "dim", ",", "crop"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "dataRev", "]"}], "\[IndentingNewLine]", 
   RowBox[{"dataRev", "\[Equal]", "data"}]}]}]], "Input",
 CellChangeTimes->{{3.7548980821477985`*^9, 3.754898209277037*^9}, {
  3.754996203266838*^9, 3.7549962378253393`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"95428a0b-7e40-4b51-92e8-5da74f819672"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Splitting Data", "Subsection",
 CellChangeTimes->{{3.7548959535708256`*^9, 3.7548959678359003`*^9}},
 CellTags->"c:15",ExpressionUUID->"93607360-ed31-4145-8241-5b261eccc5b0"],

Cell[CellGroupData[{

Cell["Split and Stitch", "Subsubsection",
 CellChangeTimes->{{3.7548966988321905`*^9, 3.7548967050227375`*^9}},
 CellTags->"c:16",ExpressionUUID->"4f8cb032-dea0-497b-bd1c-d723913ce783"],

Cell["\<\
Often muscle data is scanned bilaterally however it is better to analyze both \
legs separately.\
\>", "Text",
 CellChangeTimes->{{3.8380947434773197`*^9, 
  3.838094773385198*^9}},ExpressionUUID->"d945c358-7984-4b6f-99a0-\
004c192287e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "automatically", " ", "split", " ", "the", " ", "data", " ", "into", " ", 
    "left", " ", "and", " ", "right"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"left", ",", "right", ",", "cut"}], "}"}], "=", 
     RowBox[{"CutData", "[", 
      RowBox[{"data", ",", "True"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "cut"}]}]], "Input",
 CellChangeTimes->{{3.75489597096496*^9, 3.754895981690065*^9}, {
  3.8380950996819115`*^9, 3.838095132956664*^9}, {3.838095175643786*^9, 
  3.838095176500496*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"3cd642da-fd22-4802-9288-f01565803535"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"left", ",", "right", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548959833550625`*^9, 3.7548959917719293`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"203bb6e8-79b2-4927-b104-77c6b4bb166c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"join", " ", "the", " ", "data", " ", "back", " ", "together"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataStich", "=", 
     RowBox[{"StichData", "[", 
      RowBox[{"left", ",", "right"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"data", "==", "dataStich"}]}]}]], "Input",
 CellChangeTimes->{{3.754896002692444*^9, 3.754896037290599*^9}, {
  3.8380951350838985`*^9, 3.8380951654685345`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"a26cc5d9-e803-45fa-b22e-fae71af4e8d4"],

Cell[BoxData[
 RowBox[{"PlotData", "[", "dataStich", "]"}]], "Input",
 CellChangeTimes->{{3.754896038898155*^9, 3.7548960516428165`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"3309429c-25c3-464f-a97a-6193bde41c61"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"cut", " ", "with", " ", "known", " ", "value"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"left", ",", "right", ",", "cut"}], "}"}], "=", 
    RowBox[{"CutData", "[", 
     RowBox[{"data", ",", "80"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7549962901804953`*^9, 3.754996316284766*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"c7b59436-5334-4cdf-8c43-2d2fe93b3917"]
}, Closed]],

Cell[CellGroupData[{

Cell["Example make both legs left", "Subsubsection",
 CellChangeTimes->{{3.7548960915332003`*^9, 3.754896117086524*^9}},
 CellTags->"c:17",ExpressionUUID->"2e5b960f-ce39-4cd9-a390-ec4c724d0794"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Split", " ", "in", " ", "Left", " ", "and", " ", "right", " ", "leg"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"left", ",", "right", ",", "cut"}], "}"}], "=", 
     RowBox[{"CutData", "[", "data", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "crop", " ", "to", " ", "minimal", " ", "Space", " ", "and", " ", "flip", 
     " ", "right", " ", "leg"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"leftC", ",", "rightC"}], "}"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"AutoCropData", "[", "#", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"left", ",", "right"}], "}"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rightC", "=", 
     RowBox[{"Reverse", "[", 
      RowBox[{"rightC", ",", 
       RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataC", "=", 
     RowBox[{"{", 
      RowBox[{"leftC", ",", "rightC"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "find", " ", "maximal", " ", "common", " ", "dimensions", " ", "and", " ",
      "make", " ", "into", " ", "one", " ", "dataset", " ", "of", " ", "same",
      " ", "dimensions"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"dimMax", "=", 
     RowBox[{"FindMaxDimensions", "[", "dataC", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dataP", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PadToDimensions", "[", 
         RowBox[{"#", ",", "dimMax"}], "]"}], "&"}], "/@", "dataC"}], "]"}]}],
     ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7548961301895275`*^9, 3.7548961547482977`*^9}, {
  3.7548962451826963`*^9, 3.754896265258726*^9}, {3.7548964883490496`*^9, 
  3.7548964898496*^9}, {3.7548965238705263`*^9, 3.7548965522816167`*^9}, {
  3.754896607389285*^9, 3.754896665362072*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"ccc5fd89-681d-4742-9855-ddf4ecfe57a6"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataP", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548965964969034`*^9, 3.7548965998974333`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"53fddc99-c4e8-45c0-a9f3-8bc732aba17d"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Joining multiple stacks", "Subsection",
 CellChangeTimes->{{3.7548959535708256`*^9, 3.7548959678359003`*^9}, {
  3.7555791021749706`*^9, 3.7555791092126975`*^9}},
 CellTags->"c:18",ExpressionUUID->"6033b32e-4c89-4553-869f-3243e5607bf1"],

Cell[CellGroupData[{

Cell["Import", "Subsubsection",
 CellChangeTimes->{{3.8697984915957127`*^9, 
  3.8697984952241735`*^9}},ExpressionUUID->"ea8bc95a-8f0e-4b12-99a0-\
56426ab51ec4"],

Cell["\<\
Data can be acquired in multiple stacks  as in the example below\
\>", "Text",
 CellChangeTimes->{{3.838095214205922*^9, 
  3.838095237563869*^9}},ExpressionUUID->"31deae2e-9563-4b77-8989-\
bf812ff3c948"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dataJ", ",", "voxJ"}], "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ImportNii", "/@", 
     RowBox[{"FileNames", "[", 
      RowBox[{"\"\<Join*.nii.gz\>\"", ",", "\"\<\>\""}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"overlap", "=", "5"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "slice", " ", "overlap", " ", "between", " ", 
    "stacks"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.755579130003971*^9, 3.755579220092123*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"a0948096-3a17-480e-88aa-5f8f54122f9a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"all", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ArrayPad", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "]"}], "&"}], "/@", 
      "dataJ"}], ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MakeSliceImages", "[", 
   RowBox[{
    RowBox[{"GetSliceData", "[", 
     RowBox[{"all", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "140", "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"voxJ", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7584383745606956`*^9, 3.758438458513606*^9}, 
   3.758439203171208*^9, {3.8380952666888227`*^9, 3.8380952747166986`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"414b81d5-a5f7-405e-88ec-356977cae10c"],

Cell["\<\
With JoinSets multiple stacks which have overlapping slices can be joined \
into one set. 
If There is motion between the stacks this can be resolved using the option \
MotionCorrectSets which uses rigid registration of the overlap to align the \
sets.
Using JoinSetSplit the data can be split into a left and right side. \
\>", "Text",
 CellChangeTimes->{{3.75557935543929*^9, 3.7555794024582915`*^9}, {
  3.7555796023296337`*^9, 3.755579633544137*^9}, {3.758439242175694*^9, 
  3.7584392453430185`*^9}},ExpressionUUID->"7f20e0cc-33ba-4b02-a0c9-\
60eb0f4f1498"],

Cell[BoxData[
 RowBox[{"Column", "@", 
  RowBox[{"Options", "@", "JoinSets"}]}]], "Input",
 CellChangeTimes->{{3.7555792952002583`*^9, 3.755579301563833*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"33670142-c814-4498-b5e7-7e7f8a967c11"]
}, Closed]],

Cell[CellGroupData[{

Cell["Joining multiple data sets", "Subsubsection",
 CellChangeTimes->{{3.869798500953581*^9, 
  3.869798519141139*^9}},ExpressionUUID->"3ace22ec-97f7-4ba5-933b-\
08968226a40f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "joining", " ", "the", " ", "sets", " ", "with", " ", "data", " ", 
    "normalization"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"joined", "=", 
     RowBox[{"JoinSets", "[", 
      RowBox[{"dataJ", ",", "overlap"}], "]"}]}], ";"}], "\n", 
   RowBox[{"Row", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MakeSliceImages", "[", 
        RowBox[{
         RowBox[{"GetSliceData", "[", 
          RowBox[{"all", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "}"}], ",", 
             RowBox[{"{", "140", "}"}], ",", 
             RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"voxJ", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"MakeSliceImages", "[", 
        RowBox[{
         RowBox[{"GetSliceData", "[", 
          RowBox[{"joined", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "}"}], ",", 
             RowBox[{"{", "140", "}"}], ",", 
             RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"voxJ", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.755579226890072*^9, 3.755579254219699*^9}, {
   3.838095369260709*^9, 3.8380953843003683`*^9}, 
   3.8697984774952874`*^9},ExpressionUUID->"58d93156-a8c6-41f9-b9b1-\
fcef6a398386"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "joining", " ", "the", " ", "sets", " ", "with", " ", "data", " ", 
    "normalization", " ", "and", " ", "motion", " ", "correction"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"joinedC", "=", 
    RowBox[{"JoinSets", "[", 
     RowBox[{"dataJ", ",", "overlap", ",", 
      RowBox[{"MotionCorrectSets", "\[Rule]", "True"}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.755579226890072*^9, 3.755579254219699*^9}, {
  3.7555794661552687`*^9, 3.7555794729238205`*^9}, {3.8380953912286263`*^9, 
  3.838095396492039*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"e6b3fb20-ac33-4f43-b582-08fbcf2dfdcb"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"Flatten", "@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MakeSliceImages", "[", 
      RowBox[{
       RowBox[{"GetSliceData", "[", 
        RowBox[{"all", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "140", "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"voxJ", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"MakeSliceImages", "[", 
      RowBox[{
       RowBox[{"GetSliceData", "[", 
        RowBox[{"joined", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "140", "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"voxJ", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"MakeSliceImages", "[", 
      RowBox[{
       RowBox[{"GetSliceData", "[", 
        RowBox[{"joinedC", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "140", "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"voxJ", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.838095409004749*^9, 3.865652704122125*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"e09870e4-80d3-45a8-9a7b-26fea92ecc83"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"joined", ",", "joinedC", ",", 
   RowBox[{"voxJ", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7555792715562243`*^9, 3.755579290655113*^9}, {
  3.7555796934206696`*^9, 3.755579695114016*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"fc9202f0-a708-46b9-8993-d99ef8b9d57b"],

Cell["\<\
Using MotionCorrectSets->True is similar to using CorrectjoinSetMotion\
\>", "Text",
 CellChangeTimes->{{3.758439253411528*^9, 
  3.75843928223833*^9}},ExpressionUUID->"80e50c85-aa4a-47c4-beb7-\
0309b49cd6c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"joinedC2", "=", 
   RowBox[{"JoinSets", "[", 
    RowBox[{
     RowBox[{"CorrectJoinSetMotion", "[", 
      RowBox[{"dataJ", ",", 
       RowBox[{"voxJ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "overlap"}], "]"}], ",", 
     "overlap"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584392837338314`*^9, 3.7584393160317907`*^9}, {
  3.7584394021774907`*^9, 3.758439402366995*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"73c1be5e-ad36-4648-8909-3528e2e910da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"display", " ", "the", " ", "data", " ", "with", " ", "PlotData"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"vis1", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ArrayPad", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"-", "10"}]}], "]"}], "&"}], "/@", "dataJ"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vis2", "=", 
     RowBox[{"ArrayPad", "[", 
      RowBox[{"joined", ",", 
       RowBox[{"{", 
        RowBox[{"22", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"PlotData", "[", 
    RowBox[{"vis1", ",", "vis2", ",", 
     RowBox[{"voxJ", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "500"}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7555847214767513`*^9, 3.755584805729162*^9}, {
  3.7555848588179345`*^9, 3.7555848721598897`*^9}, {3.7555849881995764`*^9, 
  3.7555849909446087`*^9}, {3.7555850278273573`*^9, 3.755585109091962*^9}, {
  3.8380956083756275`*^9, 3.8380956219324436`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"de6395af-73f2-4054-8b7c-bf1b424351e4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Splitting joined data", "Subsubsection",
 CellChangeTimes->{{3.8697985111137614`*^9, 
  3.8697985213680754`*^9}},ExpressionUUID->"3d38093a-d085-4139-a1ba-\
086e58ea732c"],

Cell["\<\
After joining datasets they can also be split back into seperate stacks\
\>", "Text",
 CellChangeTimes->{{3.838095626240649*^9, 
  3.838095646834546*^9}},ExpressionUUID->"cf35c9c2-e6f8-484d-8070-\
2365047438e9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"split", "=", 
   RowBox[{"SplitSets", "[", 
    RowBox[{"joined", ",", "7", ",", "5"}], "]"}]}], ";"}], "\n", 
 RowBox[{"Dimensions", "/@", 
  RowBox[{"{", 
   RowBox[{"dataJ", ",", "joined", ",", "split"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.7584347326051683`*^9, 3.7584347494823847`*^9}, {
   3.7584348910358076`*^9, 3.7584349309490457`*^9}, 3.8380956504328575`*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"f0370879-7fa9-4d95-9ac3-91e74e92672f"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["General functions", "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7548957249234715`*^9, 3.7548957340260887`*^9}, 
   3.754896730602828*^9, {3.7584543478729453`*^9, 
   3.7584543507405863`*^9}},ExpressionUUID->"2d81b315-c178-4a19-82de-\
edec401ad759"],

Cell[CellGroupData[{

Cell["Define Data", "Subsection",
 CellChangeTimes->{{3.7584547733856807`*^9, 3.758454776199445*^9}},
 CellTags->"c:19",ExpressionUUID->"6ac426ee-2cf2-4609-a70a-b7bbae6bed70"],

Cell["\<\
Noise1 contains no zero values with mean 50 and standard deviation 10, noise \
2 has 10 zero columns\
\>", "Text",
 CellChangeTimes->{{3.7584547806476603`*^9, 3.758454816483077*^9}, {
  3.7584549997473*^9, 
  3.7584550122754955`*^9}},ExpressionUUID->"0d5ac3c1-0a5f-441b-82aa-\
56ceb05deba1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"noise1", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"50", ",", "10"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "60", ",", "70"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noise2", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"50", ",", "10"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "60", ",", "70"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noise2", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", "10"}]}], "]"}], "]"}], "=", 
   RowBox[{"0", 
    RowBox[{"noise2", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"1", ";;", "10"}]}], "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7584543728903065`*^9, 3.758454486434905*^9}, {
  3.758454557252824*^9, 3.7584545583231735`*^9}, {3.7584549043087444`*^9, 
  3.758455017443534*^9}, {3.758455049828519*^9, 3.7584550572053843`*^9}, {
  3.758455224724218*^9, 3.7584552291557035`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"17b788ed-dfdb-4bc8-8387-cc24a2843518"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"noise1", ",", "noise2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7584550187961307`*^9, 3.758455024372986*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"59e4d47e-c682-496c-8f5f-8a3d84d8ebfe"]
}, Closed]],

Cell[CellGroupData[{

Cell["Filters", "Subsection",
 CellChangeTimes->{{3.7584543604570937`*^9, 3.758454367958213*^9}},
 CellTags->"c:21",ExpressionUUID->"8519decb-a647-4082-a417-8490e787bc1d"],

Cell["Laplacian Filtering", "Text",
 CellChangeTimes->{{3.758454729816031*^9, 
  3.7584547691720047`*^9}},ExpressionUUID->"2542e184-2b55-431e-8712-\
57b4010b0208"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fil1", "=", 
   RowBox[{"LapFilter", "[", 
    RowBox[{"noise2", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotData", "[", 
  RowBox[{"noise2", ",", "fil1", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"30", ",", "70"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.758454439402272*^9, 3.7584544485292573`*^9}, {
   3.758454493268995*^9, 3.758454510579565*^9}, {3.758454681539337*^9, 
   3.758454714835467*^9}, {3.7584549450761485`*^9, 3.758454945155693*^9}, 
   3.7688022351743865`*^9, {3.8656530606201243`*^9, 3.86565306818793*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"dfd024d4-6cd0-4f3e-978b-924b02a9eace"],

Cell["Find the local StandardDeviation", "Text",
 CellChangeTimes->{{3.758454729816031*^9, 
  3.7584547394974756`*^9}},ExpressionUUID->"8bd6ea94-2eed-481c-aad6-\
78ae01eb6ab7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fil2", "=", 
   RowBox[{"StdFilter", "[", 
    RowBox[{"noise2", ",", "5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotData", "[", 
  RowBox[{"noise2", ",", "fil2", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"30", ",", "70"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "15"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.758454512714678*^9, 3.7584545251230903`*^9}, {
   3.758454564263178*^9, 3.7584545732690616`*^9}, {3.7584546833811293`*^9, 
   3.758454693523153*^9}, {3.7584547270448294`*^9, 3.7584547479382086`*^9}, 
   3.7584548250450144`*^9, {3.758454948325635*^9, 3.7584549483722744`*^9}, 
   3.7688022340229635`*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"fb343542-47c9-446d-80da-03fd3e2252ae"]
}, Closed]],

Cell[CellGroupData[{

Cell["Operation ignoring zeros", "Subsection",
 CellChangeTimes->{{3.7584548402024508`*^9, 3.7584548490643578`*^9}},
 CellTags->"c:22",ExpressionUUID->"a08bed25-3efe-40d5-bc4e-9f803924dddc"],

Cell["Calculate statistics while ignoring zero values", "Text",
 CellChangeTimes->{{3.758455088824503*^9, 3.758455107620838*^9}, {
  3.7584552965942955`*^9, 
  3.758455298258358*^9}},ExpressionUUID->"69abaf44-84b6-4abe-bd7d-\
0b63dd967e4e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MeanNoZero", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}], ",", 
   RowBox[{"Mean", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7584548714341726`*^9, 3.758454888596833*^9}, {
  3.758455067525513*^9, 3.7584550866285696`*^9}, {3.7584551399090753`*^9, 
  3.7584551399879603`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"7d4f3e83-d26e-4cd2-9549-83ece73a5532"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MedianNoZero", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}], ",", 
   RowBox[{"Median", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.758455301330388*^9, 3.7584553080034685`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"eecbc129-2d09-4c25-91df-5406a1cd99e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MADNoZero", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}], ",", 
   RowBox[{"MedianDeviation", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7584551448745203`*^9, 3.7584551679240603`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"d0a3c222-4a31-4f3f-b352-e910a84f88bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"RMSNoZero", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}], ",", 
   RowBox[{"RootMeanSquare", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7584551750798836`*^9, 3.758455195990754*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"3687dac5-32c8-484e-8e0a-e79866596754"],

Cell["\<\
Mathematical operators ignoring zero values and keeping them zero.\
\>", "Text",
 CellChangeTimes->{{3.7584553267017984`*^9, 3.7584553393192234`*^9}, {
  3.758455420257972*^9, 
  3.75845542611469*^9}},ExpressionUUID->"91fc0eea-f728-45cb-8c20-\
ef67f376c886"],

Cell[BoxData[
 RowBox[{"Grid", "@", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Exp", "[", "0.", "]"}], ",", 
      RowBox[{"ExpNoZero", "[", "0.", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Log", "[", "0.", "]"}], ",", 
      RowBox[{"LogNoZero", "[", "0.", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "0."}], ",", 
      RowBox[{"DevideNoZero", "[", 
       RowBox[{"1", ",", "0"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.7584553933658457`*^9, 3.758455463921315*^9}, {
  3.7688023080278807`*^9, 3.768802315654275*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"94169326-674a-4442-b858-2906e886a2b0"],

Cell[BoxData[{
 RowBox[{"Quiet", "@", 
  RowBox[{"AllTrue", "[", 
   RowBox[{
    RowBox[{"noise1", "/", "noise2"}], ",", "NumericQ", ",", "3"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"AllTrue", "[", 
  RowBox[{
   RowBox[{"DevideNoZero", "[", 
    RowBox[{"noise1", ",", "noise2"}], "]"}], ",", "NumericQ", ",", "3"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.758455473676674*^9, 3.7584556912035503`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"2b83ea3b-6e52-4222-9a3a-9c2ffa1e2c9f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"noised", "=", 
   RowBox[{"DevideNoZero", "[", 
    RowBox[{"noise1", ",", "noise2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotData", "[", "noised", "]"}]}], "Input",
 CellChangeTimes->{{3.7584555218231277`*^9, 3.758455541096366*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"3bdb8d5b-aba4-46e3-94d0-0ebf4e2145f5"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Masking", "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7548957249234715`*^9, 3.7548957340260887`*^9}, {
   3.754896730602828*^9, 
   3.7548967366514826`*^9}},ExpressionUUID->"ff48cf42-cb85-4663-b23e-\
43657c60dfe7"],

Cell[CellGroupData[{

Cell["Import Data", "Subsection",
 CellChangeTimes->{{3.7549995580790825`*^9, 3.754999562037315*^9}},
 CellTags->"c:23",ExpressionUUID->"47e835ce-4699-4923-898e-db43e06f49d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "simple", " ", "3", "D", " ", "dataset", " ", "with", " ", 
    "segmentations"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "vox"}], "}"}], "=", 
     RowBox[{"ImportNii", "[", "\"\<twoLegs.nii\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"labels", ",", "vox"}], "}"}], "=", 
     RowBox[{"ImportNii", "[", "\"\<labels.nii\>\"", "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7548957374891505`*^9, 3.754895753834767*^9}, {
  3.7548968059006653`*^9, 3.7548968188103466`*^9}, {3.754996484117587*^9, 
  3.754996490273179*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"d9902e8c-2a9f-40e9-88a5-9c6eca85b9c9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Create Mask", "Subsection",
 CellChangeTimes->{{3.754896948255337*^9, 3.754896952256016*^9}},
 CellTags->"c:24",ExpressionUUID->"586003b9-59ba-4f2a-a670-aeb201812c92"],

Cell[CellGroupData[{

Cell["Automated and threshold masking", "Subsubsection",
 CellChangeTimes->{{3.754897629379714*^9, 3.754897646170933*^9}},
 CellTags->"c:25",ExpressionUUID->"69a2c8a5-fb3b-4839-94de-bdb3a0a3b69c"],

Cell["\<\
Automated Binarization.
Normalize the data to the mean of the data such that the mean data within an \
automated mask will be 100.\
\>", "Text",
 CellChangeTimes->{{3.758435238643988*^9, 3.7584352479102488`*^9}, {
  3.8697986770927615`*^9, 3.86979868226071*^9}, {3.869799058629578*^9, 
  3.8697990601018744`*^9}},ExpressionUUID->"6450432f-96f9-42ed-9572-\
f7f4702bc1a4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataN", "=", 
   RowBox[{"NormalizeData", "[", "data", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mask", "=", 
    RowBox[{"Mask", "[", "dataN", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MeanNoZero", "@", 
    RowBox[{"GetMaskData", "[", 
     RowBox[{"data", ",", "mask"}], "]"}]}], ",", 
   RowBox[{"MeanNoZero", "@", 
    RowBox[{"GetMaskData", "[", 
     RowBox[{"dataN", ",", "mask"}], "]"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.75489694083027*^9, 3.7548969455958157`*^9}, 
   3.7584352520748158`*^9, {3.7655240259208345`*^9, 3.7655240309784946`*^9}, 
   3.7655240858064466`*^9, {3.869799064409197*^9, 
   3.869799069095584*^9}},ExpressionUUID->"76a2f7e3-7d49-45ab-aaf7-\
cdffb72eccbf"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", "mask"}], "]"}]], "Input",
 CellChangeTimes->{{3.754896956287656*^9, 3.7548969633718243`*^9}, {
   3.8697986255098953`*^9, 3.869798629733222*^9}, 
   3.8697988961339803`*^9},ExpressionUUID->"a853d33f-3e4d-4a97-be23-\
2d351b6b6b09"],

Cell["Various ways of defining manual mask thresholds", "Text",
 CellChangeTimes->{{3.758435238643988*^9, 3.7584352479102488`*^9}, {
  3.8697986770927615`*^9, 3.86979868226071*^9}, {3.869799036901597*^9, 
  3.869799043173254*^9}, {3.869799074757931*^9, 3.8697990795275335`*^9}, {
  3.8697991560715437`*^9, 
  3.869799165590991*^9}},ExpressionUUID->"6119300d-5d55-4ad9-bd65-\
06c5d7b92c0c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"masks", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Mask", "[", "dataN", "]"}], ",", 
     RowBox[{"Mask", "[", 
      RowBox[{"dataN", ",", "15"}], "]"}], ",", 
     RowBox[{"Mask", "[", 
      RowBox[{"dataN", ",", 
       RowBox[{"{", 
        RowBox[{"15", ",", "60"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotData", "[", 
  RowBox[{"GridData", "[", 
   RowBox[{"masks", ",", "3"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.869799016650691*^9, 3.869799017141406*^9}, {
  3.869799082246857*^9, 
  3.8697991710626884`*^9}},ExpressionUUID->"2647c4b3-f621-4519-96f4-\
10b1e7b67da7"],

Cell["Automatic generation of mask based on several datasets", "Text",
 CellChangeTimes->{{3.869799173595949*^9, 3.869799185577343*^9}, {
  3.8697992494527197`*^9, 
  3.8697992955111356`*^9}},ExpressionUUID->"846c20fb-e5ad-4363-923d-\
91a579a1bd20"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maskC", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data", ",", "15"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dataN", ",", "15"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dataN", ",", 
        RowBox[{"{", 
         RowBox[{"15", ",", "80"}], "}"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotData", "[", "maskC", "]"}]}], "Input",
 CellChangeTimes->{{3.8697992097469544`*^9, 3.86979924661549*^9}, {
  3.8697992803287163`*^9, 3.8697993083606043`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"a338063b-2315-4387-8406-f2705350e3af"]
}, Closed]],

Cell[CellGroupData[{

Cell["Mask smoothing", "Subsubsection",
 CellChangeTimes->{{3.754897629379714*^9, 3.754897646170933*^9}, {
  3.869799200358733*^9, 3.86979920528703*^9}},
 CellTags->"c:25",ExpressionUUID->"1dec97a9-0a89-48cc-a6cf-b9fd05136c2b"],

Cell["\<\
Clean up the mask. By default it will only find one mask component, but you \
can force the method to find more components.\
\>", "Text",
 CellChangeTimes->{{3.7584350855989523`*^9, 3.758435118937801*^9}, {
  3.7688023861994405`*^9, 
  3.7688024410295568`*^9}},ExpressionUUID->"e0643ea0-003f-48a0-b7b3-\
9ccba6e37a8e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cleanMask1", "=", 
   RowBox[{"SmoothMask", "[", "mask", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584350950829754`*^9, 3.7584350951481504`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"302b44be-ef86-48c9-aa2c-564b391aa0b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cleanMask2", "=", 
   RowBox[{"SmoothMask", "[", 
    RowBox[{"mask", ",", 
     RowBox[{"MaskComponents", "\[Rule]", "2"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758435097834414*^9, 3.7584351036756153`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"03e3091e-977d-4e2f-81d5-da8fb825aec4"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PlotContour", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"AutoCropData", "[", "#", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "vox"}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"mask", ",", "cleanMask1", ",", "cleanMask2"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.758439549186763*^9, 3.7584396152002277`*^9}, 
   3.865653520139935*^9, 3.8656544312829676`*^9},
 CellLabel->"In[49]:=",ExpressionUUID->"b1b59af8-238e-45ed-aa75-edbfe25101fd"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"cleanMask1", ",", "cleanMask2"}], "}"}]}], ",", "vox"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7548968195865602`*^9, 3.75489682314767*^9}, {
   3.7548969267494087`*^9, 3.7548969272596483`*^9}, {3.754897123440123*^9, 
   3.7548971322361813`*^9}, {3.758435066268244*^9, 3.758435068234647*^9}, 
   3.7584351323951216`*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"90b9f4a2-b104-45e2-93f3-8188b310c05e"],

Cell["\<\
Create mask based on threshold, smooth the mask, close holes larger then two, \
maintain two separate masks.
Default the algorithm finds only one mask but it is possible to maintain two \
separate masks.\
\>", "Text",
 CellChangeTimes->{{3.7548970239521685`*^9, 3.7548970593877783`*^9}, {
  3.7549965137525163`*^9, 
  3.754996538270686*^9}},ExpressionUUID->"b2a29537-e3dd-40af-9ab3-\
396f946f0c7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cleanMask1", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"data", ",", "15", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskClosing", "\[Rule]", "2"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7548969762405014`*^9, 3.754897019614797*^9}, {
  3.7548970656280413`*^9, 3.7548971136952505`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"ca643546-dc1d-430e-b21a-ecac262f9a1e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cleanMask2", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"data", ",", "15", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskClosing", "\[Rule]", "2"}], ",", 
     RowBox[{"MaskComponents", "\[Rule]", "2"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7548969762405014`*^9, 3.754897019614797*^9}, {
  3.7548971000115485`*^9, 3.7548971153576403`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"0ca068e9-45ab-4193-b700-ea079aa30009"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"cleanMask1", ",", "cleanMask2"}], "}"}]}], ",", "vox"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7548968195865602`*^9, 3.75489682314767*^9}, {
   3.7548969267494087`*^9, 3.7548969272596483`*^9}, {3.754897123440123*^9, 
   3.7548971322361813`*^9}, {3.758435066268244*^9, 3.758435068234647*^9}, 
   3.7584351453578053`*^9},
 CellLabel->"In[53]:=",ExpressionUUID->"3c45e684-0113-4b2f-9a58-889dba598670"],

Cell["Apply the mask", "Text",
 CellChangeTimes->{{3.7548984571554413`*^9, 
  3.7548984608932505`*^9}},ExpressionUUID->"cc0b2c2b-3f9b-46a3-812b-\
fdd16430c436"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataMask", "=", 
   RowBox[{"MaskData", "[", 
    RowBox[{"data", ",", "cleanMask2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754898464052139*^9, 3.754898476810136*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"0653d5ab-e1f9-42eb-9a3c-efc992067962"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", "dataMask"}], "]"}]], "Input",
 CellChangeTimes->{{3.754898478482792*^9, 3.754898483306509*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"06c51025-4365-4585-b0fb-f98b6c96c521"]
}, Closed]],

Cell[CellGroupData[{

Cell["Manual segmentation processing", "Subsubsection",
 CellChangeTimes->{{3.7548971432028255`*^9, 3.7548971624585037`*^9}, {
  3.754997254313919*^9, 3.7549972630274973`*^9}},
 CellTags->"c:26",ExpressionUUID->"ded5d62a-f398-4005-9427-e92efe288312"],

Cell["\<\
Separate a segmentation with multiple labels into individual masks.\
\>", "Text",
 CellChangeTimes->{{3.754897188163585*^9, 3.7548971975499716`*^9}, {
  3.7549966745269656`*^9, 3.754996682995769*^9}, {3.838096490889537*^9, 
  3.838096498993658*^9}},ExpressionUUID->"30dac8a6-273d-4495-981c-\
2a1d6d3a8f80"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"seg", ",", "lab"}], "}"}], "=", 
   RowBox[{"SplitSegmentations", "[", "labels", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"lab", " ", 
  RowBox[{"(*", 
   RowBox[{"the", " ", "label", " ", "numbers"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "labels", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "seg", "]"}]}], "Input",
 CellChangeTimes->{{3.754897200405677*^9, 3.7548972097258873`*^9}, {
  3.7548973800581846`*^9, 3.754897407083606*^9}, {3.7549966939951077`*^9, 
  3.754996707304601*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"5d3cf964-b905-48d5-a57a-61d50ebef712"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"labels", ",", "seg"}], "]"}]], "Input",
 CellChangeTimes->{{3.7655242470091815`*^9, 3.7655242496937475`*^9}, {
  3.7688025721037664`*^9, 3.7688025757831926`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"0a118751-0dac-4729-ad1e-d7f094a26af9"],

Cell["\<\
Smooth the segmentations labels should be separate volumes and can be joined \
after smoothing\
\>", "Text",
 CellChangeTimes->{{3.7548974138922253`*^9, 3.7548974270718637`*^9}, {
  3.7549967229077616`*^9, 3.754996739591938*^9}, {3.754997287286001*^9, 
  3.7549972904431376`*^9}},ExpressionUUID->"1f4758f5-443f-4df8-b208-\
0f642bb70f02"],

Cell[BoxData[
 RowBox[{
  RowBox[{"labelsS", "=", 
   RowBox[{"MergeSegmentations", "[", 
    RowBox[{
     RowBox[{"SmoothSegmentation", "[", "seg", "]"}], ",", "lab"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.754897429058359*^9, 3.7548974455303636`*^9}, {
   3.7548975010185823`*^9, 3.754897551866062*^9}, {3.7549967217767105`*^9, 
   3.7549967425199823`*^9}, 3.7655242451792927`*^9, 3.7655243573762045`*^9, 
   3.8697995360472155`*^9},
 CellLabel->"In[73]:=",ExpressionUUID->"4434b8fb-f66c-460e-a0c4-571c04a56121"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"labels", ",", "labelsS", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548974476027365`*^9, 3.75489744853773*^9}, {
  3.7548975206376605`*^9, 3.754897520693297*^9}, {3.754897554553789*^9, 
  3.754897560410267*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"9365ecdb-b734-4c5d-8503-bb51d35b6eac"],

Cell["If segmentations have overlaps they can be removed.", "Text",
 CellChangeTimes->{{3.754900015110106*^9, 3.7549000280632486`*^9}, {
  3.7549968084521008`*^9, 3.75499681990247*^9}, {3.7584353282033224`*^9, 
  3.75843534207345*^9}},ExpressionUUID->"460b4f2c-53bc-49cd-9398-\
41759cefa4a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"segDil", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SparseArray", "@", 
       RowBox[{"Dilation", "[", 
        RowBox[{
         RowBox[{"Normal", "@", "#"}], ",", "1"}], "]"}]}], "&"}], "/@", 
     RowBox[{"Transpose", "[", "seg", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584353606845264`*^9, 3.7584353853861103`*^9}, {
  3.7584354600899343`*^9, 3.7584354650010266`*^9}, {3.8662562758072357`*^9, 
  3.866256283220315*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"3e8ca21d-0805-49fc-aa4d-9912aeb2dfcd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"labelsD", "=", 
   RowBox[{"MergeSegmentations", "[", 
    RowBox[{"segDil", ",", "lab"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labelsDCor", "=", 
   RowBox[{"MergeSegmentations", "[", 
    RowBox[{
     RowBox[{"RemoveMaskOverlaps", "[", "segDil", "]"}], ",", "lab"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7584353954389086`*^9, 3.758435424235038*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"b537de9b-c104-43d8-880b-c1a199590c8f"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"labelsD", ",", "labelsDCor"}], "]"}]], "Input",
 CellChangeTimes->{{3.7584354343956237`*^9, 3.7584354431801386`*^9}, {
  3.866256291050557*^9, 3.866256292446912*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"9f532b89-2b9a-45c6-a97a-44e8cda1cce1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Splitting segmentation in slice direction", "Subsubsection",
 CellChangeTimes->{{3.8380966560585556`*^9, 
  3.8380966657189484`*^9}},ExpressionUUID->"344c9d85-ee70-472b-9f36-\
9f65fe863cee"],

Cell["\<\
Split a Segmentation in 5 equal parts along the slice direction\
\>", "Text",
 CellChangeTimes->{{3.754900015110106*^9, 3.7549000280632486`*^9}, {
  3.7549968084521008`*^9, 
  3.75499681990247*^9}},ExpressionUUID->"1b611f18-649c-473d-992a-\
229c3cb8c4f4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"segSplit", "=", 
   RowBox[{"SegmentMask", "[", 
    RowBox[{
     RowBox[{"segS", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "5"}], "]"}], "]"}], ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "segSplit", "]"}]}], "Input",
 CellChangeTimes->{{3.7549000341808167`*^9, 3.754900077803177*^9}, {
  3.7549968320547333`*^9, 3.754996849848937*^9}, {3.7549969480467005`*^9, 
  3.7549969627801375`*^9}, {3.7549973916421013`*^9, 3.75499739634338*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"abe1de54-7eda-49dd-816f-028249e80717"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"segPlot", "=", 
   RowBox[{"MergeSegmentations", "[", 
    RowBox[{
     RowBox[{"Transpose", "@", "segSplit"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"Flatten", "@", 
   RowBox[{"MakeSliceImages", "[", 
    RowBox[{
     RowBox[{"GetSliceData", "[", 
      RowBox[{"segPlot", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "90", "}"}], ",", 
         RowBox[{"{", "57", "}"}]}], "}"}]}], "]"}], ",", "vox", ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
     RowBox[{"ImageLegend", "\[Rule]", "True"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7549968586522613`*^9, 3.7549969027831244`*^9}, {
   3.7549971148782835`*^9, 3.754997193776729*^9}, 3.7549972305497293`*^9, {
   3.754997362242589*^9, 3.754997385157033*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"524331ef-fe4b-4ceb-9bd0-466fdbff5ae8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Extract Data from Masks", "Subsubsection",
 CellChangeTimes->{{3.8380965531986046`*^9, 
  3.838096558772481*^9}},ExpressionUUID->"0a29fdea-136b-424d-b4e5-\
29e30a513b70"],

Cell["Use masks to get mean value from data", "Text",
 CellChangeTimes->{{3.758437757266612*^9, 
  3.7584377887212005`*^9}},ExpressionUUID->"726f5912-6fe1-4cf0-b67e-\
2d661dfbc98b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"segData", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"GetMaskData", "[", 
      RowBox[{"data", ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"Transpose", "[", "seg", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584378127358265`*^9, 3.75843783967611*^9}, 
   3.758438200481134*^9},
 CellLabel->"In[83]:=",ExpressionUUID->"6ffb097a-81f0-4f7b-994e-a5ecaff9ecde"],

Cell[BoxData[
 RowBox[{"MeanStd", "/@", "segData"}]], "Input",
 CellChangeTimes->{{3.7584378427039266`*^9, 3.7584378485084696`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"793842ff-54de-40e7-8b1e-caad93d21916"],

Cell[BoxData[
 RowBox[{"MeanRange", "/@", "segData"}]], "Input",
 CellChangeTimes->{{3.7584378626683087`*^9, 3.7584378662372503`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"5130ff98-956a-4b72-a8af-0af211b0903e"],

Cell[BoxData[
 RowBox[{"TableForm", "@", 
  RowBox[{"GetMaskMeans", "[", 
   RowBox[{"data", ",", "seg", ",", "\"\<lab\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7584378015039597`*^9, 3.758437806384256*^9}, {
  3.7584381420497675`*^9, 3.758438189647224*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"fe0f0767-29b1-46ab-89a9-7c9514129412"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rescaling Segmentations", "Subsection",
 CellChangeTimes->{{3.7548982710095882`*^9, 3.754898277261891*^9}},
 CellTags->"c:27",ExpressionUUID->"cf83491c-53d6-4317-902a-83e581aa5dc7"],

Cell[BoxData[{
 RowBox[{"Dimensions", "[", "labels", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labelsRescale", "=", 
   RowBox[{"RescaleSegmentation", "[", 
    RowBox[{"labels", ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "100", ",", "100"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "labelsRescale", "]"}]}], "Input",
 CellChangeTimes->{{3.7548983134739094`*^9, 3.7548983442978315`*^9}, 
   3.7548984151164074`*^9},
 CellLabel->"In[87]:=",ExpressionUUID->"295b97a0-e9dc-4121-923c-5eaf1358301e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"data", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskComponents", "\[Rule]", "2"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Dimensions", "[", "mask", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maskRescale", "=", 
   RowBox[{"RescaleSegmentation", "[", 
    RowBox[{"mask", ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "100", ",", "100"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "maskRescale", "]"}]}], "Input",
 CellChangeTimes->{{3.7548984416639953`*^9, 3.754898450361798*^9}, 
   3.75489851302268*^9, {3.765524412418682*^9, 3.7655244329762945`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"f34b5322-4762-42a1-b96d-7c26a6f0c9fb"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Registration using ",
 StyleBox["Elastix",
  IgnoreSpellCheck->True]
}], "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7550018766471777`*^9, 3.75500188405846*^9}, 
   3.7554985306225977`*^9},ExpressionUUID->"7e315242-c9a0-48d7-a79c-\
e62367557aee"],

Cell[CellGroupData[{

Cell["Import Data", "Subsection",
 CellChangeTimes->{{3.755001887184451*^9, 3.7550018903509445`*^9}},
 CellTags->"c:28",ExpressionUUID->"932638bc-7c62-479b-bb0d-3cffa205baac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"data", ",", "vox"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<twoLegs.nii\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"water", ",", "voxW"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<water.nii.gz\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fat", ",", "voxF"}], "}"}], "=", 
    RowBox[{"ImportNii", "[", "\"\<fat.nii.gz\>\"", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maskw", "=", 
   RowBox[{"Dilation", "[", 
    RowBox[{
     RowBox[{"Mask", "[", "water", "]"}], ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maskd", "=", 
    RowBox[{"Dilation", "[", 
     RowBox[{
      RowBox[{"Mask", "[", "data", "]"}], ",", "5"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataS", "=", 
   RowBox[{"First", "@", 
    RowBox[{"AutoCropData", "[", 
     RowBox[{"First", "@", 
      RowBox[{"CutData", "[", "data", "]"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7550019174395823`*^9, 3.7550019801348104`*^9}, {
   3.7554970050231967`*^9, 3.755497020462471*^9}, {3.755497070579788*^9, 
   3.755497089024849*^9}, 3.755497197154114*^9, {3.755498244863391*^9, 
   3.75549825377567*^9}, {3.7554983679412785`*^9, 3.7554983689980946`*^9}},
 CellLabel->
  "In[322]:=",ExpressionUUID->"fbf5ef71-e74a-4a87-867e-8a3346fab1f4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Affine Transformation", "Subsection",
 CellChangeTimes->{{3.7554969356157484`*^9, 3.7554969409560246`*^9}},
 CellTags->"c:29",ExpressionUUID->"5c27d6f6-8cde-4515-862a-aa9c9642bd78"],

Cell["Transform a dataset", "Text",
 CellChangeTimes->{{3.7550025866078415`*^9, 
  3.755002593789109*^9}},ExpressionUUID->"4c5eacb3-63dd-4261-bae3-\
aa2546f96de9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rot", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "10", ",", 
     RowBox[{"-", "5"}]}], "}"}]}], ";", 
  RowBox[{"trans", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "10", ",", 
     RowBox[{"-", "5"}]}], "}"}]}], ";", 
  RowBox[{"scale", "=", 
   RowBox[{"{", 
    RowBox[{"1.05", ",", "1.10", ",", "0.95"}], "}"}]}], ";", 
  RowBox[{"scew", "=", 
   RowBox[{"{", 
    RowBox[{"0.0", ",", "0.0", ",", "0.00"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"rot", ",", "trans", ",", "scale", ",", "scew"}], "}"}], "]"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{
  3.7554935427180634`*^9, {3.7554936688766527`*^9, 3.7554936711797667`*^9}, {
   3.755493857645252*^9, 3.755493860590698*^9}, {3.755493921859911*^9, 
   3.755493924898139*^9}, {3.7554940882691007`*^9, 3.7554941002690487`*^9}, {
   3.755494147293077*^9, 3.755494151323444*^9}, {3.7554949317268133`*^9, 
   3.7554949574041276`*^9}, {3.7554950103346453`*^9, 
   3.7554950121565256`*^9}, {3.7554950576477118`*^9, 3.755495098843875*^9}, {
   3.755495251868786*^9, 3.755495259885165*^9}, {3.7554953240931206`*^9, 
   3.755495329594754*^9}, {3.7554961133439054`*^9, 3.75549613987008*^9}, 
   3.7554961714243813`*^9, {3.7554962575032167`*^9, 3.755496258845815*^9}, {
   3.7554965736785517`*^9, 3.755496576428899*^9}, {3.7554966608794184`*^9, 
   3.7554966685258923`*^9}},
 CellLabel->
  "In[328]:=",ExpressionUUID->"63000fed-904c-4a4f-b696-9368e0f79cb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataT", "=", 
   RowBox[{"DataTransformation", "[", 
    RowBox[{"dataS", ",", "vox", ",", "w", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7550036180647516`*^9, 3.7550036920620947`*^9}, {
   3.755004077409649*^9, 3.7550041133533134`*^9}, 3.7554934700311456`*^9, {
   3.755493502350135*^9, 3.7554935405656757`*^9}, 3.7554972023038435`*^9, {
   3.755497234848613*^9, 3.7554972378395543`*^9}, 3.7584358146511583`*^9, 
   3.8697999487938356`*^9},
 CellLabel->
  "In[330]:=",ExpressionUUID->"816e27ef-b777-4331-a0c7-f21e570a53c8"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataS", ",", "dataT", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7550022340223675`*^9, 3.755002252298395*^9}, 
   3.755497204974934*^9},
 CellLabel->"In[75]:=",ExpressionUUID->"914da50d-8987-45c6-86c2-efa574454895"],

Cell["\<\
Register data using default parameters, however use affineDTI to ensure \
output of scale skew, rot and trans as transform instead of the translation \
rotation matrix.\
\>", "Text",
 CellChangeTimes->{{3.7550037015844655`*^9, 
  3.7550037516765904`*^9}},ExpressionUUID->"71e298ab-c4f6-4b0e-9225-\
05f491f97805"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataS", ",", "dataT"}], "]"}]], "Input",
 CellChangeTimes->{{3.8293709626311665`*^9, 3.8293709667513037`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"e2c62f91-87ae-4684-9c45-f35ac0d1d1e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"dataS", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.829371978096118*^9, 3.829371984168358*^9}, {
  3.8293720731967287`*^9, 3.8293720789962473`*^9}},
 CellLabel->
  "In[331]:=",ExpressionUUID->"baed26dd-0455-4c7c-8a1b-0fa20555865e"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataS", ",", "mask"}], "]"}]], "Input",
 CellChangeTimes->{{3.8293719850380554`*^9, 3.829371988762413*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"d10f611a-3618-4a47-bf35-3dfcdb3b7e18"],

Cell[BoxData[{
 RowBox[{"Column", "@", 
  RowBox[{"Options", "@", "RegisterData"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataR", "=", 
   RowBox[{"RegisterData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dataS", ",", "mask", ",", "vox"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"dataT", ",", "vox"}], "}"}], ",", 
     RowBox[{"UseGPU", "->", "False"}], ",", "\[IndentingNewLine]", 
     RowBox[{"DeleteTempDirectory", "\[Rule]", "False"}], ",", 
     RowBox[{"Iterations", "\[Rule]", "500"}], ",", 
     RowBox[{"MethodReg", "\[Rule]", "\"\<affineDTI\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"NumberSamples", "\[Rule]", "5000"}], ",", 
     RowBox[{"Resolutions", "\[Rule]", "2"}], ",", 
     RowBox[{"InterpolationOrderReg", "->", "3"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7550023988649707`*^9, 3.7550024494733624`*^9}, {
   3.755002535812727*^9, 3.7550025408794737`*^9}, 3.755002634724679*^9, {
   3.7550028984936285`*^9, 3.7550029092135963`*^9}, {3.755003190934188*^9, 
   3.755003197011985*^9}, {3.755003506953833*^9, 3.7550035156619873`*^9}, {
   3.7554937732977695`*^9, 3.755493773625546*^9}, {3.755496822865201*^9, 
   3.755496823631248*^9}, {3.7554968777917175`*^9, 3.755496889230296*^9}, 
   3.755496966880742*^9, 3.755497213807523*^9, {3.7603537926945276`*^9, 
   3.760353801002678*^9}, {3.760355225228295*^9, 3.7603552278192377`*^9}, {
   3.760780271039136*^9, 3.7607802711243715`*^9}, {3.7655245882755346`*^9, 
   3.765524588542246*^9}, {3.8293708829913855`*^9, 3.8293708896093583`*^9}, {
   3.829371005930195*^9, 3.8293710354471645`*^9}, {3.829371381563196*^9, 
   3.8293713991315727`*^9}, {3.829372083629218*^9, 3.829372085121773*^9}, {
   3.829372781996848*^9, 3.829372790824048*^9}, {3.8293737010096006`*^9, 
   3.829373712264394*^9}, {3.8293737593508773`*^9, 3.829373767227377*^9}, {
   3.85278852809365*^9, 3.8527885284128313`*^9}, 3.852789380961635*^9, {
   3.852789472927762*^9, 3.8527894870072913`*^9}, {3.852954012009218*^9, 
   3.8529540403929787`*^9}, 3.852954426448773*^9, {3.869799851625532*^9, 
   3.869799865704875*^9}, {3.869799903049756*^9, 3.869799944297468*^9}, {
   3.8722165229193544`*^9, 3.872216547304657*^9}, {3.872216597223484*^9, 
   3.872216600918256*^9}, {3.872216656599367*^9, 3.8722166605507793`*^9}, {
   3.874637717268988*^9, 3.8746377212514524`*^9}, {3.874640901636901*^9, 
   3.8746409029918756`*^9}, {3.874641140981459*^9, 3.874641141746416*^9}, {
   3.8746411849140043`*^9, 3.874641213840567*^9}, {3.8746413188666577`*^9, 
   3.874641320273176*^9}, {3.8746413557939777`*^9, 3.874641356128664*^9}, 
   3.8746414594258165`*^9, {3.8746416117226605`*^9, 3.8746416315056777`*^9}, {
   3.874641770035925*^9, 3.874641770819067*^9}, {3.876230775216816*^9, 
   3.876230794706978*^9}},
 CellLabel->
  "In[385]:=",ExpressionUUID->"1c36b922-6e1f-438c-8272-93926ea59256"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataS", ",", "dataR"}], "]"}]], "Input",
 CellChangeTimes->{{3.8293719850380554`*^9, 3.829371988762413*^9}, {
  3.852789434414312*^9, 3.8527894507843666`*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"d025626d-5335-4f65-a1ec-307255980dc0"],

Cell["\<\
The last output can be used to transform the data according to the last \
registration results.\
\>", "Text",
 CellChangeTimes->{{3.758435601020697*^9, 
  3.7584356338497334`*^9}},ExpressionUUID->"9b6ebdf0-bddb-44b7-968e-\
d85858606ab3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataR2", "=", 
   RowBox[{"TransformData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dataT", ",", "vox"}], "}"}], ",", 
     RowBox[{"DeleteTempDirectory", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7584356534685717`*^9, 3.7584356945386114`*^9}, {
   3.7584357315818825`*^9, 3.7584357400423775`*^9}, {3.829373848909996*^9, 
   3.8293738543219557`*^9}, 3.85295383438649*^9},
 CellLabel->
  "In[392]:=",ExpressionUUID->"da3d4eea-df63-4b2e-b74e-059cacab7254"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataR", ",", "dataR2"}], "]"}]], "Input",
 CellChangeTimes->{{3.758435696450838*^9, 3.758435703242414*^9}, 
   3.85278851247703*^9, {3.8527894128633156`*^9, 3.8527894133929195`*^9}, {
   3.852789456942636*^9, 3.8527894581915154`*^9}},
 CellLabel->
  "In[388]:=",ExpressionUUID->"102974f4-2d9b-4cde-bfaf-358b8fb9ac16"],

Cell["\<\
Compare the input transformation to the output transformation of elastix.\
\>", "Text",
 CellChangeTimes->{{3.755003769101974*^9, 3.7550037929279623`*^9}, {
  3.7554952677230234`*^9, 
  3.7554952698980217`*^9}},ExpressionUUID->"619ccb59-1402-4b29-83d1-\
c92d637ab02a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inpTran", "=", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{"rot", ",", "trans", ",", "scale", ",", "scew"}], "}"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasTran", "=", 
   RowBox[{"First", "@", 
    RowBox[{"ReadTransformParameters", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"$TemporaryDirectory", ",", "\"\<QMRIToolsReg\>\""}], "}"}], 
      "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasTran", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{"elasTran", ",", "3"}], "]"}], ",", "0.01"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TableForm", "[", 
      RowBox[{"#", ",", 
       RowBox[{"TableHeadings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<rot\>\"", ",", "\"\<trans\>\"", ",", "\"\<scale\>\"", ",", 
            "\"\<skew\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<z\>\"", ",", "\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}],
          "}"}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"inpTran", ",", "elasTran"}], "}"}]}], ",", "\"\<     \>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7550038191867886`*^9, 3.7550038270044966`*^9}, {
   3.755496835679539*^9, 3.7554968567675114`*^9}, {3.866256411380365*^9, 
   3.866256429882374*^9}, 3.86979988428321*^9, {3.872216565010192*^9, 
   3.8722165765664234`*^9}},
 CellLabel->
  "In[343]:=",ExpressionUUID->"8ceb4c98-d616-490c-8fb5-4843ba78006c"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"dataS", "-", "dataT"}], ",", 
   RowBox[{"dataS", "-", "dataR"}], ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.75500313369658*^9, 3.7550031501992936`*^9}, {
  3.7655245717982025`*^9, 3.7655245734715223`*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"09229319-c33b-4e4a-ba78-73bea25fef4c"]
}, Closed]],

Cell[CellGroupData[{

Cell["B-spline Registration of two legs", "Subsection",
 CellChangeTimes->{{3.7554969738975*^9, 3.7554969829936905`*^9}, {
  3.755497119471081*^9, 3.755497119982411*^9}, {3.755497161169385*^9, 
  3.7554971633752675`*^9}},
 CellTags->"c:30",ExpressionUUID->"c10c058b-a500-4c2d-bffa-2955b14de21a"],

Cell[CellGroupData[{

Cell["Full Registration", "Subsubsection",
 CellChangeTimes->{{3.7554980649307795`*^9, 3.755498069987264*^9}},
 CellTags->"c:31",ExpressionUUID->"adaf1997-c6af-46c4-ae60-0fb87f7483c2"],

Cell["\<\
First Perform Rigid registration to align and upscale data, then use b-spline \
to correct non rigid deformations\
\>", "Text",
 CellChangeTimes->{{3.755497446401965*^9, 3.7554974866711407`*^9}, 
   3.7554975985448885`*^9},ExpressionUUID->"8fc205d5-3384-40ca-a0e5-\
a8c9f829c920"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataB", "=", 
   RowBox[{"RegisterDataSplit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"water", ",", "maskw", ",", "voxW"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"data", ",", "maskd", ",", "vox"}], "}"}], ",", 
     RowBox[{"Iterations", "\[Rule]", "250"}], ",", 
     RowBox[{"MethodReg", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<rigid\>\"", ",", "\"\<bspline\>\""}], "}"}]}], ",", 
     RowBox[{"DeleteTempDirectory", "->", "False"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.755497124088678*^9, 3.7554971281453304`*^9}, {
   3.7554973375502577`*^9, 3.755497361022441*^9}, {3.75549739332679*^9, 
   3.755497424319078*^9}, {3.87221669446961*^9, 3.872216700408497*^9}, {
   3.872216869002389*^9, 3.8722168691111083`*^9}, 3.872219882769683*^9, {
   3.8722199473109827`*^9, 3.872219949405891*^9}, {3.872219996959099*^9, 
   3.872219999278121*^9}, {3.8722204450628185`*^9, 3.872220447407545*^9}, {
   3.8722205926911926`*^9, 3.8722206094166203`*^9}, {3.872220788770976*^9, 
   3.872220793705757*^9}, 3.8722208426629705`*^9, {3.8722211285221596`*^9, 
   3.8722211408876643`*^9}, 3.8722223818485374`*^9, {3.8722224614689674`*^9, 
   3.8722224640642295`*^9}, {3.8722226790710564`*^9, 3.8722226835133867`*^9}, 
   3.8722227644598336`*^9, {3.872223016473913*^9, 3.8722230192533293`*^9}, {
   3.8722243186362233`*^9, 3.8722243448444877`*^9}, 3.872224386211377*^9, 
   3.872224485678355*^9, {3.8722245400931253`*^9, 3.872224542440977*^9}, {
   3.8722247668584595`*^9, 3.872224787689891*^9}, {3.872224846413643*^9, 
   3.8722248963860965`*^9}, {3.872224940938634*^9, 3.872224943529937*^9}, {
   3.872225142299182*^9, 3.8722251431145535`*^9}, {3.8722252029110107`*^9, 
   3.8722252054507537`*^9}, {3.8722252666712017`*^9, 
   3.8722252686988564`*^9}, {3.8722253007800446`*^9, 
   3.8722253563003087`*^9}, {3.872225408226734*^9, 3.8722254122512407`*^9}, {
   3.872225609809693*^9, 3.8722256111798143`*^9}, {3.8722272400383945`*^9, 
   3.8722272422561784`*^9}, {3.8722280469241858`*^9, 3.872228052434186*^9}, {
   3.8722285359934926`*^9, 3.8722285507555933`*^9}, 3.8722297201844077`*^9, {
   3.872230121488655*^9, 3.8722301387397203`*^9}, {3.872232032307021*^9, 
   3.872232039025941*^9}},
 CellLabel->
  "In[351]:=",ExpressionUUID->"646203ff-d303-4507-9da0-c6c6b2da4b18"],

Cell["Show the result using FlipView", "Text",
 CellChangeTimes->{{3.7554979330790215`*^9, 
  3.7554979449646964`*^9}},ExpressionUUID->"869142fd-77a5-4044-bfa0-\
ffaeaff29d3f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pos", "=", 
   RowBox[{"GetSlicePositions", "[", 
    RowBox[{"dataB", ",", 
     RowBox[{"MakeCheckPlot", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datIm", "=", 
   RowBox[{"Grid", "@", 
    RowBox[{"MakeSliceImages", "[", 
     RowBox[{
      RowBox[{"GetSliceData", "[", 
       RowBox[{"dataB", ",", "pos"}], "]"}], ",", "voxW", ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"watIm", "=", 
   RowBox[{"Grid", "@", 
    RowBox[{"MakeSliceImages", "[", 
     RowBox[{
      RowBox[{"GetSliceData", "[", 
       RowBox[{"water", ",", "pos"}], "]"}], ",", "voxW", ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"FlipView", "[", 
  RowBox[{"{", 
   RowBox[{"datIm", ",", "watIm"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7549001402595067`*^9, 3.7549001450991135`*^9}, {
  3.754900182877452*^9, 3.75490019767517*^9}, {3.7549971051334467`*^9, 
  3.75499710529536*^9}, {3.755497779940259*^9, 3.7554978936477385`*^9}, {
  3.755497951667218*^9, 3.755497959091016*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"c5d26f17-e5d3-4460-99c6-c6d6d4fc11dd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Constrained in one direction", "Subsubsection",
 CellChangeTimes->{{3.755498072434825*^9, 3.755498082354246*^9}},
 CellTags->"c:32",ExpressionUUID->"f38c2344-3618-4b65-86d0-b42b8689639d"],

Cell["\<\
Constrain the b-spline to one direction, e.g. the EPI phase encoding\
\>", "Text",
 CellChangeTimes->{{3.755497446401965*^9, 3.7554975197909365`*^9}, 
   3.7554980513906684`*^9},ExpressionUUID->"8b20a75d-31f3-4056-ac74-\
f1127d0d96dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataB2", "=", 
   RowBox[{"RegisterDataSplit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"water", ",", "maskw", ",", "voxW"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"data", ",", "maskd", ",", "vox"}], "}"}], ",", 
     RowBox[{"Iterations", "\[Rule]", "250"}], ",", 
     RowBox[{"NumberSamples", "\[Rule]", "4000"}], ",", " ", 
     RowBox[{"MethodReg", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<rigid\>\"", ",", "\"\<bspline\>\""}], "}"}]}], ",", 
     RowBox[{"BsplineDirections", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ",", 
     RowBox[{"BsplineSpacing", "\[Rule]", "25"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.755497124088678*^9, 3.7554971281453304`*^9}, {
   3.7554973375502577`*^9, 3.755497361022441*^9}, {3.75549739332679*^9, 
   3.755497424319078*^9}, {3.755497990528892*^9, 3.755498016273543*^9}, {
   3.755498142259413*^9, 3.755498169600134*^9}, 3.872229824870083*^9, 
   3.8722300768785048`*^9, {3.8722322122919135`*^9, 3.872232219810931*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"e8e00cae-5dc7-462d-8948-526b28aeb597"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pos", "=", 
   RowBox[{"GetSlicePositions", "[", 
    RowBox[{"dataB2", ",", 
     RowBox[{"MakeCheckPlot", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datIm", "=", 
   RowBox[{"Grid", "@", 
    RowBox[{"MakeSliceImages", "[", 
     RowBox[{
      RowBox[{"GetSliceData", "[", 
       RowBox[{"dataB2", ",", "pos"}], "]"}], ",", "voxW", ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"watIm", "=", 
   RowBox[{"Grid", "@", 
    RowBox[{"MakeSliceImages", "[", 
     RowBox[{
      RowBox[{"GetSliceData", "[", 
       RowBox[{"water", ",", "pos"}], "]"}], ",", "voxW", ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"FlipView", "[", 
  RowBox[{"{", 
   RowBox[{"datIm", ",", "watIm"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7549001402595067`*^9, 3.7549001450991135`*^9}, {
  3.754900182877452*^9, 3.75490019767517*^9}, {3.7549971051334467`*^9, 
  3.75499710529536*^9}, {3.755497779940259*^9, 3.7554978936477385`*^9}, {
  3.755497951667218*^9, 3.755497959091016*^9}, {3.7554980024647155`*^9, 
  3.755498007583373*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"a8ab54f5-bbbb-4ea9-a109-96d066fc16c2"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Register And Apply to other Data", "Subsection",
 CellChangeTimes->{{3.7554982597977324`*^9, 3.755498271396658*^9}},
 CellTags->"c:33",ExpressionUUID->"52e9fa03-400d-4512-9bf9-1437a0e5fcb7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"watR", ",", "fatR"}], "}"}], "=", 
   RowBox[{"RegisterDataTransform", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "maskd", ",", "vox"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"water", ",", "maskw", ",", "voxW"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"fat", ",", "voxF"}], "}"}], ",", 
     RowBox[{"MethodReg", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<rigid\>\"", ",", "\"\<affine\>\""}], "}"}]}], ",", 
     RowBox[{"Iterations", "\[Rule]", "250"}], ",", " ", 
     RowBox[{"DeleteTempDirectory", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.755498275094519*^9, 3.755498319890134*^9}, {
   3.7554983831047416`*^9, 3.7554983952150755`*^9}, {3.7554984445763817`*^9, 
   3.7554984498083334`*^9}, 3.7584361136142426`*^9, {3.760357623138256*^9, 
   3.760357626463493*^9}, {3.82937395602829*^9, 3.829373959843869*^9}, 
   3.8293739979094467`*^9, 3.872229864063113*^9, 3.8722300396128407`*^9, {
   3.8722311241609077`*^9, 3.872231164672542*^9}, {3.8722316421957455`*^9, 
   3.872231643473422*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"3efd9f8d-ac18-4503-896c-60556b22f764"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"watR", ",", "fatR"}], "}"}], "]"}], ",", "vox"}], 
  "]"}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"0cbe21c8-5790-42e6-a0ba-1f030e3e5997"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"watRS", ",", "fatRS"}], "}"}], "=", 
   RowBox[{"RegisterDataTransformSplit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "maskd", ",", "vox"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"water", ",", "maskw", ",", "voxW"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"fat", ",", "voxF"}], "}"}], ",", 
     RowBox[{"MethodReg", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<rigid\>\"", ",", "\"\<affine\>\""}], "}"}]}], ",", 
     RowBox[{"Iterations", "\[Rule]", "200"}], ",", 
     RowBox[{"DeleteTempDirectory", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.755498275094519*^9, 3.755498319890134*^9}, {
   3.7554983831047416`*^9, 3.7554983952150755`*^9}, {3.7554984445763817`*^9, 
   3.7554984498083334`*^9}, {3.758436068173047*^9, 3.758436069372244*^9}, {
   3.7685395567423387`*^9, 3.768539567048854*^9}, {3.768539629002274*^9, 
   3.768539629076474*^9}, 3.8722298845318136`*^9, {3.8722300376810756`*^9, 
   3.8722300435541697`*^9}, {3.872231083935706*^9, 3.8722311149918404`*^9}, {
   3.872231190896412*^9, 3.8722312058565283`*^9}, {3.872231251745761*^9, 
   3.8722312532648125`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"27a1cde0-d94a-47cf-abeb-3c946e78e8b6"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"watRS", ",", "fatRS"}], "}"}], "]"}], ",", "vox"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7554984005698614`*^9, 3.7554984135662374`*^9}, {
  3.7584360760791397`*^9, 3.758436077389354*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"d1be5a12-791a-4350-96bc-97a8b33f7dcb"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dixon and Phase unwrapping", "Chapter",
 CellChangeTimes->{{3.7548951014856977`*^9, 
  3.754895112634607*^9}},ExpressionUUID->"bd72d8f9-e5f9-4dc6-8f74-\
865e5a0d73d1"],

Cell[CellGroupData[{

Cell["Simulated phase unwrapping", "Subsection",
 CellChangeTimes->{{3.7548951197254925`*^9, 3.754895134108882*^9}, {
  3.7548952739283686`*^9, 3.754895275862955*^9}, {3.758467755337638*^9, 
  3.7584677709681816`*^9}},
 CellTags->"c:34",ExpressionUUID->"a6da33c3-efdf-4208-ba9d-24feeed10a88"],

Cell[CellGroupData[{

Cell["Simulate some Data", "Subsubsection",
 CellChangeTimes->{{3.7548989462240496`*^9, 3.754898949663735*^9}, {
  3.754998398991782*^9, 3.7549984023582215`*^9}},
 CellTags->"c:35",ExpressionUUID->"2edddb44-1bfb-48ca-829f-4e01ababe642"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xdat", "=", 
    RowBox[{"ydat", "=", "200"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"Create", " ", "some", " ", "gradients"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gradients", "=", 
    RowBox[{"RotateDimensionsRight", "@", 
     RowBox[{"N", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "+", "j"}], ")"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"10", " ", 
             RowBox[{"Sqrt", "[", "i", "]"}]}], " ", "+", 
            RowBox[{"10", " ", 
             RowBox[{"Sqrt", "[", "j", "]"}]}]}], ")"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"i", "-", 
               RowBox[{".5", "xdat"}]}], "]"}], "1.2"], "+", 
            RowBox[{"4", " ", 
             RowBox[{"Sqrt", "[", "j", "]"}]}]}], ")"}], " ", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"2", "Pi", " ", 
              RowBox[{"(", 
               RowBox[{"i", "/", "60"}], ")"}]}], "]"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", "Pi", " ", 
              RowBox[{"(", 
               RowBox[{"j", "/", "60"}], ")"}]}], "]"}]}], ")"}]}], 
         "\[IndentingNewLine]", "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "xdat"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", "ydat"}], "}"}]}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"normalize", " ", "and", " ", "add", " ", "some", " ", "noise"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noise", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", 
       RowBox[{"1", "/", "120"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "xdat", ",", "ydat"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gradients", "=", 
    RowBox[{"noise", "+", 
     RowBox[{"Rescale", "/@", "gradients"}], "-", "0.5"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "numer", " ", "of", " ", "wraps", " ", "over", " ", "the", " ", 
    "gradient"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"un", "=", 
    RowBox[{"2", "Pi", " ", 
     RowBox[{"{", 
      RowBox[{"12", ",", "12", ",", "10", ",", "8"}], "}"}], " ", 
     "gradients"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"wrap", " ", "the", " ", "data"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"im", " ", "=", " ", 
    RowBox[{"Mod", "[", 
     RowBox[{"un", ",", 
      RowBox[{"2", "Pi"}]}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"add", " ", "noise", " ", "patch"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"nx", ",", "ny"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Round", "[", 
      RowBox[{"xdat", "/", "5"}], "]"}], ",", 
     RowBox[{"Round", "[", 
      RowBox[{"ydat", "/", "5"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noiseP", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"nx", ",", "nx"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"un", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"dat", "=", "#"}], ";", 
       RowBox[{
        RowBox[{"dat", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"xdat", "/", "4"}], "-", 
               RowBox[{"nx", "/", "2"}]}], "]"}], "+", "1"}], ";;", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"xdat", "/", "4"}], "+", 
              RowBox[{"nx", "/", "2"}]}], "]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"ydat", "/", "2"}], "-", 
               RowBox[{"ny", "/", "2"}]}], "]"}], "+", "1"}], ";;", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"ydat", "/", "2"}], "+", 
              RowBox[{"ny", "/", "2"}]}], "]"}]}]}], "]"}], "]"}], "=", 
        "noiseP"}], ";", "dat"}], ")"}], "&"}], "/@", "un"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"im", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"dat", "=", "#"}], ";", 
        RowBox[{
         RowBox[{"dat", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Floor", "[", 
               RowBox[{
                RowBox[{"xdat", "/", "4"}], "-", 
                RowBox[{"nx", "/", "2"}]}], "]"}], "+", "1"}], ";;", 
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"xdat", "/", "4"}], "+", 
               RowBox[{"nx", "/", "2"}]}], "]"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Floor", "[", 
               RowBox[{
                RowBox[{"ydat", "/", "2"}], "-", 
                RowBox[{"ny", "/", "2"}]}], "]"}], "+", "1"}], ";;", 
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"ydat", "/", "2"}], "+", 
               RowBox[{"ny", "/", "2"}]}], "]"}]}]}], "]"}], "]"}], "=", 
         "noiseP"}], ";", "dat"}], ")"}], "&"}], "/@", "im"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Show", " ", "The", " ", "wrapped", " ", "data"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{"Rescale", "[", "#", "]"}], ",", 
       RowBox[{"ImageSize", "->", "200"}]}], "]"}], "&"}], "/@", "im"}], ",", 
   "\"\<  \>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.7549976917055855`*^9, 3.754997793597664*^9}, 
   3.754997849787154*^9, {3.754997938490676*^9, 3.754997938950401*^9}, {
   3.7549980726370535`*^9, 3.754998097766305*^9}, {3.754998131589113*^9, 
   3.7549983965618825`*^9}, {3.7549984543741026`*^9, 3.754998533495485*^9}, {
   3.7549985780393105`*^9, 3.7549985926172285`*^9}, {3.838174388198349*^9, 
   3.8381743940437126`*^9}, {3.8381745406697016`*^9, 3.838174577095389*^9}, {
   3.8381746130892396`*^9, 3.8381746197737265`*^9}, {3.838178778035986*^9, 
   3.8381787788578444`*^9}, {3.8381789935782537`*^9, 3.838179006574831*^9}, {
   3.8381837971981435`*^9, 3.8381838047034616`*^9}, {3.838184022751316*^9, 
   3.838184038269132*^9}, {3.838184287250022*^9, 3.8381843496876726`*^9}, {
   3.8381843805066805`*^9, 3.8381843807160788`*^9}, {3.838184912524763*^9, 
   3.8381849819711103`*^9}, {3.8381850447887993`*^9, 3.838185048396658*^9}, {
   3.8381850985623817`*^9, 3.8381850989417725`*^9}, {3.838192032900813*^9, 
   3.838192082915861*^9}, {3.838192948741992*^9, 3.838192949666714*^9}, {
   3.8381939622176485`*^9, 3.8381939638303227`*^9}, {3.8381948041475215`*^9, 
   3.838194807674503*^9}, {3.8381966611219883`*^9, 3.838196699520776*^9}, {
   3.838196789414157*^9, 3.838196792414489*^9}, {3.838196974339326*^9, 
   3.8381969798520346`*^9}, 3.838197255925785*^9, {3.838199508273942*^9, 
   3.8381995184641314`*^9}, {3.838259840827737*^9, 3.838259841207488*^9}, {
   3.8382598723289404`*^9, 3.8382598734329863`*^9}, {3.8382599378355794`*^9, 
   3.8382599380450196`*^9}, {3.838260017961311*^9, 3.8382600510647807`*^9}, {
   3.8382607101713276`*^9, 3.8382607243967657`*^9}, {3.8382607996153345`*^9, 
   3.8382608010354548`*^9}, {3.8382608419304447`*^9, 
   3.8382608581737227`*^9}, {3.8382654481265264`*^9, 
   3.8382654517009554`*^9}, {3.838265546182499*^9, 3.838265661483443*^9}, {
   3.8454648016376963`*^9, 3.845464860181296*^9}, {3.869800278229045*^9, 
   3.8698002845386515`*^9}, {3.869801102029804*^9, 3.8698011024931216`*^9}, {
   3.8698020551999235`*^9, 3.8698020556308627`*^9}, {3.869802243153267*^9, 
   3.8698022485921893`*^9}, {3.8702456807297745`*^9, 
   3.8702456810518627`*^9}, {3.8702457158191805`*^9, 
   3.8702458282990046`*^9}, {3.8702458631027913`*^9, 
   3.8702458651613626`*^9}, {3.8702458975145597`*^9, 3.870246112479963*^9}, {
   3.8702461433871565`*^9, 3.8702461723954663`*^9}, {3.870498654619564*^9, 
   3.8704986551453*^9}, {3.8704986983972373`*^9, 3.870498699607258*^9}, 
   3.8705008172793703`*^9, 3.8705009334699163`*^9},
 CellLabel->
  "In[200]:=",ExpressionUUID->"d0d98fe3-f920-45fd-9b74-f8e903adc023"]
}, Closed]],

Cell[CellGroupData[{

Cell["Unwrap simulated Data", "Subsubsection",
 CellChangeTimes->{{3.7548952024977303`*^9, 3.7548952076400723`*^9}, 
   3.7548952687600183`*^9},
 CellTags->"c:36",ExpressionUUID->"67a583ec-d68b-4d8e-ae56-a358819f36f5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"unw", "=", 
    RowBox[{"Unwrap", "/@", "im"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Show", " ", "the", " ", "results"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{"Rescale", "[", "#", "]"}], ",", 
       RowBox[{"ImageSize", "->", "150"}]}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"im", ",", "un", ",", "unw"}], "}"}], ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.754899510078083*^9, 3.7548996092769794`*^9}, {
   3.754899730076022*^9, 3.754899740058651*^9}, 3.754899897935336*^9, {
   3.754998598008664*^9, 3.7549986049417105`*^9}, {3.8381743922322664`*^9, 
   3.8381744011926975`*^9}, {3.838178816245762*^9, 3.8381788248191767`*^9}, {
   3.838178912388085*^9, 3.8381789697572384`*^9}, 3.8381851098202114`*^9, {
   3.8382599897038817`*^9, 3.8382599901556745`*^9}, 3.838260021961645*^9, {
   3.83826006063422*^9, 3.8382600622807846`*^9}, {3.8643694782884088`*^9, 
   3.864369486801217*^9}, {3.8643696174249043`*^9, 3.8643696496006036`*^9}, 
   3.864369683504691*^9, {3.8698012907978845`*^9, 3.8698013013093643`*^9}, 
   3.8698020292468395`*^9, 3.8698020684415193`*^9, {3.8702332143524523`*^9, 
   3.870233214577508*^9}, {3.870233471168436*^9, 3.870233471488714*^9}, {
   3.870235631272992*^9, 3.8702356495618887`*^9}, {3.8710979299686604`*^9, 
   3.8710979535848503`*^9}},ExpressionUUID->"d423f709-b17a-4168-aefa-\
f5fb52bd609f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dixon data", "Subsection",
 CellChangeTimes->{{3.754895417479931*^9, 3.754895434517124*^9}, 
   3.754997531203142*^9},
 CellTags->"c:37",ExpressionUUID->"7b0ca489-2d98-4b70-8d0f-822a0387c0f1"],

Cell[CellGroupData[{

Cell["Import Data", "Subsubsection",
 CellChangeTimes->{{3.754997533020477*^9, 3.7549975367605343`*^9}},
 CellTags->"c:38",ExpressionUUID->"177a1753-5f03-4991-89d8-98a1aa966a50"],

Cell["\<\
Very specific case of dixon data converted from a phipils MRI scanner with \
magnitude, phase, real, imaginary, fat, water and B0 which was converted from \
dcm to Nii using DcmToNii.
You only need the real and imaginary data to perform the reconstructions. \
\>", "Text",
 CellChangeTimes->{{3.7548954792598314`*^9, 3.7548955300130854`*^9}, 
   3.7549026270064087`*^9, {3.7549986310072975`*^9, 
   3.7549986675954037`*^9}},ExpressionUUID->"87f508a6-1540-4424-bb30-\
6ac782debcec"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dix", ",", " ", "B0", ",", 
     RowBox[{"{", 
      RowBox[{"real", ",", "imag", ",", "mag", ",", "phase"}], "}"}], ",", 
     "dixvox"}], "}"}], "=", 
   RowBox[{"ImportNiiDix", "[", "\"\<Dixondata.nii\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.754895436716581*^9, 3.754895475639389*^9}, {
  3.7548955587023845`*^9, 3.7548956000566998`*^9}, {3.7548956465255575`*^9, 
  3.754895647049635*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"423e2d86-3a51-46b3-9197-72f7f0028581"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"nEcho", ",", "echo"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0.76"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"echos", "=", 
    RowBox[{
     RowBox[{"Range", "[", "nEcho", "]"}], 
     RowBox[{"echo", "/", "1000"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"in", " ", "seconds"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7549009826085634`*^9, 3.7549010174370785`*^9}, {
  3.7549013021727595`*^9, 3.75490131146694*^9}, {3.754902432765706*^9, 
  3.7549024396770434`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"58d81c30-8194-49d8-99f2-afe922769900"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"real", ",", "imag", ",", "dixvox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548955873392324`*^9, 3.754895602809918*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"d5065ca8-34be-491d-8e7c-859fa128d3ef"],

Cell["Mask the background for better fitting", "Text",
 CellChangeTimes->{{3.754998713229601*^9, 
  3.754998728766362*^9}},ExpressionUUID->"5d8722a6-0f30-46da-9a66-\
70fc6e81a4e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"meanMag", "=", 
   RowBox[{"NormalizeData", "[", 
    RowBox[{"Mean", "@", 
     RowBox[{"Transpose", "@", "mag"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mask", "=", 
    RowBox[{"Mask", "[", 
     RowBox[{"meanMag", ",", "5", ",", 
      RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
      RowBox[{"MaskComponents", "\[Rule]", "2"}], ",", 
      RowBox[{"MaskClosing", "\[Rule]", "2"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"real", ",", "imag", ",", "mag", ",", "phase"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"MaskData", "[", 
      RowBox[{"#", ",", "mask"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"real", ",", "imag", ",", "mag", ",", "phase"}], "}"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.754901597258956*^9, 3.754901597375744*^9}, {
  3.754998684206936*^9, 3.7549987122940793`*^9}, {3.754998827495366*^9, 
  3.7549988310379753`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"cdcc633d-9298-474d-8926-467ed718c7df"]
}, Closed]],

Cell[CellGroupData[{

Cell["Create a B0Map from phase data", "Subsubsection",
 CellChangeTimes->{{3.7549011981743827`*^9, 3.7549012066710663`*^9}},
 CellTags->"c:39",ExpressionUUID->"fad4d634-1ff8-466d-8264-61cf6051a1dc"],

Cell["Uses UnwrapSplit to unwrap both legs separately", "Text",
 CellChangeTimes->{{3.7584362210925174`*^9, 3.758436244684272*^9}, 
   3.768806763579346*^9},ExpressionUUID->"c7901d06-820c-4d80-adf0-\
e69af1db8e84"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"B0Map", "=", 
   RowBox[{"mask", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"phase", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "4"}], "]"}], "]"}], "-", 
      RowBox[{"phase", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B0MapU", "=", 
     RowBox[{"UnwrapSplit", "[", 
      RowBox[{"B0Map", ",", "mag", ",", 
       RowBox[{"UnwrapDimension", "\[Rule]", "\"\<3D\>\""}]}], "]"}]}], ";"}],
    "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "convert", " ", "the", " ", "B0map", " ", "to", " ", "Hz", " ", "for", " ",
     "dixon", " ", "reconstruction"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"hz", "=", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{"2", "Pi", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"echos", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "-", 
       RowBox[{"echos", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0Hz", "=", 
   RowBox[{"hz", " ", "B0MapU"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549010337577896`*^9, 3.7549010764325085`*^9}, {
   3.7549011783346214`*^9, 3.7549012406207705`*^9}, {3.7549016324444876`*^9, 
   3.7549016325870314`*^9}, {3.7549987461412563`*^9, 
   3.7549987618038483`*^9}, {3.8648824243162003`*^9, 
   3.8648824310672626`*^9}, {3.870500177706973*^9, 3.870500181318342*^9}, 
   3.87050031116284*^9, {3.870500370731724*^9, 3.8705003723879967`*^9}, {
   3.8717046589633093`*^9, 3.8717046653804235`*^9}, {3.8720491150955963`*^9, 
   3.8720491161347275`*^9}},ExpressionUUID->"f00cc5d1-3776-4533-888e-\
d37a4fe114b1"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"B0Map", ",", "B0MapU"}], "]"}]], "Input",
 CellChangeTimes->{{3.869801243105795*^9, 3.8698012559807434`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"43524089-a0eb-4e17-8202-245f84006519"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"B0Map", ",", "B0Hz", ",", "dixvox", ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "100"}], ",", "100"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.754901161022546*^9, 3.754901171131878*^9}, {
  3.754901417212268*^9, 3.754901418059086*^9}, {3.7549987770718904`*^9, 
  3.7549988046390266`*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"0d87a2c4-dbb9-4b69-9cbd-5329e4c7140f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculate a T2 star map from the echos", "Subsubsection",
 CellChangeTimes->{{3.75490125599796*^9, 3.7549012670385733`*^9}, 
   3.8643710021186867`*^9},
 CellTags->"c:40",ExpressionUUID->"1b109d2e-a32c-48ad-9a6b-09b964323db5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"s0", ",", "T2star"}], "}"}], "=", 
   RowBox[{"T2Fit", "[", 
    RowBox[{"mag", ",", "echos"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754901290700407*^9, 3.754901324588889*^9}, {
   3.7549013810507326`*^9, 3.754901394283003*^9}, {3.7549016467968245`*^9, 
   3.754901652796183*^9}, {3.7549021603045063`*^9, 3.754902160892595*^9}, {
   3.7549022127335978`*^9, 3.7549022158522654`*^9}, 3.7549024289920497`*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"d7bdf8d5-6e6b-401a-9fb0-4bd3e02954af"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"s0", ",", "T2star", ",", "dixvox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.05"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549013968454103`*^9, 3.7549014130665936`*^9}, {
  3.754901466908824*^9, 3.75490147737572*^9}, {3.7549021722049284`*^9, 
  3.754902181595815*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"bc8e7efa-dd51-4c32-b014-721652d5ace8"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"MedFilter", "[", "B0Hz", "]"}], ",", 
   RowBox[{"MedFilter", "[", "T2star", "]"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.05"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.870502100901606*^9, 3.8705021468787317`*^9}, {
  3.8705021904318857`*^9, 3.8705022570715513`*^9}},
 CellLabel->
  "In[372]:=",ExpressionUUID->"346bed12-bfcb-401c-8796-fa1043ebaeac"]
}, Closed]],

Cell[CellGroupData[{

Cell["Perform iDeal reconstruction with initial B0 and T2star", \
"Subsubsection",
 CellChangeTimes->{{3.754901503069392*^9, 3.754901520094133*^9}},
 CellTags->"c:41",ExpressionUUID->"202a85c6-aa77-469d-80b0-13a415d3aa61"],

Cell["The reconstruction uses a 8 peak fat spectrum by default.", "Text",
 CellChangeTimes->{{3.754901708095419*^9, 3.754901724207772*^9}, 
   3.754998889567275*^9},ExpressionUUID->"e24414a3-74e8-46ce-b0b6-\
aa68e3bb6b37"],

Cell[BoxData[
 RowBox[{"Column", "@", 
  RowBox[{"Options", "[", "DixonReconstruct", "]"}]}]], "Input",
 CellChangeTimes->{{3.7549017008317294`*^9, 3.7549017047021294`*^9}, {
  3.7549988929307747`*^9, 3.7549988959752254`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"61f94af4-5685-4721-b8e5-76cc0311a7c5"],

Cell["\<\
The Dixon reconstruction uses IDEAL with B0 and T2* correction\
\>", "Text",
 CellChangeTimes->{{3.758436296048541*^9, 
  3.758436325020463*^9}},ExpressionUUID->"f029d1df-9364-4a0f-aa02-\
4b00dc60486b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"perform", " ", "the", " ", "IDEAL", " ", "dixon", " ", "fit"}], 
    ",", " ", 
    RowBox[{"B0map", " ", "in", " ", "Hz"}], ",", " ", 
    RowBox[{"T2star", " ", "in", " ", "s"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fraction", ",", "watfat", ",", "iopImages", ",", 
       RowBox[{"{", 
        RowBox[{"B0fit", ",", "t2St", ",", "r2St", ",", "phiIn"}], "}"}], ",",
        "itt", ",", "resDix"}], "}"}], "=", 
     RowBox[{"DixonReconstruct", "[", 
      RowBox[{
      "real", ",", "imag", ",", "echos", ",", "B0Hz", ",", "T2star", ",", 
       RowBox[{"DixonFilterInput", "->", "True"}], ",", 
       RowBox[{"DixonFilterOutput", "->", "True"}]}], "]"}]}], ";"}], "//", 
   "AbsoluteTiming"}]}]], "Input",
 CellChangeTimes->{{3.754901525562724*^9, 3.754901528603548*^9}, {
   3.754901978846877*^9, 3.754901984012291*^9}, {3.754902191998588*^9, 
   3.7549022027641563`*^9}, {3.7549023148142376`*^9, 
   3.7549023278657026`*^9}, {3.7549024464298067`*^9, 3.75490245145186*^9}, {
   3.7549026391006436`*^9, 3.754902642427657*^9}, {3.8454563498936973`*^9, 
   3.845456351074998*^9}, {3.8454565797954454`*^9, 3.8454565842970324`*^9}, {
   3.8454571311744847`*^9, 3.84545713170008*^9}, {3.8455426950108657`*^9, 
   3.8455427092933044`*^9}, 3.845542950667134*^9, {3.8455440336745834`*^9, 
   3.8455440453955183`*^9}, {3.8455562094580517`*^9, 3.845556220340623*^9}, 
   3.845556431137073*^9, 3.845556768733327*^9, {3.864294069644165*^9, 
   3.8642940701528053`*^9}, {3.8643552919447947`*^9, 
   3.8643552960406337`*^9}, {3.8702645630279818`*^9, 
   3.8702645721844387`*^9}, {3.8705023101761103`*^9, 3.870502311608819*^9}, 
   3.871704790932722*^9, {3.871707106349574*^9, 3.871707106732213*^9}, {
   3.8720499744913244`*^9, 3.8720499770508103`*^9}, {3.8720500107959733`*^9, 
   3.8720500151156054`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"df9ae3da-52fc-492a-9b8d-9589c9e0af8a"],

Cell[BoxData[
 RowBox[{"PlotData", "[", "itt", "]"}]], "Input",
 CellChangeTimes->{{3.845543842608681*^9, 3.8455438452663965`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"b57474ca-c936-4652-9fd6-663016d6a0c8"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"1000", "t2St"}], ",", " ", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"0", ",", "50"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.864883596269615*^9, 3.8648836129451323`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"6b4cf163-3775-42de-9877-12d6df906e42"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"B0fit", ",", "t2St", ",", "dixvox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.05"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549019554403896`*^9, 3.7549019595644007`*^9}, {
  3.7549020857896004`*^9, 3.754902087723256*^9}, {3.754902383757766*^9, 
  3.754902394123337*^9}, {3.7549024747014837`*^9, 3.7549024767484083`*^9}, {
  3.848397084395108*^9, 3.8483970914168377`*^9}, {3.8702643675548544`*^9, 
  3.8702643773703065`*^9}, {3.870264526933181*^9, 3.8702645285483046`*^9}, {
  3.8702659282860928`*^9, 3.8702659286498613`*^9}, {3.8702667719345255`*^9, 
  3.8702667724731183`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"3b55af4b-60ef-43ab-be1f-e829b9d3ed23"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"B0fit", ",", "B0Hz"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t2St", ",", "T2star"}], "}"}], ",", "dixvox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.05"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549019554403896`*^9, 3.7549019595644007`*^9}, {
  3.7549020857896004`*^9, 3.754902087723256*^9}, {3.754902383757766*^9, 
  3.754902394123337*^9}, {3.7549024747014837`*^9, 3.7549024767484083`*^9}, {
  3.848397084395108*^9, 3.8483970914168377`*^9}, {3.8702643675548544`*^9, 
  3.8702643773703065`*^9}, {3.870264526933181*^9, 3.8702645285483046`*^9}, {
  3.8702659282860928`*^9, 3.8702659286498613`*^9}, {3.8702667719345255`*^9, 
  3.8702667724731183`*^9}, {3.8705023271829543`*^9, 3.870502343632017*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"1bb71494-5ac8-49d8-92ef-45d8ca18d99e"],

Cell[BoxData[
 RowBox[{"PlotData", "@", "iopImages"}]], "Input",
 CellChangeTimes->{{3.870502517673102*^9, 3.870502521399897*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"5d51a2d1-42ce-414b-9912-b705c804ab94"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"iopImages", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"iopImages", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", "dixvox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549016899492655`*^9, 3.7549016978680615`*^9}, {
  3.7549028011392927`*^9, 3.7549028300607553`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"d640f839-5ffc-4132-865e-cae8836aa204"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"watfat", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"watfat", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", "dixvox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549016899492655`*^9, 3.7549016978680615`*^9}, {
  3.7549028011392927`*^9, 3.7549028266850023`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"5f8b9cc7-a71a-4c83-b65d-69c317df4b2a"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"phiIn", ",", "dixvox"}], "]"}]], "Input",
 CellChangeTimes->{{3.861858913497285*^9, 3.8618589489790473`*^9}, {
  3.864353776467146*^9, 3.86435378785854*^9}, {3.864379179396075*^9, 
  3.864379182961542*^9}, {3.8717072043182216`*^9, 3.871707204460683*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"db9ffc7c-3d10-42ae-b9b5-62c501a3cb07"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"fraction", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"fraction", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", "dixvox", ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.02"}], ",", "1.02"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549015332953105`*^9, 3.7549015571315794`*^9}, {
   3.8454567635733995`*^9, 3.8454567659240227`*^9}, {3.8483971516112094`*^9, 
   3.8483971572520304`*^9}, {3.861858903898447*^9, 3.8618589098006306`*^9}, 
   3.8643560936612787`*^9, {3.8643566819818406`*^9, 3.864356689119606*^9}, {
   3.8648832983993216`*^9, 3.8648833265157194`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"8b5b27ec-0057-4a86-964e-d0783ae008fb"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", "fraction"}], ",", "dixvox", ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.01"}], ",", "1.01"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549015332953105`*^9, 3.7549015571315794`*^9}, {
   3.8454567635733995`*^9, 3.8454567659240227`*^9}, {3.8483971516112094`*^9, 
   3.8483971572520304`*^9}, {3.861858903898447*^9, 3.8618589098006306`*^9}, 
   3.8643560936612787`*^9, {3.8643566819818406`*^9, 3.864356689119606*^9}},
 CellLabel->
  "In[377]:=",ExpressionUUID->"ef9d930e-46b1-4c08-ab9d-54b1b8bc8691"],

Cell["\<\
Internally DixonReconstruct estimates the fat fraction from the complex water \
and fat images however it can also be done using the magnitude\
\>", "Text",
 CellChangeTimes->{{3.758436330990307*^9, 
  3.7584363600954485`*^9}},ExpressionUUID->"625f8eae-ed64-4f89-b2e8-\
8ef3060fd8cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fractionM", "=", 
   RowBox[{"DixonToPercent", "[", 
    RowBox[{
     RowBox[{"watfat", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"watfat", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758436363630905*^9, 3.758436392588728*^9}},
 CellLabel->
  "In[1528]:=",ExpressionUUID->"264346c4-6b3f-4ece-bceb-9414c6eb6281"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", "fraction"}], ",", 
   RowBox[{"Transpose", "@", "fractionM"}], ",", "dixvox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.0"}], ",", "1.0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549015332953105`*^9, 3.7549015571315794`*^9}, {
  3.7584364908952923`*^9, 3.7584364927021093`*^9}, {3.845456808979616*^9, 
  3.845456817848179*^9}, {3.84839739903436*^9, 3.848397401994776*^9}, {
  3.8618588964538517`*^9, 3.8618589023871408`*^9}},
 CellLabel->
  "In[1529]:=",ExpressionUUID->"894f94a1-23b7-4463-b2d5-abe725435936"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulate Dixon Data and fit testing", "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7554985560315247`*^9, 3.755498559150863*^9}, {
   3.758348438387064*^9, 3.75834843870792*^9}, {3.758433092886845*^9, 
   3.758433096742123*^9}, {3.7584677846255093`*^9, 
   3.7584677903386955`*^9}},ExpressionUUID->"992e29c7-eb37-4be7-8ec9-\
9e6018497ff7"],

Cell[CellGroupData[{

Cell["Optimize Dixon Echo times", "Subsection",
 CellTags->"c:42",ExpressionUUID->"6e39cf2a-909a-421d-928c-dff91acc75c9"],

Cell[BoxData[
 RowBox[{"OptimizeDixonEcho", "[", "]"}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"3da07b39-8a46-42c0-8fe0-aa5ee4eb4389"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulate the Dixon signal", "Subsection",
 CellChangeTimes->{{3.7583490562055683`*^9, 3.758349062121837*^9}, {
  3.758470058569296*^9, 3.758470059263226*^9}},
 CellTags->"c:42",ExpressionUUID->"6f5b2db9-e346-4bd8-a44c-8cca8c836fad"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fDix", ",", "sDix", ",", "nEcho"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"2.55", ",", "0.76", ",", "4"}], "}"}]}], ";"}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"85354d95-4da5-435b-a9a0-c401d639ef3f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fDix", ",", "sDix", ",", "nEcho"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"1.3", ",", "0.95", ",", "10"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"echos", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"fDix", " ", "+", " ", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", 
         RowBox[{"nEcho", "-", "1"}]}], "]"}], "sDix"}]}], ")"}], "/", 
    "1000."}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"snri", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0i", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2stari", "=", 
   RowBox[{"25", "/", "1000."}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fri", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"size", "=", "50"}], ";"}]}], "Input",
 CellLabel->
  "In[206]:=",ExpressionUUID->"ca9c1bf2-57fe-44ba-a162-d1be1d85a590"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"frs", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "1", ",", ".1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"snrs", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"5", ",", "50", ",", "5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0s", "=", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"-", "100"}], ",", "100", ",", "10"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7584678184581175`*^9, 3.758467825496066*^9}, {
  3.758468081991387*^9, 3.7584681157660894`*^9}, {3.758468230479967*^9, 
  3.758468230993506*^9}, {3.845457733671528*^9, 3.8454577375298414`*^9}, {
  3.845462405196141*^9, 3.8454624079781528`*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"4c0239ee-d9ac-403c-a918-dd9d399cea36"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"realF", ",", "imagF"}], "}"}], "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"real", ",", "imag"}], "}"}], "=", 
        RowBox[{"SimulateDixonSignal", "[", 
         RowBox[{"echos", ",", "fr", ",", "B0i", ",", "T2stari"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"realM", "=", 
        RowBox[{"RotateDimensionsRight", "[", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"real", ",", 
           RowBox[{"{", 
            RowBox[{"size", ",", "size"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"imagM", "=", 
        RowBox[{"RotateDimensionsRight", "[", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"imag", ",", 
           RowBox[{"{", 
            RowBox[{"size", ",", "size"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"realN", "=", 
        RowBox[{"realM", "+", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "snri"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"nEcho", ",", "size", ",", "size"}], "}"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"imagN", "=", 
        RowBox[{"imagM", "+", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "snri"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"nEcho", ",", "size", ",", "size"}], "}"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"realN", ",", "imagN"}], "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"fr", ",", "frs"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758466519299549*^9, 3.758466533241519*^9}, {
   3.7584667308462963`*^9, 3.7584667585138855`*^9}, {3.75846692142552*^9, 
   3.7584669273582945`*^9}, 3.758467253788074*^9, {3.7584672882083406`*^9, 
   3.758467358363638*^9}, {3.75846812003065*^9, 3.758468139996991*^9}, {
   3.758468177586877*^9, 3.758468182008848*^9}, {3.758468225153759*^9, 
   3.758468320828058*^9}, {3.869802677089772*^9, 3.869802690891579*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"f1884fe1-586b-4852-b44e-8ac602f5e42f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"realS", ",", "imagS"}], "}"}], "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"real", ",", "imag"}], "}"}], "=", 
        RowBox[{"SimulateDixonSignal", "[", 
         RowBox[{"echos", ",", "fri", ",", "B0i", ",", "T2stari"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"realM", "=", 
        RowBox[{"RotateDimensionsRight", "[", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"real", ",", 
           RowBox[{"{", 
            RowBox[{"size", ",", "size"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"imagM", "=", 
        RowBox[{"RotateDimensionsRight", "[", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"imag", ",", 
           RowBox[{"{", 
            RowBox[{"size", ",", "size"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"realN", "=", 
        RowBox[{"realM", "+", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "snr"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"nEcho", ",", "size", ",", "size"}], "}"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"imagN", "=", 
        RowBox[{"imagM", "+", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "snr"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"nEcho", ",", "size", ",", "size"}], "}"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"realN", ",", "imagN"}], "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"snr", ",", "snrs"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758466519299549*^9, 3.758466533241519*^9}, {
   3.7584667308462963`*^9, 3.7584667585138855`*^9}, {3.75846692142552*^9, 
   3.7584669273582945`*^9}, 3.758467253788074*^9, {3.7584672882083406`*^9, 
   3.758467358363638*^9}, {3.75846812003065*^9, 3.758468139996991*^9}, {
   3.758468177586877*^9, 3.7584682188132477`*^9}, {3.758468292265744*^9, 
   3.7584682995314426`*^9}, {3.8698026865702825`*^9, 3.8698026939038916`*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"53fc9933-5872-4125-b0f8-f68f33bb3a1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"realB", ",", "imagB"}], "}"}], "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"real", ",", "imag"}], "}"}], "=", 
        RowBox[{"SimulateDixonSignal", "[", 
         RowBox[{"echos", ",", "fri", ",", "B0", ",", "T2stari"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"realM", "=", 
        RowBox[{"RotateDimensionsRight", "[", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"real", ",", 
           RowBox[{"{", 
            RowBox[{"size", ",", "size"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"imagM", "=", 
        RowBox[{"RotateDimensionsRight", "[", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"imag", ",", 
           RowBox[{"{", 
            RowBox[{"size", ",", "size"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"realN", "=", 
        RowBox[{"realM", "+", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "snri"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"nEcho", ",", "size", ",", "size"}], "}"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"imagN", "=", 
        RowBox[{"imagM", "+", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "snri"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"nEcho", ",", "size", ",", "size"}], "}"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"realN", ",", "imagN"}], "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"B0", ",", "B0s"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758466519299549*^9, 3.758466533241519*^9}, {
   3.7584667308462963`*^9, 3.7584667585138855`*^9}, {3.75846692142552*^9, 
   3.7584669273582945`*^9}, 3.758467253788074*^9, {3.7584672882083406`*^9, 
   3.758467358363638*^9}, {3.75846812003065*^9, 3.758468139996991*^9}, {
   3.758468177586877*^9, 3.758468262882839*^9}, {3.7584683010011992`*^9, 
   3.7584683079738092`*^9}, {3.7584683776609764`*^9, 
   3.7584683796218987`*^9}, {3.758468552311184*^9, 3.7584685530545883`*^9}, {
   3.869802688198004*^9, 3.8698026979621983`*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"75be3c89-2250-4c15-8fc1-95fc5153710d"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"realB", ",", "imagB"}], "]"}]], "Input",
 CellChangeTimes->{{3.75846961932992*^9, 3.758469625453643*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"ea6aef23-0e48-4bd6-8dc9-a82b13ee01d7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fit the simulated Dixon signal", "Subsection",
 CellChangeTimes->{{3.758349069323036*^9, 3.7583490793226967`*^9}, {
  3.7584700639547195`*^9, 3.758470064704809*^9}},
 CellTags->"c:43",ExpressionUUID->"33202e28-0fa0-4880-a579-60fd33dd0adb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dim", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Dimensions", "[", "realF", "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0F", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"B0i", ",", "5"}], "]"}], ",", "dim"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2starF", "=", 
   RowBox[{"Abs", "@", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"T2stari", ",", 
        RowBox[{"10", "/", "1000."}]}], "]"}], ",", "dim"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "frF", ",", "watfat", ",", "iop", ",", "fit", ",", "itt", ",", "res"}], 
    "}"}], "=", 
   RowBox[{"DixonReconstruct", "[", 
    RowBox[{
    "realF", ",", "imagF", ",", "echos", ",", "B0F", ",", "T2starF", ",", 
     RowBox[{"DixonFilterInput", "->", "False"}], ",", 
     RowBox[{"DixonFilterOutput", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellLabel->
  "In[223]:=",ExpressionUUID->"753b0a2a-9d05-49da-9bee-81c36f6f89af"],

Cell[BoxData[
 TemplateBox[{
  "CompiledFunction", "cfne", 
   "\"Numerical error encountered; proceeding with uncompiled evaluation.\"", 
   2, 226, 9, 19660553219523447977, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[223]:=",ExpressionUUID->"a037e5e8-8186-46e3-9201-e6957f48c441"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dim", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Dimensions", "[", "realS", "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0S", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"B0i", ",", "5"}], "]"}], ",", "dim"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2starS", "=", 
   RowBox[{"Abs", "@", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"T2stari", ",", 
        RowBox[{"10", "/", "1000."}]}], "]"}], ",", "dim"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "frS", ",", "watfat", ",", "iop", ",", "fit", ",", "itt", ",", "res"}], 
    "}"}], "=", 
   RowBox[{"DixonReconstruct", "[", 
    RowBox[{"realS", ",", "imagS", ",", "echos", ",", "B0S", ",", 
     RowBox[{"DixonFilterInput", "->", "False"}], ",", 
     RowBox[{"DixonFilterOutput", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellLabel->
  "In[227]:=",ExpressionUUID->"400f995e-d5ab-42fe-a587-30e34e83f443"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dim", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Dimensions", "[", "realB", "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0B", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"B0", ",", "5"}], "]"}], ",", 
       RowBox[{"dim", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;"}], "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"B0", ",", "B0s"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2starB", "=", 
   RowBox[{"Abs", "@", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"T2stari", ",", 
        RowBox[{"10", "/", "1000."}]}], "]"}], ",", "dim"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "frB", ",", "watfat", ",", "iop", ",", "fit", ",", "itt", ",", "res"}], 
    "}"}], "=", 
   RowBox[{"DixonReconstruct", "[", 
    RowBox[{"realB", ",", "imagB", ",", "echos", ",", "B0B", ",", 
     RowBox[{"DixonFilterInput", "->", "False"}], ",", 
     RowBox[{"DixonFilterOutput", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellLabel->
  "In[231]:=",ExpressionUUID->"b43542ca-c929-4028-8aee-c7176c7cf527"]
}, Closed]],

Cell[CellGroupData[{

Cell["Evaluate the fits", "Subsection",
 CellChangeTimes->{{3.7583490835356913`*^9, 3.75834908874759*^9}},
 CellTags->"c:44",ExpressionUUID->"6c868790-2893-463e-a2d0-1a9a571113d7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"frF", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<fat frac.\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<Imposed frac. = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"frs", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "frs", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"frS", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", ".5"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<fat frac.\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<SNR = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"snrs", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "snrs", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"frB", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", ".5"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<fat frac.\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<B0 = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"B0s", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], "<>", "\"\< Hz\>\""}]}]}], "]"}],
      "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"5", ",", 
      RowBox[{"Length", "[", "B0s", "]"}], ",", "8"}], "]"}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.7584691146759214`*^9, 3.7584692172196293`*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"1ef20ff1-6d49-4deb-877d-7de44dfed40d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.476], 
          GrayLevel[1]]], 
        GrayLevel[0]], {{}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.476], 
            GrayLevel[1]]], 
          GrayLevel[0]], {{{
            
            RectangleBox[{0., 0}, {0.03333333333333333, 1.4020950846091862`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.03333333333333333, 0}, {0.06666666666666667, 
             4.580983078162772}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.06666666666666667, 0}, {0.1, 9.282836422240129}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.1, 0}, {0.13333333333333333`, 9.415793714746172}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.13333333333333333`, 0}, {0.16666666666666666`, 
             4.35132957292506}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.16666666666666666`, 0}, {0.2, 0.8944399677679291},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2, 0}, {0.23333333333333334`, 0.072522159548751}, 
             "RoundingRadius" -> 
             0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
u0uwwjzakC3jLvg/hWnFPw==
           "]]}, Annotation[#, "Charting`Private`Tag$55456#1"]& ]}}, {}}}, {
    ImageSize -> 300, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-0.02, 0}, 
     Frame -> {True, True, False, False}, FrameLabel -> {{
        FormBox[
         TagBox["\"Probability Density\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"fat frac.\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], PlotLabel -> 
     FormBox["\"Imposed frac. = 0.1\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.476], 
          GrayLevel[1]]], 
        GrayLevel[0]], {{}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.476], 
            GrayLevel[1]]], 
          GrayLevel[0]], {{{
            
            RectangleBox[{0.3333333333333333, 0}, {0.36666666666666664`, 
             0.012004801920768308`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.36666666666666664`, 0}, {0.4, 
             0.09603841536614646}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.4, 0}, {0.43333333333333335`, 0.6362545018007203},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.43333333333333335`, 0}, {0.4666666666666667, 
             4.333733493397359}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.4666666666666667, 0}, {0.5, 9.135654261704682}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.5, 0}, {0.5333333333333333, 9.843937575030012}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.5333333333333333, 0}, {0.5666666666666667, 
             4.369747899159663}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.5666666666666667, 0}, {0.6, 1.3085234093637454`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.6, 0}, {0.6333333333333333, 0.22809123649459784`},
              "RoundingRadius" -> 0]}}, {{
            RectangleBox[{0.6333333333333333, 0}, {0.6666666666666666, 
             0.024009603841536616`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.6666666666666666, 0}, {0.7, 
             0.012004801920768308`}, "RoundingRadius" -> 
             0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$56302#1"]& ]}}, {}}}, {
    ImageSize -> 300, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-0.02, 0}, 
     Frame -> {True, True, False, False}, FrameLabel -> {{
        FormBox[
         TagBox["\"Probability Density\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"fat frac.\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], PlotLabel -> 
     FormBox["\"Imposed frac. = 0.5\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.476], 
          GrayLevel[1]]], 
        GrayLevel[0]], {{}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.476], 
            GrayLevel[1]]], 
          GrayLevel[0]], {{{
            
            RectangleBox[{0.7333333333333333, 0}, {0.7666666666666667, 
             0.07646559048428207}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.7666666666666667, 0}, {0.8, 0.7264231096006797}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.8, 0}, {0.8333333333333334, 2.5998300764655906`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.8333333333333334, 0}, {0.8666666666666667, 
             5.632965165675446}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.8666666666666667, 0}, {0.9, 7.124044180118947}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.9, 0}, {0.9333333333333333, 6.830926083262532}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.9333333333333333, 0}, {0.9666666666666667, 
             4.243840271877655}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.9666666666666667, 0}, {1., 2.7655055225148684`}, 
             "RoundingRadius" -> 
             0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
W4Cn087pfzU34H8xBmxY
           "]]}, Annotation[#, "Charting`Private`Tag$57717#1"]& ]}}, {}}}, {
    ImageSize -> 300, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-0.02, 0}, 
     Frame -> {True, True, False, False}, FrameLabel -> {{
        FormBox[
         TagBox["\"Probability Density\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"fat frac.\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], PlotLabel -> 
     FormBox["\"Imposed frac. = 0.9\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellLabel->
  "Out[235]=",ExpressionUUID->"8942a143-2ea5-4fd0-9d1a-b0ebde38429f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.476], 
          GrayLevel[1]]], 
        GrayLevel[0]], {{}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.476], 
            GrayLevel[1]]], 
          GrayLevel[0]], {{{
            
            RectangleBox[{0.16666666666666669`, 0}, {0.18, 
             0.06000000000000011}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.19333333333333336`, 0}, {0.20666666666666667`, 
             0.09000000000000016}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.20666666666666667`, 0}, {0.22000000000000003`, 
             0.3899999999999991}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.22000000000000003`, 0}, {0.23333333333333334`, 
             1.0800000000000018`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.23333333333333334`, 0}, {0.24666666666666667`, 
             2.789999999999999}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.24666666666666667`, 0}, {0.26, 
             4.5299999999999985`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.26, 0}, {0.2733333333333333, 6.990000000000013}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2733333333333333, 0}, {0.2866666666666667, 
             10.439999999999976`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2866666666666667, 0}, {0.30000000000000004`, 
             11.939999999999973`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.30000000000000004`, 0}, {0.31333333333333335`, 
             11.40000000000002}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.31333333333333335`, 0}, {0.32666666666666666`, 
             10.080000000000018`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.32666666666666666`, 0}, {0.34, 6.569999999999985},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.34, 0}, {0.3533333333333334, 4.46999999999999}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3533333333333334, 0}, {0.3666666666666667, 
             2.2800000000000042`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3666666666666667, 0}, {0.38, 1.0800000000000018`},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.38, 0}, {0.3933333333333333, 0.5700000000000011}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3933333333333333, 0}, {0.40666666666666673`, 
             0.08999999999999941}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.40666666666666673`, 0}, {0.42000000000000004`, 
             0.15000000000000027`}, "RoundingRadius" -> 
             0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$58589#1"]& ]}}, {}}}, {
    ImageSize -> 300, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.092, 0}, 
     Frame -> {True, True, False, False}, FrameLabel -> {{
        FormBox[
         TagBox["\"Probability Density\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"fat frac.\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], PlotLabel -> FormBox["\"SNR = 10\"", TraditionalForm], 
     PlotRange -> {{0.1, 0.5}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.476], 
          GrayLevel[1]]], 
        GrayLevel[0]], {{}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.476], 
            GrayLevel[1]]], 
          GrayLevel[0]], {{{
            
            RectangleBox[{0.24666666666666667`, 0}, {0.26, 
             0.029999999999999992`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.26, 0}, {0.2733333333333333, 0.5400000000000009}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2733333333333333, 0}, {0.2866666666666667, 
             7.499999999999983}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2866666666666667, 0}, {0.30000000000000004`, 
             28.109999999999935`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.30000000000000004`, 0}, {0.31333333333333335`, 
             29.340000000000053`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.31333333333333335`, 0}, {0.32666666666666666`, 
             8.940000000000015}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.32666666666666666`, 0}, {0.34, 
             0.5399999999999988}, "RoundingRadius" -> 
             0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwUV3c81e8Xt2VmhEJmMkM23c/nfMjOiCiEJEmSUkYJZaTxbUhCkqwkIzMr
IZvrXve67kDJCCEllVX43d9fn9d5nec5z/u8z/ucz/PI+15wPs3GwsJyg4OF
5f/feL3XjU+f1gPxRqPZgouwtmT+2lJeTj1Uxo75O+eLaVeK2qq+eV0PZ6tP
B6lwSmlPLM09aa2vhy/ij/x/8Ctpm1ZoXJgfqgeBy//1N8cZa2/tK5dHJBug
2jniweYzX+1ryrWJYxkNEMrYWeNoU6V9WbLjsHLmOwj0G3T7ne28f1R44ce/
nvcAEw+Tzwjk6Oj73xAZGWgGUVnBTsSsV3fwtVZ3y9cWUMCpx7KOj+vZqr7k
r9v4AD+8D98pFGYzMDhGStZlaYPLoycrLzxmNRy7HytzZGc7GM+XCJ0v4jLa
+YhBP6reAb4+NZQ3natGnWZTA6PqncBRlWdPXSAY79+IoPCadUH+AcsTQMs3
EfVvEXtn0Q1IfXZ2j97JA/HP3tx0NO8BsZ5SVrVmPlxUUMKZbOsemOfWKC5z
3I4LRTxsftr1wMebTtksRcI4/8+cAo9de+DhSiT2/ao4zlrRK4Xm3wNODrVD
WqoKOMFivjyvOz3g3/9UP++2IS6jIaDlHLEHei+mwFe1U7jH/6G5jQM9wLh0
6rvdzdO4e547EgToPRDcmEEtUgnARW82W5V97gGzykwN4+BgnI+ZRP/SYg/4
8cdpme68glPq7fh0VbQXvPTesL39ex8n8+xZc69EL/gN1vyQ6k3CiQeF5EhJ
98KFGeHivr5k3DbB3aff7+kFCHzSnf4wDTfnFPqNxaAXqtclRooicnGTCrZE
J5NeGFNfZVl8lY/7+Eu2PBftBU22SoviXa9whCf4y+ZWvXD7prlLwlgJrnxI
4e8tt144fjirRvZmDc43dmvhgWcvrF37IVK6WocTU/049sSnF/pYSfpJZe9w
kVeedOYF9MKjNzY/Ldk+4D53OZRUXOyF09/tiPsn23HmEtuSm6/0wkY5mXcu
twf32v9DBOFGLwi6kEaeXurHCdZEeo3c7gWZ0umTvFYU3GVOvYOzSb2Ayqp7
Cb6g4xguCyor6Ux7pdAraeEj7u6/HqnNzF6YZ7wrIrKM4ZD8AkHOnF4oXI/0
V6wexy0eimflf9kLuBvlb3meTOJyf534LfK6F3oOvH6nWziFc3mGm9lV2gs2
7LuuEZZmcNwHdw3LVfTCjvCov7cj53ANc3/6lN/2wtunI1nFFgu4oOSBZs36
XqAbPvF9sG8RJ2NSVqn/vhdGG3O/m4z/xJHH/3uJ+8CMv27Oztv6C5dwJyD9
YEcvjCu+rn4y+AdnsN/iP9ueXvgVJWn0ffcqbpYhH+NEYPLrNnPrZd46LvPG
5kU3ci8MPU1W/nhuA+egMnLqBJXpZ9AevUJZEFZS7VH/oV74K5TztuoHK1Id
kWJz/lMv/JNodFIisCP+siG40PFeEMtN6wsf4UR2ddlrXZvqhaLf7QdSZLch
fcFqCnGzvRAayBExncWLxIhzi91Z6IX4dm+TEycEkP1Nk9xJP3vhgZy7UZuu
EPLldMt66p9eOG9kdNL8szCSKvB84flaLywYBbYp1ogi1m+vjuVv9EI4j6P0
20Yx5K/nUUoxKx4WXfb31K1IIG84dDsrOfFQQp3G+QdJIj4l2+vrefDwKOfE
pQi53YiIy7fiFgE87N3XVS8pIId0/O3O6hLGw/LuXdwHmaPnSt7LR0QxPMyn
7DsbHa2IqB2KS6DuwoNUXmzj4hUl5OOSd8TH3XjQn5ibVXuljDzMOBA4KY+H
dzqSb9UE1BAzs51ec0p4ODLvFxZYroH8nv3t+FMVD3EWKHE+VQspeEQ2W92H
h30RHpB7aj/ibvxGf2s/Hlrwb7SP7tFF+MfvqnAZ4GHYR90zUVgfabp9RkrA
BA+1020ht7UMkYva5oI7UDw4Tf0+LB1vjCgy5FilzPBQKtXNEi6MQ2jXN37J
W+IhaOtVsvUYitxWHp5WscXDOZ0Uttl1DDHprxnScmDyEzcpE1pihiyEP+4z
cMbD091Hn8bfNkeyZS42I0fxcHgfRUv7sSXi3GlXae6BB2vJTfIfkjWikgj6
ud54UMx4RnSJOYRsWOjUbfky86lb7T8Z6oAMcCod8DqDhwwec49jnw4jhR0S
TQ3n8EB9fai6p8QZibnJa7rzIh7stP+MypW6IEcsNtrCQvGQ3UXKOD95FFHh
XLSkXMHD6UqpcHNXd2SzfaJHO5q5//D3hd5tnshgAtXuQSweojk16R0cJ5DX
5t398zfxcI/LNM1F5SQSw/HO2eYuHjQ96utc1n0Rl/ZSasEDPKQIsx+Z+eeH
qCVku3E8xkNFLjmTQ/8MsnXw8cjJNDxsmH4J2VN4FhlkT/RufoaHx1zZo7ae
QUhR25Vx6Ww8RG1Gjom5XUBuxJ/zi8zHQ3/ibpy/UwjietB7hl6Ih6vrQ6mG
CpcRNXanQP1SPNx62Cs6pRCGsLQdXEiuwMPHa9djzN0iEFqcwcXFt3g4irLr
F3RdRYrNVH/ZN+ChypCTdzw8CrnBJh1e3ISHC75nrE4EXUeOtgqubWvDQzrL
YljqsVhEI441yr8LD3wmftnxivEIq9nvzTY8HizOff1lIHMTobHOxMqT8LB2
L+WDh90tpOTDEMf1Qaa+//siKFh1B4mL7bv1kYGHsNALTT+O3UOOmTbzmnzC
g+OHO21qpg8RDdbK+2njTL1PPm78YPIIYfuQL/RnCg8/+EBKdzMZYdxIe+w8
x8znoNSLv99TkFLsrnj5dzzwOhNFk4XTkDiW6KcCv/Cw4/rvkJHAp4hbywXp
cyt40K07a6bPkolo3vB90f0XD9xvzi3foGch7Jirwl6WPjAqtFJK/5uNMLas
XsZz9AG50tBftSoXedNsojK+rQ+4E285OKfmIwnX9xWjAn0QdE/c0vF1AeIO
cpqZwn3gJZ5JbVssRDS3RCrWxPpAJOY5rj2kGOFo5tQ7JtkHa1f+TX3e/wYZ
jlmtqZbpg5HzfmdSn5UjZei8sYhiH0T0u62rmlciCZufGi8o90F2Q26Io3g1
4tFEAoJ6H6wfT8Oxi9cg2jFtrWrafdC26XUjx6oO4URrLG7r9UEmvuTj97IG
ZHijsHvKqA9WJUTW5F3eI+Xvnx06iPTBhcDdy8vSLUhi9ANitmkfnP+0vbuz
6gNyHIl12rTog92ehPmZkDZEe+Py4HHbPljJ6X8ucrwD4Xrvf6zeoQ/y8sQ1
jl3uQj5GuQ+LH+mDlwL3Z5Wae5AKnJ1X6LE+6LGJGjx2sA9J/IeOkY8z8yec
3DLk7Ec8G/ef0vLpg8th3tOWnGREJ2rP9D2/PjDgm+YeLBlAuHESZ+cC+qBr
Dy25OmoQ+fiX55vV+T7wrP4lUHSFhlS++xf8MqQPXmdnRhPyGUiDSEHc97A+
SO1ZEv+zNoy0nnVMNYzsg0WultWwxE9Ib8vq6xsxzPzLMqyLlMcQskTu+544
Jj+L6nHspeMII/gQWeRWH/Dv8Y6Bo5PIWMfvL8f/6wPxwGLljL1TyFfprNX8
h30gcA5vmi4/gyxetuL//rgPfg1qvxY4NIus9i7KGqb3QUbLX4k9r+YRFoUM
3RuZfaDbqnXN1+Q7su3qQaue7D5oejkXMpywiGwnffMQedkHvrmHkkwElhBx
5dTg46/7IP1wNZdJ/S9EJgbi8kv7QLF8isJ67w+iqZH82qCmD7Y/kA1eqlpD
DOIPvL/e0AcSEUNnJ4X+IejwF1J3E7P+0+N+JvmbiOX+B1+E2/pg61aM2Yl6
FtT+tuGqRxcTj+6voX6MDXX5PMaXj++D4zdKS2GeHfU0uCu70N8Hr9wk5xvf
caJBXz5aXmf0wdD6t/rAjzxo6IFEj+6PfdCyz4RdSo8fvZasFSw83gcd+IN3
v7QIonGzjFiPqT5orbbgL2sTQu9icU/yZpn98UGuCrMUQZPT1F9/W2Dq67lB
xtCcKJrxfbBRf6kPvBV+cvpXi6GvM5W/dK33Qe32IznWbbvQ8l+kFaGtPmDh
t9Do2C6N1tlG8nmwE+B0hpv3/YcyaEuOomweNwFuSeiTY/Lk0O7VPp1vfASw
n+D3P7NbASU5hlvqCxEAny/VJliniNILZD1idhDgwGadmnG4EjrtcilWaDcB
0o9VbTmeVUW/F0s9cZcngNsTqszffHV0ma2jMFeJAOXmxB0Vwpropntw47wq
AcoutfZ1uGujnBUSJD1NAsQeS5qI6tqP8m/7MBmtQ4DNggL/Uy666I4TgSud
BszzclXyhNj10T0C72XcgYlH/miyBtkI1fDz18k9SICNFPbZ6WUTVO/ddst5
KwKYtJrnbDuEoDiRenc9OwJUuDea+5IBPXjW93z0YQJEuz3V5rEyRW1b+GI7
XQjw6mZLT0erGeos8TZluzsBzsUox9t7m6O+HdyNOSeZ6w0HTA9vWaGB0hX9
c6cJoCg39eAZry166bLHpG4gAUoPL0x7mNqhkb3sK1HBBMhqNdop/MoBjZUv
5e28RIBr0y31bS8Oo7evHJXZHkEA5wtpj89yO6NJ/Vv73a4x8acnXS+9dwTN
jnZ2n4snwOVJj/l3a0dR32K2mNlbBIgvj/16ot0NVRyqzP36HwGEO2PiRyo8
0C9cp7pmHhLA+2Z6+od2T7RAT/Tb9GMCzPMbmAxueaMBvm1C02kEeE9y/cte
5YOqJl3Wn3pGgC4HtuKDGyfRknlKzGQeAczvjPVKjfqhwbsS8iZeMfOPFBOP
uOKPalnpdY8XE2CgddA6bn8Auhj65dtYGQH23GiSucIXiFbmpgiPVRFg8pRR
3LttQWgoydzgcy0BUrfrWw+rB6MGm789Rt8RQO3ZDH/3gYtovbtr/sc2Auyf
dnl/pPcSGnmLs2eki6mfF1RjU4NQFPf27cIwngCHoxStVxrD0M2J0yLD/QTQ
iemvPOETgbYIiRsOUQjw5sphxUSFq2gc2nmcQSfAbeM8vwzOa+jBoPAb9BEC
8JRw45f4otHOLloPdZIA+S6XO+w6b6C3/yR+H5whwLuakP8MuOJQG0VD0cF5
AlzStnps6xWP8jrNGFJ+EGBBDyxUCQloX0ya58AvAvz43OH48Fgi+qDEKpa8
QoDcY5yxxzZvoY7DKy9Jf5n6rYGmqLY76IC+2w8iOxFO8LZtj6i4j6ac2raD
yE0EnzYG48/oQ9T1UZ0RgY8IL3Cq6zskH6HizQFefduJYNWL+H91T0YZ33bG
4UWJQOwwsjhX/hjNkOwp6JUgwmZ7710N2Sfoceur+B4pIhzkEM6hvkpFR/OG
dnQrEgF0lENFBTPQbPId4y5lZrx6boGHP56hJ7eMvTvVmX7XsF3tS89RhX1z
cR1aROAdCJ7Z4M9Gv3hkvGrXJUJGtTVlQDcHLbht29dmSAQ7p/QJjQu5aEDN
+mLrASKwGSe2nW/JQ+eFj5t8OEiErrmdC1lFBWgJ8J1osSLCqSm9fXjLQjT4
/Lv45kNECL9pZe++9RrVfnausMmRCPnTfisatGJ0qVuK8P4IEXbE0oesCaVo
9TL+Z+MxIvhnP3hImi5Dw/ZEiTceJ0Kj8DPnmyIV6Or1jycaThFh782Rmbf3
qtCG0nsJ9WeIUKu7/VDIXDV6bQT3uu4cES4mJ3IxTtSgOJ4FQu0FJn+LZJHw
77XopsHzpZrLRBg8o2e/mFaPtvjZS9REEEHH++AKp/c7NDZ548Dba0TIHrph
l2z2HuX47nWzKp5ZL57ny7drW9CvuntMeG4TYSIq5f6FlQ8o4ercd+97RGAN
SCNHOLShlc3ledVJRJBvupOFNrWjqZwRbrxPiFDhwRoWZd2JRh5CBHyeEiE6
lA24f3ShJx6xt759TgS+EmPtwaoeVGV3kvrJAiJ856qlVmQTUP5TR8dqiojQ
5nPzy3FCP/qzUPoJfxkRbor7v20WIqO07xM2vlVEOHnjhM6M4wDaoPd6s7aW
COJR5/89fklBsyIvVAk0EqG1/12+vSgVjW/RDzjVQoTtryON3mbQUDu7VrJg
DxGKtQ4ffbYxhGon3070IxDB3v2vxNzHEVSM4XCggUwEVQ77obufPqHru8UW
t9OIELLbcWSEZQwdPTWSf3qYCCVzrjkzSuNo6+sc93ejRAjbo3tC/cQE+urH
GUHhSSLEWBUbbZZOohev/Y5onCdCyk/DMankadTlQ4OGyCIREodmeG6pfUWN
uWPHz/wmwra/pz+3j86iMvZWqe9XiXCJ/YHSq/J5lO2xwCHRDSLwb39XK527
gE4zKFsBrP1wuegnpvv2B4qXyahu4uyH7kxCIv/yIppStFcmULAfFEtx+l5n
fqFXFr8NNIv0Q/H4TEdb82/Uy6DqlphEP1zRbHinpLWMmkVdxZ2T6odA7YtO
f2tW0L2t8LNFth+E9jmVUdzWUN5tXAXie/oBm3iAHBX/i/6w7/MIUukHPp7Z
beY//6F1Q27tEvv7YdlhxCkingUyZWWvntfvh4qDpWWfclkh9vTUvjbjfkjF
vM35qGzgX1w8sRPtB8Fc8ZsaUhxg+zMkLdisH/arTn64Hs4JmoZGdu2W/ZBW
/lnp6FcuEI3eZJE81A8H2drbd1zaBh+3/RfYcaQfFp2cTG0ofNDi4CQr5dYP
Q187RVdKBeBlisTgRc9+wDmqPNgq2A53hz/d7vTpB/Px3AcyY0IQLJePSJ/u
B3Z5T8rAhjA4+wcuhZztB+QPmb1gnygYlmi/6jrfD8/b/CnlF3cAi9F7ocvh
TDzqG5fk9SXgS3R8R3ckMz7PtTz++p3Q02YTKXO9H2zFFIRxrpLwhkdIKzS+
HzajLVgV+KQh2ZE22XOrH/Y6OD61+LgbIp5kpsveY9rFE6sHe2XBc8TXPiyp
H2L/fSoPmJcDpTM/auSe9oNXVHTRJVVFaI9vjNJ43g+rMrKHSu33gG/2HTOj
nH54dFRW62GcEmQNKRIdXzP5GFsuW5RXAdzy4uPjpf0wigQd932gCiMiTe5n
KvqZ90HdBz7b1WGnndtUTH0/SBYT2yOOaEJNgFLx3ff90FBZSIjg1wbXm0sX
Uz/0g5jr5+ihv9qQ3HTvX2kPM99iAW1zdl3QHnFvrSf0A5dM57f30nrQv7L3
dgeZqR9b5iiw0Af+/R9EPw31g0vSXauXPYZQZP9g6OunfpAmHxG03msMNoHH
X/we7wcnmbqmn09MIDHvjxr/XD/4ESXyXSoR2NPSuijxvR+COJ3N1E4CtH58
WKO41A+yit89sx9jsCWmZnZgvR9OBXjMbMaYQZbOCrfVZj/ci7ognH77IGQp
T/irspKgQ3eB0zvbHHDmZRr6nCQw/ZkS6LJhCf8NPNl+gJsEeeZF/fzm1jDs
E7WE8ZAg1KSsmC3TBq5G29TZCZBAzIg1RDbeDrr5tJ85byfB49iMdOkdDrAz
QzzGTZgEnaHSqRwNjlBTM3nQT4wExnKWr73znYDTondvoAQJlDwsfceeOoML
pZzn4i4S4I2vNfJmHoGlH9H913aTYE4/9cdgtyuYxvhVxsoyz/+ul9z++ygk
8R96ckueBGfmNlk2tNxAS3Xn8cdKJOB+aRKF0D0gpnYTeapMgi/JMijV3BOI
FlNyL1RJEKt6fYra7gVBvpXTRftIcOr7Eqn3ug+8W0zvKdcigXKKVo6E90ng
vX69pGY/CYY+FVEuW/nC62d2l1r1SZDjPnD9AuIHq6q6rt2GJHihMPNN+dBp
sK7bZUQ0JsHne0FiCv7+MD04vTGEkKCbEFTj1BkA+qcIY5+BBAFt3KsD/IGQ
8LOqbcqUuV84i0fz1DlQEIy989OCBLfl5H3czIIhJPNM0IoVM//Ql4Fv+i5A
i5qD44YNCWzzJHWWqy/CCSspMR4HEqzZ7ygxv3gJWsb5MZPDTP6bSpz1L10G
uajNwHPOJFAL6vzpHxsKE+XjLYSjJHj5cUxZujcczA5R5jfdSCDPz9i/xnEF
8qbaxbWPkyBuaO1Vr+NV8JMsDEo+QYJIyt5S551R0FH9NK3tJAkGjuxayUmL
hr2O/7X+PkWC2qLbbRJq12EmPnjnsQASrFoVB3BaxoK1jM/B24EkSLeb3f5W
Mw4K65yC64NIcPzb2olhhXgIXNBrlwohQUR171S21k3ovbX3h91lEvBjuZe9
bBJBXWGnZEwYCdYl/jR3XrwF347+vTB2lQSA214tMX8H7H9+yxCOYuqJxO99
CP6DN/+NdpjFkOC0rj6uPe8eXGj5IPUyjgTflFKeBWQ/BJJHlSUtgQQCrpI/
+J4ngfaf/BDuW0z8/+HV7l5+BEuqt7vO/kcCyyh9TlV4DM7tV5cy7jP9he+c
1fVToMr73O6+hyQw4in/lGbwBEIfO1zWTCFB8vl3jXleaTC4D8s6kco8n097
yjohHfS79/ckpZPArVAE86t7Csv/dsj+yiSB2TLfCexQJhxL47Ld84LJ15HH
41rFz6Fu/2qoaw4J6p+88f8l+QKu+o/01r4kwa4d7BI24jkwzEL48/UVCTZK
U/ZOzeSAybMmOckiEpxrjjftbs2Ff/054VFvSKCrKRQw+SQfYowDFExrSbCl
9eJdcWMhfKa421+qZ/KleTemcPI1YMGHruS9I0Gq5lWClUQxsOZpEjlbSKBa
0SbgV1AKvojcmkErCRyOnT03zVYGrXThPQHtJPArTNDhMyyHBP4/V3u7SfCh
u0DWq74CvhRM5//tJQFvRlB6cWIlWJgy+jUITL3IWwpEelYBV/g7pYdkElSH
GqYOK7yFO59jyUeGSRAe2fJNdE89xHUQ2yM/MvtVcrdtlHEDRBVL1eWMkuD7
U8bDTvd3cDHibdaPCRKcVbBqvdn4HgK92JLFp0hQpB6s0b7VBH4HHW8iMyTQ
uPQS/065Bdy2z577b54EH925bFbvfgDnP/onKhdIwDU6WYC3bAW7kTjnoR/M
fhQYaG7gaQN4JW2s/JsEFdkXXo++bIe9cJir7R8J2hLmiw+g3SCn9HxtdpNZ
H0kv4zHjHpDkm/smxEqGm+O+wRVoLwjQ4ynenGSIqPjQy366D7jekzpvcpPh
bw3vUxnmu4wlb3dDCQ8ZoiXaAp8y72W/g2uz1wXIcNpKuPkaUzffXThS5IXI
4Jsju2iKkOGridMtaxEyZKnN2ozPkmGEa/58qjgZ/nV0vD3hSoHWLJkDOrJk
iKsxi4mPpEFjwjlNd3kydKRm/NF1pUNNYJ38DUUy/JGeum5qyIDXBs7biMpk
eNzWfMxWZBhypV/8/a1KhiXZe2+r+EYgk+3bdykNMoSpTdseFfgIScSb1LPa
ZJiO+lShpTYKd6sHupN0yMArMVv8yeIzJGTINtbqkSHELy/dXX8MIvzrczmN
yTD7Vub3mYBx8N78diHHlAxWznucV3i/gNsX41PdB8mwOCz7bqXlCzj3Jh79
YUGGTFMVpdSoKbBIlUMQWyZep2xDhHMGNDRdeIecybB+ZCTK0mcO9u7I2dhy
IUNqReQfc6t5kFtfWNx7jAyqyNSskP43EO28RQ89ToaZTSVCldJ3WPd6ly/k
R4YoabnxYa2f4FT2X7aIPxkG7tU++VvzEwpZPDN3BJDhlYy8a77pErjm/Xu8
M4gM41lL+bSTv6D8KxIvF0qGSO/DZzr6/wCXieB1hXAy5F2oWlEPWwav/0Yj
91whg+BYQGS5zArwal6/pBJFhu9HXrmdjFmF05dbTmonkIEHczO4d+kvNLYn
eekkkkHagrHBe+AfiIifdNe7TYbj+YclrbZtQEsdq5PRPaa9ulvGpmITJDfN
MCyFDO7/kvOGZVmxEEdRnFkqGaRcQ69opbNi3dmThubpZKDFqRXoi7JhYQcT
tKwzyZDtKdR3XZgdI93ukDmcz+RLIe6uljYnpjz8RNK5gAwlu9YddZs5sRh1
f3GXQjIseN7oOuDEhakTuQTdSsiwppsqnBDDjSWKWm+cqCYDsSXsiNAWD/bR
b+fayRoydP47K+X2ihfTrfn6+1QdGdibyqr+OPNhY253vp1pZNb/tEmsezU/
diCrd+RCOxPfxgtWUvZ2LPlHBj2kkwzvNGMLzuoIYV+xc5TL3WQItSz9diBV
CEud5MNH9JFBpVzx96lTwtiiin3D9UEytH4eizLaIYoVVPWnP/xChvN2+3qO
UsQxQeHij43TZLB/sjmte0ICCw9OlJv7SoZudr7iKwsSmJUqUmi+QIafY/tc
LIV3YV+zimrX/pAh4+bWTbNwKUz17k3aKe4BEHSZO910XA5LnvGRfMQzAJRu
Z/TyWzls3Rzn3cQ3AELVs5EBQvJY79bS1E6hAWBb64sV6ZXHAsN8/hB2DsCN
4zKvDtspYiU+B3YYqQ0AI9Pkms1/e7EdTeJupzUGYJ9owvXo1b1YlNTSs2TN
ASi/17KL4a+M2dEKFRd0BoD3+VGP35Yq2MIhcd3cAwNQOaLpdXqHGqZp+NOJ
334AyOwy3gFj+7AKgVcPxy4MwH6xgiBbXl0snMb58WvIAKRtXaj4aKOL4V74
qfy8PADVAhSWjDu6WKe2wgfWKwPwuSmnLpFHDxs+8nxJ4QYTv23jyjtefYwt
47Hr6aQBCE/2+ci63RDr8l3KOZ88AGM7pstPORpi99SdvoelDEChm5bIm4eG
mPh7wVuJ6QNgtuCOm9tuhKmP3al7lT0AiOm+1BhBY8xl7w2pufIBaDsStff3
lgm268fomaXKAbgTNhRYgjuAjdYi1evVA9D3SM+V9eoBLMDmrx1f/QCcOHO8
7PziASw6KDxG48MAWLznaOgewmEFlUHjweQB+JPaG+ySjGLnruH3RVCYfL6V
7H7SiWLa5mqR16lMvh9ZVCivo1gDdUYkaWgA5HfpKKufAIy46mteMT4A6j90
gyWFMOzxhw9J9ZMDMGjR4ArKGOZ2V+7Thykmn4fYpP4iGDYhNRo2MDsArlev
CWkFYtgK6v7q188BeIy2Gzm9x7CjR0Qbf/4agHOCd6iPSRhWfYZA+vFnAO4p
rz70ncSwi0mm6/NrA6AW3db4nNsUI+b/FZz7OwB12Z+XuXaZYhr1bxW/bgyA
U3326B9VU+zruKr9F1YKYGl3a7xtTTHL5cmTE+wUEFng/UB1N8XyebPCxzgp
UBPj8KYvwBQ7qSuS/ZGHAixKMZ/1bppiLVZ91cN8FND9a5OWl2yKyXgm9jAE
KHDp1vqu+y9MseGE9aVBYQr41onM4WtNMaOn1dwUUQpo72Hhk20zxVJLg6XJ
YhT44rQ/6yvBFPv9QWV/vwQF6ldyS5QZptgR2oQFYRcFQltF7UbGTbHKuUwP
vBQF7h1SfsE2b4oJbR290LObAqUCt6iZv0yxPmV8eoc8BfI4C77tZTfD1HA3
S9sUKdD7cDxYjNcMu30YWj8oUeD0xScSoUJm2LTfGq1ZmQKUQU13M3EzzOJq
1fx7VQq832qoui5lhuXfP8/SqE6Bv3fWqtXlzDC2XGWxhn0UqI0IWrXYY4b5
1Iyr1mkx48n4KxOVzbCm3mdozX4KiA7tWGtTM8OkP7seqdalAO32PR3lfWZY
5K/tAZX6FGj7TChY0TTDGNy9UeWGFFALwxvoa5thhtIJj94YUyA2N4j8mWmn
aqMFJQco0KDy4PIK0/5tvtpQhFAgKItFJYppO7tX9hcCBRJeJXAHa5lh5eeD
vhSYUmB6pd2IwDxPMG7vWv5BClQqOCw+VTfDglLHBPIsKBBnlHBxUMUM6y3K
UMixosBRw1SeaCUzTKXZxfCFDQVuOl7YlSJvhiVSBO2eH6KADWsBn+RuM+zL
TLfPM3umXiTOum/faYaZ/YsLe+pIAY+4wDuhImZYjhByN82JArelu7Vs+c0w
FqWVrCdHKJB2bGkhidMM8zauqHrMvDccHk26ZLNpijXan+t+dIwCFpqnr4Yu
m2KSvkqfHrozz9uvjhf5bopdCf/88/5xCgx/ikCUpkwx2t2nXPe8KKA5/aSy
ZMQUS64S0L59kqkPTPq8TJcpttjVZZ54igJROIe3vI2mmMPHWPeE0xQ4ov+I
82K5KcbHuRx34ywFAsk7rIvSTLGEo6PUKyEUeHKW/mLrBFN/4Xk6uZeZ95qx
EZZbjqaYX1rAQ3wYk6/LCbXXUFPsIGPJWiaSAtGBVvXVkqYYmwd3Y1scBezD
8vif92HYpci+nQsJFODfGV/ZWYth4xmPwsRvUeD4sSrV4FwMaxmR0jr7HwWy
nW+VQTiGXffSzhVMoYC78i0PrZ0Y9j36z6ZhKlNP07Z/RLYA885qOH4ynQIH
1sKDZvsAQz+bi1VnUiArM+GpsD9g/3zcb7u/ZMYLETKeeIBikX5xwfk1FNhe
YjV7sBmHzSVY4Ql1FGA/pOSbFYfDPF7yq6w0UODnp6NHL1ngMOPp1HGbZgoI
c8S5Pu85gK2eKXb50UWBfw5sJll9JljYuUETkyEKFDsZ/zBsNcIuXtrLTfpL
gSKVmajaR3oYbjM4aHCDAoJGim9cjuhhPHdryYwtCgQHV4tuF9PDcnOsM8fZ
B2HExb52Nl0Xo5IC9//iGwSePPn3qbk6mIlW2XFx6UH470Wmz4sWbYyLeSuT
lBmEA6N0asZNbYxiie2VlRuEi3H2jlO22liQN3lRec8gVGMF/yZKtLAX93/d
NNYYhLs6Dlkuk/swjm+G5Z64Qfj07p8/a5gaRoq4IXYSHYTbvNx8v3nVsOfs
PZGnsUEIEUgK68xRxQykPCyCzQdhy/2Jq/iACnbWNmr4ut0gyMuOfytBlDFi
YQtHnucg7BUcOPTCbA+WoccT+Mp7EMy7o3NezyhiZ1qc+ot9BiE8TeVT1X1F
jIUx8bTabxDyGdfo+I8KmA43p1Zn0CBInwvzlbklj6WdtnGfjRqEWAohVG+X
DBa+kcm16/ogiGSVjNhG7MZcnixWWccOQn9mNlsrXRoT6kgTLLw5CKdCuXX6
Xkhht/dMt/k/GIQ/8z91JOx2Yf6NxiGpSYMQFFLm869xJ2bucl+mM3kQHrBn
8Whr78RYEvSuKqUNgt5C/I+w3RLYlck4zS8vBoFFzs9/p6gYdvQabUQ0dxCW
7F5KbU/dgemJqt05mD8I3zvjDxlI7cAWzciTuYWD8LL2og2Hhih2Nlf26cmK
Qagf5BOSOiOMeZxsZP/cyow/8+FIZDQ/ZrS2vUKwYxBKX8S2D7bzYeKPTnmj
XYPw68/v2tntfNhAC2/9c/wg4He32e2o4MFs5dyDPQcHYV/8hSRZGW5Mpa5E
6h5tEBgCHghbHBfGdZil5x1jEIxMmD+ZWU6s9forRalPzPV+7SsZHziwA5//
MIamBkGgXH82Mp0Nk4ywSeT5OgjHe95/GRVjw1YFn+sazw1C3EQVHy6VFatG
zR+kfx8EPxNhjYoXLJhGVvLBYyuD0PEunX6mcAN4DaYXE9cGofZHZ7E06R98
JRhn1fwdhFBzfzv2jb+QvzG2KsZCheYHOVRu/3WQ9tJ6M7iNCok7d/WfurQC
j7FRxXVeKhyaGxN3aF8G3j33n8oKUKFoq0nyjuQyrM3NJQQKUyH8gsr955Tf
QLtScJxFkgq/am/+xxK+BPaermQlaSqc9rnzWevrT2gHDqtDMlToWF5JFfD+
CZVcvjqpClSId5sWuuWyCA9TdvNoqFOhS2zMvnPwG3Bd6Ytx2kcFF5FJtrkf
8xBz/NrvcC0qEPi5RMyE5yFIYejzB10q9J0w3snhPwvW5Sk1x3BUEDdYxna7
TEPz44Ma0SgV7C/HfNr3fAoMIpZycjEqiIhxnTg7/wWU0MP3F8ypELxpjZ9K
nQS2Pj6/eHsqyGK6rhV7x+FqWcNQoSMV7qT55Q08GYPF5LOORCcqJAd+R/V5
xuCze5fJrqNUmFF+uPhy9RMcRcLLUTcqOJ2tMKha+QhEOaW9fh5UOPGwUzVk
cwQaZ+KEy7ypoPn7XJehwjDo4vffGvRhrtdQUP+MDkHRm7F/a75UoBSFFIX6
MiA9DP1qfoYKqosPGive0yCMfb1p+AIV3q7fqX/OnHPfpgv1WC5RoTC76htD
kAJ+vceKlEKpsD/kmuXrUwPg/Ojtk4tXqNB517P0/G4y9IT68aVGUiGdVXtF
LI4EmJto7LsoKuQfDauNoPeDpmxIEFcsFSIr51i+ZBDgJZvchHo8FZabBYUi
7/aB9DTxmNNNKpw5Q/NfjsMDX6nGwcw7VDg2MqGfdb+H+b7+uksnmZlP04mo
L2yd0HhHMl0nhYmf7fViDtYBSQw7cd1UKqRcnZOISWgHo/AKEb0MKsjJeaV9
2d0G/B2TSXqZVIjgqYyVvNwKY6Li2/WzmHo8P2zSSfgAdyoi+QxyqfD+5/rG
WHILeLOU3jHIZ/Jfc7mEa70ZdBw/cxsWUMGLzqLIwWiC4W8HOYyKqICZJxfz
ljeCmorAhnElFVb37r5P6q6DzXC4ZlJNhZeJ9mtuk7Uw0BGyZlJDhes2tSx3
OGsh8hTtz4EGKnwOSty2fOItOFRuC8U1UiHn+H/jH9KqQYH1wBKuiQpnjz5d
caZVAT7rxXeklQoc7/mjlvwrIXuBHIS2U2FX+lfdZ3UVEIrjmEc7qWCzY7YE
EaoA6eGAGeilQo+dhol/ThkEiemMmQ5QYTfvKdF1hWLA/Py8zQapMJHqtSYo
XQQ7qlI/mtGY8XgnpPxkXkPj4b+Mg8NUkKfHeeYgryDpxb5j5h+pML5h8GPF
vQD8vp+gmo9S4UOS+4NzMS9B4F472WKCGd9ORff5aB5MDC87Wn6hAsnSvmxo
Vx7UqKoSLaepwIITE9D2zAXvrvu9VnNUuPp6OPfAn2x4w3aszWaJChtGm90O
U5kQ53TH1PY3c/21eHSz5RkczX7XbLtMhe5nlo+jX2XAJiLXeGidClzP/l4N
e5wOA/ecTez+Mffv99s0Tk+DgpGEOrtNpv8SXs6/IBUcrs5W27PR4N+qyFLR
pxRQ6JbSdeCgwVSX/eQerhRYFneocOCiwVM23sFug8eQVV1Z6shLg0Nqj/6c
K3sEP35cK3ASoYF/+/Iu14X7MGhbHxS9gwYn3LD1nrR70PByWee1OA2ICq53
nhz+DxKPhzSzSNGg/1AVYXXuNgTVvLmpsZsGWfnT8rH4W+Ak/O2QmywNtB+6
i5jWJYJ0lz+jTJHZhy7n/kVVJwCbQn7WiBJzf92jLMG2eJiJGvfjVqEBzOVP
sX2Mg0odz5/eGjQIb1pzDVKPhfT7T2vvatJA2DW9SOLkDYj+Souu0abBmNfE
ZUW4DtZZTryC+jS4w6X3iv9cFGiuPSAZG9LgTZDjWsHOayDq0pd62pgGu2oG
ulSoV2GUx0rxPUKDjOOVOy5fiYB2v4TZr0CDlMG6MBHvcChq/lC2w4wGBpZG
FZaHwyAsDIcLsqSBZekNbTe3y+BBusqWbk0DsbxniYbnLwGmXtvdZksD7D52
o+xeCPCP73eVcqTBpK+CtznlAiwduCBl5USDRbsr9Nt2wUBPLRm/dIQGpsvb
dmTSgyDXTjm49xgN9vTOSarIBcLtV356y+40OFVX36T9MQDOs+Wuy3vSIJgd
tVV+dQaM6qRvXfWhwfss4wt2Z06DjKiH/UtfGvimW7SaHfcDjuA0UbIfDVgM
FH+9PX4K+hVFslXO0uBS/TOe6esnoTrG0d/lHA0ubBt5m5HrAxlD9zRunKcB
Y1dpc/iLE+D/kLueHkKD5ZG2/wYfeILdnPl19lAa/Nw6+VdH4Tjst4iz0Aqn
QZV9d+q3Tnf4t/6PnBjJ5NP9U7Kb6TGYcDVJr4yiwQOhDP/HYkehqzzCezSG
BnoD9wqMV10g2X9pTj+eBsjxaCHNaWe48kGr4uRNZn4r5b3YohN4SZ+PuH+L
BpEinHFWXE6gMjDDPvUfUx9jaYc4Ch1AcJ9Sr9ADGry8m3X7uJg9/Lrlm4RL
ooHTkaNJV1IPQRPySTolhQZXtkY1vUjWkJ8uOdmcSoMG2s25wFtWcPfXsdfz
6TSI+qw/1eNgCa6vB/QPPqeBMz3o2gU+c0i/8JjD9gUNroenqZUJHYRhfRfK
4RwaxAxIEUrlzcCnlXrR+yUNRoPukQf9MMi9nQqnX9HgQ0S6IrsGwJTDMcGg
1zT4GGW9Zz4HgcARRvHVUmY/Rnscn203gZKcp5E3ymjw5PHcM7eLxvDjjIfN
rQoa7BRnK+fWMILQ3yPTKW9pkPaGlmNI1oeahsy3z2qZ+kL3t7rW68HaDa+E
3Hoa5MibP1l4owsxAp/ly5n/uWJ9/RDxlv3QQnmxWNNMg2tXDyTFDGsDe4ZP
8/sPNCiyJW8JsGjD7b0TnvgOGhQQSbwaVA3o/ZarPtBFA+Xtsbr7vNRBoOrU
OqOHBriLnWyZK6qQDFNp0wQabLnESB3zUYZBzgL/hX4a2N+Y+ca5by9I9Pnr
/yYz7YDH+dPblCDT7esAK40G4xYTbKfnFWBU5nXONgYNCi+SK4sW5UF+6uzF
7cM0OGBvUhTCJg8FIfMCu0eZ82HPMV67ZBn4aljyUXGMBtHZy2Xza9KgvhlU
rDbB1EO6bqh4uBSU3/1ubTRNg9QjydfkC3fC0uEyCfhKg18BnbdVPCVAX+Li
tMUcE6+1jg23vDg05P2MP/KdBq3Le20EhkXh39lKZ49FGpA0byOlfSIA2pfl
Ty7RIP7e23AxgjC0N/5uCl6mgad5aJn87Hbgin97P2yVBmdel2m06gmCjU24
Z9Q6DWSVFuWnU/mBSF1Zu7PJnI99Ef/sM3hAKLOuO4mFDmUFfP+ijbfBEd+r
aWlsdPiHWoRtm+cCxvd1vZdcdJhf9RP4L5YDJN++Yy/ZRofRc4prBD928LoW
NVDJS4f6j4HLW0fZYIJ780KLIB0K7n77qX+aBfYQm9AuITq8sVhPLtjaRM+k
XBcgitAh7Od1SUX7DfSbHGvxiDgdTp/dh9tSX0c1Zz5cndhJhwMmxY9E362i
IaVx1rOSdIju5CeQvVbQZWOO6WUZOmwnER/ZD/9GBw7JRf+So0PrVzsjRu0v
tNQLt2NRgQ4NvKviFflLqF9sqNnsXjo4XjXRMHm9iGKPk4amVJjxFRkHfsb8
QKVfllycUKODt0JvtWn7Akrp/pI1okmHqZc7u1xT5tA3wywGDG06OF969q9R
eha9+02aMKhDh37R5ASkfgY1E3L9SzCgQ+8flrQLalOojEJIcq8RHdDAfTJ6
G5Pomu591S4TOpyJKnxrMDaBlh/rONaC0mFaz2XmOWUMvXd2/HsjRgf/XQE6
E+2f0TPXNm7Wm9FBdaqO5/2/T6jMC/3qSks6mMhIlL54O4yulzsdKrOmwy5X
S34pvSGU1np+otiWDsr90UfKu+jo/emXQi8d6BDfWhbdpEpFA1Y/vMo5TIeZ
u0Eqe5cpqDnvKJrlTIeNPfu/xFMG0H/7xM+nHaVD24mWbQ/ek1AG6HCkuNHh
kaLyN6lH/WiVk8OzJA86LKW+KD7SSkADwxJ77njTIVj4ES73Yi9qeSvXJ9GH
DpV3L9zgmO9G5Z82rcT50kFeTeeV7rUulNG4rBTlTwdTT540e0Y7Wk0UeX8l
gA51xvoNPHltaNKYpktYIB3ID8q/6F5vRa04zsQFB9NByMMgeXtAC6ogHr/r
3EVmfRSTkzanmtBN5RflZy7RwbhKwbpc4j1ac4g+6hNOB93Um1hMdz2a7PUr
zOsKHeRgJqHLvA49f2G7gEckHU54drEfoNegex5bHTgSQwfcXe2ZDuNqlOXl
qQHHG3QIMRN3fspdhY7UXD9rF0cHdcILB4GZCrSm+xmLTQIdtOMrbyrRy9Hk
4do0i0SmnWb2ZLq0DA3+RtE0u02HFajsVsWXorabPzrQu3T4TyS8+SxHCcqq
oPLb8AGzn/SxC6/aC9GPuub/6SXRId3Nkdxk/Qqts/BR2J9Mh18b8pwcky/R
lGNR9ftS6PDc5SlBLzkfvXg2/bBaKlMv+zIL5VzzULtr1TN70+nAerf90yu1
XFT5PilGMYMO5/xPP20QzkFHy7eVSmfRIbPgQqyUfBaKJ2rdM8+mQ7aVwqjv
3ky07tvRc0G5dGhXfLolZ5eBvuSNsU3Jp4Pl+LE2x6R0NFnlpWpjAR1sqjtO
bvuZil637Nv2pZAOOdZ702ODnqBBfr9m+IrpsHun5IIAawpqlW1acLyMDmJO
7hbqFx6hek0BN+Mr6FDCFcQxapGEKnx86FdcxdTXoSb+nhMP0O3rNQcpb+kQ
ZX16G5/bPfSfxKjC31o6UEqm1vQv3UVn9TnZFBvosHUQkVUouY3SjmiM2zbS
4bjWb3wP+y20/GHki4wWOvxwMXWlcCSgz0tzYlpb6SA8kBjVWhSH3sV3e821
0+Fohxou4UwsGjH7AyfSRYfEr7v/ZhvfQP24JaRNeuiw9rnKKARiUCcl9O9J
PDPfZzf2sO2PQtGDp4fvEOjgVlEteNciEt11vSp9iEyHg8lHTqcQw1Gu58MR
rIN0OCKLVK6jYejvBtZjqjQ68/3FEyDVexkdZ6gYODGY+7tf8hoFX0KJy45i
V4fpwLY6FvlGNQR9tyPid/ZHOvwW23b++58LaKFOFqV7lA4SF539rT6cR+OC
vz3aOUmHcVfB4daus+iFe6Ih2BSzHx90fOPZPIN6FpkcDpihg0HKDz/PI/6o
TfdJraRZOoSOmrCXdPihBtO3BevmmXrkC4riP3IKVeQoX/i8QIdLIzpuFWsn
USEFeh/3Ih0q9Pf8nK/1Qee9lP479psOub2REZOznijjml3g9WU6nJU7Qe0e
90A7n162ebVKB3ujs4YhG25oVW2GSv86HVjUszPCTI6h2dQP3Cv/6CAy5W2Z
luqK3v/1dVpmiw7ra2ST99td0EhhoU5LVgaUbCp0/8xzRl3svRNSORlw+sgp
kSPih1HTczdPNXEzwPBZV5XvhD2qeafEbJqHAdFPJufWWw6hUq8o8oL8DHhW
fliqoMMG3daxzmIgyAC18Kn13gUr9M+E/JiXEAPI7ZbJ/wws0QkWm+abIgxw
1LnjuZJljjbi0qKp4gzwb9OpXGs1RV97NHlu7GQA/8ZnTp1rGJp6ZeqAkhQD
vl3YJyz/BEXjU/ml7HczYK/i+t0Vbxx6sVp3PVSWARJzPwfmD5ugXgMeQ5ny
DNj/q3BSP8AItV2MrWtXZEAhxeknkmuAKmmQwneoMGC05Qs/d5guevFtpLeE
GgOGVrou/5LTQRtQJUtJDSbeQYfGnEltlKO7f99uTQZ0HJxMV4nQQh2cIsXk
tBnAkxP5A++wD00f3rOhoMOAy2VPfyYdUkcnTvV/UdJj4udg4eQ6p4qGh++p
VjdigEDmv1IWnr1oyxbxmaYJAxixp9194/egvHeuxu/HMaBhh12h8k5F1EVk
zzk95pR/KjVzNalDHs16RnQ2xBjwqu9M89odOfTrnqsmJmYMQLWO2dR2yaA6
bxQVEHMG7HPlLHmYJ412tlz5aWbNzJ/44ORK905UyFZxyMKWAab7OXHlAhKo
B4XQYm3HAPVoXkP8RTE03/NK4SEHZr6st2eQRVH0+5RCksNhBoTNIkZyd0VQ
owuECCdnZv7l3vpFOGE0bjXihIsLA3C8sX/3cwmh4nwETQ83BvAJizngyvlQ
n5QIcS8P5vmuVjcD3vGgRbsVNk94MmCtzCvp8Cw3+rugb8rXmwHbZr7Q0gy5
UFQ7gnDahwHEO3ksvPkc6O16+bcBvgwwk146mq7Bjg6Y9WWe82NAv1bJ4WP9
rKi/q3xQSAADpsYep9TUbSLlo/gjoYHM+kr7OfYm/kPWz4QfiAhiQM4C9tc2
ah0x/ymnGBnMgBuV59ZiU1eRB5F43uiLDFj8/uLGzMAywmAPX7p+iYnXwCJR
VusPonBfbjgulAGu84+Glwt/ITUvwl7fvsKAJVPuuUsLiwiLqtyj/yIZINf7
cW9fwA/EtrL3yoMoBqhuLyiUV1xAUg6E+TyKYcBDdgcxItc8Mtoua51ygwHX
ko7CD6FZRMWhVystjgHWIrcvUdEZ5BI9VCIjgQG3XHlEWR5MIVxzPdMvbjP1
8efa7GriBHL4cigx9y6zX1Y1/j3RGEcy/snUvLzHANtnCh9kaZ+RLzd7nhc+
YADn2n1Ru9hPiOb20JvFSQyQ7cqnnT82glxJlzn/JpkBw0P1zddch5BW+R6X
ihQGDI7znsm9QkeO6snsqU1nQHeMOs8XxUEk+303X0MGA1Y9y6YtXg0gc5aX
fzVmMvW979Jua0syokfaPdKcxZwX3wgTXzb6kRj37tbWbAZIJvcPfc4iIN0T
l4o6chmwxaE1vzMIj4gE7U7uzmfARc1nYqd9e5BXMZdOEgsZ0PK7vS6vqQNh
26Hy6F8RA04+tRnt32hDvF9/alErZcDGo3B44tOKNKCPF93KGKD8X2PEvi8t
iNigtdytCgZYSaFswvzNyMWzm45vqxjwol8EHt1qRPo2q65PvmX2X/zH/dEG
DUi8quxnaGDidddZ75CpQUabBgWDGxmQ9aorav1wNWLichfNbGLq3eRjFFpY
iaTOQnBvCwPuTH9yfilfgfyM+fN8tZUBuwotmlZDyxC7HcWEvR0M+G9rDe6P
lSCFr302XLoYEB4pYBQSW4ScGMR7VuAZEHwLs37gXIA0nI2995nArIfvg/tW
1/IR8S2DRgESAy6EG2iZ9+Yil1K+zR8YYECprNinMFwOQlDNlQocZIAG97yn
RNYLRKX52KF0GrP/rsUQhjczkQQXgWudDAaUT7mpB6dmIAeuXxlW+MSAgZlE
rMUtFUndocnr9JkBNoVJF6uvpSBLryeNr48zYExDw4DWkYw4wNOzpZMM2Bw5
ub6u+wh5PejwdGSKAaFhInIhiQ8RjkCOHp6vDAjwdHZvGb+H+GzVrxrOMeDN
ffqtX6F3EQk1JbeU7wy4GpTObbA/EbnUPHyrdZEBLq/eF6HOCQjRJal2cYkB
+fdHh7c/i0PU5ixmZP4wQHDPo66AbbHIzet/xe1XmPOjR+1AmuZ1ZGxHheW1
NWb/0U+HL96JQnBF/uGv/zKA5caTZ8TdkcivQTKVk2UIdMdye8c/hiEOgbc4
9diGgH6OdWty6zJStIXT9+UYglvUq/XLtpcQridLfklcQ5Bwpyexp+EiclKt
MKVp2xC8mJznzU0PRhqbvdq/8f7fv+N93No5ZKer6G9JgSGwFtY9LvL4LBI6
161os30Inll8znrqcwbpvx5zJEJ4CPjLOGTbvU4jamJ68S9FhyBk5ql7euIp
JLFotpIiNgQngl54X6SfRCbgxQTrziFIavu8/ZedD4JQXUS0JYfANPM9Rarb
C0kP5DXzlh4CI9Gk1FHd48jvreaQezJDsGdj9SQbww05/CQsp0FuCA5+NX/X
XXYUKVZTJ39VGIJ3A2nd9BoXhKtljEVCiYk39aO0zqwz4uuaqm2hPAQLfRvq
WgedkKa5Qz6XVYdAD3Gp/hrniOy6wZqUoz4EpxTpup8+2CGhYrXN/fuY/opU
qaeILUIqCvqxoTUEJDMDy6VFK0QDU5DV0BmCtOVUo310C+QWle7gocf0P5ln
/18D5R4Odf5HcUS5pHULSS3rlkvMNJNkP19vFOWSS21tpXIrhhRaLI9axiVC
WhZZMWGHtX65LK02SvxCsrFdJJ8Z5rsuQ4yNkGHC7Px9nuec5zzPeZ1FwQHC
fkAlLdAaA/WQlnPXIUdiecDlSZgNBivvVXZrpz1R/y5JGG2LoYvSGOTQZUcw
BlusEhCGsy+gqM8WEXp4MTjdDkOtQ/TtxPH9BMa7S3PsMeyX6dZVfbKPcOXe
VWEfxPBGnprlK6QRMkODh2ucMZw4enndxGMP0TKkymw6jMGo7He5wWcUImrY
9eETVwynjp4utnlqSVjwkj92u2NYLDgY0US1IMZ5j0xfe2CYUnvK8hswJUrI
T/5cLwx4RGzz8p4JsWUk+PW/32AYLGB8qUcaEF0jpYrCExj++CFzCtO+IhJG
saPUKQyOWk/jxf/TI2zG1OIVfDBcWMhnnbixk5gbc2tUO4vh0q06l+Cl7UTV
eIpguy+GhNHwDLeibYQf/7GBkT+GTpc5h+QILeLVhFXevguSPKah/4Nf1ImM
ScYL+2AM5fe4PzNWVAnH92WyriEYrL08259fUSFE7zno2EUM69TdQS+3bSEa
ptSjz1zCEKfNuL4jQ4kInXavuRCOYaGhuYRJVSAMBKn8y5ESPlyIgItKm4gh
QeuO2O8wTE6ZmvymLkfkzQiPM6MlPA0Y7/J33kC4/0vJzvgew0e6SaRiqTQh
9yGk66c4DGEVlSeCdkgRrR/K14vjMQjfTfEXY9ZQzCzXuvIahuRLrkhzVoQs
5zTC6xIw7KTI1lqwltHk3JFf/2Ri4N123cVKWEKlH6+T7ckYRgUbpqm3FtHJ
+Sdaf6ViuJHDLpB/Po9UFpY9+9Mw1EuTgjzTj+j5AjV9+AaG7aEFOmY+syhp
MbRtIhMDK8XrvjZ7Btl++mV59iYGi9zslPhd02j+0xBl5ZZEN1bTOzI2iaqX
tobI5GLQfueIFv7mowChR5lSHganCJ2RvdNjaPtyGtYowKCUXuW9z3IU9S+3
qe4sxODJKC4OK/wHZa2suJgUYYgRv8re7cZDB0V7kijFkv1FuXwRV8FFq6KL
zftZGKr/Slw/bIvRpdVhM/dyDOfl3bsF4n7EW/O8c64Sw+P8SrY49hXyFLcr
RVZj6LVadaWr9KI2KfrV5FoJz1s2vjU17Uax0pfuZ9VjGOPps37Y2IWoMpUz
+Q0YJlrkH+Wpd6DyDdpnq5owwGdK4ei9NvSeHuLLbsWgmS0nSjd6gCyDmv1L
uzAU3mXYsBXqUWKDR8DdbsmfJMgeLXOoQa/WRwNYPRjcVktf1tZWo6jbSueL
+zD4yO55+NqqEjV3nwkqHMBQodvYEcBmoc1bPwbdHsSQlU73WJ65g876pwYX
cCT968tlUq/8jKRENYw8HgaG4vrjt1/mI2dzceiPExjU/lZm1qvfRG9uloWn
L0n4a8yvMGbEI0PO3oi0Zcl/1kt9CJuNRTHGPRHXRRiYWcIo47oYpPNkPjJl
HUNmxdKxmI4ryG/uQFTiRg5kCko+kFUhaOboRGysJgc8VXsuC4a+RbLa5kkM
aw5Qvew7BfvpKDiipyfXhgPOyqrHAih7UE93iPpjWw6EpgecHjpNQT/GVbFV
gQNl4Q595eFmSJdr9Kz5EAf8mPn6IkIf0Vl6m5VPccDqZOdeGzNldN5Qs+D3
eA40IrNGT9/xrzsp0tWiNg7Idr63a9bI/bpdr2Hew5ELc0qf5Hr95mx1txrb
RfdxoTuA38GXp9u2zoaVKp8cAunZ8keHLSL33ynLNmAMDkFS//rOyPx6m4Fv
v/stL3AYzOzu+zhdeLPPnb/HK5k/DNr+pHnJisha4VSn8vh5HlwtedTQ7rLD
2uiVTp/mLA/sc2xPTnjp772q51anFEEC5/W15U1iM7rveGii2xUSPke45qYe
N6Y7VmV4Z0aR4KksVEuI+4ouT+lZUIwjIZubU/fAaRs9H1xsFJNICNo8kVhz
ZxO99tyhdvk8EqYfKqc4xY7TRooPvJH7U+LnC2/NpVi0Dr9AtlMzCeYsNY/u
pkJalWFydOojEqpmdScpPnm0y/f+ryXXToL7T0euahRn0kQtDmdke0h4lpX4
4P3pOJoGF/gyQyREpHCZFDhOE7J8mxx5JCTFCItMvvemcQIS0pL+IUFxJu1a
/x/utNLpVlMZPgn5pyyjzAIP0HaLiMvSH0go2G3YafwrlabSehYc5kiwss8P
erFmQVtkXlNhzpOwZrD0RWGvCa1Z4XGDlJCEyEG+qZaiHq2kdyjZfoUErxZr
77fHdGiJOavfJH4mwZ7htulh0VZa4HFd47Y1Es7JJlgLHqrSnLchoVgs8e/V
51dvVab9Bytz5t8=
           "]]}, Annotation[#, "Charting`Private`Tag$59650#1"]& ]}}, {}}}, {
    ImageSize -> 300, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.092, 0}, 
     Frame -> {True, True, False, False}, FrameLabel -> {{
        FormBox[
         TagBox["\"Probability Density\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"fat frac.\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], PlotLabel -> FormBox["\"SNR = 30\"", TraditionalForm], 
     PlotRange -> {{0.1, 0.5}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.476], 
          GrayLevel[1]]], 
        GrayLevel[0]], {{}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.476], 
            GrayLevel[1]]], 
          GrayLevel[0]], {{{
            
            RectangleBox[{0.2733333333333333, 0}, {0.2866666666666667, 
             1.379999999999997}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2866666666666667, 0}, {0.30000000000000004`, 
             32.699999999999925`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.30000000000000004`, 0}, {0.31333333333333335`, 
             38.64000000000007}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.31333333333333335`, 0}, {0.32666666666666666`, 
             2.2800000000000042`}, "RoundingRadius" -> 
             0]}}}}, {}, {}}}, {{}, {}, {}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$60926#1"]& ]}}, {}}}, {
    ImageSize -> 300, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.092, 0}, 
     Frame -> {True, True, False, False}, FrameLabel -> {{
        FormBox[
         TagBox["\"Probability Density\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"fat frac.\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], PlotLabel -> FormBox["\"SNR = 50\"", TraditionalForm], 
     PlotRange -> {{0.1, 0.5}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellLabel->
  "Out[236]=",ExpressionUUID->"548b1995-b8f7-4240-9655-221990367715"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.476], 
          GrayLevel[1]]], 
        GrayLevel[0]], {{}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.476], 
            GrayLevel[1]]], 
          GrayLevel[0]], {{{
            
            RectangleBox[{0.16666666666666669`, 0}, {0.18, 
             0.030000000000000054`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.18, 0}, {0.19333333333333336`, 
             0.029999999999999933`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.19333333333333336`, 0}, {0.20666666666666667`, 
             0.06000000000000011}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.20666666666666667`, 0}, {0.22000000000000003`, 
             0.41999999999999904`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.22000000000000003`, 0}, {0.23333333333333334`, 
             1.620000000000003}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.23333333333333334`, 0}, {0.24666666666666667`, 
             2.2499999999999996`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.24666666666666667`, 0}, {0.26, 
             3.8699999999999988`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.26, 0}, {0.2733333333333333, 7.050000000000013}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2733333333333333, 0}, {0.2866666666666667, 
             10.379999999999978`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2866666666666667, 0}, {0.30000000000000004`, 
             10.709999999999976`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.30000000000000004`, 0}, {0.31333333333333335`, 
             12.240000000000022`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.31333333333333335`, 0}, {0.32666666666666666`, 
             9.720000000000018}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.32666666666666666`, 0}, {0.34, 8.009999999999982},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.34, 0}, {0.3533333333333334, 4.139999999999991}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3533333333333334, 0}, {0.3666666666666667, 
             2.5200000000000045`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3666666666666667, 0}, {0.38, 1.2600000000000022`},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.38, 0}, {0.3933333333333333, 
             0.45000000000000084`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3933333333333333, 0}, {0.40666666666666673`, 
             0.14999999999999902`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.40666666666666673`, 0}, {0.42000000000000004`, 
             0.06000000000000011}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.42000000000000004`, 0}, {0.43333333333333335`, 
             0.030000000000000054`}, "RoundingRadius" -> 
             0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
Q24=
           "]]}, Annotation[#, "Charting`Private`Tag$61935#1"]& ]}}, {}}}, {
    ImageSize -> 300, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.092, 0}, 
     Frame -> {True, True, False, False}, FrameLabel -> {{
        FormBox[
         TagBox["\"Probability Density\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"fat frac.\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], PlotLabel -> 
     FormBox["\"B0 = -60 Hz\"", TraditionalForm], 
     PlotRange -> {{0.1, 0.5}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.476], 
          GrayLevel[1]]], 
        GrayLevel[0]], {{}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.476], 
            GrayLevel[1]]], 
          GrayLevel[0]], {{{
            
            RectangleBox[{0.19333333333333336`, 0}, {0.20666666666666667`, 
             0.15000000000000027`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.20666666666666667`, 0}, {0.22000000000000003`, 
             0.449999999999999}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.22000000000000003`, 0}, {0.23333333333333334`, 
             1.0800000000000018`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.23333333333333334`, 0}, {0.24666666666666667`, 
             2.999999999999999}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.24666666666666667`, 0}, {0.26, 4.229999999999999},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.26, 0}, {0.2733333333333333, 6.840000000000012}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2733333333333333, 0}, {0.2866666666666667, 
             9.44999999999998}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2866666666666667, 0}, {0.30000000000000004`, 
             11.849999999999973`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.30000000000000004`, 0}, {0.31333333333333335`, 
             11.61000000000002}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.31333333333333335`, 0}, {0.32666666666666666`, 
             10.290000000000019`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.32666666666666666`, 0}, {0.34, 7.799999999999983},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.34, 0}, {0.3533333333333334, 4.58999999999999}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3533333333333334, 0}, {0.3666666666666667, 
             2.1600000000000037`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3666666666666667, 0}, {0.38, 0.7800000000000014}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.38, 0}, {0.3933333333333333, 
             0.48000000000000087`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3933333333333333, 0}, {0.40666666666666673`, 
             0.14999999999999902`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.40666666666666673`, 0}, {0.42000000000000004`, 
             0.09000000000000016}, "RoundingRadius" -> 
             0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
X9/KPOyAzOMcS3OvVWTtzdIbm5504J+w2mLN41Xk8aRw3Z3POmC6JoJpVbGK
fDoo134gowOqHxqO9CznJcVMbEZ933VAYj0zffcDXpJXvUqIPtiB7IKadTll
fOQ1H6MiE75OhDW0mVwXECCPGUiK8Jh14vzmTe2aiYJkODOgy4LaiXG6l/mt
ATFy0b4kVeBkF6hqIQNeoevItPyO+DsjXfBMceuaHZQl+ddkDZWOdWEp0up+
6ZgsecU9RObL5y5IjLlW+n2XJQ02aKfrTXXhFS41TPPKkZ+fZhb+muuCuovH
3FnIkRtuBfed4O7GK9NR/7pkOTLbcbfwThXWuTakdmjFcXlSuFzUxnlTNz4e
/V759Jw8eUPy2+MY1W6oLmuy23BNnjTpS5eb2tqNJjeXEIloeXJqv6hG8u5u
NHRc/nOqTJ5U3TF7kNe0G0JqN47HiyiQeXwv7rz36MYL103bDpUokFf6uIY+
e3aj87DDyuBaBXJP4knl2Yvd2LmRk57RpkDWq8lWsXt1Q/1MIn8TU4GkWjz5
JuvfjUu2Eq/tlimSHI/uWTlHd4NbMC8j30CRbDj+7dm5mG7kK31s/3VAkYzc
eHD6cmw3uCrWG6nZKJKiZfyhIfHdqCt06D13SpHc+D686EUSK5/t0r7KYYqk
paK/5JfcbqhJTE8E1yqS4l8Zrt9ed2M61PJKXYsiySjULlgsYPHdFVzzvVuR
PGX022TVu24U3buxT2pYkfRxu+K7qaob4U/5jR79USTTXrsNu3d1o+CQZO02
NSXy7PWWzVcp3WhusXI5vF2JVNNT8fbr7cZds/XWJ/cokcW9nwSjB1njAlqt
BoZKZPvCcb284W4o5kekqBxTIucJ2xffZ7uxu9M6yDRciTxsIVQ6+70bkgFT
ATJRSmSBa1vn17luzDduM3gfo0Sej9ZZnPjVDXHzdKZCghL5eXiD6Qg7BZuW
/pg3vFQi9X9+dPqwjIKUjol7//KUyNSVT6+856JA5mqYgOxbJdJJQzBpiIeC
/iMiFzeXK5HUoMVvPWso0JR+zGfZpkTufFjATRGiwLmMZjLRqUTGvXSX6hKh
4MVd8b3uPUqkRd+HfW3iFJxvKBPdQVMiW5Va4uvWU7BLua6g+5MSqbIn+GWN
HAU2R0o4678okWHmqK5SoMDgjtT91Cklct+1/ImyDRRkCD2C3Hclsrz5MfFW
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
m9PWF98zv7TERIT62plnMnPa/wOOPKvX
           "]]}, Annotation[#, "Charting`Private`Tag$63022#1"]& ]}}, {}}}, {
    ImageSize -> 300, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.092, 0}, 
     Frame -> {True, True, False, False}, FrameLabel -> {{
        FormBox[
         TagBox["\"Probability Density\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"fat frac.\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], PlotLabel -> FormBox["\"B0 = 20 Hz\"", TraditionalForm],
      PlotRange -> {{0.1, 0.5}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.476], 
          GrayLevel[1]]], 
        GrayLevel[0]], {{}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.476], 
            GrayLevel[1]]], 
          GrayLevel[0]], {{{
            
            RectangleBox[{0.15333333333333335`, 0}, {0.16666666666666669`, 
             0.029999999999999992`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.18, 0}, {0.19333333333333336`, 
             0.059999999999999866`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.19333333333333336`, 0}, {0.20666666666666667`, 
             0.15000000000000027`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.20666666666666667`, 0}, {0.22000000000000003`, 
             0.5999999999999986}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.22000000000000003`, 0}, {0.23333333333333334`, 
             1.0800000000000018`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.23333333333333334`, 0}, {0.24666666666666667`, 
             2.579999999999999}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.24666666666666667`, 0}, {0.26, 4.709999999999999},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.26, 0}, {0.2733333333333333, 7.0800000000000125`},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2733333333333333, 0}, {0.2866666666666667, 
             10.139999999999977`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2866666666666667, 0}, {0.30000000000000004`, 
             11.219999999999976`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.30000000000000004`, 0}, {0.31333333333333335`, 
             11.790000000000022`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.31333333333333335`, 0}, {0.32666666666666666`, 
             9.870000000000019}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.32666666666666666`, 0}, {0.34, 7.589999999999983},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.34, 0}, {0.3533333333333334, 4.37999999999999}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3533333333333334, 0}, {0.3666666666666667, 
             1.9800000000000035`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3666666666666667, 0}, {0.38, 1.2000000000000022`},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.38, 0}, {0.3933333333333333, 0.3900000000000007}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3933333333333333, 0}, {0.40666666666666673`, 
             0.05999999999999961}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.40666666666666673`, 0}, {0.42000000000000004`, 
             0.030000000000000054`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.42000000000000004`, 0}, {0.43333333333333335`, 
             0.06000000000000011}, "RoundingRadius" -> 
             0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
8eT/rUDvTlr9vYPmWNZdslDBXgmOEbfW8XhzFAZ0f2viqsQbDukzSkPm2Dyw
oobJW4k/u2+b+109Bu5It6srpCqRXrWYFFVkgZpf2ybMiUpW/UjMkjl1HH5P
DwzYaVei/gLnpcuVx7HjoH2jm24lXjJ+D42st0bq85i0awcrYfhNPkiu1xoB
VjO2abaVcDrHO2RtZQuyvPDDzLVKHFxmxu3ebId5d2rJUkAlIhRsBpU47JEt
Pv5iZWgltlXIWj7cbY8NF9aHrY+sxG/dz6XnX9jjn/wNUiexEtnlQe9O3HNA
0W2dN7Flldj/OH/y+21HnFe3TXxSVYm7yQq+m1sdofjFOyK9rhI/XCfdlASc
8JBIdy3+UAnO3U+9Hj9wwqWpVTJDzEpsLBtad/idM3Yda4tRZatCuonYiISQ
K/jXLfHHclax8ujdjQpXV4x93Br5i7sKt/OyNgdUuCLJ7fbt9wJV0N2/RfjE
RTesvqYbpCZbBaXWDWu/fj2Nj6nFXpq6VfiwQbDceKUnilzHfj4yqML4vm/s
mhc8EackcX7xYBUcuzMN/RieMMz38Sg5VoXildXuwdZnkduk4gLXKmzzjsp3
xDncnk632BdeBSF6yQ9i0wU45/V0p0RVwWr36/gPpy6A9FtuxnmvCgIBnPFb
Mi9glsvxSM3jKmzJuPnXdNtFVv/cYKD3ugqrLXddS97nhV3kPU3DjiqsOn/Q
zTbOB/xc1QUvuqtgvPu5L23IB2MN02o8tCqIev/naLzjEpJMDu9o+VyFuKqS
DonuS1jtsnrroZkqKI9+k3sh74uPEf5SJmLVuGO56ZjKnB++jzhvTVxXDa+x
opMPTK9iQcdoz5h0NRa0tA9L5FyF8L+1VoGbq6EhNSXofeEa9Dyy7uXsrkZW
XpbvLNsNvDrYwyNsU41fF36zWWT5oyizWNLOvhohfIqrHg35o355smKWUzU+
dqu4BK8PwKdS9wP7Parx88TuA8eiAyCybVnQxevVGLP73CLjHwi/NVv/dD6t
hmNnDA97YDBunhZctTGtGru0XCof1AYjrm5O7ExmNcKNXG7PrwpB9vXKXVw5
1dgcEveSPy4En38cO7+zuho7hLa8GH4fCoO2gJF7w9WQav26d63ULRzbcmp+
cLQaKRq3vgt73oJjmPEKpR/V6H1T5Pi3/BaukWLytXPV4A9QMr3nchtvsl/a
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
           "]]}, Annotation[#, "Charting`Private`Tag$64081#1"]& ]}}, {}}}, {
    ImageSize -> 300, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.092, 0}, 
     Frame -> {True, True, False, False}, FrameLabel -> {{
        FormBox[
         TagBox["\"Probability Density\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"fat frac.\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], PlotLabel -> 
     FormBox["\"B0 = 100 Hz\"", TraditionalForm], 
     PlotRange -> {{0.1, 0.5}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellLabel->
  "Out[237]=",ExpressionUUID->"17200fa7-d416-497f-81ae-2b32a99ff8d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ErrorPlot", "[", 
       RowBox[{
        RowBox[{"frF", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "frs", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Imposed\>\"", ",", "\"\<Fitted frac.\>\""}], "}"}]}], 
        ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", "\"\<fitted vs imposed fat fraction\>\""}]}], 
       "]"}], ",", 
      RowBox[{"AspectRatio", "->", "1"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ErrorPlot", "[", 
       RowBox[{
        RowBox[{"frS", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "snrs", ",", 
        RowBox[{"fri", "+", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<SNR\>\"", ",", "\"\<Fitted frac.\>\""}], "}"}]}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", "\"\<fitted fat fraction vs SNR\>\""}]}], 
       "]"}], ",", 
      RowBox[{"AspectRatio", "->", "1"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ErrorPlot", "[", 
       RowBox[{
        RowBox[{"frB", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "B0s", ",", 
        RowBox[{"fri", "+", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<B0\>\"", ",", "\"\<Fitted frac.\>\""}], "}"}]}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", "\"\<fitted fat fraction vs B0\>\""}]}], 
       "]"}], ",", 
      RowBox[{"AspectRatio", "->", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
   "}"}], "]"}]], "Input",
 CellLabel->
  "In[238]:=",ExpressionUUID->"e9c3029c-e293-4798-9790-fdf3c938956f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBwBWIQjQ5mzQSBnfYGvDvvfHLfaQ/hn7Tv2Z2lbrL9pL2J
MQhctn+SJivsAaQh8jftW4Q53Zz33LSHmPLAXjS0+4qTwAOo+sf2XyT/BigG
P7ZPTwOBZ/bT27V2TCp8BtX/0v7OKbvPXate2p89AwJv7D0viiyu2/8Gat4H
+wS1lsKCR+/tcbl3Rq1Z6Ifzm+Du9ciavGFK8TG4e3veKWVG77wId++JxkkC
6rY34O59sNzfjaXoHty977I3POfPewR372yz59V7W57C3StrnvWtY/ILuHuv
7Z69lbP5Ndy9yTrButMXvYO7d8Ff3vB8/Zn2MPc6aESdX3lgP9y9FrzTVA7W
nYG7t2p5wbRn667A3SvX/+xNg9FtuHuv2GzQdL+PCF+x1L+X/+o8gbvXR3Xd
Pauc53D3Gigu2LL9/Cu4e2Pnyl1+KPIO7l4YffZrnuuGFwVwd4dY1m6Xl50H
5++Zb2jduQhdHxCs5lK7nFW4f6ikH4eSrYmSkfP3j6Yf6qSf7spFDeu3fbAH
ANSa3cE=
      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          Opacity[0.2], 
          RGBColor[1, 0, 0]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{12, 35, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 33, 
            36, 32, 31, 30, 29, 28, 27, 26, 25, 24, 
            23}}]}]}, {}, {}, {}}, {{}, {}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large]], 
         LineBox[{34, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{35, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22}]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
          36}]}}}], {{}, {}}}, {
    AspectRatio -> 1, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{
        FormBox[
         TagBox["\"Fitted frac.\"", HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox["\"Imposed\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
       True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"fitted vs imposed fat fraction\"", TraditionalForm], 
     PlotRange -> {{0., 1.}, {0., 1.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQDQEiDmbrT0hWCV+2h/BVHE7lrGArVobx9Rx+ZXYz
fNCG8U0cHhkev//AGMa3dGAJVajZawPj2zk8Mo+/vMwaym9wdLhwWsKnxwEm
7+LA0f7ijB1c3s1hTcK8r0fg+j0dnhj/i7tsB+OLOOTIPpf1cLgAd19UX5JR
wImLcPf1VbGwWZpfgrvv1K5PJpWll+Due+N9a83P1Zfg7vtz5X2hw9FLcPe9
UkldH3PjEtx9x4w63OSeXIK7ryWTz9z55SW4+zYYZx0U/nwJ7j6DFYxBj/5e
hbtP58DnRXcmX4G7b959dS9WmStw980KXzMp8jMi/Lhq3jA9uIAIP76oA7wW
OxHh90lM97XUEkT4eeS0TC2ajgg/J3bPyVF9iPCTmq7UV92OCL/R+B2e8QsA
73gSfw==
      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          Opacity[0.2], 
          RGBColor[1, 0, 0]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 30, 29, 28, 
            27, 26, 25, 24, 23, 22, 21}}]}]}, {}, {}, {}}, {{}, {}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{11, 12, 13, 14, 15, 16, 17, 18, 19, 20}]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{21, 22, 23, 24, 25, 26, 27, 28, 29, 30}]}}}], {{}, {}}}, {
    AspectRatio -> 1, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {5.000000000000011, 0.20000000000000043`}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
         TagBox["\"Fitted frac.\"", HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox["\"SNR\"", HoldForm], TraditionalForm], None}}, FrameStyle -> 
     Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
       True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"fitted fat fraction vs SNR\"", TraditionalForm], 
     PlotRange -> {{5., 50.}, {0.19999999999999998`, 0.4}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJztk/tLk1EYx9+MvDVIc5EZVl6oWMZUTErLHqmIhY15zQ0cY2VESUrRD+Uo
c8ykNG0qqE0xM1dazdQwVORUkyy26M237AIrFQXRgn5I0nRkl/f7T+SBw+HL
9zy3Dzwh+tyUbA+O484v3N/v36Nm7hKj43T44O4/siCD6bUX5g9v/Ke5NKYp
qvOzirogmXmqfy5fkSj6SmbpXBk1tl/UCnbcdHN+bJuo9zLXKqepMEbUCaxh
eL1xFP9jmCYq4PJErKjDmeDPl41HiJrjLH0bIt2R8KnQd+1sqBzxNOJRPhsS
j/wUGNbRdDIE9Wnglb/tPfIp6LVPqsklQ//UGNayK1iG+Uhlzq7Vof802lx1
pj5rK/iQJi9Xej1M9NXU/dJS8hT51Wx7e84V6uLBM65YSPvRz4Nn27rJj7fv
8eD5dfZJp98HHjyjA76X217w4Pn54Fu5hPHg6b2645yhkwfPDGVgQs8AD55+
/dI3cuhwdnXZpYzcbh48q7t2JmX1wCepXrJ0rBfxNBdfGZfkQH7iEjV5xj7U
p5QlqdcCbeiPcpwjMw7UU5LZmmdU9mM+uh+syL9ox/xk1zni1jwDH8osPHVk
CL6amt/lczL0q2aeQY/08XcF8GwMndyyqUEAT+/S6TlVsQCeRaNn/Q2tAni6
T1gjPkErWLutRjdTLYDnuOnxRHSNAJ5B0226dLHeAk/tw14vZ4UAnuST7HTf
EsCzstSga2mET5Ipr9a2WsST224+JuB/AlXucUnkFtQnu/F5gLYI/VH9PqtH
DHwlNU8N22VlmI9U6bEVTXcwP7l3fLnh8wB86Oihbwd8qwTwnM4cGRyqg17c
98V9X9z3/2DffwE9C2qe
      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          Opacity[0.2], 
          RGBColor[1, 0, 0]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
            35, 36, 37, 38, 39, 40, 41, 42, 63, 62, 61, 60, 59, 58, 57, 56, 
            55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 
            43}}]}]}, {}, {}, {}}, {{}, {}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 
          37, 38, 39, 40, 41, 42}]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 
          58, 59, 60, 61, 62, 63}]}}}], {{}, {}}}, {
    AspectRatio -> 1, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0.20000000000000043`}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
         TagBox["\"Fitted frac.\"", HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox["\"B0\"", HoldForm], TraditionalForm], None}}, FrameStyle -> 
     Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
       True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"fitted fat fraction vs B0\"", TraditionalForm], 
     PlotRange -> {{-100., 100.}, {0.19999999999999998`, 0.4}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellLabel->
  "Out[238]=",ExpressionUUID->"a061eaf3-f304-4eaf-a97f-019871872ea6"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ME-SE  (TSE) T2 mapping", "Chapter",
 CellChangeTimes->{{3.7548951014856977`*^9, 3.754895112634607*^9}, {
  3.75489562596196*^9, 3.754895628456525*^9}, {3.7549025592745514`*^9, 
  3.7549025710189853`*^9}},ExpressionUUID->"b341beda-5ee8-44a9-9312-\
619b2c8f81f1"],

Cell[CellGroupData[{

Cell["Import Data", "Subsection",
 CellChangeTimes->{{3.7549991104024525`*^9, 3.7549991145354114`*^9}},
 CellTags->"c:45",ExpressionUUID->"b8cae968-01be-4d76-93c4-914725dacb60"],

Cell["\<\
Very specific case of T2 data converted from a phipils MRI scanner using a \
multi echo spin echo acquisition and exported with the T2 map which was \
converted from dcm to Nii using DcmToNii.\
\>", "Text",
 CellChangeTimes->{{3.7548954792598314`*^9, 3.7548955300130854`*^9}, {
   3.754902580410942*^9, 3.7549026194989295`*^9}, 
   3.7549029519227858`*^9},ExpressionUUID->"838c8185-e694-4949-9dd0-\
0c59b961e8bf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"T2data", ",", "fit", ",", "T2vox"}], "}"}], "=", 
   RowBox[{"ImportNiiT2", "[", "\"\<T2data.nii\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"echo", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Necho", ",", "T2echo"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"17", ",", "7.6"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"echos", "=", 
   RowBox[{
    RowBox[{"Range", "[", "Necho", "]"}], "T2echo"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.754902725324188*^9, 3.754902785821125*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"b207c621-7de3-43fa-8bdf-ef8e64f0d8bd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"meanT2", "=", 
   RowBox[{"NormalizeData", "[", 
    RowBox[{"Mean", "@", 
     RowBox[{"Transpose", "@", "T2data"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"meanT2", ",", "15", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskComponents", "\[Rule]", "2"}], ",", 
     RowBox[{"MaskClosing", "\[Rule]", "3"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"T2data", "=", 
   RowBox[{"MaskData", "[", 
    RowBox[{"T2data", ",", "mask"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.754903335308236*^9, 3.7549033466208315`*^9}, {
   3.754903384462629*^9, 3.7549034269760156`*^9}, 3.754913701077524*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"6a0e43c3-6e49-4acf-a0d5-faa81d3c50fd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Define Slice Profiles", "Subsection",
 CellChangeTimes->{{3.7549037926246223`*^9, 3.7549037996799846`*^9}},
 CellTags->"c:46",ExpressionUUID->"e4d814b7-307b-44b1-8176-77d613190d5c"],

Cell["Simulate RF pulse using bloch", "Text",
 CellChangeTimes->{{3.758436631234725*^9, 3.758436643807841*^9}, {
  3.758437145534289*^9, 
  3.7584371487969856`*^9}},ExpressionUUID->"08e92c98-8105-4c77-848e-\
fff3f471f75e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pulse", "=", 
   RowBox[{"Pulses", "[", "\"\<sg_150_100_167\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sim", "=", 
   RowBox[{"BlochSeries", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"4.", " ", 
      RowBox[{"10", "^", 
       RowBox[{"-", "5"}]}]}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "4000"}], ",", "4000", ",", "50"}], "]"}], ",", 
     RowBox[{"4", " ", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}], "pulse"}]}], " ", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7584366502214785`*^9, 3.7584366573124576`*^9}, {
   3.7584367145087543`*^9, 3.758436716860037*^9}, 3.75843714147445*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"b1483bf9-66dd-4581-84a9-c843d760fb15"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", "pulse", "]"}], ",", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"sim", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7584369139245076`*^9, 3.7584369191665163`*^9}, {
  3.758436965037548*^9, 3.7584369703172874`*^9}, {3.7584371252779617`*^9, 
  3.7584371369439707`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"e6d0f667-bae9-4dd4-a3f7-1cb0f0305255"],

Cell["\<\
To accurately fit the data the slice profile needs to be defined with the \
exitiation and refocussing pulses\
\>", "Text",
 CellChangeTimes->{{3.7549028998233905`*^9, 
  3.754902948209705*^9}},ExpressionUUID->"84309912-9796-472d-8aa5-\
a93ea74bc056"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ex", ",", "ref"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"90", ",", "180"}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"flip", " ", "angles"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"exitation", ",", "refocus", ",", "plots"}], "}"}], "=", 
    RowBox[{"GetPulseProfile", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<sg_150_100_167\>\"", ",", "ex", ",", 
        RowBox[{"{", 
         RowBox[{"2.2845", ",", "3.9632", ",", "768"}], "}"}]}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"exitation", " ", "puls"}], ",", 
        RowBox[{"{", 
         RowBox[{"name", ",", "angle", ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "t", ",", "w"}], "}"}]}], "}"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<sinc_centre\>\"", ",", "ref", ",", 
        RowBox[{"{", 
         RowBox[{"1.9037", ",", "2.0560", ",", "486"}], "}"}]}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"refocussing", " ", "puls"}], ",", 
        RowBox[{"{", 
         RowBox[{"name", ",", "angle", ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "t", ",", "w"}], "}"}]}], "}"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"SliceRange", "\[Rule]", "12"}], ",", 
      RowBox[{"SliceRangeSamples", "\[Rule]", "15"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "sliceRangeSamples", " ", "determines", " ", "the", " ", "speed", " ", 
    "of", " ", "the", " ", "EPGT2", " ", "fit"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"angle", "=", 
   RowBox[{"{", 
    RowBox[{"exitation", ",", "refocus"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "@", "plots"}]}], "Input",
 CellChangeTimes->{
  3.754902749179872*^9, {3.754902845965876*^9, 3.7549028890530605`*^9}, {
   3.754902919632263*^9, 3.7549029249090977`*^9}, {3.75490298065442*^9, 
   3.754902999821941*^9}, {3.7549032406720304`*^9, 3.7549032407331963`*^9}, {
   3.758437195117894*^9, 3.7584372048792877`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"83924ee4-b18d-4de6-b618-a5e212f482da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"slices", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"SimulateSliceEPG", "[", 
      RowBox[{"exitation", ",", "refocus", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1000", ",", "70"}], "}"}], ",", "echo", ",", "#"}], 
        "}"}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"0.8", ",", "1.", ",", "1.2"}], "}"}]}]}], ";"}], "\n", 
 RowBox[{"Row", "[", "slices", "]"}]}], "Input",
 CellChangeTimes->{{3.75490295733055*^9, 3.75490303724695*^9}, {
  3.754903110045624*^9, 3.754903180060878*^9}, {3.7549032511356535`*^9, 
  3.754903254044939*^9}, {3.754903298110441*^9, 3.754903309416548*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"d3e7e3d0-876a-4f04-a706-ec1533d2392e"]
}, Closed]],

Cell[CellGroupData[{

Cell["calibrate and Fit the data", "Subsection",
 CellChangeTimes->{{3.7549136808715067`*^9, 3.754913705573042*^9}},
 CellTags->"c:47",ExpressionUUID->"a32b7405-2d28-4efa-ad38-9fc2d3fe6ff7"],

Cell["Calibrate the T2 fat using automated fat masking", "Text",
 CellChangeTimes->{{3.7584375079307623`*^9, 
  3.758437522559623*^9}},ExpressionUUID->"07ba9190-658c-49b3-addf-\
eafc175f6ae3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"val", ",", "std"}], "}"}], "=", 
  RowBox[{"CalibrateEPGT2Fit", "[", 
   RowBox[{"T2data", ",", "echo", ",", "angle", ",", 
    RowBox[{"EPGRelaxPars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"10", ",", "60"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"50", ",", "300"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1400.", ",", "365."}], "}"}]}], "}"}]}], ",", 
    RowBox[{"EPGFitPoints", "\[Rule]", "40"}], ",", 
    RowBox[{"EPGMethodCal", "\[Rule]", "\"\<1comp\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7549036012855253`*^9, 3.75490366959524*^9}, {
   3.7549101256964436`*^9, 3.7549101531350975`*^9}, 3.7549139103888135`*^9, {
   3.7549181943181515`*^9, 3.7549181966994443`*^9}, {3.869803094107977*^9, 
   3.8698031426753407`*^9}, {3.869803192531239*^9, 3.8698031926123505`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"2b8f0007-7a5b-43a9-8a6e-74ff32e52a1c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"val", ",", "std"}], "}"}], "=", 
  RowBox[{"CalibrateEPGT2Fit", "[", 
   RowBox[{"T2data", ",", "echo", ",", "angle", ",", 
    RowBox[{"EPGRelaxPars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"10", ",", "60"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"50", ",", "300"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1400.", ",", "365."}], "}"}]}], "}"}]}], ",", 
    RowBox[{"EPGFitPoints", "\[Rule]", "40"}], ",", 
    RowBox[{"EPGMethodCal", "\[Rule]", "\"\<2comp\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7549036012855253`*^9, 3.75490366959524*^9}, {
   3.7549101256964436`*^9, 3.7549101531350975`*^9}, 3.7549139103888135`*^9, {
   3.7549181943181515`*^9, 3.7549181966994443`*^9}, {3.869803094107977*^9, 
   3.869803137210425*^9}, {3.8698031935711327`*^9, 3.8698031936858273`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"42ec77b4-7ad7-4fd9-a626-d9584a62749e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"val", ",", "std"}], "}"}], "=", 
  RowBox[{"CalibrateEPGT2Fit", "[", 
   RowBox[{"T2data", ",", "echo", ",", "angle", ",", 
    RowBox[{"EPGRelaxPars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"10", ",", "60"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"50", ",", "300"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1400.", ",", "365."}], "}"}]}], "}"}]}], ",", 
    RowBox[{"EPGFitPoints", "\[Rule]", "40"}], ",", 
    RowBox[{"EPGMethodCal", "\[Rule]", "\"\<2compF\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7549036012855253`*^9, 3.75490366959524*^9}, {
   3.7549101256964436`*^9, 3.7549101531350975`*^9}, 3.7549139103888135`*^9, {
   3.7549181943181515`*^9, 3.7549181966994443`*^9}, {3.869803094107977*^9, 
   3.8698031449459047`*^9}, {3.8698031943711543`*^9, 3.869803194488799*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"4e602531-e8ac-4a28-9dbc-6c382d3115d2"],

Cell["\<\
Create a dictionary for fitting manually (never needed, fit function does \
this automatically)\
\>", "Text",
 CellChangeTimes->{{3.7584375249941444`*^9, 
  3.758437553571023*^9}},ExpressionUUID->"691708d6-126e-4d41-be2c-\
d857f4226500"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dict", "=", 
   RowBox[{"CreateT2Dictionary", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1500", ",", "300"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Necho", ",", "T2echo"}], "}"}], ",", "angle"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.758437310560252*^9, 3.7584373257910223`*^9}, {
  3.758437386751029*^9, 3.758437430172845*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"4b0a9093-cbed-430e-a3b8-9877643a7ed4"],

Cell["\<\
Perform the EPGfit, only fitting water signal and calibrating the fat T2 from \
the subcutaneous fat\
\>", "Text",
 CellChangeTimes->{{3.7549994845540285`*^9, 
  3.7549994980291653`*^9}},ExpressionUUID->"fd6e9fa0-b5a6-4e96-bc4d-\
c468cb86b649"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2map", ",", "T2fmap", ",", "B1Map"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"watEPG", ",", "fatEPG", ",", "ffEPG"}], "}"}], ",", "resEPG"}],
     "}"}], "=", " ", 
   RowBox[{"EPGT2Fit", "[", 
    RowBox[{"T2data", ",", "echo", ",", "angle", ",", 
     RowBox[{"EPGCalibrate", "\[Rule]", "True"}], ",", 
     RowBox[{"OutputCalibration", "\[Rule]", "False"}], ",", 
     RowBox[{"EPGFitFat", "->", "False"}], ",", 
     RowBox[{"DictT2IncludeWater", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7549034567488422`*^9, 3.7549035295651903`*^9}, {
  3.7549994821031966`*^9, 3.754999489810546*^9}, {3.866257521402103*^9, 
  3.866257524330206*^9}, {3.866257761262754*^9, 3.8662577798324223`*^9}, {
  3.866258249337085*^9, 3.866258257421528*^9}, {3.866262269422616*^9, 
  3.8662622755077753`*^9}, {3.8662623442589397`*^9, 3.8662623498498487`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"8de819ca-705a-4220-8130-c192af8d549b"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"T2map", ",", "B1Map", ",", "T2vox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.", ",", "70"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.5"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549042371860256`*^9, 3.7549042619343824`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"47a0659c-4df1-4f1b-9d7b-b96779ba5cb1"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"T2map", ",", "T2fmap", ",", "T2vox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.", ",", "70"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"150", ",", "220"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549042371860256`*^9, 3.7549042619343824`*^9}, {
  3.866262286429801*^9, 3.8662622891948*^9}, {3.8709383721371264`*^9, 
  3.870938377657112*^9}},ExpressionUUID->"8c52458d-45d5-40ed-949c-\
38e8440a1f60"],

Cell["perform the EPGfit, fitting both water and fat signal", "Text",
 CellChangeTimes->{
  3.7549995006740847`*^9},ExpressionUUID->"3ef473e1-450e-4731-ae4d-\
89c5b79bd2a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2map", ",", "T2fmap", ",", "B1Map"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"watEPG", ",", "fatEPG", ",", "ffEPG"}], "}"}], ",", "resEPG"}],
     "}"}], "=", " ", 
   RowBox[{"EPGT2Fit", "[", 
    RowBox[{"T2data", ",", "echo", ",", "angle", ",", 
     RowBox[{"EPGCalibrate", "\[Rule]", "False"}], ",", 
     RowBox[{"OutputCalibration", "\[Rule]", "False"}], ",", 
     RowBox[{"EPGFitFat", "->", "True"}], ",", 
     RowBox[{"DictT2IncludeWater", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.866261943402553*^9, 3.866261948632841*^9}, {
   3.866262047001569*^9, 3.866262154769133*^9}, 3.866262811414209*^9, {
   3.866262953808297*^9, 3.866262955710544*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"01f5867e-d0e6-4ecc-92aa-dfbb4af4d59e"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"T2map", ",", "B1Map", ",", "T2vox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.", ",", "70"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.5"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[30]:=",ExpressionUUID->"3e9a97a0-dd2f-4ec4-bfe3-85b303b130d6"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"T2map", ",", "T2fmap", ",", "T2vox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.", ",", "70"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"100", ",", "200"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549099865144615`*^9, 3.7549099905281663`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"6a2dbfc3-df24-43c6-a38b-c46b51dc77c7"],

Cell[BoxData[
 RowBox[{"PlotData", "[", "ffEPG", "]"}]], "Input",
 CellChangeTimes->{{3.8698037554486713`*^9, 3.869803761107154*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"5ffc8d0e-c31a-4ed0-8c25-b069aff53b11"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulate EPG Data and fit testing", "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7554985560315247`*^9, 3.755498559150863*^9}, {
   3.758348438387064*^9, 3.75834843870792*^9}, {3.758433092886845*^9, 
   3.758433096742123*^9}},ExpressionUUID->"206c273f-0ccf-4695-9121-\
5be90826dd71"],

Cell[CellGroupData[{

Cell["Simulate the EPG signal", "Subsection",
 CellChangeTimes->{{3.7583490562055683`*^9, 3.758349062121837*^9}},
 CellTags->"c:48",ExpressionUUID->"8445ef95-5973-4648-871d-e56f6b632789"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ex", ",", "ref", ",", 
     RowBox[{"{", 
      RowBox[{"pl1", ",", "pl2"}], "}"}]}], "}"}], "=", 
   RowBox[{"GetPulseProfile", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<sg_150_100_167\>\"", ",", "90", ",", 
       RowBox[{"{", 
        RowBox[{"2.2845", ",", "3.9632", ",", "768"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<sinc_centre\>\"", ",", "180", ",", 
       RowBox[{"{", 
        RowBox[{"1.9037", ",", "2.0560", ",", "486"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"SliceRange", "\[Rule]", "12"}], ",", 
     RowBox[{"SliceRangeSamples", "\[Rule]", "100"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.73657451115738*^9, 3.736671472682128*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"57234781-617a-4162-9879-35e308aaf866"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"echo", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Necho", ",", "T2echo"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"17", ",", "7.6"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"angle", "=", 
   RowBox[{"{", 
    RowBox[{"ex", ",", "ref"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tfat", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"T1fat", ",", "T2fat"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"365", ",", "150"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Twat", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"T1wat", ",", "T2wat"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"1400", ",", "30"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7383022683834667`*^9, 3.7383022686959963`*^9}, {
  3.7583484500849504`*^9, 3.758348461828597*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"24da691e-d6de-410f-b0ef-1d2de61863d9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"b1", "=", 
   RowBox[{"N", "@", 
    RowBox[{"Range", "[", 
     RowBox[{".75", ",", "1.25", ",", ".05"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SNR", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"5", ",", "55", ",", "5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fat", "=", 
   RowBox[{
    RowBox[{"N", "@", 
     RowBox[{"Range", "[", 
      RowBox[{"10", ",", "60", ",", "5"}], "]"}]}], "/", "100"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.758348577382124*^9, 3.7583486435100155`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"8984a19f-eabf-4e62-97e2-98267e2bcc61"],

Cell["\<\
sigB1 : SNR = 30 and fat = 30%
sigSNR: B1=0.9 and fat=30%
sigfat: B1-0.9, fat=30% and SNR=30\
\>", "Text",
 CellChangeTimes->{{3.758348486184921*^9, 3.7583485082277412`*^9}, {
  3.758348672821705*^9, 3.758348688469573*^9}, {3.758348848328043*^9, 
  3.7583488612875695`*^9}, {3.7583513359319706`*^9, 
  3.7583513506832733`*^9}},ExpressionUUID->"054abc16-56b6-40bf-a212-\
835aa4516f1a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sigB1", "=", 
   RowBox[{"AddNoise", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"RotateDimensionsRight", "[", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"0.7", 
            RowBox[{"EPGSignal", "[", 
             RowBox[{"echo", ",", "Twat", ",", "angle", ",", "b1s"}], "]"}]}],
            "+", 
           RowBox[{"0.3", 
            RowBox[{"EPGSignal", "[", 
             RowBox[{"echo", ",", "Tfat", ",", "angle", ",", "b1s"}], 
             "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"50", ",", "50"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"b1s", ",", "b1"}], "}"}]}], "]"}], ",", "30", ",", 
     RowBox[{"NoiseSize", "\[Rule]", "\"\<SNR\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sig", "=", 
   RowBox[{"RotateDimensionsRight", "[", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"0.7", 
        RowBox[{"EPGSignal", "[", 
         RowBox[{"echo", ",", "Twat", ",", "angle", ",", "0.9"}], "]"}]}], 
       "+", 
       RowBox[{"0.3", 
        RowBox[{"EPGSignal", "[", 
         RowBox[{"echo", ",", "Tfat", ",", "angle", ",", "0.9"}], "]"}]}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"50", ",", "50"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigSNR", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"AddNoise", "[", 
      RowBox[{"sig", ",", "snrs", ",", 
       RowBox[{"NoiseSize", "\[Rule]", "\"\<SNR\>\""}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"snrs", ",", "SNR"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sigFat", "=", 
    RowBox[{"AddNoise", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"RotateDimensionsRight", "[", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "ff"}], ")"}], 
             RowBox[{"EPGSignal", "[", 
              RowBox[{"echo", ",", "Twat", ",", "angle", ",", "0.9"}], 
              "]"}]}], "+", 
            RowBox[{"ff", " ", 
             RowBox[{"EPGSignal", "[", 
              RowBox[{"echo", ",", "Tfat", ",", "angle", ",", "0.9"}], 
              "]"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"50", ",", "50"}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ff", ",", "fat"}], "}"}]}], "]"}], ",", "30", ",", 
      RowBox[{"NoiseSize", "\[Rule]", "\"\<SNR\>\""}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Dimensions", "/@", 
  RowBox[{"{", 
   RowBox[{"sigB1", ",", "sigSNR", ",", "sigFat"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.7583484752998204`*^9, 3.7583484835448604`*^9}, {
  3.7583485161003*^9, 3.7583485602140207`*^9}, {3.7583486512417836`*^9, 
  3.7583486703280087`*^9}, {3.7583487385524225`*^9, 3.7583487506008997`*^9}, {
  3.7583492916439*^9, 3.7583492959631824`*^9}, {3.758351355182659*^9, 
  3.7583513564450274`*^9}, {3.8794854692794123`*^9, 3.879485496553326*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"ace4a269-d905-4882-89d8-90bd356cd7f9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fit the simulated EPG signal", "Subsection",
 CellChangeTimes->{{3.758349069323036*^9, 3.7583490793226967`*^9}},
 CellTags->"c:49",ExpressionUUID->"d12758da-d1d5-43a6-8aaa-503db8464fff"],

Cell[BoxData["ParallelKernels"], "Input",
 CellChangeTimes->{{3.8794855577267036`*^9, 
  3.879485560146454*^9}},ExpressionUUID->"e2700bd4-8f93-4193-bced-\
81187f305e9e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2B1", ",", "T2fB1", ",", "B1B1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"watB1", ",", " ", "fatB1", ",", " ", "ffB1"}], "}"}], ",", 
     "resB1"}], "}"}], "=", 
   RowBox[{"EPGT2Fit", "[", 
    RowBox[{"sigB1", ",", "echo", ",", "angle", ",", 
     RowBox[{"DictT2fValue", "\[Rule]", "150"}], ",", 
     RowBox[{"EPGSmoothB1", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758348920042689*^9, 3.7583489895278234`*^9}, 
   3.845467890733239*^9, {3.8454681059467745`*^9, 3.8454681078021097`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"552a216f-db51-4a52-837c-8826af038d2c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2SNR", ",", "T2fSNR", ",", "B1SNR"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"watSNR", ",", " ", "fatSNR", ",", " ", "ffSNR"}], "}"}], ",", 
     "resSNR"}], "}"}], "=", 
   RowBox[{"EPGT2Fit", "[", 
    RowBox[{"sigSNR", ",", "echo", ",", "angle", ",", 
     RowBox[{"DictT2fValue", "\[Rule]", "150"}], ",", 
     RowBox[{"EPGSmoothB1", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758348920042689*^9, 3.7583490207110653`*^9}, 
   3.8454678975176506`*^9, {3.845468112275992*^9, 3.845468113775572*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"75ab4e15-7874-4e05-accb-830a5a8437a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2Fat", ",", "T2fFat", ",", "B1Fat"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"watFat", ",", " ", "fatFat", ",", " ", "ffFat"}], "}"}], ",", 
     "resFat"}], "}"}], "=", 
   RowBox[{"EPGT2Fit", "[", 
    RowBox[{"sigFat", ",", "echo", ",", "angle", ",", 
     RowBox[{"DictT2fValue", "\[Rule]", "150"}], ",", 
     RowBox[{"EPGSmoothB1", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758348920042689*^9, 3.7583489895278234`*^9}, {
   3.758349024935327*^9, 3.7583490403141985`*^9}, 3.84546789857469*^9, {
   3.8454681207073975`*^9, 3.8454681222416143`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"e5f441ab-6c4e-4b17-a787-cc5a724424cb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Evaluate the fits", "Subsection",
 CellChangeTimes->{{3.7583490835356913`*^9, 3.75834908874759*^9}},
 CellTags->"c:50",ExpressionUUID->"3661d520-8d0a-475a-b073-957f7c24d670"],

Cell[BoxData[{
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"T2B1", "[", 
        RowBox[{"[", "#", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"20", ",", "50"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<T2\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<B1 = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"b1", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "b1", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"T2SNR", "[", 
        RowBox[{"[", "#", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"20", ",", "50"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<T2\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<SNR = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"SNR", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "SNR", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"T2Fat", "[", 
        RowBox[{"[", "#", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"20", ",", "50"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<T2\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<fat frac = \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"100", 
           RowBox[{"fat", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "<>", "\"\<%\>\""}]}]}], 
      "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "fat", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.75834910393007*^9, 3.758349169277294*^9}, {
  3.758349205810248*^9, 3.7583492386886806`*^9}, {3.7583513807354507`*^9, 
  3.7583513963960643`*^9}},
 CellLabel->
  "In[292]:=",ExpressionUUID->"2df86a65-6a91-4969-a35f-485561eeaf98"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ErrorPlot", "[", 
       RowBox[{"T2B1", ",", "b1", ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "60"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<B1\>\"", ",", "\"\<T2wat\>\""}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<T2wat as function of B1\>\""}]}],
        "]"}], ",", 
      RowBox[{"AspectRatio", "->", "1"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ErrorPlot", "[", 
       RowBox[{"T2SNR", ",", "SNR", ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "60"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<SNR\>\"", ",", "\"\<T2wat\>\""}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "->", "\"\<T2wat as function of SNR\>\""}]}], 
       "]"}], ",", 
      RowBox[{"AspectRatio", "->", "1"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ErrorPlot", "[", 
       RowBox[{"T2Fat", ",", "fat", ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "60"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Fat Frac\>\"", ",", "\"\<T2wat\>\""}], "}"}]}], ",", 
        RowBox[{
        "PlotLabel", "->", "\"\<T2wat as function of fat fraction\>\""}]}], 
       "]"}], ",", 
      RowBox[{"AspectRatio", "->", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7583511545395966`*^9, 3.758351217714362*^9}, {
  3.758351299601017*^9, 3.7583513035333433`*^9}, {3.845468516021093*^9, 
  3.8454685219772577`*^9}, {3.8794855190192986`*^9, 3.879485534233486*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"c373eede-fb5d-4af4-906d-3ef381ffe28c"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DTI and IVIM ", "Chapter",
 CellChangeTimes->{{3.7548951014856977`*^9, 3.754895112634607*^9}, {
   3.75489562596196*^9, 3.754895628456525*^9}, 
   3.7549109686882687`*^9},ExpressionUUID->"47034db1-d0d6-4b23-af6e-\
0f6546045b3b"],

Cell[CellGroupData[{

Cell["Generating diffusion gradients", "Subsection",
 CellChangeTimes->{{3.754910970230391*^9, 3.754910977730441*^9}},
 CellTags->"c:51",ExpressionUUID->"25adc37f-e4d2-4d9f-a5ed-8612c20d46c3"],

Cell["Generate gradients in the notebook.", "Text",
 CellChangeTimes->{{3.75491113415291*^9, 3.754911143400069*^9}, 
   3.754913719097209*^9},ExpressionUUID->"ea42799b-6877-4b38-b569-\
13addb9d2db3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"grad", "=", 
   RowBox[{"GenerateGradients", "[", 
    RowBox[{"{", 
     RowBox[{"6", ",", "6", ",", "12", ",", "24"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bval", "=", 
   RowBox[{"{", 
    RowBox[{"10", ",", "100", ",", "250", ",", "600"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bvals", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"Length", "[", "#2", "]"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"bval", ",", "grad"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grads", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"grad", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bvals", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"bvals", ",", "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549109906143837`*^9, 3.754911107683816*^9}, {
  3.7549144751927624`*^9, 3.7549144808054914`*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"27dca582-2b36-49e0-88a2-e3bb99bd2d01"],

Cell[BoxData[
 RowBox[{"GradientPlot", "[", 
  RowBox[{"grads", ",", "bvals"}], "]"}]], "Input",
 CellChangeTimes->{{3.754911113493312*^9, 3.754911119058152*^9}},
 CellLabel->
  "In[301]:=",ExpressionUUID->"9d2e7d89-461c-48fc-92b8-0015aa0d0da2"],

Cell[BoxData[
 RowBox[{"ListSpherePlot", "[", 
  RowBox[{
   RowBox[{"bvals", " ", "grads"}], ",", 
   RowBox[{"SphereSize", "\[Rule]", "30"}], ",", 
   RowBox[{"SphereColor", "\[Rule]", "Blue"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758439780019206*^9, 3.7584398502570844`*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"512a6259-5ab7-4fd1-b670-1393be8510df"],

Cell["Or generate Gradients in the GUI", "Text",
 CellChangeTimes->{{3.7549111465330987`*^9, 
  3.7549111568381367`*^9}},ExpressionUUID->"06fed56e-cf72-4eab-877f-\
8a2fa48264d1"],

Cell[BoxData[
 RowBox[{"GenerateGradientsGUI", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7549111235416102`*^9, 3.7549111293220572`*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"505f5e4d-61b2-45a6-8a8a-10a30bdf2cee"]
}, Closed]],

Cell[CellGroupData[{

Cell["Import The Data", "Subsection",
 CellChangeTimes->{{3.755000756204663*^9, 3.7550007614125185`*^9}},
 CellTags->"c:52",ExpressionUUID->"37567aef-8b97-425f-abdf-d82ae053b962"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dwi", ",", "grad", ",", "val", ",", "dwivox"}], "}"}], "=", 
   RowBox[{"ImportNiiDiff", "[", "\"\<DTIdata.nii\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"datareg", ",", "dwivox"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<DTIdata-reg.nii\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tens", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"ImportNii", "[", 
     RowBox[{"\"\<DTI-tensor.nii\>\"", ",", 
      RowBox[{"NiiMethod", "\[Rule]", "\"\<data\>\""}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"labels", ",", "vox"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<labels.nii\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.754895634046774*^9, 3.754895667562751*^9}, 
   3.7549147982158546`*^9, {3.7549998933836317`*^9, 3.7549998936081953`*^9}, {
   3.7550004747855062`*^9, 3.7550004893652954`*^9}, {3.7550005862069235`*^9, 
   3.755000615146139*^9}, {3.7550007439214835`*^9, 3.7550007442834463`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"b6a6e3c8-61e2-4f74-8ee2-1ecd45f55cfc"]
}, Closed]],

Cell[CellGroupData[{

Cell["Prep the IVIM and DTI data", "Subsection",
 CellChangeTimes->{{3.75491344533817*^9, 3.754913448807496*^9}, {
  3.754913730092126*^9, 3.754913732275964*^9}, {3.7549138844520955`*^9, 
  3.7549138871242504`*^9}, {3.754999581165014*^9, 3.7549995852456675`*^9}, {
  3.755000767977996*^9, 3.755000769270936*^9}},
 CellTags->"c:53",ExpressionUUID->"29712ec0-7f9d-4363-bd69-fedc89b926de"],

Cell[CellGroupData[{

Cell["Sort and mask", "Subsubsection",
 CellChangeTimes->{{3.755000777818706*^9, 3.755000782394892*^9}},
 CellTags->"c:54",ExpressionUUID->"7b6f1d42-3372-4eae-9f3b-52b01fd6c20a"],

Cell["\<\
First step is to order and Normalize the diffusion data. Also find all the \
unique b - values and their positions.\
\>", "Text",
 CellChangeTimes->{{3.754999902345565*^9, 3.7549999343805895`*^9}, 
   3.755000639302743*^9},ExpressionUUID->"27abfcd5-f584-46cd-8df8-\
6aa1f69b339e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dwi", "=", 
   RowBox[{"NormalizeData", "[", "dwi", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dwi", ",", "grad", ",", "val"}], "}"}], "=", 
   RowBox[{"SortDiffusionData", "[", 
    RowBox[{"dwi", ",", "grad", ",", "val"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"bval", ",", "pos"}], "}"}], "=", 
   RowBox[{"UniqueBvalPosition", "[", "val", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bmat", " ", "=", " ", 
   RowBox[{"Bmatrix", "[", 
    RowBox[{"val", ",", "grad"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mdata", "=", 
   RowBox[{"Mean", "@", 
    RowBox[{"Transpose", "@", "dwi"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549134223765755`*^9, 3.75491346814913*^9}, 
   3.7549137609540815`*^9, {3.7549145002322235`*^9, 3.75491450083834*^9}, {
   3.754914563063095*^9, 3.754914615898838*^9}, {3.7549159495136757`*^9, 
   3.7549159519931593`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"e685e2ff-8cec-433d-90f3-cd1e4ba107a4"],

Cell[BoxData[
 RowBox[{"GradientPlot", "[", 
  RowBox[{"grad", ",", "val"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549137630150776`*^9, 3.7549137707406816`*^9}},
 CellLabel->
  "In[357]:=",ExpressionUUID->"2c219bff-98ca-4149-8f73-f5d4c18d1d6f"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"mdata", ",", "dwivox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549135038347163`*^9, 3.75491351177946*^9}, 
   3.7549996248755584`*^9},
 CellLabel->
  "In[358]:=",ExpressionUUID->"58a620c5-fd10-4d1a-b298-19131a1f4f75"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"mdata", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskComponents", "\[Rule]", "2"}], ",", 
     RowBox[{"MaskClosing", "\[Rule]", "3"}], ",", 
     RowBox[{"MaskDilation", "->", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dwi", "=", 
   RowBox[{"MaskData", "[", 
    RowBox[{"dwi", ",", "mask"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549135142786407`*^9, 3.754913543186923*^9}, {
  3.75491373622853*^9, 3.7549137504520597`*^9}, {3.8746540161140842`*^9, 
  3.874654020096695*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"82cbf336-e0f4-43db-94e4-46d687594afa"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"mdata", ",", "mask", ",", " ", "dwivox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549135038347163`*^9, 3.75491351177946*^9}, {
   3.754913554131217*^9, 3.7549135547232995`*^9}, 3.7549996256124425`*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"e78c9670-4878-485f-9214-babcab9aa322"]
}, Closed]],

Cell[CellGroupData[{

Cell["Denoise DWI data", "Subsubsection",
 CellChangeTimes->{{3.754914631559713*^9, 3.7549146366652336`*^9}},
 CellTags->"c:55",ExpressionUUID->"75236b9f-93a9-4123-9f0b-e0d6063ca27a"],

Cell["\<\
Denoise with a PCA based method, if noise is also measured it can be used as \
an input.\
\>", "Text",
 CellChangeTimes->{{3.754999595850682*^9, 3.7549996174036827`*^9}, 
   3.7549996609142113`*^9},ExpressionUUID->"8f267ee5-face-4d96-81f2-\
eb7a65fb2c80"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dwiN", ",", "sigma", ",", 
     RowBox[{"{", 
      RowBox[{"sigv", ",", "nes"}], "}"}]}], "}"}], " ", "=", " ", 
   RowBox[{"PCADeNoise", "[", 
    RowBox[{"dwi", ",", "mask", ",", 
     RowBox[{"PCAOutput", "\[Rule]", "True"}], ",", 
     RowBox[{"PCATollerance", "\[Rule]", "0"}], ",", 
     RowBox[{"MonitorCalc", "->", "True"}]}], "]"}]}], ";"}]], "Input",Express\
ionUUID->"b25ec0c8-9dee-4355-8b9d-d5d64b8430a5"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dwiN", ",", 
   RowBox[{"MaskData", "[", 
    RowBox[{
     RowBox[{"dwi", "-", "dwiN"}], ",", "mask"}], "]"}], ",", "dwivox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "150"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "15"}], ",", "15"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549147303342247`*^9, 3.754914741221796*^9}, {
  3.754914837336503*^9, 3.7549148434932365`*^9}, {3.754999733194705*^9, 
  3.754999744672658*^9}},
 CellLabel->
  "In[420]:=",ExpressionUUID->"2421eea9-a6e2-44b3-aab6-fe2b35f370c9"],

Cell["\<\
With the sigma map from the PCA denoise the SNR can be calculated.\
\>", "Text",
 CellChangeTimes->{{3.7549996406923895`*^9, 
  3.754999661576975*^9}},ExpressionUUID->"645118b4-3efb-4e87-b82b-\
7000552f32c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"snr4D", "=", 
   RowBox[{"SNRCalc", "[", 
    RowBox[{"dwiN", ",", "sigma"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[63]:=",ExpressionUUID->"75011760-c2f1-4623-93d9-7769bb8b3f54"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"snr4D", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "50"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[70]:=",ExpressionUUID->"cb791753-16a4-485a-856b-2d0dfaadcfaf"]
}, Closed]],

Cell[CellGroupData[{

Cell["Motion and eddy current correction", "Subsubsection",
 CellChangeTimes->{{3.754914684136002*^9, 3.754914709700195*^9}},
 CellTags->"c:56",ExpressionUUID->"d4ebefef-2c40-4afa-86e2-01e82ef7e608"],

Cell["Register both legs simultaneous.", "Text",
 CellChangeTimes->{{3.7549999548970714`*^9, 3.7549999729488125`*^9}, {
  3.7584403903058157`*^9, 
  3.758440413362672*^9}},ExpressionUUID->"fcfdba04-a6f9-409b-bf78-\
69c9d9a513ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datareg1", " ", "=", " ", 
   RowBox[{"RegisterDiffusionData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dwiN", ",", 
       RowBox[{"Dilation", "[", 
        RowBox[{"mask", ",", "2"}], "]"}], ",", "dwivox"}], "}"}], ",", 
     RowBox[{"Iterations", "\[Rule]", "250"}], ",", 
     RowBox[{"NumberSamples", "\[Rule]", "5000"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7549147131639323`*^9, 3.7549147214124303`*^9}, {
   3.7549999466673007`*^9, 3.7549999473195624`*^9}, 3.758440407491884*^9, {
   3.76035821701776*^9, 3.7603582235379643`*^9}, 3.7607790796429935`*^9, {
   3.7607794942163477`*^9, 3.760779497513489*^9}, 3.7614797778632016`*^9, 
   3.761479997024624*^9, {3.87092778407057*^9, 3.8709277879922247`*^9}, {
   3.8709280374621983`*^9, 3.8709280609966497`*^9}, {3.872314868228297*^9, 
   3.872314871995078*^9}, {3.8762840984308734`*^9, 3.8762841027256126`*^9}, {
   3.876284727716384*^9, 3.8762847347536755`*^9}, {3.876289255622634*^9, 
   3.876289261518038*^9}, {3.876289506995102*^9, 
   3.8762895193393445`*^9}},ExpressionUUID->"bd7f1df1-29c6-4ca4-a54c-\
3c906bd69bd4"],

Cell["Separately register the left and right leg", "Text",
 CellChangeTimes->{{3.7549999548970714`*^9, 
  3.7549999729488125`*^9}},ExpressionUUID->"2c663dae-ce55-4c0e-9ead-\
798d28b2441d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datareg", " ", "=", " ", 
   RowBox[{"RegisterDiffusionDataSplit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dwiN", ",", 
       RowBox[{"Dilation", "[", 
        RowBox[{"mask", ",", "2"}], "]"}], ",", "dwivox"}], "}"}], ",", 
     RowBox[{"Iterations", "\[Rule]", "250"}], ",", 
     RowBox[{"NumberSamples", "\[Rule]", "5000"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7549147131639323`*^9, 3.7549147214124303`*^9}, {
  3.7549999466673007`*^9, 3.7549999473195624`*^9}, {3.8709280501332273`*^9, 
  3.870928052037201*^9}, {3.872314865991556*^9, 3.8723148733245506`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"9b20175a-57c0-4449-83ec-169ccd6f1d3d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExportNii", "[", 
   RowBox[{
    RowBox[{"MaskData", "[", 
     RowBox[{"datareg", ",", "mask"}], "]"}], ",", "dwivox", ",", 
    "\"\<DTIdata-reg.nii\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8747205434857397`*^9, 3.874720555560186*^9}, {
  3.87473023089547*^9, 3.8747302376732883`*^9}},
 CellLabel->
  "In[411]:=",ExpressionUUID->"a1650702-d19f-48e3-a22e-658c76861d88"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IVIM Fitting", "Subsection",
 CellChangeTimes->{{3.7549137794368954`*^9, 3.7549137848242793`*^9}},
 CellTags->"c:57",ExpressionUUID->"194fc7a6-9250-4380-ab91-b6f48a0893c5"],

Cell[CellGroupData[{

Cell["Whole volume calibrate", "Subsubsection",
 CellChangeTimes->{{3.7549138637211986`*^9, 3.7549138972407355`*^9}, 
   3.754999859291905*^9},
 CellTags->"c:58",ExpressionUUID->"c83a9054-dd74-47d7-ad95-3b9d6619e603"],

Cell["\<\
Calculate the Iso images from each b - value and calculate the mean signal \
volume\
\>", "Text",
 CellChangeTimes->{{3.7549999858705673`*^9, 
  3.755000031508486*^9}},ExpressionUUID->"c0285daf-d6f8-45d3-b7b0-\
a5175ce9af64"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dwiIso", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GeometricMean", "[", 
       RowBox[{"Transpose", "[", 
        RowBox[{"datareg", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "#"}], "]"}], "]"}], "]"}], "]"}], "&"}], "/@", 
     "pos"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sig", " ", "=", " ", 
   RowBox[{"MeanSignal", "[", "datareg", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sigI", "=", 
   RowBox[{"MeanSignal", "[", "dwiIso", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549159320232944`*^9, 3.7549159330627413`*^9}, {
   3.7549160034802017`*^9, 3.754916006774444*^9}, 3.754999982025779*^9, {
   3.874720688687069*^9, 3.8747206945909977`*^9}},
 CellLabel->
  "In[412]:=",ExpressionUUID->"2c24046e-db0b-4e2d-93ce-548abb04f40d"],

Cell["Fit and show the IVIM signal of the whole volume", "Text",
 CellChangeTimes->{{3.7550000404661784`*^9, 
  3.7550000531960096`*^9}},ExpressionUUID->"ee6a7083-6d3f-4950-8cbe-\
77fbc5364897"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fiti", "=", 
   RowBox[{"IVIMCalc", "[", 
    RowBox[{"sig", ",", "val", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", ".05", ",", ".003", ",", ".1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitIi", "=", 
    RowBox[{"IVIMCalc", "[", 
     RowBox[{"sigI", ",", "bval", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", ".05", ",", ".003", ",", ".1"}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotIVIM", "[", 
  RowBox[{"fiti", ",", "sig", ",", "val", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotIVIM", "[", 
  RowBox[{"fitIi", ",", "sigI", ",", "bval", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7549155168555403`*^9, 3.75491555474142*^9}, 
   3.7549157282165155`*^9, {3.7549157951437693`*^9, 3.7549157954631233`*^9}, {
   3.754915838571384*^9, 3.754915852712798*^9}, {3.754915888023015*^9, 
   3.7549158974301367`*^9}, {3.754915972296256*^9, 3.7549159737517576`*^9}, 
   3.754916032154574*^9},
 CellLabel->
  "In[415]:=",ExpressionUUID->"fea884d6-0f69-4111-9d39-fa9e2a661e4d"]
}, Closed]],

Cell[CellGroupData[{

Cell["IVIM fit ", "Subsubsection",
 CellChangeTimes->{{3.7549138637211986`*^9, 3.7549138972407355`*^9}, {
   3.7549155771892085`*^9, 3.7549155820371375`*^9}, 3.755000066069899*^9},
 CellTags->"c:59",ExpressionUUID->"37c42ac9-91fe-46e0-b5f0-8a8055e0e5be"],

Cell["\<\
Fit using the whole volume fit as a initial guess and using a fixed D*\
\>", "Text",
 CellChangeTimes->{{3.755000067813447*^9, 
  3.75500009744042*^9}},ExpressionUUID->"0f42b6f0-0ac9-4f04-a3fa-\
eb1d2d31934f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"S0Ii", ",", "fracI", ",", "diff", ",", "pDiff"}], "}"}], "=", 
   RowBox[{"IVIMCalc", "[", 
    RowBox[{"dwiIso", ",", "bval", ",", "fiti", ",", 
     RowBox[{"IVIMConstrained", "\[Rule]", "False"}], ",", 
     RowBox[{"Parallelize", "\[Rule]", "True"}], ",", 
     RowBox[{"MonitorIVIMCalc", "\[Rule]", "True"}], ",", 
     RowBox[{"IVIMFixed", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fracI", "=", 
   RowBox[{"Clip", "[", 
    RowBox[{"fracI", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549160511618843`*^9, 3.754916055224902*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"9b64546e-04bc-4e97-994c-1aede4a4f620"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"fracI", ",", "diff", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", ".1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.002"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758440831414627*^9, 3.7584408799931316`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"18361a8d-0015-46b1-91d8-24b5e8b80e9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"IVIMResiduals", "[", 
    RowBox[{"dwiIso", ",", "bval", ",", 
     RowBox[{"{", 
      RowBox[{"S0Ii", ",", "fracI", ",", "diff", ",", "pDiff"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758440682540387*^9, 3.7584406853178387`*^9}, {
  3.7584407331240063`*^9, 3.7584407573610716`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"7a02e95a-55d3-4dcf-811f-6f7a57c0aed4"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dwiIso", ",", "res", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758440767656734*^9, 3.7584408171734514`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"c8cd8936-aaa0-4ffd-bcc6-64ae1a6de48c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Split signals into perfusion and diffusion", "Subsubsection",
 CellChangeTimes->{{3.754915593226927*^9, 3.7549156019133368`*^9}},
 CellTags->"c:60",ExpressionUUID->"e507394d-7fce-45ce-bab9-205bc132c31e"],

Cell["\<\
With a IVIM fit you can remove the perfusion contribution form the original \
DWI signal\
\>", "Text",
 CellChangeTimes->{{3.7550001029416046`*^9, 3.755000124998373*^9}, 
   3.755000646175701*^9},ExpressionUUID->"f1339e48-5568-4181-9103-\
13343d87b5ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dataCor", ",", "dataSyn"}], "}"}], "=", 
   RowBox[{"IVIMCorrectData", "[", 
    RowBox[{"datareg", ",", 
     RowBox[{"{", 
      RowBox[{"S0Ii", ",", "fracI", ",", "pDiff"}], "}"}], ",", "val", ",", 
     RowBox[{"FilterMaps", "\[Rule]", "False"}], ",", 
     RowBox[{"FilterType", "\[Rule]", "\"\<Laplatian\>\""}], ",", 
     RowBox[{"FilterSize", "\[Rule]", "0.8"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754213347702221*^9, 3.754213350373131*^9}, {
   3.7542134659202547`*^9, 3.754213466512255*^9}, 3.7549161050522118`*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"01726389-dcb2-4df4-a42f-14741a4d3969"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataCor", ",", "dataSyn", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "100"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.754213485564293*^9, 3.754213492195796*^9}, {
  3.7549161354346447`*^9, 3.7549161421385717`*^9}, {3.755000140840662*^9, 
  3.7550001411680336`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"377f4aec-7083-4a3a-92f1-91ca05e12f9b"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tensor analysis", "Subsection",
 CellChangeTimes->{{3.754920706637082*^9, 3.754920714715969*^9}, {
  3.7550002741128864`*^9, 3.755000276412504*^9}},
 CellTags->"c:61",ExpressionUUID->"46cb5c22-df36-42f1-8278-128db9e6546d"],

Cell[CellGroupData[{

Cell["Fit the tensors", "Subsubsection",
 CellChangeTimes->{{3.7550002776467867`*^9, 3.755000283657793*^9}},
 CellTags->"c:62",ExpressionUUID->"46110b45-9f52-4171-ae7f-cc9053aa8a39"],

Cell[BoxData[
 RowBox[{"Column", "@", 
  RowBox[{"Options", "[", "TensorCalc", "]"}]}]], "Input",
 CellChangeTimes->{{3.755000157238582*^9, 3.755000168626581*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"4cc308f1-c626-492a-91a8-f47d2cfafa5c"],

Cell["Calculate tensor from corrected data", "Text",
 CellChangeTimes->{{3.755000205572136*^9, 
  3.7550002111624765`*^9}},ExpressionUUID->"9b1f7978-adca-4e60-bbe3-\
3c5f3c0ab3f1"],

Cell[BoxData[
 RowBox[{"Options", "@", "TensorCalc"}]], "Input",
 CellChangeTimes->{{3.870928599387191*^9, 3.8709286039267335`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"a1f009cc-d181-4348-ab4c-2221322f7f8f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tens", ",", "S0", ",", "outlier", ",", "res"}], "}"}], "=", 
   RowBox[{"out", "=", 
    RowBox[{"TensorCalc", "[", 
     RowBox[{"datareg", ",", "grad", ",", "val"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7542133092285795`*^9, 3.754213342561816*^9}, 
   3.754213542568743*^9, {3.7542147650041075`*^9, 3.7542147659083357`*^9}, {
   3.754918564252726*^9, 3.7549185903437014`*^9}, {3.754918924687765*^9, 
   3.754918928371292*^9}, {3.75500019939853*^9, 3.7550002177135515`*^9}, {
   3.7550005139963884`*^9, 3.7550005196559925`*^9}, 3.7550005581957283`*^9, {
   3.755585887168521*^9, 3.75558588745653*^9}, {3.7699584120848637`*^9, 
   3.7699584163511925`*^9}, 3.7699589571456165`*^9, {3.870928636071559*^9, 
   3.870928647574588*^9}, {3.8709295930188355`*^9, 3.87092959684295*^9}, {
   3.874733705382785*^9, 3.8747337247859445`*^9}, 3.8747338370608497`*^9, 
   3.874734086323267*^9, {3.874734155395397*^9, 3.874734163364257*^9}, 
   3.8747342149658875`*^9},ExpressionUUID->"3cde8bc5-3047-4773-bee2-\
bea3209a1f6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExportNii", "[", 
   RowBox[{
    RowBox[{"Transpose", "@", "tens"}], ",", "dwivox", ",", 
    "\"\<DTI-tensor.nii\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8747347619246545`*^9, 3.874734777462492*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"a3bbe492-e2cd-4363-a26e-abbfe1e691dc"],

Cell["Convert Tensor To matrix and vector format", "Text",
 CellChangeTimes->{{3.7584417914797144`*^9, 
  3.758441805382854*^9}},ExpressionUUID->"c1085988-fab4-4e7a-b40f-\
1be293ded423"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensMat", "=", 
   RowBox[{"TensMat", "[", "tens", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tensVec", "=", 
   RowBox[{"TensVec", "[", "tensMat", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "/@", 
  RowBox[{"{", 
   RowBox[{"tensMat", ",", "tensVec"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.7584418079588037`*^9, 3.7584418549323115`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"61179b73-6cfe-420a-8029-ad2d32a322e9"],

Cell["Plot the tensor.", "Text",
 CellChangeTimes->{{3.7584410647431507`*^9, 3.758441071843142*^9}, 
   3.7584420061501074`*^9},ExpressionUUID->"be4e95c3-60da-4f88-9331-\
306f45cd1c4e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"crp", "=", 
   RowBox[{"FindCrop", "[", "mdata", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tensPlot", "=", 
   RowBox[{"1000", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"ApplyCrop", "[", 
          RowBox[{"#", ",", "crp"}], "]"}], "&"}], "/@", "tens"}], ")"}], "/.",
       " ", 
      RowBox[{"0.", "\[Rule]", 
       RowBox[{"-", "1"}]}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.755000323126373*^9, 3.7550004528731933`*^9}, 
   3.755000654989583*^9, {3.7555869291906013`*^9, 3.755586936545241*^9}, {
   3.758441889125291*^9, 3.7584419446473494`*^9}, 3.758441979190585*^9, {
   3.7584557880197663`*^9, 3.7584558215242443`*^9}, {3.837509279580782*^9, 
   3.8375092879598637`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"81b68c3e-6296-44bd-95a1-16e20540b96c"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"GridData", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"TensMat", "[", "tensPlot", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5"}], "}"}]}], "]"}], ",", "3"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.758455792751069*^9, {3.837502116587649*^9, 3.8375021398980265`*^9}, {
   3.8375092129606934`*^9, 3.8375092308665075`*^9}, 3.8375092713038282`*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"5feffc29-319a-4d91-98df-d76aafbbbd23"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ax", ",", "cor", ",", "sag"}], "}"}], "=", 
   RowBox[{"GridData3D", "[", 
    RowBox[{"tensPlot", ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584560457474313`*^9, 3.7584560724689875`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"8b0730ee-7362-439c-a55d-7b48c7668c7d"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"ax", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758455736008664*^9, 3.7584557692527666`*^9}, {
  3.758456044004887*^9, 3.7584560853204393`*^9}, {3.769959016241742*^9, 
  3.769959016528507*^9}, {3.837509292475665*^9, 3.837509294902581*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"9a36fc92-d1e1-461a-affd-7a4634929124"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"sag", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758455736008664*^9, 3.7584557692527666`*^9}, {
   3.758456044004887*^9, 3.7584560853204393`*^9}, 3.8375093009034433`*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"c10b5f5f-1c4e-46fc-8457-7ae8c5de5e55"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"cor", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758455736008664*^9, 3.7584557692527666`*^9}, {
   3.758456044004887*^9, 3.7584560629483066`*^9}, 3.837509303071743*^9},
 CellLabel->"In[89]:=",ExpressionUUID->"53def0d8-f168-477c-b7cb-c8fe6942331d"],

Cell["\<\
Calculate tensor using only high b-values, first find the positions of the \
high b-values ad then select the correct data and fit the tensor.\
\>", "Text",
 CellChangeTimes->{{3.755000220724985*^9, 3.755000228452171*^9}, {
  3.7550006807677164`*^9, 
  3.755000705520234*^9}},ExpressionUUID->"b7b2a8a2-13df-4751-8d89-\
c4d73b0ea43f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"selH", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"pos", "[", 
     RowBox[{"[", 
      RowBox[{"Flatten", "@", 
       RowBox[{"Position", "[", 
        RowBox[{"bval", ",", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "\[GreaterEqual]", "200"}], ")"}], "&"}], ")"}]}]}],
         "]"}]}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tensH", ",", "S0H", ",", "outlierH", ",", "resH"}], "}"}], "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{
     RowBox[{"datareg", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "selH"}], "]"}], "]"}], ",", 
     RowBox[{"grad", "[", 
      RowBox[{"[", "selH", "]"}], "]"}], ",", 
     RowBox[{"val", "[", 
      RowBox[{"[", "selH", "]"}], "]"}], ",", 
     RowBox[{"FullOutput", "\[Rule]", "True"}], ",", 
     RowBox[{"Parallelize", "->", "True"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7541969378065863`*^9, 3.754196960757258*^9}, {
   3.7549187589191275`*^9, 3.754918786013351*^9}, 3.754919332812829*^9, {
   3.754919561177947*^9, 3.7549195659665613`*^9}, {3.7549196440639453`*^9, 
   3.7549196533154583`*^9}, {3.755000217149051*^9, 3.755000255723921*^9}, {
   3.7550006858586383`*^9, 3.7550007090440454`*^9}, {3.7550013675359993`*^9, 
   3.755001371129531*^9}, 3.870929660714088*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"0e3b5a12-1999-4716-a93f-1cb468138eef"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"S0H", ",", 
   RowBox[{"Total", "@", 
    RowBox[{"Transpose", "@", "outlierH"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.754919594117535*^9, 3.7549196290454493`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"9219a9f5-b371-4dfb-9bc4-f5c419d321ba"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"tensH", ",", "tens", ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}], "/", "1000"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8709297105764775`*^9, 3.8709297156449227`*^9}, {
  3.8709319626277437`*^9, 3.8709319790105305`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"d95b158f-77db-4726-b332-9f2e44c6093c"],

Cell["\<\
Based on the tensor residuals you can estimate a noise sigma map however this \
will severely overestimate the sigma\
\>", "Text",
 CellChangeTimes->{{3.7550016396203413`*^9, 
  3.7550016675961504`*^9}},ExpressionUUID->"db2d0a1f-9d4a-4bf6-94d9-\
6893ddbeb429"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sigmaT", "=", 
   RowBox[{"SigmaCalc", "[", 
    RowBox[{
     RowBox[{"datareg", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "selH"}], "]"}], "]"}], ",", 
     RowBox[{"Join", "[", 
      RowBox[{"tensH", ",", 
       RowBox[{"{", "S0H", "}"}]}], "]"}], ",", 
     RowBox[{"grad", "[", 
      RowBox[{"[", "selH", "]"}], "]"}], ",", 
     RowBox[{"val", "[", 
      RowBox[{"[", "selH", "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.755001350995302*^9, 3.755001397833783*^9}, {
  3.7550015474069123`*^9, 3.7550015510458455`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"81d0d641-85ea-42a6-9641-aa770949ecd2"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"S0H", ",", "sigmaT"}], "]"}]], "Input",
 CellChangeTimes->{{3.755001400060593*^9, 3.755001400226844*^9}, {
  3.7550015763895607`*^9, 3.755001580891612*^9}, {3.7550016333778324`*^9, 
  3.7550016367930765`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"28bec43e-e76d-4463-9d29-c32ba0fd6212"]
}, Closed]],

Cell[CellGroupData[{

Cell["Analyse Tensor parameters", "Subsubsection",
 CellChangeTimes->{{3.7549186656015377`*^9, 3.7549186728649974`*^9}, 
   3.7549194024976115`*^9, {3.7550008603924294`*^9, 3.7550008637192807`*^9}, 
   3.7550015902694283`*^9},
 CellTags->"c:63",ExpressionUUID->"5df7f489-c3af-447f-892b-2d741b7472b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eig", "=", 
   RowBox[{"EigenvalCalc", "[", "tens", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fa", "=", 
   RowBox[{"FACalc", "[", "eig", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"md", "=", 
   RowBox[{"ADCCalc", "[", "eig", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"cl", ",", "cp", ",", "cs"}], "}"}], "=", 
   RowBox[{"WestinMeasures", "[", "eig", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8705049348269043`*^9, 3.870504948757802*^9}, {
  3.8705051652047434`*^9, 3.8705052676058707`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"24c3899b-694b-4771-a7d6-cec18d60bac9"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"GridData", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cl", ",", "cp", ",", "cs"}], "}"}], ",", "3"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8705051949214144`*^9, 3.870505225351012*^9}, {
  3.870507136666195*^9, 3.870507156346069*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"3c550b97-fb74-42b7-bd13-854bf4fdc94d"],

Cell["\<\
ParameterCalc will calculate l1, l2, l3, MD and FA. Internally it uses \
EignvalCalc, ADCCal and FACalc\
\>", "Text",
 CellChangeTimes->{{3.7550008023956223`*^9, 3.7550008212908936`*^9}, {
  3.758440930595067*^9, 
  3.758440954625654*^9}},ExpressionUUID->"827dae19-915f-47c7-88e0-\
29476a68b6eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"par", "=", 
   RowBox[{"ParameterCalc", "[", "tens", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7549186746012135`*^9, 3.75491868181139*^9}, 
   3.75491987629683*^9, {3.7549199750647078`*^9, 3.7549199854126315`*^9}, 
   3.755000732829716*^9, {3.755000800069415*^9, 3.7550008004599547`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"6288443b-53ef-46c2-adb6-5fd242877ecd"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"par", "[", 
    RowBox[{"[", "4", "]"}], "]"}], ",", 
   RowBox[{"par", "[", 
    RowBox[{"[", "5", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", ".5"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549201719106073`*^9, 3.7549202047145824`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"7d283bc0-0b1c-4f90-843a-7e94e6175fe9"],

Cell["Get the parameters from muscle masks in table form", "Text",
 CellChangeTimes->{{3.755000843971737*^9, 
  3.755000856556223*^9}},ExpressionUUID->"c7e1f636-4a65-44ba-97f5-\
3c532c2ec232"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"masks", ",", "labs"}], "}"}], "=", 
   RowBox[{"SplitSegmentations", "[", "labels", "]"}]}], ";"}], "\n", 
 RowBox[{"TableForm", "@", 
  RowBox[{"GetMaskMeans", "[", 
   RowBox[{
    RowBox[{"par", "[", 
     RowBox[{"[", "4", "]"}], "]"}], ",", "masks", ",", "\"\<MD\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "@", 
  RowBox[{"GetMaskMeans", "[", 
   RowBox[{
    RowBox[{"par", "[", 
     RowBox[{"[", "5", "]"}], "]"}], ",", "masks", ",", "\"\<FA\>\""}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.754919933167025*^9, 3.7549199519066277`*^9}, 
   3.7550008748413715`*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"016438a3-9162-4cbf-bae2-0cd4f7115cfa"],

Cell["\<\
Plot the parameters prom a muscle mask as a Histogram to evaluate their \
distribution\
\>", "Text",
 CellChangeTimes->{{3.7550008867946796`*^9, 
  3.7550009101257515`*^9}},ExpressionUUID->"811ccd9c-c131-4267-85e8-\
406bc2e46d47"],

Cell[BoxData[
 RowBox[{"Grid", "@", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Hist", "[", 
       RowBox[{
        RowBox[{"GetMaskData", "[", 
         RowBox[{
          RowBox[{"par", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", "#"}], "]"}], ",", 
        RowBox[{"Method", "\[Rule]", "\"\<Both\>\""}]}], "]"}], "&"}], "/@", 
     RowBox[{
      RowBox[{"Transpose", "[", "masks", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "6"}], "]"}], "]"}]}], ",", "3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.754920962778118*^9, 3.7549209861502666`*^9}, {
  3.7549211603226004`*^9, 3.7549211784332447`*^9}, {3.754921251856983*^9, 
  3.7549212556549807`*^9}, {3.754999246118026*^9, 3.754999247507222*^9}, {
  3.7550009157742796`*^9, 3.7550009289458475`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"a7a27062-ebb2-4ed3-a1d1-3025b602e14b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculate Tensor angles", "Subsubsection",
 CellChangeTimes->{{3.7549205638416615`*^9, 3.7549205750434775`*^9}, {
  3.7550009652188683`*^9, 3.755000970820772*^9}},
 CellTags->"c:64",ExpressionUUID->"e037ed65-c2cd-4cc5-8065-ba7af72e972b"],

Cell["\<\
First filter the tensor using a diffusionFilter and anisotropic smoothing.\
\>", "Text",
 CellChangeTimes->{{3.755000973750066*^9, 3.7550009919163976`*^9}, {
  3.755001047885309*^9, 
  3.7550010495798187`*^9}},ExpressionUUID->"da9608bd-9f5a-4fa4-b8a1-\
f1650dab7c2a"],

Cell[BoxData[
 RowBox[{"Options", "@", "AnisoFilterTensor"}]], "Input",
 CellChangeTimes->{{3.8709322243461847`*^9, 3.870932228700492*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"ff560c23-792c-49a2-9cd2-ce9d09a17f64"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tensF", "=", 
   RowBox[{"AnisoFilterTensor", "[", 
    RowBox[{"tens", ",", "datareg", ",", 
     RowBox[{"AnisoFilterSteps", "\[Rule]", "3"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7549202250785255`*^9, 3.7549202397016525`*^9}, 
   3.755001029185559*^9, {3.8709322499734344`*^9, 3.8709322513971157`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"3fe6c7c2-00b5-4d1e-b4f8-750688380984"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"tens", ",", "tensF"}], "]"}]], "Input",
 CellChangeTimes->{{3.8709321395162773`*^9, 3.8709321445475044`*^9}, {
  3.874735554822259*^9, 
  3.874735561528816*^9}},ExpressionUUID->"25e62b7b-fcf3-450b-9801-\
5da78cc91f73"],

Cell[BoxData[
 RowBox[{"ColorFAPlot", "[", "tensF", "]"}]], "Input",
 CellChangeTimes->{{3.755001208033079*^9, 3.7550012133556104`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"d05c621c-17a6-4dab-b5a8-744183e72ded"],

Cell["\<\
Calculate the eigenvectors and their angle with respect to the slice normal\
\>", "Text",
 CellChangeTimes->{{3.7550009993812585`*^9, 
  3.755001024147148*^9}},ExpressionUUID->"c2e709da-971c-4de4-a9f5-\
34d1b012c9b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eigVal", "=", 
   RowBox[{"EigenvecCalc", "[", "tensF", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"angMap", "=", 
   RowBox[{"AngleCalc", "[", 
    RowBox[{
     RowBox[{"eigVal", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "All", ",", "All", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"Distribution", "\[Rule]", "\"\<0-90\>\""}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7549204064330254`*^9, 3.754920423101942*^9}, 
   3.755000996767805*^9},
 CellLabel->"In[53]:=",ExpressionUUID->"cfeacfe6-ee62-43ac-999d-2a12cb57a737"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"angMap", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "90"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549205923651466`*^9, 3.754920595437496*^9}, {
  3.754920650714964*^9, 3.7549206547954545`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"ecc0c585-9da4-4f6a-a6fe-b989e06865e6"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fasciculation Detection", "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7554985560315247`*^9, 3.755498559150863*^9}, {
   3.7584331056859984`*^9, 3.758433107556983*^9}, {3.879502469039408*^9, 
   3.879502496035444*^9}},ExpressionUUID->"6367df6a-3bf9-42c3-95c2-\
a5b907de76be"],

Cell[CellGroupData[{

Cell["Import and select the Data", "Subsection",
 CellChangeTimes->{{3.755000756204663*^9, 3.7550007614125185`*^9}, {
  3.879502883009246*^9, 3.879502885681193*^9}},
 CellTags->"c:52",ExpressionUUID->"5339986f-899b-4db3-9ea6-b1257b77c4d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dwi", ",", "grad", ",", "val", ",", "dwivox"}], "}"}], "=", 
   RowBox[{"ImportNiiDiff", "[", "\"\<DTIdata.nii\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dwiS", ",", "valS"}], "}"}], "=", 
   RowBox[{"SelectBvalueData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dwi", ",", "val"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"200", ",", "600"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8795036451708927`*^9, 3.879503689411589*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"b4ca7c7a-0435-4a9f-9066-7c2cc2fc3cf7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{
     RowBox[{"NormalizeMeanData", "[", "dwiS", "]"}], ",", "10", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskComponents", "\[Rule]", "2"}], ",", 
     RowBox[{"MaskClosing", "\[Rule]", "3"}], ",", 
     RowBox[{"MaskDilation", "->", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mask1", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{
     RowBox[{"NormalizeMeanData", "[", "dwiS", "]"}], ",", "10", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskComponents", "\[Rule]", "1"}], ",", 
     RowBox[{"MaskClosing", "\[Rule]", "3"}], ",", 
     RowBox[{"MaskDilation", "->", 
      RowBox[{"-", "1"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.879503800516291*^9, 3.879503848645571*^9}, 
   3.8795039729698715`*^9, {3.879504036211814*^9, 3.879504059733532*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"76484e7f-2381-4d9f-86d8-59c5553916b3"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dwiS", ",", "mask"}], "]"}]], "Input",
 CellChangeTimes->{{3.8795038542973433`*^9, 3.8795038769644074`*^9}, {
  3.8795040457968345`*^9, 
  3.879504046788802*^9}},ExpressionUUID->"5fd9da1b-b57c-461d-964e-\
9df3c3ee21d6"]
}, Closed]],

Cell[CellGroupData[{

Cell["Find and select activations", "Subsection",
 CellChangeTimes->{{3.8786409325896664`*^9, 3.8786409527581987`*^9}, {
  3.8795039651397467`*^9, 
  3.8795039688996186`*^9}},ExpressionUUID->"6f5bad77-bc3d-408e-ac09-\
1fb94ceb0884"],

Cell["The full output is needed to evaluate the activations", "Text",
 CellChangeTimes->{{3.8795040100572033`*^9, 
  3.8795040203742604`*^9}},ExpressionUUID->"0fccbf03-8400-4d66-a17c-\
f38e7ee05ce7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"out", "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"act", ",", "dat", ",", " ", "mn", ",", " ", "tr"}], "}"}], "=", 
     RowBox[{"FindActivations", "[", 
      RowBox[{"dwiS", ",", " ", "mask", ",", 
       RowBox[{"IgnoreSlices", "->", 
        RowBox[{"{", 
         RowBox[{"3", ",", "3"}], "}"}]}], ",", 
       RowBox[{"ActivationThreshold", "->", 
        RowBox[{"{", 
         RowBox[{"3.5", ",", ".6"}], "}"}]}], ",", 
       RowBox[{"ActivationOutput", "->", "All"}], ",", 
       RowBox[{"MaskDilation", "->", "2"}], ",", " ", 
       RowBox[{"ActivationIterations", "->", " ", "5"}], ",", " ", 
       RowBox[{"ActivationBackground", "->", "10"}]}], "]"}]}]}], ";"}], "//",
   "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.879504001732992*^9, 3.8795040027250123`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"2ff79ec1-195d-419f-8081-0384af784f51"],

Cell["Select only the activations in one Leg", "Text",
 CellChangeTimes->{{3.8795040100572033`*^9, 3.8795040203742604`*^9}, {
  3.8795040722917185`*^9, 
  3.8795040795245275`*^9}},ExpressionUUID->"1e7af395-2763-4776-9b6c-\
9c6bf2fcf02e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"actS", ",", "actST"}], "}"}], "=", 
    RowBox[{"SelectActivations", "[", 
     RowBox[{"act", ",", "mask1"}], "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.8795040526608505`*^9, 3.8795040535411477`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"1229bcfc-9d4b-403f-9279-8e4ff9cee7ab"]
}, Closed]],

Cell[CellGroupData[{

Cell["Analyze and Evaluate activations", "Subsection",
 CellChangeTimes->{{3.8786409325896664`*^9, 3.8786409527581987`*^9}, {
  3.8795039651397467`*^9, 3.8795039688996186`*^9}, {3.8795041213642206`*^9, 
  3.8795041290758505`*^9}},ExpressionUUID->"579c80b5-ca54-4e6c-82bf-\
561ef932ffb0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vol", "=", 
   RowBox[{"AnalyzeActivations", "[", 
    RowBox[{"actS", ",", "mask1", ",", "\"\<All\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dataset", "@", "vol"}]}], "Input",
 CellChangeTimes->{{3.878978449524127*^9, 3.8789784553683767`*^9}, {
  3.879225923987977*^9, 3.8792259346107807`*^9}, {3.8795041541977243`*^9, 
  3.8795041547410774`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"77074926-ca5d-479a-bd78-1753c2b06501"],

Cell[BoxData[
 RowBox[{"EvaluateActivation", "[", 
  RowBox[{"out", ",", "actS"}], "]"}]], "Input",
 CellChangeTimes->{{3.8775199412024593`*^9, 3.8775199487859926`*^9}, {
   3.877520963205028*^9, 3.877520992979617*^9}, {3.877521166085047*^9, 
   3.8775211674294243`*^9}, {3.877521272103357*^9, 3.877521290502268*^9}, 
   3.8775860572714996`*^9, 3.8775979457321167`*^9, {3.877752203827509*^9, 
   3.877752203975175*^9}, {3.878627647572114*^9, 3.8786276483891096`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"ce424450-5d12-4997-ac3a-168138d0aa21"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulate Tensor Data and fit testing", "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7554985560315247`*^9, 3.755498559150863*^9}, {
   3.7584331056859984`*^9, 
   3.758433107556983*^9}},ExpressionUUID->"1751ae4d-03af-43ab-814a-\
5f1f74188c44"],

Cell[CellGroupData[{

Cell["Simulate Diffusion signal", "Subsection",
 CellChangeTimes->{{3.7555055424913597`*^9, 3.755505547990526*^9}},
 CellTags->"c:65",ExpressionUUID->"d31f39f7-0271-44c7-bb22-4483ca591ade"],

Cell["MRI acquisition parameters used in simulation", "Text",
 CellChangeTimes->{{3.755498706578211*^9, 
  3.7554987088653297`*^9}},ExpressionUUID->"10ef7ece-7769-4d88-bcb0-\
24ae840e2ae7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"grad", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"GenerateGradients", "[", 
      RowBox[{"16", ",", 
       RowBox[{"VisualOpt", "\[Rule]", "False"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "0.", ",", "0."}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bvec", "=", 
   RowBox[{
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"450", ",", 
        RowBox[{
         RowBox[{"Length", "[", "grad", "]"}], "-", "1"}]}], "]"}], ",", 
      "0"}], "]"}], "//", "N"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"TR", ",", "TE"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"2990", ",", "49"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"parMus", "=", 
    RowBox[{"{", 
     RowBox[{"0.9", ",", "1200", ",", "37"}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"pd", ",", "T1", ",", "T2"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parFat", "=", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", "300", ",", "80"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dim", "=", 
    RowBox[{"{", 
     RowBox[{"50", ",", "50"}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"2500", " ", "voxels"}], "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7554991728825464`*^9, 3.7554991895206566`*^9}, {
   3.7555027201165314`*^9, 3.755502726818404*^9}, 3.7555027960200157`*^9, {
   3.7555046513955193`*^9, 3.755504652242817*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"5bf5b320-1c49-437a-99de-8917ff7c9d0c"],

Cell["diffusion properties of fat and muscle", "Text",
 CellChangeTimes->{{3.7554987153767567`*^9, 3.755498717795229*^9}, {
  3.755498845121635*^9, 
  3.755498846384009*^9}},ExpressionUUID->"924a6c5c-f5e2-49c7-9aec-\
d99cba543428"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eigFat", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.8", ",", "0.8", ",", "0.8"}], "}"}], "/", "1000."}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"MDfat", ",", "FAfat"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", "eigFat", "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"ADCCalc", ",", "FACalc"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"trueFat", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"1000", "*", "eigFat"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1000", "MDfat"}], ",", "FAfat"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eigMus", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.6", ",", "1.4", ",", "1.0"}], "}"}], "/", "1000."}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"MDmus", ",", "FAmus"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", "eigMus", "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"ADCCalc", ",", "FACalc"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trueMus", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"1000", "*", "eigMus"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1000", "MDmus"}], ",", "FAmus"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7554987124178233`*^9, 3.7554987420325537`*^9}, {
  3.755498807491068*^9, 3.7554989260180225`*^9}, {3.7554989951714444`*^9, 
  3.7554990114404864`*^9}, {3.755503913939555*^9, 3.755503915827593*^9}, {
  3.7555045928829904`*^9, 3.7555045943549566`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"ac329d16-f122-4398-9d78-bd98c3eb7a70"],

Cell["\<\
relative signal of muscle and fat, muscle signal is set to 1 and fat signal \
is relative to that\
\>", "Text",
 CellChangeTimes->{
  3.7554987349964027`*^9},ExpressionUUID->"1460edd8-ebc9-4085-89c9-\
9648c5994b0c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sigMus", "=", 
   RowBox[{"Signal", "[", 
    RowBox[{"parMus", ",", "TR", ",", "TE"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sigFat", "=", 
   RowBox[{"Signal", "[", 
    RowBox[{"parFat", ",", "TR", ",", "TE"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sigMus", ",", "sigFat"}], "}"}], "=", 
   RowBox[{"1000", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigMus", ",", "sigFat"}], "}"}], "/", "sigMus"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.755498733095319*^9, 3.7554987566720223`*^9}, {
  3.7555040874450517`*^9, 3.755504088387574*^9}, {3.7555045991718335`*^9, 
  3.7555046397624445`*^9}, {3.7555046804054747`*^9, 3.75550471723564*^9}, {
  3.755505126598693*^9, 3.755505158163907*^9}, {3.755505202579651*^9, 
  3.7555052230444407`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"8ef48365-f337-4591-929a-e3834a62a6b4"],

Cell["SNR and fat range for simulation", "Text",
 CellChangeTimes->{
  3.7554987547880144`*^9},ExpressionUUID->"a46f428a-dc95-4a9c-94ee-\
db51bba31c07"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SNR", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"5", ",", "55", ",", "5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fat", "=", 
   RowBox[{
    RowBox[{"N", "@", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "60", ",", "5"}], "]"}]}], "/", "100"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.755498747952379*^9, 3.7554987529771776`*^9}, {
  3.7555026885814595`*^9, 3.7555026952833323`*^9}, {3.7555039261491194`*^9, 
  3.7555039312025957`*^9}, {3.7555047653022795`*^9, 3.755504765826683*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"4c01170b-1dc6-4a6f-94bb-326f8fac8dcb"],

Cell["Each slice has a different SNR value", "Text",
 CellChangeTimes->{{3.7554992010614014`*^9, 3.755499222088479*^9}, {
  3.7554992963196063`*^9, 3.7554993090876026`*^9}, {3.7554993879996243`*^9, 
  3.7554993928785996`*^9}},ExpressionUUID->"26edf3b3-8ad9-461c-86ea-\
f42fcabaaf29"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"diffSNRData", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"AddNoise", "[", 
      RowBox[{
       RowBox[{"CreateDiffData", "[", 
        RowBox[{
        "sigMus", ",", "eigMus", ",", "bvec", ",", "grad", ",", "dim"}], 
        "]"}], ",", "#", ",", 
       RowBox[{"NoiseSize", "\[Rule]", "\"\<SNR\>\""}]}], "]"}], "&"}], "/@", 
    "SNR"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "diffSNRData", "]"}]}], "Input",
 CellChangeTimes->{{3.755499371169255*^9, 3.755499410639565*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"dc246c71-2d8c-4755-93db-3ddef0094fa6"],

Cell["\<\
Each slice has a different fat concentration and all data has an SNR of 30\
\>", "Text",
 CellChangeTimes->{{3.7554992010614014`*^9, 3.755499222088479*^9}, {
  3.7554992963196063`*^9, 3.7554993090876026`*^9}, {3.755499418469868*^9, 
  3.755499419198783*^9}},ExpressionUUID->"2870d320-5902-4ad9-9183-\
18b8640c365a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"diffFatData", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "#"}], ")"}], 
        RowBox[{"CreateDiffData", "[", 
         RowBox[{
         "sigMus", ",", "eigMus", ",", "bvec", ",", "grad", ",", "dim"}], 
         "]"}]}], "+", 
       RowBox[{"#", " ", 
        RowBox[{"CreateDiffData", "[", 
         RowBox[{
         "sigFat", ",", "eigFat", ",", "bvec", ",", "grad", ",", "dim"}], 
         "]"}]}]}], ")"}], "&"}], "/@", "fat"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"diffFatData", "=", 
   RowBox[{"AddNoise", "[", 
    RowBox[{"diffFatData", ",", 
     RowBox[{"1000", "/", "30."}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "diffFatData", "]"}]}], "Input",
 CellChangeTimes->{{3.7554990540502625`*^9, 3.7554990574422503`*^9}, {
  3.755499098578025*^9, 3.755499165345476*^9}, {3.7554991990731335`*^9, 
  3.755499199856219*^9}, {3.7554992345026464`*^9, 3.7554992567207756`*^9}, {
  3.7554992876353903`*^9, 3.7554993508476458`*^9}, {3.7555040025015373`*^9, 
  3.755504002562702*^9}, {3.755504115733507*^9, 3.755504119538631*^9}, {
  3.7555051476217604`*^9, 3.7555051480198555`*^9}, {3.7555058283248744`*^9, 
  3.755505829011708*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"bc673003-00c7-4136-ab12-9df2d7f84eeb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fit the simulated diffusion signal", "Subsection",
 CellChangeTimes->{{3.758349069323036*^9, 3.7583490793226967`*^9}, {
  3.7584697305882645`*^9, 3.758469732599307*^9}},
 CellTags->"c:66",ExpressionUUID->"09dc6daf-59ee-4840-bd77-0dfd2bff5562"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tensSNR", ",", "S0SNR", ",", "outSNR", ",", "resSNR"}], "}"}], 
   "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{"diffSNRData", ",", "grad", ",", "bvec"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tensFat", ",", "S0Fat", ",", "outFat", ",", "resFat"}], "}"}], 
   "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{"diffFatData", ",", "grad", ",", "bvec"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7554994561780434`*^9, 3.7554994672640123`*^9}, {
   3.7554995041277866`*^9, 3.7554995062093306`*^9}, {3.7554999740035515`*^9, 
   3.7554999771208525`*^9}, {3.7555000830755177`*^9, 3.755500086728283*^9}, {
   3.7555038872848186`*^9, 3.755503894660489*^9}, {3.7555040058494663`*^9, 
   3.7555040072512045`*^9}, 3.755505488884363*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"936e9f89-0d66-473b-9277-3d000d5d55d5"],

Cell["\<\
Calculate Parameters with and without rejection of negative eigenvalues\
\>", "Text",
 CellChangeTimes->{{3.7555057186792235`*^9, 
  3.755505737032175*^9}},ExpressionUUID->"8fa6be86-0e1e-4c2d-92fd-\
815afc33504c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parSNR", "=", 
   RowBox[{"ParameterCalc", "[", 
    RowBox[{"tensSNR", ",", 
     RowBox[{"Reject", "\[Rule]", "False"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"parFat", "=", 
   RowBox[{"ParameterCalc", "[", 
    RowBox[{"tensFat", ",", 
     RowBox[{"Reject", "\[Rule]", "False"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.755500102429257*^9, 3.755500118594836*^9}, 
   3.755500158406703*^9, {3.7555022625180807`*^9, 3.755502271492881*^9}, {
   3.758470651156897*^9, 3.7584706560885053`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"16a20155-a9d0-46dd-9004-3126334dafa9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parSNRT", "=", 
   RowBox[{"ParameterCalc", "[", 
    RowBox[{"tensSNR", ",", 
     RowBox[{"Reject", "\[Rule]", "True"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"parFatT", "=", 
   RowBox[{"ParameterCalc", "[", 
    RowBox[{"tensFat", ",", 
     RowBox[{"Reject", "\[Rule]", "True"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.755500102429257*^9, 3.755500118594836*^9}, 
   3.755500158406703*^9, {3.7555022625180807`*^9, 3.755502271492881*^9}, {
   3.7555057406599007`*^9, 3.755505770595284*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"d9be655b-99c1-4a49-92e9-1066227e6a3d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Evaluate the fits", "Subsection",
 CellChangeTimes->{{3.7583490835356913`*^9, 3.75834908874759*^9}},
 CellTags->"c:67",ExpressionUUID->"f1a32196-e07f-40de-9d22-2a3e291b7dda"],

Cell["Show histogram of MD and FA with different SNR values", "Text",
 CellChangeTimes->{{3.755500179573262*^9, 3.7555001958141766`*^9}, {
  3.755500399489155*^9, 
  3.755500419601555*^9}},ExpressionUUID->"ca482818-c0ff-4fd6-a65d-\
7ccf593d5fbc"],

Cell[BoxData[{
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"parSNR", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.1", ",", "1.8"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<MD\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<SNR = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"SNR", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "SNR", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"parSNR", "[", 
        RowBox[{"[", 
         RowBox[{"5", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.01", ",", "0.5"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<FA\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<SNR = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"SNR", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "SNR", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.755500162982013*^9, 3.7555001712671423`*^9}, {
  3.755500207797134*^9, 3.755500389828378*^9}, {3.755500476213152*^9, 
  3.7555004765159626`*^9}, {3.755502751367876*^9, 3.755502765781315*^9}, {
  3.7555028251228733`*^9, 3.7555028274430604`*^9}, {3.755505256917855*^9, 
  3.755505257698938*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"e1644f4b-cc91-419f-a202-938b3f310269"],

Cell["Show histogram of MD and FA with different fat values", "Text",
 CellChangeTimes->{{3.755500179573262*^9, 3.7555001958141766`*^9}, {
  3.755500399489155*^9, 3.755500419601555*^9}, {3.755504259300619*^9, 
  3.7555042596989145`*^9}},ExpressionUUID->"eb75b5be-106f-402c-87c8-\
a260f27e02a9"],

Cell[BoxData[{
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"parFat", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.8", ",", "1.8"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<MD\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<fat [%] = \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"100", 
           RowBox[{"fat", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"Length", "[", "fat", "]"}], ",", "5"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"parFat", "[", 
        RowBox[{"[", 
         RowBox[{"5", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.01", ",", "0.5"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<FA\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<fat [%] = \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"100", 
           RowBox[{"fat", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"Length", "[", "fat", "]"}], ",", "5"}], "]"}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.755500162982013*^9, 3.7555001712671423`*^9}, {
  3.755500207797134*^9, 3.755500389828378*^9}, {3.755500476213152*^9, 
  3.7555004765159626`*^9}, {3.755502751367876*^9, 3.755502765781315*^9}, {
  3.7555028251228733`*^9, 3.7555028274430604`*^9}, {3.755504263621405*^9, 
  3.7555043462739897`*^9}, {3.755505301230109*^9, 3.7555053021796412`*^9}, {
  3.755505373463333*^9, 3.7555053828834915`*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"73bedda0-2b21-40b2-b6f2-ac649cc09720"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parSNR", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", "SNR", ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "2"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<MD\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<MD as function of SNR\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parSNR", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", "SNR", ",", 
      RowBox[{"{", 
       RowBox[{"0.15", ",", "0.5"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<FA\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<FA as function of SNR\>\""}]}], "]"}]}],
    "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7555029294139233`*^9, 3.755502944645937*^9}, {
   3.7555032449315224`*^9, 3.755503245778783*^9}, {3.7555033968206387`*^9, 
   3.755503412773309*^9}, {3.755503455748889*^9, 3.755503541041586*^9}, {
   3.7555037516536865`*^9, 3.7555038438775*^9}, 3.7555054146962986`*^9, {
   3.7555054546298923`*^9, 3.7555054697152395`*^9}, {3.7555056432709084`*^9, 
   3.7555056532680564`*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"e72fb9d0-91ec-427c-bffa-63847b71c7e9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQEiDumFNnIz5b/YQ/gqDvsW/nhSLvUVytdzkGjg
KnnJBOObOMw6FnJSNhjGt3S4sHS2aIMrjG/nsGxf9creECi/wdFhHsey304+
MHkXh/Syp/w/Yfob3Bza3afxxgfA5D0dtJQD2Fy8YfLeDntvHah/EAeTF3GY
NRMEXsLd62w7X7hJ4iPcvR5rQ5bL2XyCu9cpsev37sDPcPe+FbU8zDv/M9y9
UScnqnz99hnu3mf/mXK4JL/A3at7/EOan/8XuHst/x9ufRT3Be7eLYcf3u4o
+QJ3r+3r90vvLPwCd6/YgwUWt3n+wN1ryRa0LVfmJ9y9L4IOOGw5+R3u3k/a
8tPrQ77D3bvZ9F/6p9ff4O79tDlVT23TN7h7wwQ9u6vrv8Hdu1D11o7FEd/g
7r3anzH1tuM3uHsXNO0z+K/4DeHeUxMjn0h/sz/t3HhvQpkYPHwBuqGodg==

      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          Opacity[0.2], 
          RGBColor[1, 0, 0]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{12, 34, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 33, 
            32, 31, 30, 29, 28, 27, 26, 25, 24, 
            23}}]}]}, {}, {}, {}}, {{}, {}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{34, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22}]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
          33}]}}}], {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {5.25, 0.806}, PlotRange -> {{5, 55}, {0.8, 2}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {5.25, 0.806}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"MD\"", TraditionalForm], None}, {
        FormBox["\"SNR\"", TraditionalForm], None}}, FrameStyle -> 
     Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"MD as function of SNR\"", TraditionalForm], 
     PlotRange -> {{5, 55}, {0.8, 2}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQEiDhD6gT2EVnF4EJyqtHTWLShfzyFNIHOtQ8tV
KN/EwWWOWdrW2ZegfEuHvgC+nIPJF6F8O4f/b8qX6FldgPAbHB1yrSeWz7hw
Hirv4hDS9YQ/gAfKb3BzuPzWp0by3TmovKfDvPdV6dwuUH6Dt8Oa2CrGK9Iw
eRGHa9IyFyr33oG71/DjxWrzRRfh7hVi32N1TPsc3L05nEK3/0qehrs3g+FI
Y0zaKbh7f131E9coOQl374tN8a/enDoJd2+RY2z3heMn4e49tPrUD0uDU3D3
Tsttt9FlPgV3L/eZOsEDQafg7kUNXz0HZ9kS23mfbsPdd8n4yb3sVdfh7nux
wGp6yJSrcPcx5nvYeu66DHffz8REJqXXl+Dum/3S9FS6xiW4+z5Nf17/5+pF
uPsuW5ifLHG6CHff8u+7fhR/umA/r7Q9rPaeAtx9R5arMlxcrwHnAwCmgJqN

      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          Opacity[0.2], 
          RGBColor[1, 0, 0]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 32, 31, 
            30, 29, 28, 27, 26, 25, 24, 34, 
            23}}]}]}, {}, {}, {}}, {{}, {}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large]], 
         LineBox[{33, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22}]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{34, 24, 25, 26, 27, 28, 29, 30, 31, 
          32}]}}}], {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {5.25, 0.15175}, PlotRange -> {{5, 55}, {0.15, 0.5}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {5.25, 0.15175}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"FA\"", TraditionalForm], None}, {
        FormBox["\"SNR\"", TraditionalForm], None}}, FrameStyle -> 
     Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"FA as function of SNR\"", TraditionalForm], 
     PlotRange -> {{5, 55}, {0.15, 0.5}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Input",
 CellChangeTimes->{{3.7585379195504637`*^9, 
  3.758537942921279*^9}},ExpressionUUID->"659a2995-7727-4d66-9c45-\
aaeb505470d5"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parFat", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", 
      RowBox[{"100", "fat"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.5"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<fat fraction [%]\>\"", ",", "\"\<MD\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<MD as function of fat fraction\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parFat", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", 
      RowBox[{"100", "fat"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.4"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<fat fraction [%]\>\"", ",", "\"\<FA\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<FA as function of fat fraction\>\""}]}],
      "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7555054226454363`*^9, 3.755505444498875*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"7039e879-900b-4789-b0f3-47a256fa0bbf"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parSNRT", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", "SNR", ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "2"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<MD\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<MD as function of SNR\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parSNRT", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", "SNR", ",", 
      RowBox[{"{", 
       RowBox[{"0.15", ",", "0.5"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<FA\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<FA as function of SNR\>\""}]}], "]"}]}],
    "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7555029294139233`*^9, 3.755502944645937*^9}, {
   3.7555032449315224`*^9, 3.755503245778783*^9}, {3.7555033968206387`*^9, 
   3.755503412773309*^9}, {3.755503455748889*^9, 3.755503541041586*^9}, {
   3.7555037516536865`*^9, 3.7555038438775*^9}, 3.7555054146962986`*^9, {
   3.7555054546298923`*^9, 3.7555054697152395`*^9}, {3.7555056432709084`*^9, 
   3.7555056532680564`*^9}, {3.7555057548698072`*^9, 3.755505756086052*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"e4f0b636-a1bc-40f5-a4ba-1f9a6c814878"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parFatT", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", 
      RowBox[{"100", "fat"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.5"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<fat fraction [%]\>\"", ",", "\"\<MD\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<MD as function of fat fraction\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parFatT", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", 
      RowBox[{"100", "fat"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.4"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<fat fraction [%]\>\"", ",", "\"\<FA\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<FA as function of fat fraction\>\""}]}],
      "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7555054226454363`*^9, 3.755505444498875*^9}, {
  3.7555057607111783`*^9, 3.755505761685171*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"9ea6aef0-d1d8-4b93-aa04-3764b091c42d"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ErrorPlot", "[", 
       RowBox[{
        RowBox[{"parSNRT", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", "SNR", ",", 
        RowBox[{"{", 
         RowBox[{"0.8", ",", "2"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<SNR\>\"", ",", "\"\<MD\>\""}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<MD as function of SNR\>\""}]}], 
       "]"}], ",", 
      RowBox[{"AspectRatio", "->", "1"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ErrorPlot", "[", 
       RowBox[{
        RowBox[{"parSNRT", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", "SNR", ",", 
        RowBox[{"{", 
         RowBox[{"0.15", ",", "0.5"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<SNR\>\"", ",", "\"\<FA\>\""}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "->", "\"\<FA as function of SNR\>\""}]}], "]"}],
       ",", 
      RowBox[{"AspectRatio", "->", "1"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ErrorPlot", "[", 
       RowBox[{
        RowBox[{"parFatT", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"100", "fat"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.0", ",", "1.5"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<fat fraction [%]\>\"", ",", "\"\<MD\>\""}], "}"}]}], 
        ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", "\"\<MD as function of fat fraction\>\""}]}], 
       "]"}], ",", 
      RowBox[{"AspectRatio", "->", "1"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ErrorPlot", "[", 
       RowBox[{
        RowBox[{"parFatT", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"100", "fat"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.4"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<fat fraction [%]\>\"", ",", "\"\<FA\>\""}], "}"}]}], 
        ",", 
        RowBox[{
        "PlotLabel", "->", "\"\<FA as function of fat fraction\>\""}]}], 
       "]"}], ",", 
      RowBox[{"AspectRatio", "->", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7555029294139233`*^9, 3.755502944645937*^9}, {
   3.7555032449315224`*^9, 3.755503245778783*^9}, {3.7555033968206387`*^9, 
   3.755503412773309*^9}, {3.755503455748889*^9, 3.755503541041586*^9}, {
   3.7555037516536865`*^9, 3.7555038438775*^9}, 3.7555054146962986`*^9, {
   3.7555054546298923`*^9, 3.7555054697152395`*^9}, {3.7555056432709084`*^9, 
   3.7555056532680564`*^9}, {3.7555057548698072`*^9, 3.755505756086052*^9}, {
   3.87948502516197*^9, 3.8794850653464766`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"49de4251-0eb3-46c4-a80a-0eb2ece4da4e"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fiber Tractography", "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7554985560315247`*^9, 3.755498559150863*^9}, {
   3.7584331056859984`*^9, 3.758433107556983*^9}, {3.8375093153349724`*^9, 
   3.8375093191763477`*^9}, {3.865585680152398*^9, 3.865585681052548*^9}, {
   3.8698092317693205`*^9, 
   3.8698092348356304`*^9}},ExpressionUUID->"bc90db84-1b9a-464f-bfcb-\
7bfcdc17cc16"],

Cell[CellGroupData[{

Cell["Import The Data", "Subsection",
 CellChangeTimes->{{3.755000756204663*^9, 3.7550007614125185`*^9}},
 CellTags->"c:68",ExpressionUUID->"01c3231d-098c-4ccb-98c5-ca29c556a67d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"datareg", ",", "gradF", ",", "valF", ",", "dwivox"}], "}"}], "=", 
   RowBox[{"ImportNiiDiff", "[", 
    RowBox[{"\"\<DTIdata-reg.nii\>\"", ",", 
     RowBox[{"FlipBvec", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tens", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"ImportNii", "[", 
     RowBox[{"\"\<DTI-tensor.nii\>\"", ",", 
      RowBox[{"NiiMethod", "\[Rule]", "\"\<data\>\""}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tensF", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"ImportNii", "[", 
     RowBox[{"\"\<DTI-tensor-filt.nii\>\"", ",", 
      RowBox[{"NiiMethod", "\[Rule]", "\"\<data\>\""}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"labels", ",", "vox"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<labels.nii\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dim", "=", 
   RowBox[{"Dimensions", "[", 
    RowBox[{"First", "@", "tens"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.754895634046774*^9, 3.754895667562751*^9}, 
   3.7549147982158546`*^9, {3.7549998933836317`*^9, 3.7549998936081953`*^9}, {
   3.7550004747855062`*^9, 3.7550004893652954`*^9}, {3.7550005862069235`*^9, 
   3.755000615146139*^9}, {3.7550007439214835`*^9, 3.7550007442834463`*^9}, {
   3.8375094202002344`*^9, 3.8375094204766045`*^9}, {3.8375096188675065`*^9, 
   3.8375096327441254`*^9}, {3.8375106329545126`*^9, 
   3.8375106331145935`*^9}, {3.837511057132757*^9, 3.8375110681724567`*^9}, 
   3.8375111830577602`*^9, {3.8375115007051735`*^9, 3.8375115008517933`*^9}, {
   3.8375116843240447`*^9, 3.8375116917766247`*^9}, 3.8375119754757657`*^9, {
   3.837512081798009*^9, 3.837512107347674*^9}, {3.8485704645430946`*^9, 
   3.848570470409502*^9}, {3.8695454133997707`*^9, 3.8695454140600057`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"3d03fde1-41a5-4faa-a08e-3aa8eeca546a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Process the data for tractography", "Subsection",
 CellChangeTimes->{{3.8375104797294474`*^9, 3.8375104885479608`*^9}, 
   3.8620286543232174`*^9, 3.865585688515154*^9},
 CellTags->"c:69",ExpressionUUID->"7b2df312-5a60-4afc-9c09-a780d1b79f27"],

Cell["Smooth the data which helps fiber tractography", "Text",
 CellChangeTimes->{{3.8375106376639895`*^9, 
  3.8375106504812546`*^9}},ExpressionUUID->"5f0b1bca-e3d5-41ed-9a70-\
a694208969b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataF", "=", 
   RowBox[{"AnisoFilterData", "[", 
    RowBox[{"datareg", ",", 
     RowBox[{"AnisoItterations", "->", "2"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8375104731632657`*^9, 3.8375105249107714`*^9}, {
  3.8375105761397724`*^9, 3.837510580044135*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"d2775a6c-75c0-463c-becb-f6bfa512909f"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataF", ",", "datareg"}], "]"}]], "Input",
 CellChangeTimes->{{3.870932381976201*^9, 3.8709323868198586`*^9}, 
   3.8747357456560764`*^9},
 CellLabel->
  "In[120]:=",ExpressionUUID->"12720b56-7e2e-45cc-952c-34693e5f7fe2"],

Cell["calculate the tensor with normal or the smoothed data.", "Text",
 CellChangeTimes->{{3.8375106376639895`*^9, 3.8375106653089695`*^9}, {
  3.877347331707106*^9, 
  3.8773473378512545`*^9}},ExpressionUUID->"dcc0e6b5-0a89-49d9-90d4-\
a98753f46dde"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tens", ",", "S0", ",", "outlier", ",", "res"}], "}"}], "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{"datareg", ",", "gradF", ",", "valF"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8485704862851367`*^9, 
  3.8485704887647266`*^9}},ExpressionUUID->"f8f69f22-ac8e-4445-9f50-\
f25c1374ad4c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tensF", ",", "S0", ",", "outlier", ",", "res"}], "}"}], "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{"dataF", ",", "gradF", ",", "valF"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.837510590028081*^9, 3.8375105986846066`*^9}, {
  3.8375121743634157`*^9, 
  3.8375121759722643`*^9}},ExpressionUUID->"9dfec1b0-002d-4e9b-8152-\
5110df278580"],

Cell["Smooth the tensor.", "Text",
 CellChangeTimes->{{3.8375106376639895`*^9, 3.8375106653089695`*^9}, {
  3.877347331707106*^9, 
  3.877347348216476*^9}},ExpressionUUID->"6a0f939e-e625-4f88-a68e-\
d5a439fbffe4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tensF2", "=", 
   RowBox[{"AnisoFilterTensor", "[", 
    RowBox[{"tens", ",", "datareg"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.84857049315275*^9, 3.848570514286255*^9}, 
   3.862028112609728*^9, {3.8709326248898478`*^9, 3.8709326319416137`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"b35d80d6-8ab6-4048-8c66-b1b21e5c335c"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"GridData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tens", ",", "tensF", ",", "tensF2"}], "}"}], ",", "3"}], "]"}],
    ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}], "/", "1000"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.856864359837525*^9, 3.856864368961795*^9}, {
   3.856864476372245*^9, 3.8568644854732904`*^9}, 3.8620282377807074`*^9, {
   3.8698049474177895`*^9, 3.8698049577027807`*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"dec053e8-f133-47db-9804-5e67c2ee6d0f"],

Cell["\<\
For brain data the orientation wiht the longest tracts is the correct one, \
for muscle this is not the case\
\>", "Text",
 CellChangeTimes->{{3.877347573940735*^9, 
  3.8773475996532745`*^9}},ExpressionUUID->"e02e1d10-8162-4157-a544-\
70d0394d7da8"],

Cell[BoxData[
 RowBox[{"FindTensorPermutation", "[", 
  RowBox[{"tens", ",", "vox", ",", 
   RowBox[{"MaxSeedPoints", "\[Rule]", "500"}], ",", 
   RowBox[{"StepSize", "->", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8698863940409584`*^9, 3.8698863988501425`*^9}, {
  3.8699077968178487`*^9, 3.869907883881158*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"98003f04-256e-486f-9e6a-32988ea12280"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fiber Tractography ", "Subsection",
 CellChangeTimes->{{3.755000756204663*^9, 3.7550007614125185`*^9}, 
   3.8375096562311816`*^9, {3.8655856710124984`*^9, 3.8655856793802214`*^9}},
 CellTags->"c:70",ExpressionUUID->"d662ecba-578b-4489-8e5f-fa36d3871aa7"],

Cell["Process the muscle masks", "Text",
 CellChangeTimes->{{3.877347372606675*^9, 
  3.8773473838408775`*^9}},ExpressionUUID->"ce2c72f1-c0ce-4827-9fa9-\
f34eb0a6ffbf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"masks", ",", "labs"}], "}"}], "=", 
   RowBox[{"SplitSegmentations", "[", "labels", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"all", "=", 
   RowBox[{"Dilation", "[", 
    RowBox[{
     RowBox[{"Normal", "@", 
      RowBox[{"Total", "@", 
       RowBox[{"Transpose", "@", 
        RowBox[{"masks", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "All"}], 
          RowBox[{"(*", 
           RowBox[{"5", ";;", "6"}], "*)"}], "]"}], "]"}]}]}]}], ",", "1"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.837509467801848*^9, 3.8375094726240377`*^9}, {
   3.83750962007218*^9, 3.8375096447132525`*^9}, {3.83750968068489*^9, 
   3.83750968257232*^9}, 3.837510273622922*^9, 3.838112996210114*^9, {
   3.838113164653401*^9, 3.83811316473518*^9}, 3.862028868870699*^9, {
   3.8655834616765747`*^9, 3.8655834626828804`*^9}, 3.865583560235936*^9, {
   3.869221606225309*^9, 3.8692216167462187`*^9}, {3.8747448788000565`*^9, 
   3.8747448820056105`*^9}, {3.8747481010397644`*^9, 3.874748101839825*^9}, {
   3.8747484862410173`*^9, 3.8747484891203766`*^9}, {3.874748632756562*^9, 
   3.8747486342890396`*^9}, {3.8773473898524446`*^9, 3.877347414540268*^9}, {
   3.8773474455838966`*^9, 3.8773474715251684`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"e94f71ad-35d3-45b1-b3f9-da7a4a305fbf"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"Mean", "@", 
    RowBox[{"Transpose", "@", "datareg"}]}], ",", "all"}], "]"}]], "Input",
 CellChangeTimes->{{3.8672980470642076`*^9, 3.867298050340861*^9}, {
  3.869221620546195*^9, 3.869221628640093*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"67eef561-a4d4-4ecb-820a-70cda30789b1"],

Cell["\<\
Calculate the tensor parameters which will be used as stop criteria\
\>", "Text",
 CellChangeTimes->{{3.8375096937244864`*^9, 
  3.8375097131614184`*^9}},ExpressionUUID->"416dd865-07cf-4983-831e-\
47ee4c74ed0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"l1", ",", "l2", ",", "l3", ",", "md", ",", "fa"}], "}"}], "=", 
   RowBox[{"ParameterCalc", "[", "tensF", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.8375106064921355`*^9, {3.837511371858053*^9, 3.83751140314091*^9}, 
   3.837512222171653*^9, 3.8485705407332535`*^9, {3.8620286632202396`*^9, 
   3.8620286635565214`*^9}, {3.865582967526085*^9, 3.8655829676895804`*^9}, {
   3.8698045375105886`*^9, 3.869804539753971*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"d1993912-fbeb-4d5c-9270-ec462e67e431"],

Cell["Define where the tractography is allowed", "Text",
 CellChangeTimes->{{3.83750972099186*^9, 
  3.837509741100566*^9}},ExpressionUUID->"0e98120e-f12a-4c08-9535-\
de77cbef1e91"],

Cell[BoxData[
 RowBox[{
  RowBox[{"stop", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"all", ",", 
       RowBox[{"{", 
        RowBox[{"0.9", ",", "1.1"}], "}"}]}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{"within", " ", "the", " ", "muscle", " ", "mask"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"fa", ",", 
       RowBox[{"{", 
        RowBox[{"0.05", ",", "0.6"}], "}"}]}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{"within", " ", "a", " ", "FA", " ", "range"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"md", ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "2."}], "}"}]}], "}"}]}], 
    RowBox[{"(*", 
     RowBox[{"within", " ", "a", " ", "MD", " ", "range"}], "*)"}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8375097171183987`*^9, 3.8375097844276857`*^9}, 
   3.8375123060070024`*^9, {3.83811303094816*^9, 3.8381130367865996`*^9}, {
   3.8686803638115573`*^9, 3.868680363849272*^9}, 3.869215303043618*^9, {
   3.869221641199744*^9, 3.869221646913018*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"9b120239-90bf-4ad0-aecf-298d967ccc6f"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"Mask", "[", "stop", "]"}], ",", "fa"}], "]"}]], "Input",
 CellChangeTimes->{{3.8375106716325436`*^9, 3.8375106939961233`*^9}, 
   3.8375123077213917`*^9, {3.86729807540627*^9, 3.867298076955129*^9}, {
   3.8692145588330097`*^9, 3.869214628803359*^9}, {3.8692146653944693`*^9, 
   3.8692146802246675`*^9}, {3.8692152437476635`*^9, 
   3.8692152572668715`*^9}, {3.8692216650422373`*^9, 3.8692216658730106`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"563e0d28-bc72-4f64-8c7f-3ab5a3ead7ec"],

Cell["\<\
Perform the tractography using Euler interpolation and nearest neighbour \
interpolation.\
\>", "Text",
 CellChangeTimes->{{3.83750972099186*^9, 3.837509741100566*^9}, {
  3.837509809802057*^9, 3.837509813389328*^9}, {3.869221825761391*^9, 
  3.869221849712386*^9}},ExpressionUUID->"29a9ffcf-a4f5-4810-b77b-\
7ca390550ef8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tracts", ",", "seeds"}], "}"}], "=", 
   RowBox[{"FiberTractography", "[", 
    RowBox[{"tensF", ",", "dwivox", ",", "stop", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"tract", " ", "parameters"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"InterpolationOrder", "->", "0"}], ",", 
     RowBox[{"StepSize", "->", "Automatic"}], ",", 
     RowBox[{"Method", "->", "\"\<Euler\>\""}], ",", 
     RowBox[{"MaxSeedPoints", "->", "Automatic"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"stopping", " ", "parameters"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"FiberLengthRange", "->", 
      RowBox[{"{", 
       RowBox[{"20", ",", "400"}], "}"}]}], ",", 
     RowBox[{"FiberAngle", "->", "15"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"flip", " ", "tensor", " ", "if", " ", "needed"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"TensorFilps", "->", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
     RowBox[{"TensorPermutations", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<z\>\"", ",", "\"\<y\>\"", ",", "\"\<x\>\""}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.862027437529236*^9, 3.8620274394079647`*^9}, {
   3.8620278897297287`*^9, 3.8620278912816095`*^9}, 3.862028062193336*^9, 
   3.8620291823113995`*^9, {3.865583029643325*^9, 3.865583049114889*^9}, {
   3.8672982710929775`*^9, 3.867298271781014*^9}, {3.867298381623889*^9, 
   3.8672983839740567`*^9}, {3.867308791188753*^9, 3.8673087993282256`*^9}, {
   3.867386970093936*^9, 3.867386970397539*^9}, {3.8673873363897133`*^9, 
   3.8673873381904573`*^9}, 3.8673877493641024`*^9, 3.8673879254289227`*^9, {
   3.8673881935876856`*^9, 3.8673881936996703`*^9}, 3.868441308731515*^9, {
   3.8686790175086393`*^9, 3.868679018340372*^9}, 3.868680348117711*^9, 
   3.8691219212508073`*^9, 3.8691237774244237`*^9, {3.8691238103860636`*^9, 
   3.8691238114396343`*^9}, {3.869123952595254*^9, 3.8691239549602995`*^9}, {
   3.8691240863384705`*^9, 3.869124086975446*^9}, {3.869125024053703*^9, 
   3.8691250269637012`*^9}, 3.869125201910782*^9, {3.8691258166964445`*^9, 
   3.869125816757825*^9}, 3.869125928072315*^9, {3.8691264849395013`*^9, 
   3.869126502328417*^9}, {3.8691956518372736`*^9, 3.8691956523284063`*^9}, 
   3.869202726368157*^9, {3.8692038804199905`*^9, 3.8692038812650585`*^9}, {
   3.869204654758319*^9, 3.869204655442842*^9}, 3.8692216826882286`*^9, {
   3.8692218218734713`*^9, 3.869221822276243*^9}, {3.8692218532804937`*^9, 
   3.869221904513771*^9}, {3.8692225648199625`*^9, 3.869222565283449*^9}, {
   3.869222634710676*^9, 3.869222636324993*^9}, {3.869222735447157*^9, 
   3.869222742637659*^9}, {3.869222779273733*^9, 3.869222780756804*^9}, 
   3.869222817159481*^9, 3.8692229802990513`*^9, {3.869223249738746*^9, 
   3.8692232510303946`*^9}, {3.869223361001232*^9, 3.869223362102726*^9}, {
   3.869223658906473*^9, 3.8692236604091935`*^9}, 3.869223836203209*^9, {
   3.869284020098873*^9, 3.8692840204608264`*^9}, {3.86928457915478*^9, 
   3.869284579261496*^9}, {3.869294581375993*^9, 3.869294582628645*^9}, {
   3.869559410612919*^9, 3.869559415491228*^9}, {3.869560756985879*^9, 
   3.869560768553611*^9}, {3.8695610895637913`*^9, 3.8695610981847563`*^9}, {
   3.8695621858544273`*^9, 3.869562185979466*^9}, {3.8695622188789864`*^9, 
   3.8695622222852435`*^9}, {3.8695627667376966`*^9, 3.8695627677097764`*^9}, 
   3.8698049389745045`*^9, {3.8698083581518917`*^9, 3.8698083594119577`*^9}, {
   3.869815459321882*^9, 3.8698154646613407`*^9}, 3.86988557209137*^9, 
   3.869886161254573*^9, 3.8698997971423864`*^9, {3.8698999687070837`*^9, 
   3.869899986291354*^9}, {3.869900252648826*^9, 3.8699002539552164`*^9}, {
   3.869900316679346*^9, 3.8699003169957294`*^9}, {3.8699003532826796`*^9, 
   3.869900355474845*^9}, {3.869902318428344*^9, 3.86990231869532*^9}, {
   3.869905010455185*^9, 3.8699050105262413`*^9}, {3.86990518399375*^9, 
   3.869905185070709*^9}, {3.869905383767144*^9, 3.869905409606275*^9}, {
   3.8699069130979176`*^9, 3.8699069141953087`*^9}, 3.8699074657671003`*^9, {
   3.8699088687318363`*^9, 3.869908869719452*^9}, 3.869908917836484*^9, {
   3.869911630564778*^9, 3.8699116356459503`*^9}, {3.869914005750476*^9, 
   3.8699140168179502`*^9}, 3.870932847623079*^9, {3.8747486127724113`*^9, 
   3.87474861627253*^9}, 3.877170529650922*^9, {3.877171374248811*^9, 
   3.877171383524845*^9}, {3.8771714819441605`*^9, 3.8771714835731697`*^9}, {
   3.8771715300880427`*^9, 3.8771715318616514`*^9}, 3.87717158853728*^9, {
   3.8771716412095656`*^9, 3.877171652853498*^9}, {3.87717173621784*^9, 
   3.8771717409503703`*^9}, {3.877347738340587*^9, 3.8773477384234457`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"fca4f62e-c46f-4fc6-9fcc-f999350245f8"],

Cell["Plot Density maps of tracts, seeds, length or angle", "Text",
 CellChangeTimes->{{3.8773476569125*^9, 
  3.877347690069169*^9}},ExpressionUUID->"2338e116-4d0b-4656-91c6-\
ec19346f3ca2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotData", "[", 
   RowBox[{
    RowBox[{"TractDensityMap", "[", 
     RowBox[{"tracts", ",", "vox", ",", "dim"}], "]"}], ",", 
    RowBox[{"SeedDensityMap", "[", 
     RowBox[{"seeds", ",", "vox", ",", "dim"}], "]"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8698046299466467`*^9, 3.869804697751073*^9}, {
  3.8698048416775875`*^9, 3.869804851079446*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"dfb82d14-cf33-4b95-95f5-3ae78e89659c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotData", "[", 
   RowBox[{
    RowBox[{"TractLengthMap", "[", 
     RowBox[{"tracts", ",", "vox", ",", "dim"}], "]"}], ",", 
    RowBox[{"TractAngleMap", "[", 
     RowBox[{"tracts", ",", "vox", ",", "dim"}], "]"}], ",", "vox"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8771706659741335`*^9, 3.8771706932965636`*^9}, {
  3.8771707519243317`*^9, 3.8771707522915754`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"6d459338-a8de-46e4-a896-c61eba1011ff"],

Cell["Fit the tracts with 3th order polynomials", "Text",
 CellChangeTimes->{{3.837509851965728*^9, 3.8375098628005795`*^9}, {
   3.8375132423252225`*^9, 3.837513244198758*^9}, 
   3.86202748369426*^9},ExpressionUUID->"8e9aaa2a-5ea2-4fb3-8ba8-\
9490bfc44b9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tractsF", "=", 
   RowBox[{"FitTract", "[", 
    RowBox[{"tracts", ",", 
     RowBox[{"FittingOrder", "->", "3"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8619548180193295`*^9, 3.8619548369062986`*^9}, 
   3.8655830804904194`*^9, {3.869215437347533*^9, 3.869215489988062*^9}, {
   3.869215530404746*^9, 3.8692155326474085`*^9}, 3.8692846616884933`*^9, {
   3.8698085890774965`*^9, 3.8698086247709575`*^9}, {3.8773476503739834`*^9, 
   3.8773476509713855`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"ff53edd7-43f6-4728-b267-8c4a1d5935e8"],

Cell["Filter the tracts based on various types of ROIs", "Text",
 CellChangeTimes->{{3.837509851965728*^9, 3.8375098628005795`*^9}, {
   3.8375132423252225`*^9, 3.837513244198758*^9}, 3.86202748369426*^9, {
   3.8692155493141923`*^9, 
   3.86921556457899*^9}},ExpressionUUID->"ba6f53aa-656b-4275-bc02-\
f3f4ec042568"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tractsFF", "=", 
    RowBox[{"FilterTracts", "[", 
     RowBox[{"tractsF", ",", "vox", ",", 
      RowBox[{"select", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<and\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<z\>\"", ",", "10"}], "}"}]}], "}"}], ","}], "*)"}], 
        RowBox[{"(*", 
         RowBox[{
         "only", " ", "tracts", " ", "that", " ", "go", " ", "throug", " ", 
          "slices", " ", "10"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<or\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<through\>\"", ",", 
             RowBox[{
              RowBox[{"masks", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "5"}], "]"}], "]"}], "+", " ", 
              RowBox[{"masks", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "6"}], "]"}], "]"}]}]}], "}"}]}], "}"}], 
         ",", 
         RowBox[{"(*", 
          RowBox[{
          "tracts", " ", "that", " ", "go", " ", "trough", " ", "left", " ", 
           "or", " ", "right", " ", "soleus"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"\"\<not\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<through\>\"", ",", 
             RowBox[{
              RowBox[{"masks", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], "+", 
              RowBox[{"masks", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "3"}], "]"}], "]"}], "+", 
              RowBox[{"masks", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "+", 
              RowBox[{"masks", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "4"}], "]"}], "]"}]}]}], "}"}]}], "}"}]}], 
        RowBox[{"(*", 
         RowBox[{
         "but", " ", "not", " ", "go", " ", "trough", " ", "any", " ", "of", 
          " ", "the", " ", "gastro"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{"\"\<not\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<through\>\"", ",", " ", 
             RowBox[{
              RowBox[{"masks", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "+", 
              RowBox[{"masks", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "4"}], "]"}], "]"}]}]}], "}"}]}], "}"}], 
         "*)"}], "\[IndentingNewLine]", "}"}]}]}], "]"}]}], ";"}], "//", 
  "EchoTiming"}]], "Input",
 CellChangeTimes->{{3.869205939535359*^9, 3.86920599475975*^9}, {
   3.8692062052257876`*^9, 3.869206239898343*^9}, {3.86920643889259*^9, 
   3.86920646391333*^9}, 3.8692065053528175`*^9, {3.8692066375959215`*^9, 
   3.8692066411930428`*^9}, {3.8692156008705254`*^9, 
   3.8692156817014475`*^9}, {3.869222117010753*^9, 3.869222120781263*^9}, 
   3.8692221761940236`*^9, {3.8695455556265373`*^9, 3.869545559512912*^9}, {
   3.869545691642025*^9, 3.8695456965743294`*^9}, {3.8698072888969107`*^9, 
   3.8698073205279956`*^9}, 3.8698083826158066`*^9, {3.8699127206063604`*^9, 
   3.8699127244458227`*^9}, {3.869912897044009*^9, 3.8699129013115187`*^9}, {
   3.8699130095411525`*^9, 3.869913028581978*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"5c5b6aeb-5210-4c32-9ff9-41545e4bea0f"],

Cell["Show the tracts", "Text",
 CellChangeTimes->{{3.837509851965728*^9, 3.8375098628005795`*^9}, {
   3.8375132423252225`*^9, 3.837513244198758*^9}, 3.86202748369426*^9, {
   3.8692155493141923`*^9, 3.86921556457899*^9}, {3.869808395523324*^9, 
   3.869808397426778*^9}},ExpressionUUID->"32d1c8b1-1348-4f6b-8174-\
3144dd70f39a"],

Cell[BoxData[
 RowBox[{"PlotTracts", "[", 
  RowBox[{"tracts", ",", "vox", ",", "dim", ",", 
   RowBox[{"MaxTracts", "->", "5000"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8699137182250557`*^9, 3.8699137201282773`*^9}, {
  3.874748595184477*^9, 3.874748595296631*^9}, {3.8771708509628096`*^9, 
  3.8771708515075383`*^9}},
 CellLabel->
  "In[1609]:=",ExpressionUUID->"561ac5b4-5038-4726-95ec-7c7e6d324fe5"],

Cell[BoxData[
 RowBox[{"PlotTracts", "[", 
  RowBox[{"tractsFF", ",", "vox", ",", "dim", ",", 
   RowBox[{"MaxTracts", "->", "10000"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.869806985314129*^9, 3.8698069948934236`*^9}, {
  3.8698154126299872`*^9, 3.8698154181811576`*^9}, {3.86988566807963*^9, 
  3.869885668287221*^9}, {3.8699136797621946`*^9, 3.8699136798879766`*^9}},
 CellLabel->
  "In[1614]:=",ExpressionUUID->"9ea64246-3b66-408e-ba59-b74224025c00"],

Cell[BoxData[
 RowBox[{"PlotTracts", "[", 
  RowBox[{"tractsFF", ",", "vox", ",", "dim", ",", 
   RowBox[{"MaxTracts", "->", "10000"}], ",", 
   RowBox[{"TractColoring", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Length\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"20", ",", "120"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8771712104839263`*^9, 3.87717124013342*^9}, 
   3.877171272817876*^9, {3.877171337606312*^9, 3.8771713378767047`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"b15b7b3f-c47c-44f4-9e3e-47b98f8abb24"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["J-coupling simulations", "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9},ExpressionUUID->"3b817272-df1a-4e68-aaea-\
c22d9c35e327"],

Cell[CellGroupData[{

Cell["Spin systems", "Subsection",
 CellChangeTimes->{{3.751786128248234*^9, 3.751786134998006*^9}, {
  3.8374894790943804`*^9, 3.83748948039189*^9}},
 CellTags->"c:71",ExpressionUUID->"16e4c173-1b98-4694-a73e-a9458b44e628"],

Cell[CellGroupData[{

Cell["Predefined spin systems", "Subsubsection",
 CellChangeTimes->{{3.8374894849067287`*^9, 3.8374894926988764`*^9}},
 CellTags->"c:72",ExpressionUUID->"2d7a5585-863f-40ad-b02f-be363d7913a3"],

Cell["\<\
Fat contains multiple peak with various j coupling frequencies\
\>", "Text",
 CellChangeTimes->{{3.7548947643514943`*^9, 
  3.754894808814317*^9}},ExpressionUUID->"a933a9a3-528b-4c0e-a038-\
17f710e1fe43"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sys", "=", 
   RowBox[{"GetSpinSystem", "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
      ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Total", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Times", "@@", "#"}], "&"}], "/@", 
    RowBox[{"sys", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5"}], "}"}]}], "]"}], "]"}]}], "]"}], "]"}], "\n", 
 RowBox[{"tabs", "=", 
  RowBox[{"Column", "[", 
   RowBox[{"SysTable", "[", "sys", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.748421110877775*^9, 3.7484211355335054`*^9}, {
  3.7484326404391546`*^9, 3.748432641990839*^9}, {3.751786144851331*^9, 
  3.7517861574756746`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"07aa0cbd-4fe8-4a6b-9db7-30e546e930eb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Custom spin systems", "Subsubsection",
 CellChangeTimes->{{3.837489496118237*^9, 3.837489503311245*^9}},
 CellTags->"c:73",ExpressionUUID->"26074711-b967-4b74-9ac1-52cb8c789745"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sys", "=", 
   RowBox[{"MakeSpinSystem", "[", 
    RowBox[{"\"\<custom\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.9", ",", "1.3", ",", "1.3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], ",", "8"}], "}"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SysTable", "@", "sys"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sys", "=", 
   RowBox[{"MakeSpinSystem", "[", 
    RowBox[{"\"\<custom2\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.9", ",", "1.3", ",", "2.7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}], ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SysTable", "@", "sys"}]}], "Input",
 CellChangeTimes->{{3.8374895371310387`*^9, 3.8374896901372747`*^9}, {
  3.837489735565732*^9, 3.8374897757400455`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"1d338fd5-7504-4d71-a854-b193d2d7194f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Glutamate spectra with Steam", "Subsection",
 CellChangeTimes->{{3.748230398223116*^9, 3.7482304059809375`*^9}, {
  3.7517854856684136`*^9, 3.751785492675087*^9}},
 CellTags->"c:74",ExpressionUUID->"2cfca995-51c1-4930-93bd-525f0bdfb9d5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"echoTime", "=", "18"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"field", ",", "nuc", ",", "bw"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", "\"\<1H\>\"", ",", "5000"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"din", ",", "struct"}], "}"}], "=", 
    RowBox[{"SimHamiltonian", "[", 
     RowBox[{"\"\<glu\>\"", ",", 
      RowBox[{"SimNucleus", "\[Rule]", "nuc"}], ",", 
      RowBox[{"FieldStrength", "\[Rule]", "field"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pls", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"dout", "=", 
       RowBox[{"SequenceSteam", "[", 
        RowBox[{"din", ",", "struct", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"echoTime", ",", "tm"}], "}"}], "/", "1000"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fids", ",", "dout"}], "}"}], "=", 
       RowBox[{"SimReadout", "[", 
        RowBox[{"dout", ",", "struct", ",", 
         RowBox[{"ReadoutSamples", "\[Rule]", "2048"}], ",", 
         RowBox[{"ReadoutBandwith", "\[Rule]", "bw"}], ",", 
         RowBox[{"Linewidth", "\[Rule]", "10"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotSpectra", "[", 
       RowBox[{
        RowBox[{"ShiftedFourier", "[", "fids", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "bw"}], ",", 
          RowBox[{"GetGyro", "[", 
           RowBox[{"field", ",", "nuc"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "5"}], "}"}], ",", "Full"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "2"}]}], ",", 
        RowBox[{"ImageSize", "->", "300"}], ",", 
        RowBox[{"Method", "->", "\"\<ReIm\>\""}]}], "]"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"tm", ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "18", ",", "31"}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{"various", " ", "mixing", " ", "times"}], "*)"}], "}"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Row", "[", "pls", "]"}]}], "Input",
 CellChangeTimes->{{3.7479933058095455`*^9, 3.7479933209230604`*^9}, {
   3.74799337592723*^9, 3.747993379465663*^9}, {3.7479934307764482`*^9, 
   3.7479934308255777`*^9}, {3.747994172569626*^9, 3.747994190903458*^9}, {
   3.7479953736250553`*^9, 3.7479953743923707`*^9}, 3.7480552391296186`*^9, {
   3.7481520234935246`*^9, 3.7481520371906805`*^9}, {3.748163203680167*^9, 
   3.748163204069208*^9}, {3.748163296543931*^9, 3.7481633122749677`*^9}, {
   3.7481634309156246`*^9, 3.7481634317759542`*^9}, 3.748182235067433*^9, {
   3.748230250760906*^9, 3.7482302866392374`*^9}, {3.7483409653608446`*^9, 
   3.7483409747667446`*^9}, {3.748615798967787*^9, 3.748615808831251*^9}, {
   3.7486855583611155`*^9, 3.7486855858293495`*^9}, {3.7486857183285575`*^9, 
   3.7486857941830215`*^9}, {3.7486858366955214`*^9, 3.748685837158784*^9}, {
   3.75178526306184*^9, 3.7517852706866055`*^9}, {3.7517853329146557`*^9, 
   3.751785333778942*^9}, {3.751785366968247*^9, 3.7517854513493204`*^9}, {
   3.754894725276472*^9, 3.7548947325069942`*^9}, {3.754894783470517*^9, 
   3.754894786444804*^9}, {3.7548948200756025`*^9, 3.754894849418341*^9}, {
   3.83724467272298*^9, 3.837244679429534*^9}, {3.8374843297977057`*^9, 
   3.8374843540853415`*^9}, {3.837484410598259*^9, 3.837484507244242*^9}, {
   3.837484599182022*^9, 3.837484602660529*^9}, {3.837484666072288*^9, 
   3.837484666156204*^9}, {3.837487662843403*^9, 3.8374878011877007`*^9}, {
   3.845468710197226*^9, 3.8454687729924345`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"b250ee77-119c-4a6c-ae60-654c651ae432"]
}, Closed]],

Cell[CellGroupData[{

Cell["Simulate Fat Spectra", "Subsection",
 CellChangeTimes->{{3.7517855020534177`*^9, 3.7517855103606234`*^9}, 
   3.7517855655882206`*^9, {3.754894858185709*^9, 3.7548948670807133`*^9}},
 CellTags->"c:75",ExpressionUUID->"bdc44691-f744-4c66-a1dd-7438bdd242a3"],

Cell[CellGroupData[{

Cell["PulseAcquire", "Subsubsection",
 CellChangeTimes->{{3.7517855668535924`*^9, 3.7517855716387463`*^9}},
 CellTags->"c:76",ExpressionUUID->"59807f79-d229-49e5-b637-790a17413076"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"field", ",", "nuc", ",", "bw"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{"7", ",", "\"\<1H\>\"", ",", "3000"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lshape", "=", "#"}], ";", "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"sys", "=", 
            RowBox[{"GetSpinSystem", "[", 
             RowBox[{"#", ",", 
              RowBox[{"CenterFrequency", "->", "4.8"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"din", ",", "struct"}], "}"}], "=", 
            RowBox[{"SimHamiltonian", "[", 
             RowBox[{"sys", ",", 
              RowBox[{"FieldStrength", "\[Rule]", "field"}], ",", 
              RowBox[{"SimNucleus", "\[Rule]", "nuc"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"dout", "=", 
            RowBox[{"SequencePulseAcquire", "[", 
             RowBox[{"din", ",", "struct"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"SimReadout", "[", 
            RowBox[{"dout", ",", "struct", ",", 
             RowBox[{"ReadoutSamples", "\[Rule]", "2048"}], ",", 
             RowBox[{"ReadoutBandwith", "\[Rule]", "bw"}], ",", 
             RowBox[{"Linewidth", "\[Rule]", "20"}], ",", 
             RowBox[{"LinewidthShape", "\[Rule]", "lshape"}]}], "]"}]}], 
          "\[IndentingNewLine]", ")"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
          ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"spec", "=", 
      RowBox[{"ShiftedFourier", "[", 
       RowBox[{"Total", "@", 
        RowBox[{"out", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pl", "=", 
      RowBox[{"PlotSpectra", "[", 
       RowBox[{"spec", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "bw"}], ",", 
          RowBox[{"GetGyro", "[", 
           RowBox[{"field", ",", "nuc"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "6"}], "}"}], ",", "Full"}], "}"}]}], ",", 
        RowBox[{"Method", "->", "\"\<ReIm\>\""}], ",", 
        RowBox[{"CenterFrequency", "->", "4.8"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", ")"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Gaussian\>\"", ",", "\"\<Voigt\>\"", ",", "\"\<Lorentzian\>\""}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.748229992433153*^9, 3.7482299971147556`*^9}, 
   3.7482300738180714`*^9, {3.748230123918957*^9, 3.748230124951667*^9}, {
   3.748230157213933*^9, 3.7482301620531178`*^9}, {3.7482351352193537`*^9, 
   3.7482351488687196`*^9}, {3.748235686160855*^9, 3.74823568660807*^9}, {
   3.7482691809371367`*^9, 3.7482691985853415`*^9}, {3.748273843907975*^9, 
   3.7482738738285837`*^9}, 3.7483200865733805`*^9, {3.7483210079837885`*^9, 
   3.748321016638588*^9}, 3.74832117160981*^9, {3.7483214752212343`*^9, 
   3.7483214819391317`*^9}, {3.7483217949776864`*^9, 3.748321814935499*^9}, {
   3.748321866491704*^9, 3.748321894899328*^9}, {3.7483219461685305`*^9, 
   3.7483219953029013`*^9}, {3.7483221618890285`*^9, 3.7483221687140117`*^9}, 
   3.748322245547207*^9, {3.748322561946589*^9, 3.748322564920495*^9}, {
   3.7483225975762873`*^9, 3.748322646232254*^9}, {3.748322689960739*^9, 
   3.748322713285779*^9}, {3.748323077665245*^9, 3.748323087386416*^9}, {
   3.7483237079179506`*^9, 3.7483237318664637`*^9}, 3.748332445544182*^9, {
   3.748332547703269*^9, 3.7483325609005604`*^9}, {3.748332698717409*^9, 
   3.748332706487593*^9}, {3.7483387227967024`*^9, 3.748338763325821*^9}, {
   3.748338807236164*^9, 3.7483388192757797`*^9}, {3.748338926064983*^9, 
   3.748338946316023*^9}, {3.748339008784735*^9, 3.748339010300783*^9}, 
   3.7483399760707045`*^9, {3.7483400127685337`*^9, 3.7483400176555862`*^9}, {
   3.748340636143362*^9, 3.7483406523026686`*^9}, {3.748340994495614*^9, 
   3.7483409992298527`*^9}, 3.7486158338071747`*^9, {3.7517855145478144`*^9, 
   3.7517855190458183`*^9}, {3.751785587862006*^9, 3.751785589428156*^9}, {
   3.7548948726829386`*^9, 3.7548948811473913`*^9}, {3.8374878424536524`*^9, 
   3.8374880181702404`*^9}, {3.8374880490054812`*^9, 3.837488077366084*^9}, 
   3.837488148770634*^9, {3.8454687823396215`*^9, 3.8454688286573772`*^9}, 
   3.8709386734673634`*^9, {3.870938709562275*^9, 3.87093874562617*^9}, {
   3.870938785531099*^9, 3.87093879849218*^9}, {3.870938939552102*^9, 
   3.8709389474978294`*^9}, {3.870938978122899*^9, 3.8709389782210364`*^9}, 
   3.8709392155955486`*^9, {3.870939909937612*^9, 3.8709399145240407`*^9}, {
   3.8709401792455425`*^9, 3.8709402371670885`*^9}, {3.870940332702853*^9, 
   3.870940358399289*^9}, {3.8709404006862984`*^9, 3.8709405468953075`*^9}, {
   3.872218130219509*^9, 3.8722181333064966`*^9}, {3.87221852310139*^9, 
   3.872218673147729*^9}, 3.8722191140457993`*^9, {3.872219201678027*^9, 
   3.8722192037894115`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"869625c4-c640-4b6d-963c-5879d140481b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Spin echo", "Subsubsection",
 CellChangeTimes->{{3.7517855668535924`*^9, 3.7517855716387463`*^9}, {
  3.751785612129964*^9, 3.751785613522607*^9}, {3.751786027777651*^9, 
  3.751786028417385*^9}},
 CellTags->"c:77",ExpressionUUID->"dab93187-a908-4ba7-ae93-e35b0b7d7535"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"field", ",", "nuc", ",", "bw"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"7", ",", "\"\<1H\>\"", ",", "3000"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"te", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"out", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sys", "=", 
        RowBox[{"GetSpinSystem", "[", 
         RowBox[{"#", ",", 
          RowBox[{"CenterFrequency", "->", "4.8"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"din", ",", "struct"}], "}"}], "=", 
        RowBox[{"SimHamiltonian", "[", 
         RowBox[{"sys", ",", 
          RowBox[{"FieldStrength", "\[Rule]", "field"}], ",", 
          RowBox[{"SimNucleus", "\[Rule]", "nuc"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dout", "=", 
        RowBox[{"SequenceSpinEcho", "[", 
         RowBox[{"din", ",", "struct", ",", 
          RowBox[{"te", "/", "1000"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"SimReadout", "[", 
        RowBox[{"dout", ",", "struct", ",", 
         RowBox[{"ReadoutSamples", "\[Rule]", "2048"}], ",", 
         RowBox[{"ReadoutBandwith", "\[Rule]", "bw"}], ",", 
         RowBox[{"Linewidth", "\[Rule]", "10"}]}], "]"}]}], 
      "\[IndentingNewLine]", ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
      ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spec", "=", 
   RowBox[{"ShiftedFourier", "[", 
    RowBox[{"Total", "@", 
     RowBox[{"out", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"pl", "=", 
  RowBox[{"PlotSpectra", "[", 
   RowBox[{"spec", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "bw"}], ",", 
      RowBox[{"GetGyro", "[", 
       RowBox[{"field", ",", "nuc"}], "]"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "6"}], "}"}], ",", "Full"}], "}"}]}], ",", 
    RowBox[{"CenterFrequency", "->", "4.8"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7482351714990845`*^9, 3.748235191739445*^9}, {
   3.748273924937831*^9, 3.74827395143205*^9}, 3.748339867254298*^9, {
   3.7483399355053816`*^9, 3.748339960080967*^9}, {3.7483400574082403`*^9, 
   3.748340059871789*^9}, {3.7483406608814077`*^9, 3.7483406634237876`*^9}, 
   3.748615848685067*^9, {3.7517856216532736`*^9, 3.751785623062027*^9}, {
   3.7548948899820714`*^9, 3.7548948976117563`*^9}, {3.837488071516144*^9, 
   3.8374881516367564`*^9}, {3.8454688702929797`*^9, 3.845468875049714*^9}, {
   3.870940558614194*^9, 3.8709405887365155`*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"7e2a2150-d80c-4034-83d6-d9565cf12a88"]
}, Closed]],

Cell[CellGroupData[{

Cell["STEAM", "Subsubsection",
 CellChangeTimes->{{3.7517856346602097`*^9, 3.7517856380873747`*^9}},
 CellTags->"c:78",ExpressionUUID->"11b0bc08-716e-4837-a55b-d3c98505048d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"field", ",", "nuc", ",", "bw"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"7", ",", "\"\<1H\>\"", ",", "3000"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"te", ",", "tm"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"50", ",", "100"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"out", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sys", "=", 
        RowBox[{"GetSpinSystem", "[", 
         RowBox[{"#", ",", 
          RowBox[{"CenterFrequency", "->", "4.8"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"din", ",", "struct"}], "}"}], "=", 
        RowBox[{"SimHamiltonian", "[", 
         RowBox[{"sys", ",", 
          RowBox[{"FieldStrength", "\[Rule]", "field"}], ",", 
          RowBox[{"SimNucleus", "\[Rule]", "nuc"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dout", "=", 
        RowBox[{"SequenceSteam", "[", 
         RowBox[{"din", ",", "struct", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"te", ",", "tm"}], "}"}], "/", "1000"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"SimReadout", "[", 
        RowBox[{"dout", ",", "struct", ",", 
         RowBox[{"ReadoutSamples", "\[Rule]", "2048"}], ",", 
         RowBox[{"ReadoutBandwith", "\[Rule]", "bw"}], ",", 
         RowBox[{"Linewidth", "\[Rule]", "10"}]}], "]"}]}], 
      "\[IndentingNewLine]", ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
      ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spec", "=", 
   RowBox[{"ShiftedFourier", "[", 
    RowBox[{"Total", "@", 
     RowBox[{"out", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"pl", "=", 
  RowBox[{"PlotSpectra", "[", 
   RowBox[{"spec", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "bw"}], ",", 
      RowBox[{"GetGyro", "[", 
       RowBox[{"field", ",", "nuc"}], "]"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "6"}], "}"}], ",", "Full"}], "}"}]}], ",", 
    RowBox[{"CenterFrequency", "->", "4.8"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.7481818389400015`*^9, 3.7481819043061547`*^9, {3.748182035959757*^9, 
   3.7481820635046773`*^9}, {3.748182213971154*^9, 3.7481822141298923`*^9}, {
   3.748182985022589*^9, 3.7481829851078463`*^9}, {3.748183176701327*^9, 
   3.748183191138928*^9}, {3.7481837396375275`*^9, 3.7481837399500513`*^9}, {
   3.7481848422946672`*^9, 3.748184842377087*^9}, {3.7482302286989613`*^9, 
   3.748230234199986*^9}, {3.748235208171048*^9, 3.748235241162552*^9}, 
   3.7483399007853546`*^9, {3.7483400698624706`*^9, 3.748340071613772*^9}, {
   3.748340674871582*^9, 3.748340676398965*^9}, 3.748615857818198*^9, {
   3.7517856460385566`*^9, 3.751785648340697*^9}, {3.754894903115119*^9, 
   3.7548949094661736`*^9}, {3.8374881412516994`*^9, 3.837488214103676*^9}, {
   3.8374882714432406`*^9, 3.83748827157574*^9}, {3.8454688866769295`*^9, 
   3.8454688917548285`*^9}, {3.8709405862090445`*^9, 3.8709406037443295`*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"d097a75f-b5e4-4687-abe5-6b28aa73ed5f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fat STEAM with various TEs", "Subsection",
 CellChangeTimes->{{3.751785834342079*^9, 3.7517858461181536`*^9}},
 CellTags->"c:79",ExpressionUUID->"6705b400-369d-4acb-94b1-826717b38934"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "simuluate", " ", "STEAM", " ", "j", " ", "coupling", " ", "for", " ", 
    "various", " ", "TEs"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"TEs", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"10", ",", "100", ",", "10"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"field", ",", "nuc", ",", "bw"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"3", ",", "\"\<1H\>\"", ",", "2500"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"out", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"din", ",", "struct"}], "}"}], "=", 
          RowBox[{"SimHamiltonian", "[", 
           RowBox[{"#", ",", 
            RowBox[{"FieldStrength", "\[Rule]", "field"}], ",", 
            RowBox[{"SimNucleus", "\[Rule]", "nuc"}], ",", 
            RowBox[{"CenterFrequency", "->", "4.8"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"dout", "=", 
             RowBox[{"SequenceSteam", "[", 
              RowBox[{"din", ",", "struct", ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", "16"}], "}"}], "/", "1000"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"SimReadout", "[", 
             RowBox[{"dout", ",", "struct", ",", 
              RowBox[{"ReadoutSamples", "\[Rule]", "1024"}], ",", 
              RowBox[{"ReadoutBandwith", "\[Rule]", "bw"}], ",", 
              RowBox[{"Linewidth", "\[Rule]", "20"}], ",", 
              RowBox[{"LinewidthShape", "->", "\"\<Voigt\>\""}]}], "]"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "TEs"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ")"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
        ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"spec", "=", 
     RowBox[{"ShiftedFourier", "/@", 
      RowBox[{"Total", "[", 
       RowBox[{"out", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}], "]"}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.746847702956359*^9, 3.746847705100912*^9}, {
   3.7468479330417895`*^9, 3.746847952202388*^9}, {3.746848216013152*^9, 
   3.746848222191821*^9}, {3.746867356897272*^9, 3.7468673656261845`*^9}, {
   3.7469409624679255`*^9, 3.746940997218149*^9}, {3.7469412837966795`*^9, 
   3.7469413006612544`*^9}, {3.746947619898952*^9, 3.746947642884818*^9}, {
   3.7469743198506145`*^9, 3.7469743256202364`*^9}, {3.746974428086774*^9, 
   3.746974429134055*^9}, {3.74702703695601*^9, 3.747027064566635*^9}, {
   3.747027165936557*^9, 3.7470271708788805`*^9}, 3.7470273367688255`*^9, {
   3.7470347282528763`*^9, 3.747034737261882*^9}, {3.74711149700712*^9, 
   3.747111525534052*^9}, 3.7471116676340513`*^9, {3.747111911059723*^9, 
   3.747111917714374*^9}, {3.747114588771387*^9, 3.7471146516068797`*^9}, {
   3.7471166314768953`*^9, 3.747116631987259*^9}, {3.747127234573103*^9, 
   3.7471272350985055`*^9}, {3.7471306683493767`*^9, 3.747130668924918*^9}, {
   3.7471315273127337`*^9, 3.7471315516455436`*^9}, {3.7471321219486876`*^9, 
   3.7471321847326574`*^9}, {3.7476337305343657`*^9, 
   3.7476337744916043`*^9}, {3.747633832030656*^9, 3.747633836796017*^9}, {
   3.7476342984003572`*^9, 3.747634306030753*^9}, {3.747634466656008*^9, 
   3.747634468544018*^9}, {3.747635769872473*^9, 3.747635780432063*^9}, {
   3.7476363974099693`*^9, 3.747636398321417*^9}, {3.74763650353691*^9, 
   3.7476365081429768`*^9}, {3.7476393842920556`*^9, 3.747639385170397*^9}, {
   3.74764448938281*^9, 3.7476444908432393`*^9}, {3.7476477306289525`*^9, 
   3.7476477314119787`*^9}, {3.747647779191697*^9, 3.7476477810777893`*^9}, {
   3.747647829237409*^9, 3.7476478295081244`*^9}, 3.7476500709523573`*^9, {
   3.747654333852504*^9, 3.7476543406161475`*^9}, {3.747654371015292*^9, 
   3.7476543755804176`*^9}, {3.747654422730257*^9, 3.747654429002034*^9}, {
   3.7476675470303087`*^9, 3.7476675588223953`*^9}, 3.7477280521847553`*^9, 
   3.7477356641071596`*^9, {3.7477361631787443`*^9, 3.7477361853068104`*^9}, {
   3.7477363563671713`*^9, 3.7477364114518213`*^9}, {3.747739148767829*^9, 
   3.747739149101492*^9}, {3.7479780758682137`*^9, 3.7479780763334537`*^9}, {
   3.7479781439989133`*^9, 3.747978148798498*^9}, 3.7479792037889395`*^9, {
   3.747979391919927*^9, 3.747979392126504*^9}, {3.7479799066708283`*^9, 
   3.747979907452491*^9}, {3.747980692702307*^9, 3.7479807026207476`*^9}, 
   3.7479808276809664`*^9, {3.7479809349769087`*^9, 3.7479809358236504`*^9}, {
   3.7479809894711394`*^9, 3.7479810158581653`*^9}, {3.747981348595498*^9, 
   3.7479813646464586`*^9}, {3.74798319683325*^9, 3.7479832002891583`*^9}, 
   3.7479842186745553`*^9, {3.747995457844248*^9, 3.747995510024599*^9}, 
   3.7479958258832617`*^9, {3.74807035312002*^9, 3.748070356575066*^9}, {
   3.748070871569313*^9, 3.748070907324333*^9}, {3.748070996381597*^9, 
   3.7480709968789206`*^9}, {3.748071062064003*^9, 3.7480710622434826`*^9}, {
   3.7480715415038767`*^9, 3.748071542000207*^9}, {3.748155127640109*^9, 
   3.748155141911248*^9}, {3.748155187464883*^9, 3.7481551884560943`*^9}, {
   3.748155911609275*^9, 3.7481559358457966`*^9}, {3.74815596876221*^9, 
   3.748155970425609*^9}, {3.748163734305396*^9, 3.748163734499945*^9}, {
   3.7481638602877836`*^9, 3.7481638611199694`*^9}, {3.7481639585134196`*^9, 
   3.748164021183906*^9}, {3.7481641352187877`*^9, 3.7481641355206037`*^9}, 
   3.748164233552312*^9, 3.748164520050725*^9, {3.7481650363078775`*^9, 
   3.748165037298518*^9}, {3.748183627588142*^9, 3.748183630401523*^9}, {
   3.74818374905184*^9, 3.7481837531270247`*^9}, {3.748184010324383*^9, 
   3.7481840350810156`*^9}, {3.748184901581254*^9, 3.7481849016752176`*^9}, {
   3.748184963572925*^9, 3.748185002889196*^9}, {3.748185244432699*^9, 
   3.748185244495197*^9}, {3.7481853966725035`*^9, 3.748185409793804*^9}, 
   3.7482356701465745`*^9, {3.748236803697485*^9, 3.748236935330164*^9}, 
   3.748236996960808*^9, {3.7482372353783035`*^9, 3.7482372416149197`*^9}, 
   3.7482384531850214`*^9, {3.7482385653166056`*^9, 3.748238584817676*^9}, 
   3.7482387650455165`*^9, {3.748238885012453*^9, 3.7482388851718793`*^9}, {
   3.748239053475803*^9, 3.7482390569960413`*^9}, {3.7482392158578467`*^9, 
   3.74823921592115*^9}, 3.748241105142406*^9, {3.748241442903722*^9, 
   3.748241442947858*^9}, 3.7482516734992294`*^9, {3.748260670691536*^9, 
   3.7482606708134456`*^9}, 3.7483232357717247`*^9, {3.7483237520266685`*^9, 
   3.7483237571758156`*^9}, {3.7483238221696987`*^9, 3.748323840248466*^9}, {
   3.748340712448462*^9, 3.7483407347322335`*^9}, 3.7484211561194906`*^9, {
   3.74842123880229*^9, 3.7484213926426015`*^9}, {3.748421629781578*^9, 
   3.7484216299536457`*^9}, {3.748429378027416*^9, 3.748429382407913*^9}, {
   3.7484294783384333`*^9, 3.7484295103613825`*^9}, 3.7486823458223124`*^9, 
   3.7486846945995955`*^9, {3.74868594788026*^9, 3.74868594808681*^9}, {
   3.7486859934652977`*^9, 3.748685994134081*^9}, 3.748690600121831*^9, {
   3.7486907570038414`*^9, 3.748690766999828*^9}, {3.7517857312706747`*^9, 
   3.751785742947794*^9}, {3.7548949310998926`*^9, 3.7548949712902346`*^9}, {
   3.837488244180147*^9, 3.837488265541151*^9}, 3.837488302136152*^9, {
   3.837488392412905*^9, 3.837488395635414*^9}, {3.8374884264035497`*^9, 
   3.837488440679239*^9}, {3.8374885402627897`*^9, 3.8374885476874027`*^9}, {
   3.8454689717438955`*^9, 3.845468975459876*^9}, {3.8655858381860075`*^9, 
   3.865585838647933*^9}, 3.8709406392146215`*^9, {3.8709407382454824`*^9, 
   3.870940745792889*^9}, {3.870940921280701*^9, 3.8709409503992786`*^9}, {
   3.8709411212486787`*^9, 3.870941130546567*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"3edd32fa-7110-4380-a1ac-e91a7e073cb0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"define", " ", "the", " ", "T2", " ", "relaxation"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"t2sim", "=", "90"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T2relax", "=", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "TEs"}], "/", "t2sim"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"max", "=", 
     RowBox[{
      RowBox[{"T2relax", "[", 
       RowBox[{"[", "1", "]"}], "]"}], 
      RowBox[{"Max", "[", 
       RowBox[{"Abs", "@", "spec"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"pls", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PlotSpectra", "[", 
         RowBox[{
          RowBox[{"#1", " ", "#2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "bw"}], ",", 
            RowBox[{"GetGyro", "[", 
             RowBox[{"field", ",", "nuc"}], "]"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", ".5"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"Method", "->", "\"\<Re\>\""}], ",", 
          RowBox[{"CenterFrequency", "->", "4.8"}]}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"spec", "/", "max"}], ",", "T2relax"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7482369404648113`*^9, 3.7482369435500307`*^9}, {
   3.7482369917619576`*^9, 3.74823700190097*^9}, {3.748237046433651*^9, 
   3.748237163011227*^9}, {3.7482372480360584`*^9, 3.7482372551559963`*^9}, 
   3.7482386052210474`*^9, {3.7483234243515415`*^9, 3.748323428072304*^9}, {
   3.748325389244517*^9, 3.7483253896906757`*^9}, 3.748325462450378*^9, {
   3.7483255575170727`*^9, 3.7483255582841234`*^9}, {3.7483411264195046`*^9, 
   3.7483411281903915`*^9}, {3.748343977350229*^9, 3.748344058210185*^9}, {
   3.748344088963969*^9, 3.7483440922413635`*^9}, 3.748421279533637*^9, {
   3.7484213472454386`*^9, 3.748421385632394*^9}, {3.748421426973504*^9, 
   3.7484215145800934`*^9}, {3.748429497485859*^9, 3.748429515080805*^9}, {
   3.7484296177337627`*^9, 3.748429617827312*^9}, {3.748429653038226*^9, 
   3.748429655905289*^9}, {3.748431245924173*^9, 3.7484312512832603`*^9}, 
   3.7484313278619294`*^9, {3.7486670014810476`*^9, 3.748667008235139*^9}, 
   3.748667040122573*^9, {3.751785801650653*^9, 3.7517858077166452`*^9}, {
   3.7517858690923147`*^9, 3.7517858693640347`*^9}, {3.754894949211228*^9, 
   3.754894957913658*^9}, {3.8374883253961544`*^9, 3.837488332564783*^9}, {
   3.837488368283723*^9, 3.8374883716035175`*^9}, {3.8374884800688906`*^9, 
   3.8374885281168756`*^9}, 3.87094075806684*^9, {3.870940993007964*^9, 
   3.870940993264604*^9}, {3.8709412108517323`*^9, 3.8709412110239143`*^9}},
 CellLabel->
  "In[232]:=",ExpressionUUID->"1aef8f21-e40a-49dc-bf08-ddabcbdf3501"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"pls", "[", 
    RowBox[{"[", "n", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "\"\<echo time\>\""}], "}"}], ",", "1", ",", 
     RowBox[{"Length", "[", "pls", "]"}], ",", "1"}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.754894922908832*^9, 3.754894926506301*^9}, {
  3.754894978542844*^9, 3.754895009340332*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"04a56dc3-b7cd-4cbf-ac36-5103d5b1f965"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cardiac data processing and simulation", "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7584420169007683`*^9, 
   3.758442023511436*^9}},ExpressionUUID->"b6662280-803b-4ab0-8481-\
332a70f0e978"],

Cell[CellGroupData[{

Cell["Simulate Cardiac Shape", "Subsection",
 CellChangeTimes->{{3.758442083934099*^9, 3.7584420913366747`*^9}},
 CellTags->"c:80",ExpressionUUID->"6a10872d-dcba-422d-a092-ff6bf02d5699"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"73", ",", "2.85", ",", "2.8", ",", "0.02", ",", "0.38"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"62.9", ",", "3.35", ",", "7.9", ",", "0.17"}], "}"}], ",", 
     "106"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6711726287505345`*^9, 3.671172644021535*^9}, 
   3.6797325739582977`*^9, {3.7583551753746085`*^9, 3.758355194706151*^9}},
 CellLabel->
  "In[474]:=",ExpressionUUID->"22f5062f-e958-45c9-8d1c-7514a2cedd75"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mask", ",", "vox", ",", "pars"}], "}"}], "=", 
   RowBox[{"CreateHeart", "[", "pars", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.671170073521743*^9, {3.679738162513242*^9, 3.679738179287202*^9}},
 CellLabel->
  "In[475]:=",ExpressionUUID->"da2e39d9-15b9-45d3-b9f6-8a42e2783620"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"voxn", "=", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Round", "@", 
    RowBox[{"RescaleData", "[", 
     RowBox[{"mask", ",", 
      RowBox[{"{", 
       RowBox[{"vox", ",", "voxn"}], "}"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"vox", "=", "voxn"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.6691045104681473`*^9, {3.66910496414051*^9, 3.6691049808451805`*^9}, {
   3.6711694406624904`*^9, 3.671169475574981*^9}, {3.671170020538472*^9, 
   3.6711700775777426`*^9}, {3.671184338392166*^9, 3.671184365792906*^9}, 
   3.671184409626419*^9, {3.7583529541897182`*^9, 3.7583529581785526`*^9}, {
   3.7583531072015476`*^9, 3.7583531097914815`*^9}, 3.758355257583712*^9},
 CellLabel->
  "In[476]:=",ExpressionUUID->"84325218-4520-4673-b3ba-afbcc56e439e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"maskR", "=", 
   RowBox[{"Round", "[", 
    RowBox[{"DataTransformation", "[", 
     RowBox[{"mask", ",", "vox", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10", ",", "10"}], "}"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7550036180647516`*^9, 3.7550036920620947`*^9}, {
   3.755004077409649*^9, 3.7550041133533134`*^9}, 3.7554934700311456`*^9, {
   3.755493502350135*^9, 3.7554935405656757`*^9}, 3.7554972023038435`*^9, {
   3.755497234848613*^9, 3.7554972378395543`*^9}, {3.758355062662741*^9, 
   3.758355112130682*^9}, 3.75835525956623*^9, 3.758442139575473*^9},
 CellLabel->
  "In[479]:=",ExpressionUUID->"4f50d823-b631-4620-97d5-9d9b11e937c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{"mask", " ", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"50", ",", "10"}], "]"}], ",", 
      RowBox[{"Dimensions", "[", "mask", "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758443079672928*^9, 3.758443105879885*^9}, {
  3.7584511955891147`*^9, 3.758451243536791*^9}},
 CellLabel->
  "In[480]:=",ExpressionUUID->"44816932-b5e2-4726-bf22-347533cdb0c9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Analyse Cardiac shape", "Subsection",
 CellChangeTimes->{{3.7584421602015347`*^9, 3.7584421684585533`*^9}},
 CellTags->"c:81",ExpressionUUID->"6cd6b54a-4e4f-4aea-a7ef-4153f6ba4485"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"off", ",", "vec", ",", "inout", ",", "pl"}], "}"}], "=", 
   RowBox[{"CentralAxes", "[", 
    RowBox[{"mask", ",", "vox", ",", 
     RowBox[{"ShowPlot", "->", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"off", ",", "vec", ",", "inout", ",", "pl"}], "}"}], "=", 
   RowBox[{"CentralAxes", "[", 
    RowBox[{"maskR", ",", "vox", ",", 
     RowBox[{"ShowPlot", "->", "True"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.758353130065507*^9, 3.758353147954149*^9}, {
  3.7583550943091393`*^9, 3.758355096722599*^9}, {3.758443040536918*^9, 
  3.7584430641494007`*^9}, {3.8656545115045977`*^9, 3.865654518801812*^9}},
 CellLabel->
  "In[551]:=",ExpressionUUID->"4ae0be06-8a05-47af-8c0b-17138c61cb58"],

Cell["Calculate Wall distance map", "Text",
 CellChangeTimes->{{3.7584421911028123`*^9, 
  3.758442200666338*^9}},ExpressionUUID->"ee141871-d592-4801-b4c6-\
06c9322a3a60"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"wall", ",", "der", ",", "fit"}], "}"}], "=", 
   RowBox[{"CalculateWallMap", "[", 
    RowBox[{"maskR", ",", "vox", ",", 
     RowBox[{"ShowPlot", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6711700713787427`*^9, 3.6711700745297427`*^9}, {
   3.671170685798001*^9, 3.6711706882142425`*^9}, {3.6711711323666534`*^9, 
   3.671171133541771*^9}, {3.671171315428958*^9, 3.671171315683983*^9}, {
   3.671184389482274*^9, 3.6711844172556562`*^9}, {3.6797384566840677`*^9, 
   3.679738458062146*^9}, {3.679738548876341*^9, 3.679738549318366*^9}, {
   3.7583529454490724`*^9, 3.758352946378356*^9}, 3.758352988257947*^9, 
   3.7583531242259703`*^9, {3.7583533925323286`*^9, 3.7583533930065994`*^9}, {
   3.758353722052821*^9, 3.7583537247038784`*^9}, 3.758354258037384*^9, 
   3.758354777272771*^9, 3.758355318565279*^9, {3.7584526895705156`*^9, 
   3.7584526911680527`*^9}, {3.798870015193198*^9, 3.798870017479393*^9}},
 CellLabel->
  "In[553]:=",ExpressionUUID->"eef5b238-54fe-43d1-bd93-2cc99019cdde"],

Cell["Calculate the myocardial coordinate system.", "Text",
 CellChangeTimes->{{3.7584421911028123`*^9, 3.758442200666338*^9}, {
  3.758542044128895*^9, 
  3.7585420520169334`*^9}},ExpressionUUID->"86ae354a-5496-40d5-835c-\
bbdc239e0f78"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rad", ",", "nor", ",", "cir"}], "}"}], ",", "plots"}], "}"}], 
   "=", 
   RowBox[{"CardiacCoordinateSystem", "[", 
    RowBox[{"maskR", ",", "vox", ",", 
     RowBox[{"ShowPlot", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7585419984134264`*^9, 3.7585420150426145`*^9}, {
  3.798870030593651*^9, 3.79887003772896*^9}},
 CellLabel->
  "In[557]:=",ExpressionUUID->"c47fd3a1-5f7e-4d66-8267-f71f16f1cd07"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cardiac Segmentation", "Subsection",
 CellChangeTimes->{{3.7584525644687185`*^9, 3.758452569896508*^9}},
 CellTags->"c:82",ExpressionUUID->"ea78aaa4-62b6-43d1-8ebd-0d555a671dc5"],

Cell[CellGroupData[{

Cell["perform segmentation", "Subsubsection",
 CellChangeTimes->{{3.758452603945456*^9, 3.758452608436533*^9}},
 CellTags->"c:83",ExpressionUUID->"fe1a8b13-333a-4024-9b40-6c8541119d74"],

Cell["\<\
Segment the hart according to the AH17 model and provide the segments as \
masks and radial sampleling points\
\>", "Text",
 CellChangeTimes->{{3.75845099394211*^9, 
  3.7584510201006393`*^9}},ExpressionUUID->"f9338d84-3437-449b-8a9e-\
62f482b4cfcf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"segmask", ",", "segang", ",", 
     RowBox[{"{", 
      RowBox[{"points", ",", "slices"}], "}"}]}], "}"}], "=", 
   RowBox[{"CardiacSegment", "[", 
    RowBox[{"dat", ",", "mask", ",", "off"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584429249714117`*^9, 3.7584429280846834`*^9}, {
  3.7584431103117285`*^9, 3.7584431337012405`*^9}},
 CellLabel->
  "In[559]:=",ExpressionUUID->"33509e0d-e0ac-4c7c-b9c9-867caa05b830"],

Cell["Plot The masks", "Text",
 CellChangeTimes->{{3.758451023845028*^9, 
  3.7584510285338435`*^9}},ExpressionUUID->"76d3418d-f144-42c4-8284-\
ff4c2b7979a6"],

Cell[BoxData[
 RowBox[{"PlotSegmentMask", "[", 
  RowBox[{"mask", ",", "segmask", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.758450904627673*^9, 3.7584509230557327`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"6eb068fe-9f84-4efd-b749-d180d41ea529"],

Cell["Plot the radial samples", "Text",
 CellChangeTimes->{{3.7584510309326878`*^9, 
  3.758451038916531*^9}},ExpressionUUID->"0cfab279-b4c7-44c9-9d88-\
d558f0a95c00"],

Cell[BoxData[
 RowBox[{"PlotSegments", "[", 
  RowBox[{"mask", ",", "dat", ",", "segang"}], "]"}]], "Input",
 CellChangeTimes->{{3.758450944853326*^9, 3.758450960033723*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"9a749ece-1497-44de-9d20-8276379966d7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Analyse data based on segmentation", "Subsubsection",
 CellChangeTimes->{{3.7584526136039176`*^9, 3.7584526254543796`*^9}},
 CellTags->"c:84",ExpressionUUID->"10f96f22-e10c-41bb-8f35-b9a1e773fe6a"],

Cell["Use the Radial samples to sample a dataset", "Text",
 CellChangeTimes->{{3.7584510452203364`*^9, 3.7584510649454217`*^9}, 
   3.7584525493282986`*^9},ExpressionUUID->"9b1bd386-1371-4f5e-8b89-\
df8892452f7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MeanStd", "[", 
    RowBox[{"GetMaskData", "[", 
     RowBox[{"dat", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
  "segmask"}]], "Input",
 CellChangeTimes->{{3.7584510677161164`*^9, 3.7584511118888845`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"68b4bbc1-c884-4771-a4a4-89c7c31471d7"],

Cell[BoxData[
 RowBox[{"Hist", "[", 
  RowBox[{"GetMaskData", "[", 
   RowBox[{"dat", ",", "mask"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.75845117163688*^9, 3.7584511860977283`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"9237ea30-acbb-44b6-ae7b-59a12af15f19"],

Cell[BoxData[
 RowBox[{"TableForm", "@", 
  RowBox[{"GetMaskMeans", "[", 
   RowBox[{"dat", ",", 
    RowBox[{"Transpose", "[", "segmask", "]"}], ",", "\"\<noise\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7584511158445263`*^9, 3.7584511463046584`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"aeacb816-877d-4070-923e-0cb7b292d179"],

Cell["Perform Radial sampling of data based on the segmentation", "Text",
 CellChangeTimes->{{3.758452144548445*^9, 
  3.758452161909641*^9}},ExpressionUUID->"5d1a0efe-d941-4939-ae1e-\
441bfbb8a97a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pts", ",", "radSamp"}], "}"}], "=", 
   RowBox[{"RadialSample", "[", 
    RowBox[{"mask", ",", "dat", ",", "segang"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758443213356582*^9, 3.758443259558839*^9}, {
  3.75845127304208*^9, 3.7584512994885883`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"50655e5f-6b23-440f-9239-f6decae57cbd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Visualize results", "Subsubsection",
 CellChangeTimes->{{3.7584526331563873`*^9, 3.758452643792627*^9}},
 CellTags->"c:85",ExpressionUUID->"0428555f-bf06-485e-bd86-110e5b03fd5d"],

Cell["\<\
Visualisation can be done using Busleyeplots or transmural profiles\
\>", "Text",
 CellChangeTimes->{{3.758452171971097*^9, 
  3.7584521947412176`*^9}},ExpressionUUID->"de8c27c7-f11b-40ba-bc10-\
c57fae6efe95"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"radSampF", "=", 
   RowBox[{"Flatten", "/@", "radSamp"}]}], ";"}], "\n", 
 RowBox[{"BullseyePlot", "[", 
  RowBox[{"radSampF", ",", 
   RowBox[{"BullPlotMethod", "\[Rule]", "\"\<Static\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.758452108915594*^9, 3.758452131439727*^9}, 
   3.7584521693298206`*^9, {3.758452245779707*^9, 3.758452248678297*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"a8fa823f-5049-4764-952f-4982177a5eb8"],

Cell[BoxData[
 RowBox[{"BullseyePlot", "[", 
  RowBox[{"radSampF", ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7584532873976264`*^9, 3.7584532914109397`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"2a2cc6eb-c726-4d33-8a51-fd9f5741739f"],

Cell["Make a trans mural plot of the data for segment 5", "Text",
 CellChangeTimes->{{3.758452358196032*^9, 3.758452382862898*^9}, {
  3.7584524245605936`*^9, 
  3.7584524246418853`*^9}},ExpressionUUID->"58fb01eb-5f6b-4f00-a0d7-\
e39e5bdc8042"],

Cell[BoxData[
 RowBox[{"TransmuralPlot", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"radSamp", "[", 
     RowBox[{"[", "5", "]"}], "]"}], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7584523162289815`*^9, 3.7584523486908674`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"e0072549-5fd7-4ee8-bfdd-74509f90111a"],

Cell["Make a trans mural plot of the wall distance map", "Text",
 CellChangeTimes->{{3.758452394069051*^9, 
  3.758452421469365*^9}},ExpressionUUID->"1b39c1fa-f998-4e08-a4f1-\
d548eb3441f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"wall", ",", "der"}], "}"}], "=", 
   RowBox[{"CalculateWallMap", "[", 
    RowBox[{"mask", ",", "vox", ",", 
     RowBox[{"ShowFit", "\[Rule]", "False"}], ",", 
     RowBox[{"MaskWallMap", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6711700713787427`*^9, 3.6711700745297427`*^9}, {
   3.671170685798001*^9, 3.6711706882142425`*^9}, {3.6711711323666534`*^9, 
   3.671171133541771*^9}, {3.671171315428958*^9, 3.671171315683983*^9}, {
   3.671184389482274*^9, 3.6711844172556562`*^9}, {3.6797384566840677`*^9, 
   3.679738458062146*^9}, {3.679738548876341*^9, 3.679738549318366*^9}, {
   3.7583529454490724`*^9, 3.758352946378356*^9}, 3.758352988257947*^9, 
   3.7583531242259703`*^9, {3.7583533925323286`*^9, 3.7583533930065994`*^9}, {
   3.758353722052821*^9, 3.7583537247038784`*^9}, 3.758354258037384*^9, 
   3.758354777272771*^9, 3.758355318565279*^9, {3.7584526895705156`*^9, 
   3.7584527190887866`*^9}, {3.7584539817336683`*^9, 3.758453985428482*^9}, {
   3.7584541340364633`*^9, 3.7584541548380938`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"ec281848-13c5-468f-8682-1fe31a677497"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pts", ",", "wallSamp"}], "}"}], "=", 
   RowBox[{"RadialSample", "[", 
    RowBox[{"mask", ",", 
     RowBox[{"100", "wall"}], ",", "segang"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584524090245485`*^9, 3.7584524132972326`*^9}, {
  3.7584524654917526`*^9, 3.758452494177825*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"352e5c6f-0915-4a3d-b3e0-c936c5c3b118"],

Cell[BoxData[
 RowBox[{"TransmuralPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"wallSamp", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", "1"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "100"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7584523162289815`*^9, 3.7584523486908674`*^9}, {
  3.7584524360667057`*^9, 3.7584524427690344`*^9}, {3.7584524880681143`*^9, 
  3.7584525053482847`*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"0b24b278-9787-4678-90fa-fb2efe7345ec"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.870330780722248*^9},ExpressionUUID->"d4defec7-9941-4d35-9eb4-\
78fe131065cf"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1904, 1101},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{
 "DocuToolsSettings" -> {
   "$ApplicationName" -> "QMRITools", "$LinkBase" -> "QMRITools", 
    "$DocumentationDirectory" -> 
    "D:\\werk\\workspace\\QMRITools\\QMRITools\\Documentation\\English\\", 
    "$ApplicationDirectory" -> "D:\\werk\\workspace\\QMRITools\\QMRITools"}, 
  "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
Magnification:>1. Inherited,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"51f5dbed-bdd4-4eff-9933-ee2bccf2ca77"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "c:1"->{
  Cell[580, 22, 181, 2, 98, "Title",ExpressionUUID->"934d8265-4fcc-4427-9f34-640074773381",
   CellTags->"c:1"]},
 "c:2"->{
  Cell[1825, 52, 245, 3, 54, "Subsection",ExpressionUUID->"d9089451-56b6-4385-8261-4b613f418e39",
   CellTags->"c:2"]},
 "c:3"->{
  Cell[4034, 102, 229, 3, 54, "Subsection",ExpressionUUID->"39e70345-88c4-43ed-a9b1-cbbbf33d0989",
   CellTags->"c:3"]},
 "c:4"->{
  Cell[4920, 125, 196, 2, 54, "Subsection",ExpressionUUID->"1037c5ba-e19a-4732-8360-f60e7a2fa01d",
   CellTags->"c:4"]},
 "c:5"->{
  Cell[7418, 186, 173, 2, 38, "Subsection",ExpressionUUID->"8ee5c0ae-81ad-4d98-953f-c7e16140406d",
   CellTags->"c:5"],
  Cell[34463, 648, 278, 4, 38, "Subsection",ExpressionUUID->"07251170-7051-4f33-9d8a-0ab8b7bd8936",
   CellTags->"c:5"]},
 "c:6"->{
  Cell[35659, 681, 177, 2, 54, "Subsection",ExpressionUUID->"1e0a6fa4-16c6-4324-b877-be71023bb362",
   CellTags->"c:6"]},
 "c:7"->{
  Cell[39104, 773, 234, 3, 38, "Subsection",ExpressionUUID->"ef8f60c6-1123-44e0-aa4c-01d9fab680a3",
   CellTags->"c:7"]},
 "c:8"->{
  Cell[43685, 895, 202, 2, 38, "Subsection",ExpressionUUID->"b78c9120-ccf2-40e5-87d7-a484213417b3",
   CellTags->"c:8"]},
 "c:9"->{
  Cell[55970, 1183, 179, 2, 38, "Subsection",ExpressionUUID->"0d830d7c-dc92-4a0f-96b0-5cb8ad6ed729",
   CellTags->"c:9"]},
 "c:20"->{
  Cell[58162, 1241, 181, 2, 38, "Subsection",ExpressionUUID->"f6a0af4d-c709-4e10-972b-30d8c0b63b74",
   CellTags->"c:20"]},
 "c:10"->{
  Cell[61494, 1340, 172, 2, 54, "Subsection",ExpressionUUID->"d51e43d8-34ee-4df9-8bf3-5b69733ed3ff",
   CellTags->"c:10"]},
 "c:11"->{
  Cell[61691, 1346, 181, 2, 45, "Subsubsection",ExpressionUUID->"968fa70b-c4b4-4d48-a949-8da4355d6428",
   CellTags->"c:11"]},
 "c:12"->{
  Cell[64170, 1413, 187, 2, 37, "Subsubsection",ExpressionUUID->"267579d6-9b73-4c4b-aa48-be3e08dfda04",
   CellTags->"c:12"]},
 "c:13"->{
  Cell[65224, 1443, 180, 2, 37, "Subsubsection",ExpressionUUID->"9c3fe646-8c82-4fa5-ba13-4d6d8bf9eb94",
   CellTags->"c:13"]},
 "c:14"->{
  Cell[66512, 1477, 181, 2, 37, "Subsubsection",ExpressionUUID->"55749168-63df-4963-aab6-cb1fc8c970cf",
   CellTags->"c:14"]},
 "c:15"->{
  Cell[67762, 1512, 180, 2, 54, "Subsection",ExpressionUUID->"93607360-ed31-4145-8241-5b261eccc5b0",
   CellTags->"c:15"]},
 "c:16"->{
  Cell[67967, 1518, 185, 2, 45, "Subsubsection",ExpressionUUID->"4f8cb032-dea0-497b-bd1c-d723913ce783",
   CellTags->"c:16"]},
 "c:17"->{
  Cell[70663, 1592, 194, 2, 37, "Subsubsection",ExpressionUUID->"2e5b960f-ce39-4cd9-a390-ec4c724d0794",
   CellTags->"c:17"]},
 "c:18"->{
  Cell[73270, 1664, 242, 3, 54, "Subsection",ExpressionUUID->"6033b32e-4c89-4553-869f-3243e5607bf1",
   CellTags->"c:18"]},
 "c:19"->{
  Cell[84130, 1976, 175, 2, 54, "Subsection",ExpressionUUID->"6ac426ee-2cf2-4609-a70a-b7bbae6bed70",
   CellTags->"c:19"]},
 "c:21"->{
  Cell[86133, 2034, 171, 2, 38, "Subsection",ExpressionUUID->"8519decb-a647-4082-a417-8490e787bc1d",
   CellTags->"c:21"]},
 "c:22"->{
  Cell[88244, 2088, 190, 2, 38, "Subsection",ExpressionUUID->"a08bed25-3efe-40d5-bc4e-9f803924dddc",
   CellTags->"c:22"]},
 "c:23"->{
  Cell[92538, 2208, 175, 2, 54, "Subsection",ExpressionUUID->"47e835ce-4699-4923-898e-db43e06f49d0",
   CellTags->"c:23"]},
 "c:24"->{
  Cell[93557, 2239, 173, 2, 38, "Subsection",ExpressionUUID->"586003b9-59ba-4f2a-a670-aeb201812c92",
   CellTags->"c:24"]},
 "c:25"->{
  Cell[93755, 2245, 196, 2, 45, "Subsubsection",ExpressionUUID->"69a2c8a5-fb3b-4839-94de-bdb3a0a3b69c",
   CellTags->"c:25"],
  Cell[97492, 2349, 227, 3, 37, "Subsubsection",ExpressionUUID->"1dec97a9-0a89-48cc-a6cf-b9fd05136c2b",
   CellTags->"c:25"]},
 "c:26"->{
  Cell[102375, 2477, 250, 3, 37, "Subsubsection",ExpressionUUID->"ded5d62a-f398-4005-9427-e92efe288312",
   CellTags->"c:26"]},
 "c:27"->{
  Cell[110658, 2693, 187, 2, 54, "Subsection",ExpressionUUID->"cf83491c-53d6-4317-902a-83e581aa5dc7",
   CellTags->"c:27"]},
 "c:28"->{
  Cell[112609, 2747, 175, 2, 54, "Subsection",ExpressionUUID->"932638bc-7c62-479b-bb0d-3cffa205baac",
   CellTags->"c:28"]},
 "c:29"->{
  Cell[114382, 2800, 187, 2, 38, "Subsection",ExpressionUUID->"5c27d6f6-8cde-4515-862a-aa9c9642bd78",
   CellTags->"c:29"]},
 "c:30"->{
  Cell[125038, 3059, 295, 4, 38, "Subsection",ExpressionUUID->"c10c058b-a500-4c2d-bffa-2955b14de21a",
   CellTags->"c:30"]},
 "c:31"->{
  Cell[125358, 3067, 184, 2, 45, "Subsubsection",ExpressionUUID->"adaf1997-c6af-46c4-ae60-0fb87f7483c2",
   CellTags->"c:31"]},
 "c:32"->{
  Cell[129683, 3164, 193, 2, 37, "Subsubsection",ExpressionUUID->"f38c2344-3618-4b65-86d0-b42b8689639d",
   CellTags->"c:32"]},
 "c:33"->{
  Cell[132673, 3239, 196, 2, 54, "Subsection",ExpressionUUID->"52e9fa03-400d-4512-9bf9-1437a0e5fcb7",
   CellTags->"c:33"]},
 "c:34"->{
  Cell[136314, 3331, 292, 4, 54, "Subsection",ExpressionUUID->"a6da33c3-efdf-4208-ba9d-24feeed10a88",
   CellTags->"c:34"]},
 "c:35"->{
  Cell[136631, 3339, 236, 3, 45, "Subsubsection",ExpressionUUID->"2edddb44-1bfb-48ca-829f-4e01ababe642",
   CellTags->"c:35"]},
 "c:36"->{
  Cell[145886, 3577, 218, 3, 37, "Subsubsection",ExpressionUUID->"67a583ec-d68b-4d8e-ae56-a358819f36f5",
   CellTags->"c:36"]},
 "c:37"->{
  Cell[147735, 3620, 198, 3, 54, "Subsection",ExpressionUUID->"7b0ca489-2d98-4b70-8d0f-822a0387c0f1",
   CellTags->"c:37"]},
 "c:38"->{
  Cell[147958, 3627, 178, 2, 45, "Subsubsection",ExpressionUUID->"177a1753-5f03-4991-89d8-98a1aa966a50",
   CellTags->"c:38"]},
 "c:39"->{
  Cell[151416, 3722, 199, 2, 37, "Subsubsection",ExpressionUUID->"fad4d634-1ff8-466d-8264-61cf6051a1dc",
   CellTags->"c:39"]},
 "c:40"->{
  Cell[154510, 3808, 232, 3, 37, "Subsubsection",ExpressionUUID->"1b109d2e-a32c-48ad-9a6b-09b964323db5",
   CellTags->"c:40"]},
 "c:41"->{
  Cell[156521, 3862, 222, 3, 37, "Subsubsection",ExpressionUUID->"202a85c6-aa77-469d-80b0-13a415d3aa61",
   CellTags->"c:41"]},
 "c:42"->{
  Cell[166775, 4105, 121, 1, 54, "Subsection",ExpressionUUID->"6e39cf2a-909a-421d-928c-dff91acc75c9",
   CellTags->"c:42"],
  Cell[167079, 4115, 238, 3, 54, "Subsection",ExpressionUUID->"6f5b2db9-e346-4bd8-a44c-8cca8c836fad",
   CellTags->"c:42"]},
 "c:43"->{
  Cell[177304, 4379, 245, 3, 38, "Subsection",ExpressionUUID->"33202e28-0fa0-4880-a579-60fd33dd0adb",
   CellTags->"c:43"]},
 "c:44"->{
  Cell[181727, 4519, 180, 2, 38, "Subsection",ExpressionUUID->"6c868790-2893-463e-a2d0-1a9a571113d7",
   CellTags->"c:44"]},
 "c:45"->{
  Cell[412205, 8718, 177, 2, 54, "Subsection",ExpressionUUID->"b8cae968-01be-4d76-93c4-914725dacb60",
   CellTags->"c:45"]},
 "c:46"->{
  Cell[414344, 8777, 187, 2, 38, "Subsection",ExpressionUUID->"e4d814b7-307b-44b1-8176-77d613190d5c",
   CellTags->"c:46"]},
 "c:47"->{
  Cell[419509, 8919, 190, 2, 38, "Subsection",ExpressionUUID->"a32b7405-2d28-4efa-ad38-9fc2d3fe6ff7",
   CellTags->"c:47"]},
 "c:48"->{
  Cell[428494, 9149, 187, 2, 54, "Subsection",ExpressionUUID->"8445ef95-5973-4648-871d-e56f6b632789",
   CellTags->"c:48"]},
 "c:49"->{
  Cell[434887, 9330, 192, 2, 38, "Subsection",ExpressionUUID->"d12758da-d1d5-43a6-8aaa-503db8464fff",
   CellTags->"c:49"]},
 "c:50"->{
  Cell[437486, 9397, 180, 2, 38, "Subsection",ExpressionUUID->"3661d520-8d0a-475a-b073-957f7c24d670",
   CellTags->"c:50"]},
 "c:51"->{
  Cell[442266, 9529, 192, 2, 54, "Subsection",ExpressionUUID->"25adc37f-e4d2-4d9f-a5ed-8612c20d46c3",
   CellTags->"c:51"]},
 "c:52"->{
  Cell[444870, 9605, 179, 2, 38, "Subsection",ExpressionUUID->"37567aef-8b97-425f-abdf-d82ae053b962",
   CellTags->"c:52"],
  Cell[481252, 10575, 239, 3, 54, "Subsection",ExpressionUUID->"5339986f-899b-4db3-9ea6-b1257b77c4d8",
   CellTags->"c:52"]},
 "c:53"->{
  Cell[446291, 9643, 386, 5, 38, "Subsection",ExpressionUUID->"29712ec0-7f9d-4363-bd69-fedc89b926de",
   CellTags->"c:53"]},
 "c:54"->{
  Cell[446702, 9652, 178, 2, 45, "Subsubsection",ExpressionUUID->"7b6f1d42-3372-4eae-9f3b-52b01fd6c20a",
   CellTags->"c:54"]},
 "c:55"->{
  Cell[449873, 9737, 183, 2, 37, "Subsubsection",ExpressionUUID->"75236b9f-93a9-4123-9f0b-e0d6063ca27a",
   CellTags->"c:55"]},
 "c:56"->{
  Cell[452236, 9808, 199, 2, 37, "Subsubsection",ExpressionUUID->"d4ebefef-2c40-4afa-86e2-01e82ef7e608",
   CellTags->"c:56"]},
 "c:57"->{
  Cell[455177, 9878, 178, 2, 54, "Subsection",ExpressionUUID->"194fc7a6-9250-4380-ab91-b6f48a0893c5",
   CellTags->"c:57"]},
 "c:58"->{
  Cell[455380, 9884, 217, 3, 45, "Subsubsection",ExpressionUUID->"c83a9054-dd74-47d7-ad95-3b9d6619e603",
   CellTags->"c:58"]},
 "c:59"->{
  Cell[458125, 9959, 254, 3, 37, "Subsubsection",ExpressionUUID->"37c42ac9-91fe-46e0-b5f0-8a8055e0e5be",
   CellTags->"c:59"]},
 "c:60"->{
  Cell[460857, 10035, 209, 2, 37, "Subsubsection",ExpressionUUID->"e507394d-7fce-45ce-bab9-205bc132c31e",
   CellTags->"c:60"]},
 "c:61"->{
  Cell[462517, 10078, 228, 3, 54, "Subsection",ExpressionUUID->"46cb5c22-df36-42f1-8278-128db9e6546d",
   CellTags->"c:61"]},
 "c:62"->{
  Cell[462770, 10085, 182, 2, 45, "Subsubsection",ExpressionUUID->"46110b45-9f52-4171-ae7f-cc9053aa8a39",
   CellTags->"c:62"]},
 "c:63"->{
  Cell[473083, 10351, 300, 4, 37, "Subsubsection",ExpressionUUID->"5df7f489-c3af-447f-892b-2d741b7472b9",
   CellTags->"c:63"]},
 "c:64"->{
  Cell[477876, 10483, 243, 3, 37, "Subsubsection",ExpressionUUID->"e037ed65-c2cd-4cc5-8065-ba7af72e972b",
   CellTags->"c:64"]},
 "c:65"->{
  Cell[487239, 10732, 189, 2, 54, "Subsection",ExpressionUUID->"d31f39f7-0271-44c7-bb22-4483ca591ade",
   CellTags->"c:65"]},
 "c:66"->{
  Cell[495896, 10980, 249, 3, 38, "Subsection",ExpressionUUID->"09dc6daf-59ee-4840-bd77-0dfd2bff5562",
   CellTags->"c:66"]},
 "c:67"->{
  Cell[498591, 11050, 180, 2, 38, "Subsection",ExpressionUUID->"f1a32196-e07f-40de-9d22-2a3e291b7dda",
   CellTags->"c:67"]},
 "c:68"->{
  Cell[519005, 11550, 179, 2, 54, "Subsection",ExpressionUUID->"01c3231d-098c-4ccb-98c5-ca29c556a67d",
   CellTags->"c:68"]},
 "c:69"->{
  Cell[521224, 11603, 249, 3, 38, "Subsection",ExpressionUUID->"7b2df312-5a60-4afc-9c09-a780d1b79f27",
   CellTags->"c:69"]},
 "c:70"->{
  Cell[525282, 11713, 261, 3, 38, "Subsection",ExpressionUUID->"d662ecba-578b-4489-8e5f-fa36d3871aa7",
   CellTags->"c:70"]},
 "c:71"->{
  Cell[543275, 12114, 224, 3, 54, "Subsection",ExpressionUUID->"16e4c173-1b98-4694-a73e-a9458b44e628",
   CellTags->"c:71"]},
 "c:72"->{
  Cell[543524, 12121, 192, 2, 45, "Subsubsection",ExpressionUUID->"2d7a5585-863f-40ad-b02f-be363d7913a3",
   CellTags->"c:72"]},
 "c:73"->{
  Cell[544917, 12162, 184, 2, 37, "Subsubsection",ExpressionUUID->"26074711-b967-4b74-9ac1-52cb8c789745",
   CellTags->"c:73"]},
 "c:74"->{
  Cell[546718, 12217, 243, 3, 54, "Subsection",ExpressionUUID->"2cfca995-51c1-4930-93bd-525f0bdfb9d5",
   CellTags->"c:74"]},
 "c:75"->{
  Cell[550965, 12314, 262, 3, 38, "Subsection",ExpressionUUID->"bdc44691-f744-4c66-a1dd-7438bdd242a3",
   CellTags->"c:75"]},
 "c:76"->{
  Cell[551252, 12321, 181, 2, 45, "Subsubsection",ExpressionUUID->"59807f79-d229-49e5-b637-790a17413076",
   CellTags->"c:76"]},
 "c:77"->{
  Cell[556950, 12438, 276, 4, 37, "Subsubsection",ExpressionUUID->"dab93187-a908-4ba7-ae93-e35b0b7d7535",
   CellTags->"c:77"]},
 "c:78"->{
  Cell[560242, 12523, 174, 2, 37, "Subsubsection",ExpressionUUID->"11b0bc08-716e-4837-a55b-d3c98505048d",
   CellTags->"c:78"]},
 "c:79"->{
  Cell[563971, 12619, 190, 2, 54, "Subsection",ExpressionUUID->"6705b400-369d-4acb-94b1-826717b38934",
   CellTags->"c:79"]},
 "c:80"->{
  Cell[576338, 12866, 186, 2, 54, "Subsection",ExpressionUUID->"6a10872d-dcba-422d-a092-ff6bf02d5699",
   CellTags->"c:80"]},
 "c:81"->{
  Cell[579692, 12957, 187, 2, 38, "Subsection",ExpressionUUID->"6cd6b54a-4e4f-4aea-a7ef-4153f6ba4485",
   CellTags->"c:81"]},
 "c:82"->{
  Cell[582783, 13034, 184, 2, 38, "Subsection",ExpressionUUID->"ea78aaa4-62b6-43d1-8ebd-0d555a671dc5",
   CellTags->"c:82"]},
 "c:83"->{
  Cell[582992, 13040, 185, 2, 45, "Subsubsection",ExpressionUUID->"fe1a8b13-333a-4024-9b40-6c8541119d74",
   CellTags->"c:83"]},
 "c:84"->{
  Cell[584819, 13091, 203, 2, 37, "Subsubsection",ExpressionUUID->"10f96f22-e10c-41bb-8f35-b9a1e773fe6a",
   CellTags->"c:84"]},
 "c:85"->{
  Cell[586833, 13145, 184, 2, 37, "Subsubsection",ExpressionUUID->"0428555f-bf06-485e-bd86-110e5b03fd5d",
   CellTags->"c:85"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"c:1", 591980, 13276},
 {"c:2", 592104, 13279},
 {"c:3", 592234, 13282},
 {"c:4", 592365, 13285},
 {"c:5", 592496, 13288},
 {"c:6", 592748, 13293},
 {"c:7", 592880, 13296},
 {"c:8", 593012, 13299},
 {"c:9", 593144, 13302},
 {"c:20", 593278, 13305},
 {"c:10", 593413, 13308},
 {"c:11", 593548, 13311},
 {"c:12", 593686, 13314},
 {"c:13", 593824, 13317},
 {"c:14", 593962, 13320},
 {"c:15", 594100, 13323},
 {"c:16", 594235, 13326},
 {"c:17", 594373, 13329},
 {"c:18", 594511, 13332},
 {"c:19", 594646, 13335},
 {"c:21", 594781, 13338},
 {"c:22", 594916, 13341},
 {"c:23", 595051, 13344},
 {"c:24", 595186, 13347},
 {"c:25", 595321, 13350},
 {"c:26", 595585, 13355},
 {"c:27", 595724, 13358},
 {"c:28", 595860, 13361},
 {"c:29", 595996, 13364},
 {"c:30", 596132, 13367},
 {"c:31", 596268, 13370},
 {"c:32", 596407, 13373},
 {"c:33", 596546, 13376},
 {"c:34", 596682, 13379},
 {"c:35", 596818, 13382},
 {"c:36", 596957, 13385},
 {"c:37", 597096, 13388},
 {"c:38", 597232, 13391},
 {"c:39", 597371, 13394},
 {"c:40", 597510, 13397},
 {"c:41", 597649, 13400},
 {"c:42", 597788, 13403},
 {"c:43", 598048, 13408},
 {"c:44", 598184, 13411},
 {"c:45", 598320, 13414},
 {"c:46", 598456, 13417},
 {"c:47", 598592, 13420},
 {"c:48", 598728, 13423},
 {"c:49", 598864, 13426},
 {"c:50", 599000, 13429},
 {"c:51", 599136, 13432},
 {"c:52", 599272, 13435},
 {"c:53", 599533, 13440},
 {"c:54", 599669, 13443},
 {"c:55", 599808, 13446},
 {"c:56", 599947, 13449},
 {"c:57", 600086, 13452},
 {"c:58", 600222, 13455},
 {"c:59", 600361, 13458},
 {"c:60", 600500, 13461},
 {"c:61", 600640, 13464},
 {"c:62", 600777, 13467},
 {"c:63", 600917, 13470},
 {"c:64", 601057, 13473},
 {"c:65", 601197, 13476},
 {"c:66", 601334, 13479},
 {"c:67", 601471, 13482},
 {"c:68", 601608, 13485},
 {"c:69", 601745, 13488},
 {"c:70", 601882, 13491},
 {"c:71", 602019, 13494},
 {"c:72", 602156, 13497},
 {"c:73", 602296, 13500},
 {"c:74", 602436, 13503},
 {"c:75", 602573, 13506},
 {"c:76", 602710, 13509},
 {"c:77", 602850, 13512},
 {"c:78", 602990, 13515},
 {"c:79", 603130, 13518},
 {"c:80", 603267, 13521},
 {"c:81", 603404, 13524},
 {"c:82", 603541, 13527},
 {"c:83", 603678, 13530},
 {"c:84", 603818, 13533},
 {"c:85", 603958, 13536}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 181, 2, 98, "Title",ExpressionUUID->"934d8265-4fcc-4427-9f34-640074773381",
 CellTags->"c:1"],
Cell[764, 26, 721, 13, 104, "Text",ExpressionUUID->"22b0e3d8-9903-4283-b556-9ad31d8e7f65"],
Cell[CellGroupData[{
Cell[1510, 43, 290, 5, 69, "Chapter",ExpressionUUID->"4d401d3b-2658-4bc0-bbef-6cc2152ecc5c"],
Cell[CellGroupData[{
Cell[1825, 52, 245, 3, 54, "Subsection",ExpressionUUID->"d9089451-56b6-4385-8261-4b613f418e39",
 CellTags->"c:2"],
Cell[2073, 57, 341, 7, 35, "Text",ExpressionUUID->"a102f725-94d2-43a9-822e-d1dd3b7c0c23"],
Cell[2417, 66, 1075, 20, 70, "Input",ExpressionUUID->"cae7997b-5732-4630-8297-a72d2ca96db1"],
Cell[3495, 88, 502, 9, 50, "Input",ExpressionUUID->"806bff7c-106b-4eb2-952c-cd89f993a8f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4034, 102, 229, 3, 54, "Subsection",ExpressionUUID->"39e70345-88c4-43ed-a9b1-cbbbf33d0989",
 CellTags->"c:3"],
Cell[4266, 107, 392, 7, 35, "Text",ExpressionUUID->"d87aed66-5047-4dad-9433-3a26fa35e172"],
Cell[4661, 116, 222, 4, 50, "Input",ExpressionUUID->"a558d44a-819d-4c6d-8542-a3c82d017a78"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4920, 125, 196, 2, 54, "Subsection",ExpressionUUID->"1037c5ba-e19a-4732-8360-f60e7a2fa01d",
 CellTags->"c:4"],
Cell[5119, 129, 409, 8, 35, "Text",ExpressionUUID->"9def143d-308d-45ea-9146-337b684f48fb"],
Cell[5531, 139, 531, 9, 29, "Input",ExpressionUUID->"66f0941d-b74d-4f23-a6d3-c5e28a3d33c5"],
Cell[6065, 150, 517, 8, 29, "Input",ExpressionUUID->"2daef7a9-1b9d-41bf-a8ae-40d232f006a0"],
Cell[6585, 160, 266, 5, 29, "Input",ExpressionUUID->"017dd998-8132-4761-a2ee-0fc908034fca"],
Cell[6854, 167, 527, 14, 29, "Input",ExpressionUUID->"aab0b17b-4665-4b8a-a984-f94dd7cd5cc1"]
}, Closed]],
Cell[CellGroupData[{
Cell[7418, 186, 173, 2, 38, "Subsection",ExpressionUUID->"8ee5c0ae-81ad-4d98-953f-c7e16140406d",
 CellTags->"c:5"],
Cell[7594, 190, 344, 7, 35, "Text",ExpressionUUID->"0f188b1d-4afc-4876-b969-fb73e86a3aa4"],
Cell[7941, 199, 205, 3, 29, "Input",ExpressionUUID->"a66d2a05-f5eb-4f7c-8218-62ea88883b7a"],
Cell[8149, 204, 370, 8, 35, "Text",ExpressionUUID->"0b15c18e-462f-410c-a373-4af09d51be09"],
Cell[8522, 214, 25904, 429, 722, "Input",ExpressionUUID->"538c1a9a-c29d-462c-aafe-1d9d7b0e26f9"]
}, Closed]],
Cell[CellGroupData[{
Cell[34463, 648, 278, 4, 38, "Subsection",ExpressionUUID->"07251170-7051-4f33-9d8a-0ab8b7bd8936",
 CellTags->"c:5"],
Cell[34744, 654, 550, 13, 29, "Input",ExpressionUUID->"7337997b-0a60-4555-8711-cf95c8769a1d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35343, 673, 291, 4, 69, "Chapter",ExpressionUUID->"fa1ebb06-be4c-4fd9-86a2-22990e083b10"],
Cell[CellGroupData[{
Cell[35659, 681, 177, 2, 54, "Subsection",ExpressionUUID->"1e0a6fa4-16c6-4324-b877-be71023bb362",
 CellTags->"c:6"],
Cell[35839, 685, 325, 7, 35, "Text",ExpressionUUID->"efd8d2f7-3c25-48fa-8a75-1436a1fefc61"],
Cell[36167, 694, 475, 9, 29, "Input",ExpressionUUID->"1ba38701-07bb-494e-82ee-7d21f0bb7296"],
Cell[36645, 705, 195, 3, 35, "Text",ExpressionUUID->"47e0ae29-e4f6-4ece-bfcd-674eecb33cc7"],
Cell[36843, 710, 575, 12, 50, "Input",ExpressionUUID->"31c3e0bc-c61d-426e-82ac-feccd46599ec"],
Cell[37421, 724, 454, 11, 50, "Input",ExpressionUUID->"8d7d191a-ae42-4151-a83e-42b5c7e817d7"],
Cell[37878, 737, 188, 3, 35, "Text",ExpressionUUID->"61e99b7e-eee7-40e2-bb66-b5dfceb70997"],
Cell[38069, 742, 184, 4, 29, "Input",ExpressionUUID->"b43b9775-acff-4fd1-995d-6f0beb3f15d3"],
Cell[38256, 748, 420, 8, 58, "Text",ExpressionUUID->"d94c84c5-f9c9-40aa-9e19-7f2d8597b49a"],
Cell[38679, 758, 194, 4, 29, "Input",ExpressionUUID->"ec69b542-77af-4c0e-bf6a-9c11fe192c0f"],
Cell[38876, 764, 191, 4, 29, "Input",ExpressionUUID->"fbd8dc75-cbe9-45b8-b0ca-9e88bdcb7310"]
}, Closed]],
Cell[CellGroupData[{
Cell[39104, 773, 234, 3, 38, "Subsection",ExpressionUUID->"ef8f60c6-1123-44e0-aa4c-01d9fab680a3",
 CellTags->"c:7"],
Cell[39341, 778, 229, 5, 35, "Text",ExpressionUUID->"f051523a-5e41-48b6-80af-3536deff8048"],
Cell[39573, 785, 457, 9, 50, "Input",ExpressionUUID->"7d5996b5-b119-4a70-987f-a14d8037aa23"],
Cell[40033, 796, 671, 16, 50, "Input",ExpressionUUID->"b4b1c6b9-f877-461e-a79b-2b02af76c0f4"],
Cell[40707, 814, 309, 7, 35, "Text",ExpressionUUID->"f189dc01-e90e-463b-b0e9-f84b0047f19b"],
Cell[41019, 823, 475, 11, 50, "Input",ExpressionUUID->"8df64434-479f-48f3-bbf6-1802ed564d7c"],
Cell[41497, 836, 583, 15, 50, "Input",ExpressionUUID->"badbbd02-e57d-4ec4-810d-6622b65b0f90"],
Cell[42083, 853, 745, 19, 50, "Input",ExpressionUUID->"81cf639d-6f31-468e-b872-cad9f6306326"],
Cell[42831, 874, 817, 16, 50, "Input",ExpressionUUID->"c8c8f4f5-4916-4152-948c-043243f8ee7f"]
}, Closed]],
Cell[CellGroupData[{
Cell[43685, 895, 202, 2, 38, "Subsection",ExpressionUUID->"b78c9120-ccf2-40e5-87d7-a484213417b3",
 CellTags->"c:8"],
Cell[43890, 899, 399, 9, 58, "Text",ExpressionUUID->"dc9dff42-f5b7-4251-8736-a0dca6b379bb"],
Cell[CellGroupData[{
Cell[44314, 912, 860, 21, 70, "Input",ExpressionUUID->"696f126b-efab-4a13-8aa9-b44de55e3f44"],
Cell[45177, 935, 10150, 228, 140, "Print",ExpressionUUID->"c8595e3b-1c54-4fb4-a178-be69b55183bc"]
}, Open  ]],
Cell[55342, 1166, 591, 12, 50, "Input",ExpressionUUID->"41ec57c1-ef10-4a83-b8a8-146c45bdf378"]
}, Closed]],
Cell[CellGroupData[{
Cell[55970, 1183, 179, 2, 38, "Subsection",ExpressionUUID->"0d830d7c-dc92-4a0f-96b0-5cb8ad6ed729",
 CellTags->"c:9"],
Cell[56152, 1187, 192, 3, 35, "Text",ExpressionUUID->"aef90da1-5cda-43d0-ba41-fc9641543c86"],
Cell[56347, 1192, 864, 19, 110, "Input",ExpressionUUID->"2c5f1eed-b1d2-413a-a711-e9e26a4cb615"],
Cell[57214, 1213, 911, 23, 130, "Input",ExpressionUUID->"0711c021-52b7-4374-b710-c62812e3419e"]
}, Closed]],
Cell[CellGroupData[{
Cell[58162, 1241, 181, 2, 38, "Subsection",ExpressionUUID->"f6a0af4d-c709-4e10-972b-30d8c0b63b74",
 CellTags->"c:20"],
Cell[CellGroupData[{
Cell[58368, 1247, 175, 3, 45, "Subsubsection",ExpressionUUID->"014127e0-d730-46e1-bfe9-a6f749fdb158"],
Cell[58546, 1252, 179, 3, 35, "Text",ExpressionUUID->"f5dfccdd-d0a8-49d0-9956-18c3955c2e22"],
Cell[58728, 1257, 502, 10, 29, "Input",ExpressionUUID->"0cc0a0a1-1e6b-4975-916e-86206f067c29"]
}, Closed]],
Cell[CellGroupData[{
Cell[59267, 1272, 189, 3, 37, "Subsubsection",ExpressionUUID->"23fea064-6b37-41fa-9165-a2081fe0b5aa"],
Cell[59459, 1277, 532, 13, 70, "Input",ExpressionUUID->"e25e9312-5f35-40c7-bfca-fe72bc85ed2c"]
}, Closed]],
Cell[CellGroupData[{
Cell[60028, 1295, 170, 3, 37, "Subsubsection",ExpressionUUID->"143d21bd-6321-4173-ad93-05a606106c8b"],
Cell[60201, 1300, 180, 3, 35, "Text",ExpressionUUID->"3134327b-eef2-428f-94bf-02a86341a4d8"],
Cell[60384, 1305, 466, 12, 50, "Input",ExpressionUUID->"87060ca1-4ed9-453e-b81b-530b00a81a85"],
Cell[60853, 1319, 174, 3, 35, "Text",ExpressionUUID->"dad8cf23-94a8-4b2e-8483-0afd4b43de7d"],
Cell[61030, 1324, 415, 10, 50, "Input",ExpressionUUID->"645596ea-f203-4c73-8ef1-2d912a79b250"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61494, 1340, 172, 2, 54, "Subsection",ExpressionUUID->"d51e43d8-34ee-4df9-8bf3-5b69733ed3ff",
 CellTags->"c:10"],
Cell[CellGroupData[{
Cell[61691, 1346, 181, 2, 45, "Subsubsection",ExpressionUUID->"968fa70b-c4b4-4d48-a949-8da4355d6428",
 CellTags->"c:11"],
Cell[61875, 1350, 243, 6, 35, "Text",ExpressionUUID->"8247c756-42fb-4cde-ab32-71f7738c8599"],
Cell[62121, 1358, 581, 12, 50, "Input",ExpressionUUID->"0ec03379-9273-43c8-969d-41d370813788"],
Cell[62705, 1372, 444, 10, 50, "Input",ExpressionUUID->"74538836-333a-4a62-b9e6-38ff5ee95d7f"],
Cell[63152, 1384, 238, 4, 29, "Input",ExpressionUUID->"5d2b3531-cdd4-413e-b108-ae67e2b9af5b"],
Cell[63393, 1390, 499, 12, 50, "Input",ExpressionUUID->"63dc3f77-e418-418a-bf38-bffe8d178bb3"],
Cell[63895, 1404, 238, 4, 29, "Input",ExpressionUUID->"13b3872f-1f90-4567-aefb-ea163cfd148c"]
}, Closed]],
Cell[CellGroupData[{
Cell[64170, 1413, 187, 2, 37, "Subsubsection",ExpressionUUID->"267579d6-9b73-4c4b-aa48-be3e08dfda04",
 CellTags->"c:12"],
Cell[64360, 1417, 253, 6, 35, "Text",ExpressionUUID->"8a76c358-d64d-4f4b-b485-c80d35efd628"],
Cell[64616, 1425, 357, 8, 29, "Input",ExpressionUUID->"9298008e-ebb6-4839-b787-3eb2650efb20"],
Cell[64976, 1435, 211, 3, 29, "Input",ExpressionUUID->"c002fff5-58c3-459d-bd3c-c4ccbb6ca90d"]
}, Closed]],
Cell[CellGroupData[{
Cell[65224, 1443, 180, 2, 37, "Subsubsection",ExpressionUUID->"9c3fe646-8c82-4fa5-ba13-4d6d8bf9eb94",
 CellTags->"c:13"],
Cell[65407, 1447, 798, 18, 70, "Input",ExpressionUUID->"8d1daacd-8970-4659-9835-8f732610f46c"],
Cell[66208, 1467, 267, 5, 29, "Input",ExpressionUUID->"30981062-8ace-4811-b1a0-840f0ffb8e73"]
}, Closed]],
Cell[CellGroupData[{
Cell[66512, 1477, 181, 2, 37, "Subsubsection",ExpressionUUID->"55749168-63df-4963-aab6-cb1fc8c970cf",
 CellTags->"c:14"],
Cell[66696, 1481, 218, 5, 35, "Text",ExpressionUUID->"a314f89f-489d-428a-b3e4-44c58b98ad36"],
Cell[66917, 1488, 796, 18, 110, "Input",ExpressionUUID->"95428a0b-7e40-4b51-92e8-5da74f819672"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67762, 1512, 180, 2, 54, "Subsection",ExpressionUUID->"93607360-ed31-4145-8241-5b261eccc5b0",
 CellTags->"c:15"],
Cell[CellGroupData[{
Cell[67967, 1518, 185, 2, 45, "Subsubsection",ExpressionUUID->"4f8cb032-dea0-497b-bd1c-d723913ce783",
 CellTags->"c:16"],
Cell[68155, 1522, 248, 6, 35, "Text",ExpressionUUID->"d945c358-7984-4b6f-99a0-004c192287e4"],
Cell[68406, 1530, 695, 17, 70, "Input",ExpressionUUID->"3cd642da-fd22-4802-9288-f01565803535"],
Cell[69104, 1549, 252, 4, 29, "Input",ExpressionUUID->"203bb6e8-79b2-4927-b104-77c6b4bb166c"],
Cell[69359, 1555, 568, 13, 70, "Input",ExpressionUUID->"a26cc5d9-e803-45fa-b22e-fae71af4e8d4"],
Cell[69930, 1570, 216, 3, 29, "Input",ExpressionUUID->"3309429c-25c3-464f-a97a-6193bde41c61"],
Cell[70149, 1575, 477, 12, 50, "Input",ExpressionUUID->"c7b59436-5334-4cdf-8c43-2d2fe93b3917"]
}, Closed]],
Cell[CellGroupData[{
Cell[70663, 1592, 194, 2, 37, "Subsubsection",ExpressionUUID->"2e5b960f-ce39-4cd9-a390-ec4c724d0794",
 CellTags->"c:17"],
Cell[70860, 1596, 2119, 56, 190, "Input",ExpressionUUID->"ccc5fd89-681d-4742-9855-ddf4ecfe57a6"],
Cell[72982, 1654, 239, 4, 29, "Input",ExpressionUUID->"53fddc99-c4e8-45c0-a9f3-8bc732aba17d"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73270, 1664, 242, 3, 54, "Subsection",ExpressionUUID->"6033b32e-4c89-4553-869f-3243e5607bf1",
 CellTags->"c:18"],
Cell[CellGroupData[{
Cell[73537, 1671, 161, 3, 45, "Subsubsection",ExpressionUUID->"ea8bc95a-8f0e-4b12-99a0-56426ab51ec4"],
Cell[73701, 1676, 214, 5, 35, "Text",ExpressionUUID->"31deae2e-9563-4b77-8989-bf812ff3c948"],
Cell[73918, 1683, 654, 18, 50, "Input",ExpressionUUID->"a0948096-3a17-480e-88aa-5f8f54122f9a"],
Cell[74575, 1703, 1172, 34, 50, "Input",ExpressionUUID->"414b81d5-a5f7-405e-88ec-356977cae10c"],
Cell[75750, 1739, 572, 11, 81, "Text",ExpressionUUID->"7f20e0cc-33ba-4b02-a0c9-60eb0f4f1498"],
Cell[76325, 1752, 237, 4, 29, "Input",ExpressionUUID->"33670142-c814-4498-b5e7-7e7f8a967c11"]
}, Closed]],
Cell[CellGroupData[{
Cell[76599, 1761, 177, 3, 37, "Subsubsection",ExpressionUUID->"3ace22ec-97f7-4ba5-933b-08968226a40f"],
Cell[76779, 1766, 1454, 41, 70, "Input",ExpressionUUID->"58d93156-a8c6-41f9-b9b1-fcef6a398386"],
Cell[78236, 1809, 679, 16, 50, "Input",ExpressionUUID->"e6b3fb20-ac33-4f43-b582-08fbcf2dfdcb"],
Cell[78918, 1827, 1407, 39, 29, "Input",ExpressionUUID->"e09870e4-80d3-45a8-9a7b-26fea92ecc83"],
Cell[80328, 1868, 360, 7, 29, "Input",ExpressionUUID->"fc9202f0-a708-46b9-8993-d99ef8b9d57b"],
Cell[80691, 1877, 219, 5, 35, "Text",ExpressionUUID->"80e50c85-aa4a-47c4-beb7-0309b49cd6c2"],
Cell[80913, 1884, 509, 12, 29, "Input",ExpressionUUID->"73c1be5e-ad36-4648-8909-3528e2e910da"],
Cell[81425, 1898, 1368, 35, 90, "Input",ExpressionUUID->"de6395af-73f2-4054-8b7c-bf1b424351e4"]
}, Closed]],
Cell[CellGroupData[{
Cell[82830, 1938, 176, 3, 37, "Subsubsection",ExpressionUUID->"3d38093a-d085-4139-a1ba-086e58ea732c"],
Cell[83009, 1943, 221, 5, 35, "Text",ExpressionUUID->"cf35c9c2-e6f8-484d-8070-2365047438e9"],
Cell[83233, 1950, 490, 10, 50, "Input",ExpressionUUID->"f0370879-7fa9-4d95-9ac3-91e74e92672f"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[83784, 1967, 321, 5, 69, "Chapter",ExpressionUUID->"2d81b315-c178-4a19-82de-edec401ad759"],
Cell[CellGroupData[{
Cell[84130, 1976, 175, 2, 54, "Subsection",ExpressionUUID->"6ac426ee-2cf2-4609-a70a-b7bbae6bed70",
 CellTags->"c:19"],
Cell[84308, 1980, 301, 7, 35, "Text",ExpressionUUID->"0d5ac3c1-0a5f-441b-82aa-56ceb05deba1"],
Cell[84612, 1989, 1241, 34, 70, "Input",ExpressionUUID->"17b788ed-dfdb-4bc8-8387-cc24a2843518"],
Cell[85856, 2025, 240, 4, 29, "Input",ExpressionUUID->"59e4d47e-c682-496c-8f5f-8a3d84d8ebfe"]
}, Closed]],
Cell[CellGroupData[{
Cell[86133, 2034, 171, 2, 38, "Subsection",ExpressionUUID->"8519decb-a647-4082-a417-8490e787bc1d",
 CellTags->"c:21"],
Cell[86307, 2038, 163, 3, 35, "Text",ExpressionUUID->"2542e184-2b55-431e-8712-57b4010b0208"],
Cell[86473, 2043, 703, 14, 50, "Input",ExpressionUUID->"dfd024d4-6cd0-4f3e-978b-924b02a9eace"],
Cell[87179, 2059, 176, 3, 35, "Text",ExpressionUUID->"8bd6ea94-2eed-481c-aad6-78ae01eb6ab7"],
Cell[87358, 2064, 849, 19, 50, "Input",ExpressionUUID->"fb343542-47c9-446d-80da-03fd3e2252ae"]
}, Closed]],
Cell[CellGroupData[{
Cell[88244, 2088, 190, 2, 38, "Subsection",ExpressionUUID->"a08bed25-3efe-40d5-bc4e-9f803924dddc",
 CellTags->"c:22"],
Cell[88437, 2092, 240, 4, 35, "Text",ExpressionUUID->"69abaf44-84b6-4abe-bd7d-0b63dd967e4e"],
Cell[88680, 2098, 455, 10, 29, "Input",ExpressionUUID->"7d4f3e83-d26e-4cd2-9549-83ece73a5532"],
Cell[89138, 2110, 355, 8, 29, "Input",ExpressionUUID->"eecbc129-2d09-4c25-91df-5406a1cd99e8"],
Cell[89496, 2120, 363, 8, 29, "Input",ExpressionUUID->"d0a3c222-4a31-4f3f-b352-e910a84f88bf"],
Cell[89862, 2130, 360, 8, 29, "Input",ExpressionUUID->"3687dac5-32c8-484e-8e0a-e79866596754"],
Cell[90225, 2140, 268, 6, 35, "Text",ExpressionUUID->"91fc0eea-f728-45cb-8c20-ef67f376c886"],
Cell[90496, 2148, 817, 22, 110, "Input",ExpressionUUID->"94169326-674a-4442-b858-2906e886a2b0"],
Cell[91316, 2172, 495, 12, 50, "Input",ExpressionUUID->"2b83ea3b-6e52-4222-9a3a-9c2ffa1e2c9f"],
Cell[91814, 2186, 363, 7, 50, "Input",ExpressionUUID->"3bdb8d5b-aba4-46e3-94d0-0ebf4e2145f5"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[92226, 2199, 287, 5, 69, "Chapter",ExpressionUUID->"ff48cf42-cb85-4663-b23e-43657c60dfe7"],
Cell[CellGroupData[{
Cell[92538, 2208, 175, 2, 54, "Subsection",ExpressionUUID->"47e835ce-4699-4923-898e-db43e06f49d0",
 CellTags->"c:23"],
Cell[92716, 2212, 804, 22, 70, "Input",ExpressionUUID->"d9902e8c-2a9f-40e9-88a5-9c6eca85b9c9"]
}, Closed]],
Cell[CellGroupData[{
Cell[93557, 2239, 173, 2, 38, "Subsection",ExpressionUUID->"586003b9-59ba-4f2a-a670-aeb201812c92",
 CellTags->"c:24"],
Cell[CellGroupData[{
Cell[93755, 2245, 196, 2, 45, "Subsubsection",ExpressionUUID->"69a2c8a5-fb3b-4839-94de-bdb3a0a3b69c",
 CellTags->"c:25"],
Cell[93954, 2249, 380, 8, 58, "Text",ExpressionUUID->"6450432f-96f9-42ed-9572-f7f4702bc1a4"],
Cell[94337, 2259, 832, 22, 90, "Input",ExpressionUUID->"76a2f7e3-7d49-45ab-aaf7-cdffb72eccbf"],
Cell[95172, 2283, 295, 6, 29, "Input",ExpressionUUID->"a853d33f-3e4d-4a97-be23-2d351b6b6b09"],
Cell[95470, 2291, 389, 6, 35, "Text",ExpressionUUID->"6119300d-5d55-4ad9-bd65-06c5d7b92c0c"],
Cell[95862, 2299, 665, 19, 50, "Input",ExpressionUUID->"2647c4b3-f621-4519-96f4-10b1e7b67da7"],
Cell[96530, 2320, 249, 4, 35, "Text",ExpressionUUID->"846c20fb-e5ad-4363-923d-91a579a1bd20"],
Cell[96782, 2326, 673, 18, 50, "Input",ExpressionUUID->"a338063b-2315-4387-8406-f2705350e3af"]
}, Closed]],
Cell[CellGroupData[{
Cell[97492, 2349, 227, 3, 37, "Subsubsection",ExpressionUUID->"1dec97a9-0a89-48cc-a6cf-b9fd05136c2b",
 CellTags->"c:25"],
Cell[97722, 2354, 328, 7, 35, "Text",ExpressionUUID->"e0643ea0-003f-48a0-b7b3-9ccba6e37a8e"],
Cell[98053, 2363, 266, 5, 29, "Input",ExpressionUUID->"302b44be-ef86-48c9-aa2c-564b391aa0b2"],
Cell[98322, 2370, 334, 7, 29, "Input",ExpressionUUID->"03e3091e-977d-4e2f-81d5-da8fb825aec4"],
Cell[98659, 2379, 551, 14, 29, "Input",ExpressionUUID->"b1b59af8-238e-45ed-aa75-edbfe25101fd"],
Cell[99213, 2395, 529, 11, 29, "Input",ExpressionUUID->"90b9f4a2-b104-45e2-93f3-8188b310c05e"],
Cell[99745, 2408, 408, 9, 58, "Text",ExpressionUUID->"b2a29537-e3dd-40af-9ab3-396f946f0c7f"],
Cell[100156, 2419, 446, 9, 29, "Input",ExpressionUUID->"ca643546-dc1d-430e-b21a-ecac262f9a1e"],
Cell[100605, 2430, 501, 10, 29, "Input",ExpressionUUID->"0ca068e9-45ab-4193-b700-ea079aa30009"],
Cell[101109, 2442, 529, 11, 29, "Input",ExpressionUUID->"3c45e684-0113-4b2f-9a58-889dba598670"],
Cell[101641, 2455, 160, 3, 35, "Text",ExpressionUUID->"cc0b2c2b-3f9b-46a3-812b-fdd16430c436"],
Cell[101804, 2460, 292, 6, 29, "Input",ExpressionUUID->"0653d5ab-e1f9-42eb-9a3c-efc992067962"],
Cell[102099, 2468, 239, 4, 29, "Input",ExpressionUUID->"06c51025-4365-4585-b0fb-f98b6c96c521"]
}, Closed]],
Cell[CellGroupData[{
Cell[102375, 2477, 250, 3, 37, "Subsubsection",ExpressionUUID->"ded5d62a-f398-4005-9427-e92efe288312",
 CellTags->"c:26"],
Cell[102628, 2482, 316, 6, 35, "Text",ExpressionUUID->"30dac8a6-273d-4495-981c-2a1d6d3a8f80"],
Cell[102947, 2490, 687, 16, 90, "Input",ExpressionUUID->"5d3cf964-b905-48d5-a57a-61d50ebef712"],
Cell[103637, 2508, 293, 5, 29, "Input",ExpressionUUID->"0a118751-0dac-4729-ad1e-d7f094a26af9"],
Cell[103933, 2515, 347, 7, 35, "Text",ExpressionUUID->"1f4758f5-443f-4df8-b208-0f642bb70f02"],
Cell[104283, 2524, 528, 11, 29, "Input",ExpressionUUID->"4434b8fb-f66c-460e-a0c4-571c04a56121"],
Cell[104814, 2537, 353, 6, 29, "Input",ExpressionUUID->"9365ecdb-b734-4c5d-8503-bb51d35b6eac"],
Cell[105170, 2545, 292, 4, 35, "Text",ExpressionUUID->"460b4f2c-53bc-49cd-9398-41759cefa4a4"],
Cell[105465, 2551, 591, 14, 29, "Input",ExpressionUUID->"3e8ca21d-0805-49fc-aa4d-9912aeb2dfcd"],
Cell[106059, 2567, 508, 12, 50, "Input",ExpressionUUID->"b537de9b-c104-43d8-880b-c1a199590c8f"],
Cell[106570, 2581, 297, 5, 29, "Input",ExpressionUUID->"9f532b89-2b9a-45c6-a97a-44e8cda1cce1"]
}, Closed]],
Cell[CellGroupData[{
Cell[106904, 2591, 196, 3, 37, "Subsubsection",ExpressionUUID->"344c9d85-ee70-472b-9f36-9f65fe863cee"],
Cell[107103, 2596, 265, 6, 35, "Text",ExpressionUUID->"1b611f18-649c-473d-992a-229c3cb8c4f4"],
Cell[107371, 2604, 603, 13, 50, "Input",ExpressionUUID->"abe1de54-7eda-49dd-816f-028249e80717"],
Cell[107977, 2619, 1055, 25, 50, "Input",ExpressionUUID->"524331ef-fe4b-4ceb-9bd0-466fdbff5ae8"]
}, Closed]],
Cell[CellGroupData[{
Cell[109069, 2649, 176, 3, 37, "Subsubsection",ExpressionUUID->"0a29fdea-136b-424d-b4e5-29e30a513b70"],
Cell[109248, 2654, 181, 3, 35, "Text",ExpressionUUID->"726f5912-6fe1-4cf0-b67e-2d661dfbc98b"],
Cell[109432, 2659, 401, 10, 29, "Input",ExpressionUUID->"6ffb097a-81f0-4f7b-994e-a5ecaff9ecde"],
Cell[109836, 2671, 211, 3, 29, "Input",ExpressionUUID->"793842ff-54de-40e7-8b1e-caad93d21916"],
Cell[110050, 2676, 213, 3, 29, "Input",ExpressionUUID->"5130ff98-956a-4b72-a8af-0af211b0903e"],
Cell[110266, 2681, 343, 6, 29, "Input",ExpressionUUID->"fe0f0767-29b1-46ab-89a9-7c9514129412"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110658, 2693, 187, 2, 54, "Subsection",ExpressionUUID->"cf83491c-53d6-4317-902a-83e581aa5dc7",
 CellTags->"c:27"],
Cell[110848, 2697, 551, 12, 70, "Input",ExpressionUUID->"295b97a0-e9dc-4121-923c-5eaf1358301e"],
Cell[111402, 2711, 802, 18, 90, "Input",ExpressionUUID->"f34b5322-4762-42a1-b96d-7c26a6f0c9fb"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[112253, 2735, 331, 8, 69, "Chapter",ExpressionUUID->"7e315242-c9a0-48d7-a79c-e62367557aee"],
Cell[CellGroupData[{
Cell[112609, 2747, 175, 2, 54, "Subsection",ExpressionUUID->"932638bc-7c62-479b-bb0d-3cffa205baac",
 CellTags->"c:28"],
Cell[112787, 2751, 1558, 44, 170, "Input",ExpressionUUID->"fbf5ef71-e74a-4a87-867e-8a3346fab1f4"]
}, Closed]],
Cell[CellGroupData[{
Cell[114382, 2800, 187, 2, 38, "Subsection",ExpressionUUID->"5c27d6f6-8cde-4515-862a-aa9c9642bd78",
 CellTags->"c:29"],
Cell[114572, 2804, 163, 3, 35, "Text",ExpressionUUID->"4c5eacb3-63dd-4261-bae3-aa2546f96de9"],
Cell[114738, 2809, 1537, 36, 50, "Input",ExpressionUUID->"63000fed-904c-4a4f-b696-9368e0f79cb4"],
Cell[116278, 2847, 629, 13, 29, "Input",ExpressionUUID->"816e27ef-b777-4331-a0c7-f21e570a53c8"],
Cell[116910, 2862, 277, 5, 29, "Input",ExpressionUUID->"914da50d-8987-45c6-86c2-efa574454895"],
Cell[117190, 2869, 322, 7, 35, "Text",ExpressionUUID->"71e298ab-c4f6-4b0e-9225-05f491f97805"],
Cell[117515, 2878, 241, 4, 29, "Input",ExpressionUUID->"e2c62f91-87ae-4684-9c45-f35ac0d1d1e7"],
Cell[117759, 2884, 380, 9, 29, "Input",ExpressionUUID->"baed26dd-0455-4c7c-8a1b-0fa20555865e"],
Cell[118142, 2895, 238, 4, 29, "Input",ExpressionUUID->"d10f611a-3618-4a47-bf35-3dfcdb3b7e18"],
Cell[118383, 2901, 2867, 47, 90, "Input",ExpressionUUID->"1c36b922-6e1f-438c-8272-93926ea59256"],
Cell[121253, 2950, 294, 6, 29, "Input",ExpressionUUID->"d025626d-5335-4f65-a1ec-307255980dc0"],
Cell[121550, 2958, 247, 6, 35, "Text",ExpressionUUID->"9b6ebdf0-bddb-44b7-968e-d85858606ab3"],
Cell[121800, 2966, 534, 13, 29, "Input",ExpressionUUID->"da3d4eea-df63-4b2e-b74e-059cacab7254"],
Cell[122337, 2981, 369, 7, 29, "Input",ExpressionUUID->"102974f4-2d9b-4cde-bfaf-358b8fb9ac16"],
Cell[122709, 2990, 278, 6, 35, "Text",ExpressionUUID->"619ccb59-1402-4b29-83d1-c92d637ab02a"],
Cell[122990, 2998, 1645, 46, 90, "Input",ExpressionUUID->"8ceb4c98-d616-490c-8fb5-4843ba78006c"],
Cell[124638, 3046, 363, 8, 29, "Input",ExpressionUUID->"09229319-c33b-4e4a-ba78-73bea25fef4c"]
}, Closed]],
Cell[CellGroupData[{
Cell[125038, 3059, 295, 4, 38, "Subsection",ExpressionUUID->"c10c058b-a500-4c2d-bffa-2955b14de21a",
 CellTags->"c:30"],
Cell[CellGroupData[{
Cell[125358, 3067, 184, 2, 45, "Subsubsection",ExpressionUUID->"adaf1997-c6af-46c4-ae60-0fb87f7483c2",
 CellTags->"c:31"],
Cell[125545, 3071, 290, 6, 35, "Text",ExpressionUUID->"8fc205d5-3384-40ca-a0e5-a8c9f829c920"],
Cell[125838, 3079, 2336, 40, 29, "Input",ExpressionUUID->"646203ff-d303-4507-9da0-c6c6b2da4b18"],
Cell[128177, 3121, 176, 3, 35, "Text",ExpressionUUID->"869142fd-77a5-4044-bfa0-ffaeaff29d3f"],
Cell[128356, 3126, 1290, 33, 90, "Input",ExpressionUUID->"c5d26f17-e5d3-4460-99c6-c6d6d4fc11dd"]
}, Closed]],
Cell[CellGroupData[{
Cell[129683, 3164, 193, 2, 37, "Subsubsection",ExpressionUUID->"f38c2344-3618-4b65-86d0-b42b8689639d",
 CellTags->"c:32"],
Cell[129879, 3168, 245, 5, 35, "Text",ExpressionUUID->"8b20a75d-31f3-4056-ac74-f1127d0d96dd"],
Cell[130127, 3175, 1155, 23, 29, "Input",ExpressionUUID->"e8e00cae-5dc7-462d-8948-526b28aeb597"],
Cell[131285, 3200, 1339, 33, 90, "Input",ExpressionUUID->"a8ab54f5-bbbb-4ea9-a109-96d066fc16c2"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132673, 3239, 196, 2, 54, "Subsection",ExpressionUUID->"52e9fa03-400d-4512-9bf9-1437a0e5fcb7",
 CellTags->"c:33"],
Cell[132872, 3243, 1215, 26, 29, "Input",ExpressionUUID->"3efd9f8d-ac18-4503-896c-60556b22f764"],
Cell[134090, 3271, 275, 7, 29, "Input",ExpressionUUID->"0cbe21c8-5790-42e6-a0ba-1f030e3e5997"],
Cell[134368, 3280, 1298, 27, 29, "Input",ExpressionUUID->"27a1cde0-d94a-47cf-abeb-3c946e78e8b6"],
Cell[135669, 3309, 398, 9, 29, "Input",ExpressionUUID->"d1be5a12-791a-4350-96bc-97a8b33f7dcb"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[136116, 3324, 173, 3, 69, "Chapter",ExpressionUUID->"bd72d8f9-e5f9-4dc6-8f74-865e5a0d73d1"],
Cell[CellGroupData[{
Cell[136314, 3331, 292, 4, 54, "Subsection",ExpressionUUID->"a6da33c3-efdf-4208-ba9d-24feeed10a88",
 CellTags->"c:34"],
Cell[CellGroupData[{
Cell[136631, 3339, 236, 3, 45, "Subsubsection",ExpressionUUID->"2edddb44-1bfb-48ca-829f-4e01ababe642",
 CellTags->"c:35"],
Cell[136870, 3344, 8979, 228, 536, "Input",ExpressionUUID->"d0d98fe3-f920-45fd-9b74-f8e903adc023"]
}, Closed]],
Cell[CellGroupData[{
Cell[145886, 3577, 218, 3, 37, "Subsubsection",ExpressionUUID->"67a583ec-d68b-4d8e-ae56-a358819f36f5",
 CellTags->"c:36"],
Cell[146107, 3582, 1579, 32, 70, "Input",ExpressionUUID->"d423f709-b17a-4168-aefa-f5fb52bd609f"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[147735, 3620, 198, 3, 54, "Subsection",ExpressionUUID->"7b0ca489-2d98-4b70-8d0f-822a0387c0f1",
 CellTags->"c:37"],
Cell[CellGroupData[{
Cell[147958, 3627, 178, 2, 45, "Subsubsection",ExpressionUUID->"177a1753-5f03-4991-89d8-98a1aa966a50",
 CellTags->"c:38"],
Cell[148139, 3631, 491, 9, 58, "Text",ExpressionUUID->"87f508a6-1540-4424-bb30-6ac782debcec"],
Cell[148633, 3642, 551, 13, 29, "Input",ExpressionUUID->"423e2d86-3a51-46b3-9197-72f7f0028581"],
Cell[149187, 3657, 669, 18, 50, "Input",ExpressionUUID->"58d81c30-8194-49d8-99f2-afe922769900"],
Cell[149859, 3677, 251, 4, 29, "Input",ExpressionUUID->"d5065ca8-34be-491d-8e7c-859fa128d3ef"],
Cell[150113, 3683, 180, 3, 35, "Text",ExpressionUUID->"5d8722a6-0f30-46da-9a66-70fc6e81a4e1"],
Cell[150296, 3688, 1083, 29, 90, "Input",ExpressionUUID->"cdcc633d-9298-474d-8926-467ed718c7df"]
}, Closed]],
Cell[CellGroupData[{
Cell[151416, 3722, 199, 2, 37, "Subsubsection",ExpressionUUID->"fad4d634-1ff8-466d-8264-61cf6051a1dc",
 CellTags->"c:39"],
Cell[151618, 3726, 214, 3, 35, "Text",ExpressionUUID->"c7901d06-820c-4d80-adf0-e69af1db8e84"],
Cell[151835, 3731, 1774, 47, 110, "Input",ExpressionUUID->"f00cc5d1-3776-4533-888e-d37a4fe114b1"],
Cell[153612, 3780, 240, 4, 29, "Input",ExpressionUUID->"43524089-a0eb-4e17-8202-245f84006519"],
Cell[153855, 3786, 618, 17, 29, "Input",ExpressionUUID->"0d87a2c4-dbb9-4b69-9cbd-5329e4c7140f"]
}, Closed]],
Cell[CellGroupData[{
Cell[154510, 3808, 232, 3, 37, "Subsubsection",ExpressionUUID->"1b109d2e-a32c-48ad-9a6b-09b964323db5",
 CellTags->"c:40"],
Cell[154745, 3813, 561, 11, 29, "Input",ExpressionUUID->"d7bdf8d5-6e6b-401a-9fb0-4bd3e02954af"],
Cell[155309, 3826, 567, 13, 29, "Input",ExpressionUUID->"bc8e7efa-dd51-4c32-b014-721652d5ace8"],
Cell[155879, 3841, 605, 16, 29, "Input",ExpressionUUID->"346bed12-bfcb-401c-8796-fa1043ebaeac"]
}, Closed]],
Cell[CellGroupData[{
Cell[156521, 3862, 222, 3, 37, "Subsubsection",ExpressionUUID->"202a85c6-aa77-469d-80b0-13a415d3aa61",
 CellTags->"c:41"],
Cell[156746, 3867, 222, 3, 35, "Text",ExpressionUUID->"e24414a3-74e8-46ce-b0b6-aa68e3bb6b37"],
Cell[156971, 3872, 305, 5, 29, "Input",ExpressionUUID->"61f94af4-5685-4721-b8e5-76cc0311a7c5"],
Cell[157279, 3879, 212, 5, 35, "Text",ExpressionUUID->"f029d1df-9364-4a0f-aa02-4b00dc60486b"],
Cell[157494, 3886, 2010, 38, 50, "Input",ExpressionUUID->"df9ae3da-52fc-492a-9b8d-9589c9e0af8a"],
Cell[159507, 3926, 210, 3, 29, "Input",ExpressionUUID->"b57474ca-c936-4652-9fd6-663016d6a0c8"],
Cell[159720, 3931, 346, 8, 29, "Input",ExpressionUUID->"6b4cf163-3775-42de-9877-12d6df906e42"],
Cell[160069, 3941, 903, 18, 29, "Input",ExpressionUUID->"3b55af4b-60ef-43ab-be1f-e829b9d3ed23"],
Cell[160975, 3961, 1057, 22, 29, "Input",ExpressionUUID->"1bb71494-5ac8-49d8-92ef-45d8ca18d99e"],
Cell[162035, 3985, 209, 3, 29, "Input",ExpressionUUID->"5d51a2d1-42ce-414b-9912-b705c804ab94"],
Cell[162247, 3990, 425, 9, 29, "Input",ExpressionUUID->"d640f839-5ffc-4132-865e-cae8836aa204"],
Cell[162675, 4001, 419, 9, 29, "Input",ExpressionUUID->"5f8b9cc7-a71a-4c83-b65d-69c317df4b2a"],
Cell[163097, 4012, 385, 6, 29, "Input",ExpressionUUID->"db9ffc7c-3d10-42ae-b9b5-62c501a3cb07"],
Cell[163485, 4020, 778, 16, 29, "Input",ExpressionUUID->"8b5b27ec-0057-4a86-964e-d0783ae008fb"],
Cell[164266, 4038, 635, 13, 29, "Input",ExpressionUUID->"ef9d930e-46b1-4c08-ab9d-54b1b8bc8691"],
Cell[164904, 4053, 294, 6, 35, "Text",ExpressionUUID->"625f8eae-ed64-4f89-b2e8-8ef3060fd8cb"],
Cell[165201, 4061, 418, 11, 29, "Input",ExpressionUUID->"264346c4-6b3f-4ece-bceb-9414c6eb6281"],
Cell[165622, 4074, 657, 14, 29, "Input",ExpressionUUID->"894f94a1-23b7-4463-b2d5-abe725435936"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166340, 4095, 410, 6, 69, "Chapter",ExpressionUUID->"992e29c7-eb37-4be7-8ec9-9e6018497ff7"],
Cell[CellGroupData[{
Cell[166775, 4105, 121, 1, 54, "Subsection",ExpressionUUID->"6e39cf2a-909a-421d-928c-dff91acc75c9",
 CellTags->"c:42"],
Cell[166899, 4108, 143, 2, 29, "Input",ExpressionUUID->"3da07b39-8a46-42c0-8fe0-aa5ee4eb4389"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167079, 4115, 238, 3, 54, "Subsection",ExpressionUUID->"6f5b2db9-e346-4bd8-a44c-8cca8c836fad",
 CellTags->"c:42"],
Cell[167320, 4120, 279, 7, 29, "Input",ExpressionUUID->"85354d95-4da5-435b-a9a0-c401d639ef3f"],
Cell[167602, 4129, 953, 29, 150, "Input",ExpressionUUID->"ca9c1bf2-57fe-44ba-a162-d1be1d85a590"],
Cell[168558, 4160, 794, 19, 70, "Input",ExpressionUUID->"4c0239ee-d9ac-403c-a918-dd9d399cea36"],
Cell[169355, 4181, 2514, 60, 170, "Input",ExpressionUUID->"f1884fe1-586b-4852-b44e-8ac602f5e42f"],
Cell[171872, 4243, 2523, 60, 170, "Input",ExpressionUUID->"53fc9933-5872-4125-b0f8-f68f33bb3a1a"],
Cell[174398, 4305, 2626, 62, 170, "Input",ExpressionUUID->"75be3c89-2250-4c15-8fc1-95fc5153710d"],
Cell[177027, 4369, 240, 5, 29, "Input",ExpressionUUID->"ea6aef23-0e48-4bd6-8dc9-a82b13ee01d7"]
}, Closed]],
Cell[CellGroupData[{
Cell[177304, 4379, 245, 3, 38, "Subsection",ExpressionUUID->"33202e28-0fa0-4880-a579-60fd33dd0adb",
 CellTags->"c:43"],
Cell[CellGroupData[{
Cell[177574, 4386, 1199, 36, 90, "Input",ExpressionUUID->"753b0a2a-9d05-49da-9bee-81c36f6f89af"],
Cell[178776, 4424, 331, 8, 28, "Message",ExpressionUUID->"a037e5e8-8186-46e3-9201-e6957f48c441"]
}, Open  ]],
Cell[179122, 4435, 1178, 35, 90, "Input",ExpressionUUID->"400f995e-d5ab-42fe-a587-30e34e83f443"],
Cell[180303, 4472, 1387, 42, 90, "Input",ExpressionUUID->"b43542ca-c929-4028-8aee-c7176c7cf527"]
}, Closed]],
Cell[CellGroupData[{
Cell[181727, 4519, 180, 2, 38, "Subsection",ExpressionUUID->"6c868790-2893-463e-a2d0-1a9a571113d7",
 CellTags->"c:44"],
Cell[CellGroupData[{
Cell[181932, 4525, 2343, 67, 70, "Input",ExpressionUUID->"1ef20ff1-6d49-4deb-877d-7de44dfed40d"],
Cell[184278, 4594, 66164, 1156, 245, "Output",ExpressionUUID->"8942a143-2ea5-4fd0-9d1a-b0ebde38429f"],
Cell[250445, 5752, 70921, 1231, 242, "Output",ExpressionUUID->"548b1995-b8f7-4240-9655-221990367715"],
Cell[321369, 6985, 71017, 1252, 240, "Output",ExpressionUUID->"17200fa7-d416-497f-81ae-2b32a99ff8d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392423, 8242, 2080, 56, 110, "Input",ExpressionUUID->"e9c3029c-e293-4798-9790-fdf3c938956f"],
Cell[394506, 8300, 17345, 403, 338, "Output",ExpressionUUID->"a061eaf3-f304-4eaf-a97f-019871872ea6"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[411912, 8710, 268, 4, 69, "Chapter",ExpressionUUID->"b341beda-5ee8-44a9-9312-619b2c8f81f1"],
Cell[CellGroupData[{
Cell[412205, 8718, 177, 2, 54, "Subsection",ExpressionUUID->"b8cae968-01be-4d76-93c4-914725dacb60",
 CellTags->"c:45"],
Cell[412385, 8722, 423, 8, 35, "Text",ExpressionUUID->"838c8185-e694-4949-9dd0-0c59b961e8bf"],
Cell[412811, 8732, 685, 19, 70, "Input",ExpressionUUID->"b207c621-7de3-43fa-8bdf-ef8e64f0d8bd"],
Cell[413499, 8753, 808, 19, 70, "Input",ExpressionUUID->"6a0e43c3-6e49-4acf-a0d5-faa81d3c50fd"]
}, Closed]],
Cell[CellGroupData[{
Cell[414344, 8777, 187, 2, 38, "Subsection",ExpressionUUID->"e4d814b7-307b-44b1-8176-77d613190d5c",
 CellTags->"c:46"],
Cell[414534, 8781, 222, 4, 35, "Text",ExpressionUUID->"08e92c98-8105-4c77-848e-fff3f471f75e"],
Cell[414759, 8787, 821, 21, 50, "Input",ExpressionUUID->"b1483bf9-66dd-4581-84a9-c843d760fb15"],
Cell[415583, 8810, 602, 15, 29, "Input",ExpressionUUID->"e6d0f667-bae9-4dd4-a3f7-1cb0f0305255"],
Cell[416188, 8827, 261, 6, 35, "Text",ExpressionUUID->"84309912-9796-472d-8aa5-a93ea74bc056"],
Cell[416452, 8835, 2257, 59, 150, "Input",ExpressionUUID->"83924ee4-b18d-4de6-b618-a5e212f482da"],
Cell[418712, 8896, 760, 18, 50, "Input",ExpressionUUID->"d3e7e3d0-876a-4f04-a706-ec1533d2392e"]
}, Closed]],
Cell[CellGroupData[{
Cell[419509, 8919, 190, 2, 38, "Subsection",ExpressionUUID->"a32b7405-2d28-4efa-ad38-9fc2d3fe6ff7",
 CellTags->"c:47"],
Cell[419702, 8923, 192, 3, 35, "Text",ExpressionUUID->"07ba9190-658c-49b3-addf-eafc175f6ae3"],
Cell[419897, 8928, 983, 21, 29, "Input",ExpressionUUID->"2b8f0007-7a5b-43a9-8a6e-74ff32e52a1c"],
Cell[420883, 8951, 983, 21, 29, "Input",ExpressionUUID->"42ec77b4-7ad7-4fd9-a626-d9584a62749e"],
Cell[421869, 8974, 984, 21, 29, "Input",ExpressionUUID->"4e602531-e8ac-4a28-9dbc-6c382d3115d2"],
Cell[422856, 8997, 247, 6, 35, "Text",ExpressionUUID->"691708d6-126e-4d41-be2c-d857f4226500"],
Cell[423106, 9005, 474, 12, 29, "Input",ExpressionUUID->"4b0a9093-cbed-430e-a3b8-9877643a7ed4"],
Cell[423583, 9019, 254, 6, 35, "Text",ExpressionUUID->"fd6e9fa0-b5a6-4e96-bc4d-c468cb86b649"],
Cell[423840, 9027, 1056, 22, 29, "Input",ExpressionUUID->"8de819ca-705a-4220-8130-c192af8d549b"],
Cell[424899, 9051, 470, 11, 29, "Input",ExpressionUUID->"47a0659c-4df1-4f1b-9d7b-b96779ba5cb1"],
Cell[425372, 9064, 547, 13, 29, "Input",ExpressionUUID->"8c52458d-45d5-40ed-949c-38e8440a1f60"],
Cell[425922, 9079, 173, 3, 35, "Text",ExpressionUUID->"3ef473e1-450e-4731-ae4d-89c5b79bd2a1"],
Cell[426098, 9084, 876, 20, 29, "Input",ExpressionUUID->"01f5867e-d0e6-4ecc-92aa-dfbb4af4d59e"],
Cell[426977, 9106, 400, 10, 29, "Input",ExpressionUUID->"3e9a97a0-dd2f-4ec4-bfe3-85b303b130d6"],
Cell[427380, 9118, 471, 11, 29, "Input",ExpressionUUID->"6a2dbfc3-df24-43c6-a38b-c46b51dc77c7"],
Cell[427854, 9131, 212, 3, 29, "Input",ExpressionUUID->"5ffc8d0e-c31a-4ed0-8c25-b069aff53b11"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[428115, 9140, 354, 5, 69, "Chapter",ExpressionUUID->"206c273f-0ccf-4695-9121-5be90826dd71"],
Cell[CellGroupData[{
Cell[428494, 9149, 187, 2, 54, "Subsection",ExpressionUUID->"8445ef95-5973-4648-871d-e56f6b632789",
 CellTags->"c:48"],
Cell[428684, 9153, 918, 23, 90, "Input",ExpressionUUID->"57234781-617a-4162-9879-35e308aaf866"],
Cell[429605, 9178, 952, 28, 90, "Input",ExpressionUUID->"24da691e-d6de-410f-b0ef-1d2de61863d9"],
Cell[430560, 9208, 658, 19, 70, "Input",ExpressionUUID->"8984a19f-eabf-4e62-97e2-98267e2bcc61"],
Cell[431221, 9229, 394, 9, 81, "Text",ExpressionUUID->"054abc16-56b6-40bf-a212-835aa4516f1a"],
Cell[431618, 9240, 3232, 85, 130, "Input",ExpressionUUID->"ace4a269-d905-4882-89d8-90bd356cd7f9"]
}, Closed]],
Cell[CellGroupData[{
Cell[434887, 9330, 192, 2, 38, "Subsection",ExpressionUUID->"d12758da-d1d5-43a6-8aaa-503db8464fff",
 CellTags->"c:49"],
Cell[435082, 9334, 169, 3, 29, "Input",ExpressionUUID->"e2700bd4-8f93-4193-bced-81187f305e9e"],
Cell[435254, 9339, 708, 16, 29, "Input",ExpressionUUID->"552a216f-db51-4a52-837c-8826af038d2c"],
Cell[435965, 9357, 714, 16, 29, "Input",ExpressionUUID->"75ab4e15-7874-4e05-accb-830a5a8437a0"],
Cell[436682, 9375, 767, 17, 29, "Input",ExpressionUUID->"e5f441ab-6c4e-4b17-a787-cc5a724424cb"]
}, Closed]],
Cell[CellGroupData[{
Cell[437486, 9397, 180, 2, 38, "Subsection",ExpressionUUID->"3661d520-8d0a-475a-b073-957f7c24d670",
 CellTags->"c:50"],
Cell[437669, 9401, 2361, 67, 70, "Input",ExpressionUUID->"2df86a65-6a91-4969-a35f-485561eeaf98"],
Cell[440033, 9470, 1925, 45, 110, "Input",ExpressionUUID->"c373eede-fb5d-4af4-906d-3ef381ffe28c"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[442007, 9521, 234, 4, 69, "Chapter",ExpressionUUID->"47034db1-d0d6-4b23-af6e-0f6546045b3b"],
Cell[CellGroupData[{
Cell[442266, 9529, 192, 2, 54, "Subsection",ExpressionUUID->"25adc37f-e4d2-4d9f-a5ed-8612c20d46c3",
 CellTags->"c:51"],
Cell[442461, 9533, 199, 3, 35, "Text",ExpressionUUID->"ea42799b-6877-4b38-b569-13addb9d2db3"],
Cell[442663, 9538, 1148, 34, 110, "Input",ExpressionUUID->"27dca582-2b36-49e0-88a2-e3bb99bd2d01"],
Cell[443814, 9574, 245, 5, 29, "Input",ExpressionUUID->"9d2e7d89-461c-48fc-92b8-0015aa0d0da2"],
Cell[444062, 9581, 366, 8, 29, "Input",ExpressionUUID->"512a6259-5ab7-4fd1-b670-1393be8510df"],
Cell[444431, 9591, 178, 3, 35, "Text",ExpressionUUID->"06fed56e-cf72-4eab-877f-8a2fa48264d1"],
Cell[444612, 9596, 221, 4, 29, "Input",ExpressionUUID->"505f5e4d-61b2-45a6-8a8a-10a30bdf2cee"]
}, Closed]],
Cell[CellGroupData[{
Cell[444870, 9605, 179, 2, 38, "Subsection",ExpressionUUID->"37567aef-8b97-425f-abdf-d82ae053b962",
 CellTags->"c:52"],
Cell[445052, 9609, 1202, 29, 90, "Input",ExpressionUUID->"b6a6e3c8-61e2-4f74-8ee2-1ecd45f55cfc"]
}, Closed]],
Cell[CellGroupData[{
Cell[446291, 9643, 386, 5, 38, "Subsection",ExpressionUUID->"29712ec0-7f9d-4363-bd69-fedc89b926de",
 CellTags->"c:53"],
Cell[CellGroupData[{
Cell[446702, 9652, 178, 2, 45, "Subsubsection",ExpressionUUID->"7b6f1d42-3372-4eae-9f3b-52b01fd6c20a",
 CellTags->"c:54"],
Cell[446883, 9656, 290, 6, 35, "Text",ExpressionUUID->"27abfcd5-f584-46cd-8df8-6aa1f69b339e"],
Cell[447176, 9664, 1076, 27, 110, "Input",ExpressionUUID->"e685e2ff-8cec-433d-90f3-cd1e4ba107a4"],
Cell[448255, 9693, 246, 5, 29, "Input",ExpressionUUID->"2c219bff-98ca-4149-8f73-f5d4c18d1d6f"],
Cell[448504, 9700, 271, 6, 29, "Input",ExpressionUUID->"58a620c5-fd10-4d1a-b298-19131a1f4f75"],
Cell[448778, 9708, 722, 17, 50, "Input",ExpressionUUID->"82cbf336-e0f4-43db-94e4-46d687594afa"],
Cell[449503, 9727, 333, 5, 29, "Input",ExpressionUUID->"e78c9670-4878-485f-9214-babcab9aa322"]
}, Closed]],
Cell[CellGroupData[{
Cell[449873, 9737, 183, 2, 37, "Subsubsection",ExpressionUUID->"75236b9f-93a9-4123-9f0b-e0d6063ca27a",
 CellTags->"c:55"],
Cell[450059, 9741, 265, 6, 35, "Text",ExpressionUUID->"8f267ee5-face-4d96-81f2-eb7a65fb2c80"],
Cell[450327, 9749, 483, 12, 29, "Input",ExpressionUUID->"b25ec0c8-9dee-4355-8b9d-d5d64b8430a5"],
Cell[450813, 9763, 685, 18, 29, "Input",ExpressionUUID->"2421eea9-a6e2-44b3-aab6-fe2b35f370c9"],
Cell[451501, 9783, 218, 5, 35, "Text",ExpressionUUID->"645118b4-3efb-4e87-b82b-7000552f32c3"],
Cell[451722, 9790, 217, 5, 29, "Input",ExpressionUUID->"75011760-c2f1-4623-93d9-7769bb8b3f54"],
Cell[451942, 9797, 257, 6, 29, "Input",ExpressionUUID->"cb791753-16a4-485a-856b-2d0dfaadcfaf"]
}, Closed]],
Cell[CellGroupData[{
Cell[452236, 9808, 199, 2, 37, "Subsubsection",ExpressionUUID->"d4ebefef-2c40-4afa-86e2-01e82ef7e608",
 CellTags->"c:56"],
Cell[452438, 9812, 229, 4, 35, "Text",ExpressionUUID->"fcfdba04-a6f9-409b-bf78-69c9d9a513ea"],
Cell[452670, 9818, 1136, 21, 29, "Input",ExpressionUUID->"bd7f1df1-29c6-4ca4-a54c-3c906bd69bd4"],
Cell[453809, 9841, 188, 3, 35, "Text",ExpressionUUID->"2c663dae-ce55-4c0e-9ead-798d28b2441d"],
Cell[454000, 9846, 706, 14, 29, "Input",ExpressionUUID->"9b20175a-57c0-4449-83ec-169ccd6f1d3d"],
Cell[454709, 9862, 419, 10, 29, "Input",ExpressionUUID->"a1650702-d19f-48e3-a22e-658c76861d88"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[455177, 9878, 178, 2, 54, "Subsection",ExpressionUUID->"194fc7a6-9250-4380-ab91-b6f48a0893c5",
 CellTags->"c:57"],
Cell[CellGroupData[{
Cell[455380, 9884, 217, 3, 45, "Subsubsection",ExpressionUUID->"c83a9054-dd74-47d7-ad95-3b9d6619e603",
 CellTags->"c:58"],
Cell[455600, 9889, 235, 6, 35, "Text",ExpressionUUID->"c0285daf-d6f8-45d3-b7b0-a5175ce9af64"],
Cell[455838, 9897, 837, 22, 70, "Input",ExpressionUUID->"2c24046e-db0b-4e2d-93ce-548abb04f40d"],
Cell[456678, 9921, 194, 3, 35, "Text",ExpressionUUID->"ee6a7083-6d3f-4950-8cbe-77fbc5364897"],
Cell[456875, 9926, 1213, 28, 110, "Input",ExpressionUUID->"fea884d6-0f69-4111-9d39-fa9e2a661e4d"]
}, Closed]],
Cell[CellGroupData[{
Cell[458125, 9959, 254, 3, 37, "Subsubsection",ExpressionUUID->"37c42ac9-91fe-46e0-b5f0-8a8055e0e5be",
 CellTags->"c:59"],
Cell[458382, 9964, 219, 5, 35, "Text",ExpressionUUID->"0f42b6f0-0ac9-4f04-a3fa-eb1d2d31934f"],
Cell[458604, 9971, 860, 21, 50, "Input",ExpressionUUID->"9b64546e-04bc-4e97-994c-1aede4a4f620"],
Cell[459467, 9994, 452, 11, 29, "Input",ExpressionUUID->"18361a8d-0015-46b1-91d8-24b5e8b80e9a"],
Cell[459922, 10007, 445, 10, 29, "Input",ExpressionUUID->"7a02e95a-55d3-4dcf-811f-6f7a57c0aed4"],
Cell[460370, 10019, 450, 11, 29, "Input",ExpressionUUID->"c8cd8936-aaa0-4ffd-bcc6-64ae1a6de48c"]
}, Closed]],
Cell[CellGroupData[{
Cell[460857, 10035, 209, 2, 37, "Subsubsection",ExpressionUUID->"e507394d-7fce-45ce-bab9-205bc132c31e",
 CellTags->"c:60"],
Cell[461069, 10039, 263, 6, 35, "Text",ExpressionUUID->"f1339e48-5568-4181-9103-13343d87b5ba"],
Cell[461335, 10047, 684, 14, 29, "Input",ExpressionUUID->"01726389-dcb2-4df4-a42f-14741a4d3969"],
Cell[462022, 10063, 446, 9, 29, "Input",ExpressionUUID->"377f4aec-7083-4a3a-92f1-91ca05e12f9b"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[462517, 10078, 228, 3, 54, "Subsection",ExpressionUUID->"46cb5c22-df36-42f1-8278-128db9e6546d",
 CellTags->"c:61"],
Cell[CellGroupData[{
Cell[462770, 10085, 182, 2, 45, "Subsubsection",ExpressionUUID->"46110b45-9f52-4171-ae7f-cc9053aa8a39",
 CellTags->"c:62"],
Cell[462955, 10089, 242, 4, 29, "Input",ExpressionUUID->"4cc308f1-c626-492a-91a8-f47d2cfafa5c"],
Cell[463200, 10095, 180, 3, 35, "Text",ExpressionUUID->"9b1f7978-adca-4e60-bbe3-3c5f3c0ab3f1"],
Cell[463383, 10100, 211, 3, 29, "Input",ExpressionUUID->"a1f009cc-d181-4348-ab4c-2221322f7f8f"],
Cell[463597, 10105, 1088, 19, 29, "Input",ExpressionUUID->"3cde8bc5-3047-4773-bee2-bea3209a1f6d"],
Cell[464688, 10126, 328, 7, 29, "Input",ExpressionUUID->"a3bbe492-e2cd-4363-a26e-abbfe1e691dc"],
Cell[465019, 10135, 186, 3, 35, "Text",ExpressionUUID->"c1085988-fab4-4e7a-b40f-1be293ded423"],
Cell[465208, 10140, 496, 11, 70, "Input",ExpressionUUID->"61179b73-6cfe-420a-8029-ad2d32a322e9"],
Cell[465707, 10153, 185, 3, 35, "Text",ExpressionUUID->"be4e95c3-60da-4f88-9331-306f45cd1c4e"],
Cell[465895, 10158, 889, 22, 50, "Input",ExpressionUUID->"81b68c3e-6296-44bd-95a1-16e20540b96c"],
Cell[466787, 10182, 677, 17, 29, "Input",ExpressionUUID->"5feffc29-319a-4d91-98df-d76aafbbbd23"],
Cell[467467, 10201, 350, 8, 29, "Input",ExpressionUUID->"8b0730ee-7362-439c-a55d-7b48c7668c7d"],
Cell[467820, 10211, 489, 10, 29, "Input",ExpressionUUID->"9a36fc92-d1e1-461a-affd-7a4634929124"],
Cell[468312, 10223, 420, 9, 29, "Input",ExpressionUUID->"c10b5f5f-1c4e-46fc-8457-7ae8c5de5e55"],
Cell[468735, 10234, 418, 9, 29, "Input",ExpressionUUID->"53def0d8-f168-477c-b7cb-c8fe6942331d"],
Cell[469156, 10245, 343, 7, 35, "Text",ExpressionUUID->"b7b2a8a2-13df-4751-8d89-c4d73b0ea43f"],
Cell[469502, 10254, 1500, 36, 50, "Input",ExpressionUUID->"0e3b5a12-1999-4716-a93f-1cb468138eef"],
Cell[471005, 10292, 301, 6, 29, "Input",ExpressionUUID->"9219a9f5-b371-4dfb-9bc4-f5c419d321ba"],
Cell[471309, 10300, 447, 11, 29, "Input",ExpressionUUID->"d95b158f-77db-4726-b332-9f2e44c6093c"],
Cell[471759, 10313, 270, 6, 35, "Text",ExpressionUUID->"db2d0a1f-9d4a-4bf6-94d9-6893ddbeb429"],
Cell[472032, 10321, 671, 17, 29, "Input",ExpressionUUID->"81d0d641-85ea-42a6-9641-aa770949ecd2"],
Cell[472706, 10340, 340, 6, 29, "Input",ExpressionUUID->"28bec43e-e76d-4463-9d29-c32ba0fd6212"]
}, Closed]],
Cell[CellGroupData[{
Cell[473083, 10351, 300, 4, 37, "Subsubsection",ExpressionUUID->"5df7f489-c3af-447f-892b-2d741b7472b9",
 CellTags->"c:63"],
Cell[473386, 10357, 699, 17, 90, "Input",ExpressionUUID->"24c3899b-694b-4771-a7d6-cec18d60bac9"],
Cell[474088, 10376, 383, 9, 29, "Input",ExpressionUUID->"3c550b97-fb74-42b7-bd13-854bf4fdc94d"],
Cell[474474, 10387, 306, 7, 35, "Text",ExpressionUUID->"827dae19-915f-47c7-88e0-29476a68b6eb"],
Cell[474783, 10396, 408, 7, 29, "Input",ExpressionUUID->"6288443b-53ef-46c2-adb6-5fd242877ecd"],
Cell[475194, 10405, 557, 15, 29, "Input",ExpressionUUID->"7d283bc0-0b1c-4f90-843a-7e94e6175fe9"],
Cell[475754, 10422, 192, 3, 35, "Text",ExpressionUUID->"c7e1f636-4a65-44ba-97f5-3c532c2ec232"],
Cell[475949, 10427, 746, 20, 70, "Input",ExpressionUUID->"016438a3-9162-4cbf-bae2-0cd4f7115cfa"],
Cell[476698, 10449, 240, 6, 35, "Text",ExpressionUUID->"811ccd9c-c131-4267-85e8-406bc2e46d47"],
Cell[476941, 10457, 898, 21, 29, "Input",ExpressionUUID->"a7a27062-ebb2-4ed3-a1d1-3025b602e14b"]
}, Closed]],
Cell[CellGroupData[{
Cell[477876, 10483, 243, 3, 37, "Subsubsection",ExpressionUUID->"e037ed65-c2cd-4cc5-8065-ba7af72e972b",
 CellTags->"c:64"],
Cell[478122, 10488, 277, 6, 35, "Text",ExpressionUUID->"da9608bd-9f5a-4fa4-b8a1-f1650dab7c2a"],
Cell[478402, 10496, 222, 4, 29, "Input",ExpressionUUID->"ff560c23-792c-49a2-9cd2-ce9d09a17f64"],
Cell[478627, 10502, 432, 8, 29, "Input",ExpressionUUID->"3fe6c7c2-00b5-4d1e-b4f8-750688380984"],
Cell[479062, 10512, 270, 6, 29, "Input",ExpressionUUID->"25e62b7b-fcf3-450b-9801-5da78cc91f73"],
Cell[479335, 10520, 215, 3, 29, "Input",ExpressionUUID->"d05c621c-17a6-4dab-b5a8-744183e72ded"],
Cell[479553, 10525, 227, 5, 35, "Text",ExpressionUUID->"c2e709da-971c-4de4-a9f5-34d1b012c9b1"],
Cell[479783, 10532, 656, 17, 50, "Input",ExpressionUUID->"cfeacfe6-ee62-43ac-999d-2a12cb57a737"],
Cell[480442, 10551, 377, 8, 29, "Input",ExpressionUUID->"ecc0c585-9da4-4f6a-a6fe-b989e06865e6"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[480880, 10566, 347, 5, 69, "Chapter",ExpressionUUID->"6367df6a-3bf9-42c3-95c2-a5b907de76be"],
Cell[CellGroupData[{
Cell[481252, 10575, 239, 3, 54, "Subsection",ExpressionUUID->"5339986f-899b-4db3-9ea6-b1257b77c4d8",
 CellTags->"c:52"],
Cell[481494, 10580, 665, 18, 50, "Input",ExpressionUUID->"b4ca7c7a-0435-4a9f-9066-7c2cc2fc3cf7"],
Cell[482162, 10600, 1028, 23, 50, "Input",ExpressionUUID->"76484e7f-2381-4d9f-86d8-59c5553916b3"],
Cell[483193, 10625, 271, 6, 29, "Input",ExpressionUUID->"5fd9da1b-b57c-461d-964e-9df3c3ee21d6"]
}, Closed]],
Cell[CellGroupData[{
Cell[483501, 10636, 232, 4, 38, "Subsection",ExpressionUUID->"6f5bad77-bc3d-408e-ac09-1fb94ceb0884"],
Cell[483736, 10642, 199, 3, 35, "Text",ExpressionUUID->"0fccbf03-8400-4d66-a17c-f38e7ee05ce7"],
Cell[483938, 10647, 920, 21, 29, "Input",ExpressionUUID->"2ff79ec1-195d-419f-8081-0384af784f51"],
Cell[484861, 10670, 237, 4, 35, "Text",ExpressionUUID->"1e7af395-2763-4776-9b6c-9c6bf2fcf02e"],
Cell[485101, 10676, 393, 10, 29, "Input",ExpressionUUID->"1229bcfc-9d4b-403f-9279-8e4ff9cee7ab"]
}, Closed]],
Cell[CellGroupData[{
Cell[485531, 10691, 287, 4, 38, "Subsection",ExpressionUUID->"579c80b5-ca54-4e6c-82bf-561ef932ffb0"],
Cell[485821, 10697, 481, 10, 50, "Input",ExpressionUUID->"77074926-ca5d-479a-bd78-1753c2b06501"],
Cell[486305, 10709, 546, 8, 29, "Input",ExpressionUUID->"ce424450-5d12-4997-ac3a-168138d0aa21"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[486900, 10723, 314, 5, 69, "Chapter",ExpressionUUID->"1751ae4d-03af-43ab-814a-5f1f74188c44"],
Cell[CellGroupData[{
Cell[487239, 10732, 189, 2, 54, "Subsection",ExpressionUUID->"d31f39f7-0271-44c7-bb22-4483ca591ade",
 CellTags->"c:65"],
Cell[487431, 10736, 189, 3, 35, "Text",ExpressionUUID->"10ef7ece-7769-4d88-bcb0-24ae840e2ae7"],
Cell[487623, 10741, 1647, 49, 150, "Input",ExpressionUUID->"5bf5b320-1c49-437a-99de-8917ff7c9d0c"],
Cell[489273, 10792, 231, 4, 35, "Text",ExpressionUUID->"924a6c5c-f5e2-49c7-9aec-d99cba543428"],
Cell[489507, 10798, 1790, 56, 150, "Input",ExpressionUUID->"ac329d16-f122-4398-9d78-bd98c3eb7a70"],
Cell[491300, 10856, 225, 6, 35, "Text",ExpressionUUID->"1460edd8-ebc9-4085-89c9-9648c5994b0c"],
Cell[491528, 10864, 928, 24, 70, "Input",ExpressionUUID->"8ef48365-f337-4591-929a-e3834a62a6b4"],
Cell[492459, 10890, 152, 3, 35, "Text",ExpressionUUID->"a46f428a-dc95-4a9c-94ee-db51bba31c07"],
Cell[492614, 10895, 638, 15, 50, "Input",ExpressionUUID->"4c01170b-1dc6-4a6f-94bb-326f8fac8dcb"],
Cell[493255, 10912, 283, 4, 35, "Text",ExpressionUUID->"26edf3b3-8ad9-461c-86ea-f42fcabaaf29"],
Cell[493541, 10918, 618, 15, 50, "Input",ExpressionUUID->"dc246c71-2d8c-4755-93db-3ddef0094fa6"],
Cell[494162, 10935, 325, 6, 35, "Text",ExpressionUUID->"2870d320-5902-4ad9-9183-18b8640c365a"],
Cell[494490, 10943, 1369, 32, 70, "Input",ExpressionUUID->"bc673003-00c7-4136-ab12-9df2d7f84eeb"]
}, Closed]],
Cell[CellGroupData[{
Cell[495896, 10980, 249, 3, 38, "Subsection",ExpressionUUID->"09dc6daf-59ee-4840-bd77-0dfd2bff5562",
 CellTags->"c:66"],
Cell[496148, 10985, 920, 21, 50, "Input",ExpressionUUID->"936e9f89-0d66-473b-9277-3d000d5d55d5"],
Cell[497071, 11008, 223, 5, 35, "Text",ExpressionUUID->"8fa6be86-0e1e-4c2d-92fd-815afc33504c"],
Cell[497297, 11015, 627, 14, 50, "Input",ExpressionUUID->"16a20155-a9d0-46dd-9004-3126334dafa9"],
Cell[497927, 11031, 627, 14, 50, "Input",ExpressionUUID->"d9be655b-99c1-4a49-92e9-1066227e6a3d"]
}, Closed]],
Cell[CellGroupData[{
Cell[498591, 11050, 180, 2, 38, "Subsection",ExpressionUUID->"f1a32196-e07f-40de-9d22-2a3e291b7dda",
 CellTags->"c:67"],
Cell[498774, 11054, 246, 4, 35, "Text",ExpressionUUID->"ca482818-c0ff-4fd6-a65d-7ccf593d5fbc"],
Cell[499023, 11060, 1831, 49, 50, "Input",ExpressionUUID->"e1644f4b-cc91-419f-a202-938b3f310269"],
Cell[500857, 11111, 294, 4, 35, "Text",ExpressionUUID->"eb75b5be-106f-402c-87c8-a260f27e02a9"],
Cell[501154, 11117, 2010, 52, 50, "Input",ExpressionUUID->"73bedda0-2b21-40b2-b6f2-ac649cc09720"],
Cell[503167, 11171, 1471, 33, 90, "Input",ExpressionUUID->"e72fb9d0-91ec-427c-bffa-63847b71c7e9"],
Cell[504641, 11206, 6704, 149, 244, "Input",ExpressionUUID->"659a2995-7727-4d66-9c45-aaeb505470d5"],
Cell[511348, 11357, 1241, 31, 90, "Input",ExpressionUUID->"7039e879-900b-4789-b0f3-47a256fa0bbf"],
Cell[512592, 11390, 1521, 33, 90, "Input",ExpressionUUID->"e4f0b636-a1bc-40f5-a4ba-1f9a6c814878"],
Cell[514116, 11425, 1294, 32, 90, "Input",ExpressionUUID->"9ea6aef0-d1d8-4b93-aa04-3764b091c42d"],
Cell[515413, 11459, 3068, 74, 130, "Input",ExpressionUUID->"49de4251-0eb3-46c4-a80a-0eb2ece4da4e"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[518530, 11539, 450, 7, 69, "Chapter",ExpressionUUID->"bc90db84-1b9a-464f-bfcb-7bfcdc17cc16"],
Cell[CellGroupData[{
Cell[519005, 11550, 179, 2, 54, "Subsection",ExpressionUUID->"01c3231d-098c-4ccb-98c5-ca29c556a67d",
 CellTags->"c:68"],
Cell[519187, 11554, 2000, 44, 110, "Input",ExpressionUUID->"3d03fde1-41a5-4faa-a08e-3aa8eeca546a"]
}, Closed]],
Cell[CellGroupData[{
Cell[521224, 11603, 249, 3, 38, "Subsection",ExpressionUUID->"7b2df312-5a60-4afc-9c09-a780d1b79f27",
 CellTags->"c:69"],
Cell[521476, 11608, 192, 3, 35, "Text",ExpressionUUID->"5f0b1bca-e3d5-41ed-9a70-a694208969b4"],
Cell[521671, 11613, 387, 8, 29, "Input",ExpressionUUID->"d2775a6c-75c0-463c-becb-f6bfa512909f"],
Cell[522061, 11623, 273, 6, 29, "Input",ExpressionUUID->"12720b56-7e2e-45cc-952c-34693e5f7fe2"],
Cell[522337, 11631, 251, 4, 35, "Text",ExpressionUUID->"dcc0e6b5-0a89-49d9-90d4-a98753f46dde"],
Cell[522591, 11637, 364, 9, 29, "Input",ExpressionUUID->"f8f69f22-ac8e-4445-9f50-f25c1374ad4c"],
Cell[522958, 11648, 414, 10, 29, "Input",ExpressionUUID->"9dfec1b0-002d-4e9b-8152-5110df278580"],
Cell[523375, 11660, 213, 4, 35, "Text",ExpressionUUID->"6a0f939e-e625-4f88-a68e-d5a439fbffe4"],
Cell[523591, 11666, 370, 7, 29, "Input",ExpressionUUID->"b35d80d6-8ab6-4048-8c66-b1b21e5c335c"],
Cell[523964, 11675, 617, 16, 29, "Input",ExpressionUUID->"dec053e8-f133-47db-9804-5e67c2ee6d0f"],
Cell[524584, 11693, 260, 6, 35, "Text",ExpressionUUID->"e02e1d10-8162-4157-a544-70d0394d7da8"],
Cell[524847, 11701, 398, 7, 29, "Input",ExpressionUUID->"98003f04-256e-486f-9e6a-32988ea12280"]
}, Closed]],
Cell[CellGroupData[{
Cell[525282, 11713, 261, 3, 38, "Subsection",ExpressionUUID->"d662ecba-578b-4489-8e5f-fa36d3871aa7",
 CellTags->"c:70"],
Cell[525546, 11718, 168, 3, 35, "Text",ExpressionUUID->"ce2c72f1-c0ce-4827-9fa9-f34eb0a6ffbf"],
Cell[525717, 11723, 1386, 30, 50, "Input",ExpressionUUID->"e94f71ad-35d3-45b1-b3f9-da7a4a305fbf"],
Cell[527106, 11755, 352, 8, 29, "Input",ExpressionUUID->"67eef561-a4d4-4ecb-820a-70cda30789b1"],
Cell[527461, 11765, 221, 5, 35, "Text",ExpressionUUID->"416dd865-07cf-4983-831e-47ee4c74ed0e"],
Cell[527685, 11772, 571, 11, 29, "Input",ExpressionUUID->"d1993912-fbeb-4d5c-9270-ec462e67e431"],
Cell[528259, 11785, 181, 3, 35, "Text",ExpressionUUID->"0e98120e-f12a-4c08-9535-de77cbef1e91"],
Cell[528443, 11790, 1205, 30, 110, "Input",ExpressionUUID->"9b120239-90bf-4ad0-aecf-298d967ccc6f"],
Cell[529651, 11822, 552, 9, 29, "Input",ExpressionUUID->"563e0d28-bc72-4f64-8c7f-3ab5a3ead7ec"],
Cell[530206, 11833, 333, 7, 35, "Text",ExpressionUUID->"29a9ffcf-a4f5-4810-b77b-7ca390550ef8"],
Cell[530542, 11842, 4865, 76, 170, "Input",ExpressionUUID->"fca4f62e-c46f-4fc6-9fcc-f999350245f8"],
Cell[535410, 11920, 191, 3, 35, "Text",ExpressionUUID->"2338e116-4d0b-4656-91c6-ec19346f3ca2"],
Cell[535604, 11925, 480, 11, 29, "Input",ExpressionUUID->"dfb82d14-cf33-4b95-95f5-3ae78e89659c"],
Cell[536087, 11938, 499, 12, 29, "Input",ExpressionUUID->"6d459338-a8de-46e4-a896-c61eba1011ff"],
Cell[536589, 11952, 259, 4, 35, "Text",ExpressionUUID->"8e9aaa2a-5ea2-4fb3-8ba8-9490bfc44b9a"],
Cell[536851, 11958, 588, 12, 29, "Input",ExpressionUUID->"ff53edd7-43f6-4728-b267-8c4a1d5935e8"],
Cell[537442, 11972, 317, 5, 35, "Text",ExpressionUUID->"ba6f53aa-656b-4275-bc02-f3f4ec042568"],
Cell[537762, 11979, 3490, 81, 130, "Input",ExpressionUUID->"5c5b6aeb-5210-4c32-9ff9-41545e4bea0f"],
Cell[541255, 12062, 330, 5, 35, "Text",ExpressionUUID->"32d1c8b1-1348-4f6b-8174-3144dd70f39a"],
Cell[541588, 12069, 407, 8, 29, "Input",ExpressionUUID->"561ac5b4-5038-4726-95ec-7c7e6d324fe5"],
Cell[541998, 12079, 457, 8, 29, "Input",ExpressionUUID->"9ea64246-3b66-408e-ba59-b74224025c00"],
Cell[542458, 12089, 547, 12, 29, "Input",ExpressionUUID->"b15b7b3f-c47c-44f4-9e3e-47b98f8abb24"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[543054, 12107, 196, 3, 69, "Chapter",ExpressionUUID->"3b817272-df1a-4e68-aaea-c22d9c35e327"],
Cell[CellGroupData[{
Cell[543275, 12114, 224, 3, 54, "Subsection",ExpressionUUID->"16e4c173-1b98-4694-a73e-a9458b44e628",
 CellTags->"c:71"],
Cell[CellGroupData[{
Cell[543524, 12121, 192, 2, 45, "Subsubsection",ExpressionUUID->"2d7a5585-863f-40ad-b02f-be363d7913a3",
 CellTags->"c:72"],
Cell[543719, 12125, 214, 5, 35, "Text",ExpressionUUID->"a933a9a3-528b-4c0e-a038-17f710e1fe43"],
Cell[543936, 12132, 944, 25, 70, "Input",ExpressionUUID->"07aa0cbd-4fe8-4a6b-9db7-30e546e930eb"]
}, Closed]],
Cell[CellGroupData[{
Cell[544917, 12162, 184, 2, 37, "Subsubsection",ExpressionUUID->"26074711-b967-4b74-9ac1-52cb8c789745",
 CellTags->"c:73"],
Cell[545104, 12166, 1565, 45, 90, "Input",ExpressionUUID->"1d338fd5-7504-4d71-a854-b193d2d7194f"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[546718, 12217, 243, 3, 54, "Subsection",ExpressionUUID->"2cfca995-51c1-4930-93bd-525f0bdfb9d5",
 CellTags->"c:74"],
Cell[546964, 12222, 3964, 87, 210, "Input",ExpressionUUID->"b250ee77-119c-4a6c-ae60-654c651ae432"]
}, Closed]],
Cell[CellGroupData[{
Cell[550965, 12314, 262, 3, 38, "Subsection",ExpressionUUID->"bdc44691-f744-4c66-a1dd-7438bdd242a3",
 CellTags->"c:75"],
Cell[CellGroupData[{
Cell[551252, 12321, 181, 2, 45, "Subsubsection",ExpressionUUID->"59807f79-d229-49e5-b637-790a17413076",
 CellTags->"c:76"],
Cell[551436, 12325, 5477, 108, 250, "Input",ExpressionUUID->"869625c4-c640-4b6d-963c-5879d140481b"]
}, Closed]],
Cell[CellGroupData[{
Cell[556950, 12438, 276, 4, 37, "Subsubsection",ExpressionUUID->"dab93187-a908-4ba7-ae93-e35b0b7d7535",
 CellTags->"c:77"],
Cell[557229, 12444, 2976, 74, 210, "Input",ExpressionUUID->"7e2a2150-d80c-4034-83d6-d9565cf12a88"]
}, Closed]],
Cell[CellGroupData[{
Cell[560242, 12523, 174, 2, 37, "Subsubsection",ExpressionUUID->"11b0bc08-716e-4837-a55b-d3c98505048d",
 CellTags->"c:78"],
Cell[560419, 12527, 3503, 86, 210, "Input",ExpressionUUID->"d097a75f-b5e4-4687-abe5-6b28aa73ed5f"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[563971, 12619, 190, 2, 54, "Subsection",ExpressionUUID->"6705b400-369d-4acb-94b1-826717b38934",
 CellTags->"c:79"],
Cell[564164, 12623, 8183, 143, 230, "Input",ExpressionUUID->"3edd32fa-7110-4380-a1ac-e91a7e073cb0"],
Cell[572350, 12768, 3064, 68, 110, "Input",ExpressionUUID->"1aef8f21-e40a-49dc-bf08-ddabcbdf3501"],
Cell[575417, 12838, 583, 14, 29, "Input",ExpressionUUID->"04a56dc3-b7cd-4cbf-ac36-5103d5b1f965"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[576049, 12858, 264, 4, 69, "Chapter",ExpressionUUID->"b6662280-803b-4ab0-8481-332a70f0e978"],
Cell[CellGroupData[{
Cell[576338, 12866, 186, 2, 54, "Subsection",ExpressionUUID->"6a10872d-dcba-422d-a092-ff6bf02d5699",
 CellTags->"c:80"],
Cell[576527, 12870, 550, 14, 29, "Input",ExpressionUUID->"22f5062f-e958-45c9-8d1c-7514a2cedd75"],
Cell[577080, 12886, 350, 9, 29, "Input",ExpressionUUID->"da2e39d9-15b9-45d3-b9f6-8a42e2783620"],
Cell[577433, 12897, 957, 23, 70, "Input",ExpressionUUID->"84325218-4520-4673-b3ba-afbcc56e439e"],
Cell[578393, 12922, 772, 16, 29, "Input",ExpressionUUID->"4f50d823-b631-4620-97d5-9d9b11e937c4"],
Cell[579168, 12940, 487, 12, 29, "Input",ExpressionUUID->"44816932-b5e2-4726-bf22-347533cdb0c9"]
}, Closed]],
Cell[CellGroupData[{
Cell[579692, 12957, 187, 2, 38, "Subsection",ExpressionUUID->"6cd6b54a-4e4f-4aea-a7ef-4153f6ba4485",
 CellTags->"c:81"],
Cell[579882, 12961, 828, 20, 50, "Input",ExpressionUUID->"4ae0be06-8a05-47af-8c0b-17138c61cb58"],
Cell[580713, 12983, 171, 3, 35, "Text",ExpressionUUID->"ee141871-d592-4801-b4c6-06c9322a3a60"],
Cell[580887, 12988, 1087, 19, 29, "Input",ExpressionUUID->"eef5b238-54fe-43d1-bd93-2cc99019cdde"],
Cell[581977, 13009, 238, 4, 35, "Text",ExpressionUUID->"86ae354a-5496-40d5-835c-bbdc239e0f78"],
Cell[582218, 13015, 528, 14, 29, "Input",ExpressionUUID->"c47fd3a1-5f7e-4d66-8267-f71f16f1cd07"]
}, Closed]],
Cell[CellGroupData[{
Cell[582783, 13034, 184, 2, 38, "Subsection",ExpressionUUID->"ea78aaa4-62b6-43d1-8ebd-0d555a671dc5",
 CellTags->"c:82"],
Cell[CellGroupData[{
Cell[582992, 13040, 185, 2, 45, "Subsubsection",ExpressionUUID->"fe1a8b13-333a-4024-9b40-6c8541119d74",
 CellTags->"c:83"],
Cell[583180, 13044, 260, 6, 35, "Text",ExpressionUUID->"f9338d84-3437-449b-8a9e-62f482b4cfcf"],
Cell[583443, 13052, 490, 12, 29, "Input",ExpressionUUID->"33509e0d-e0ac-4c7c-b9c9-867caa05b830"],
Cell[583936, 13066, 158, 3, 35, "Text",ExpressionUUID->"76d3418d-f144-42c4-8284-ff4c2b7979a6"],
Cell[584097, 13071, 259, 4, 29, "Input",ExpressionUUID->"6eb068fe-9f84-4efd-b749-d180d41ea529"],
Cell[584359, 13077, 167, 3, 35, "Text",ExpressionUUID->"0cfab279-b4c7-44c9-9d88-d558f0a95c00"],
Cell[584529, 13082, 253, 4, 29, "Input",ExpressionUUID->"9a749ece-1497-44de-9d20-8276379966d7"]
}, Closed]],
Cell[CellGroupData[{
Cell[584819, 13091, 203, 2, 37, "Subsubsection",ExpressionUUID->"10f96f22-e10c-41bb-8f35-b9a1e773fe6a",
 CellTags->"c:84"],
Cell[585025, 13095, 213, 3, 70, "Text",ExpressionUUID->"9b1bd386-1371-4f5e-8b89-df8892452f7f"],
Cell[585241, 13100, 329, 8, 70, "Input",ExpressionUUID->"68b4bbc1-c884-4771-a4a4-89c7c31471d7"],
Cell[585573, 13110, 270, 5, 70, "Input",ExpressionUUID->"9237ea30-acbb-44b6-ae7b-59a12af15f19"],
Cell[585846, 13117, 341, 7, 70, "Input",ExpressionUUID->"aeacb816-877d-4070-923e-0cb7b292d179"],
Cell[586190, 13126, 199, 3, 70, "Text",ExpressionUUID->"5d1a0efe-d941-4939-ae1e-441bfbb8a97a"],
Cell[586392, 13131, 404, 9, 70, "Input",ExpressionUUID->"50655e5f-6b23-440f-9239-f6decae57cbd"]
}, Closed]],
Cell[CellGroupData[{
Cell[586833, 13145, 184, 2, 37, "Subsubsection",ExpressionUUID->"0428555f-bf06-485e-bd86-110e5b03fd5d",
 CellTags->"c:85"],
Cell[587020, 13149, 219, 5, 35, "Text",ExpressionUUID->"de8c27c7-f11b-40ba-bc10-c57fae6efe95"],
Cell[587242, 13156, 517, 10, 50, "Input",ExpressionUUID->"a8fa823f-5049-4764-952f-4982177a5eb8"],
Cell[587762, 13168, 288, 6, 29, "Input",ExpressionUUID->"2a2cc6eb-c726-4d33-8a51-fd9f5741739f"],
Cell[588053, 13176, 244, 4, 35, "Text",ExpressionUUID->"58fb01eb-5f6b-4f00-a0d7-e39e5bdc8042"],
Cell[588300, 13182, 336, 7, 29, "Input",ExpressionUUID->"e0072549-5fd7-4ee8-bfdd-74509f90111a"],
Cell[588639, 13191, 190, 3, 35, "Text",ExpressionUUID->"1b39c1fa-f998-4e08-a4f1-d548eb3441f4"],
Cell[588832, 13196, 1185, 21, 29, "Input",ExpressionUUID->"ec281848-13c5-468f-8682-1fe31a677497"],
Cell[590020, 13219, 438, 11, 29, "Input",ExpressionUUID->"352e5c6f-0915-4a3d-b3e0-c936c5c3b118"],
Cell[590461, 13232, 565, 14, 29, "Input",ExpressionUUID->"0b24b278-9787-4678-90fa-fb2efe7345ec"],
Cell[591029, 13248, 147, 3, 50, "Input",ExpressionUUID->"d4defec7-9941-4d35-9eb4-78fe131065cf"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

