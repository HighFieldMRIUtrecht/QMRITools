(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    513944,      11330]
NotebookOptionsPosition[    464629,      10650]
NotebookOutlinePosition[    465026,      10666]
CellTagsIndexPosition[    464983,      10663]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["QMRITools Demonstration", "Title",
 CellChangeTimes->{{3.7548942958959026`*^9, 
  3.754894302342204*^9}},ExpressionUUID->"934d8265-4fcc-4427-9f34-\
640074773381"],

Cell["\<\
In this demo notebook some functionality of the QMRI toolbox is demonstrated.
Not all functionality is covered, some functions are very specialized for \
experiments only run in our lab. 
Furthermore some functionality is still under development and therefore will \
also be excluded from the demos.\
\>", "Text",
 CellChangeTimes->{{3.7548942642000513`*^9, 3.7548942928369303`*^9}, {
  3.7548943313614855`*^9, 3.7548943407731633`*^9}, {3.75843311938348*^9, 
  3.7584332200049214`*^9}},ExpressionUUID->"22b0e3d8-9903-4283-b556-\
9ad31d8e7f65"],

Cell[CellGroupData[{

Cell["Initialization", "Subchapter",
 CellChangeTimes->{{3.7548943063775883`*^9, 3.754894325780166*^9}, {
   3.757848451841284*^9, 3.757848453039485*^9}, 
   3.7983499996870766`*^9},ExpressionUUID->"4d401d3b-2658-4bc0-bbef-\
6cc2152ecc5c"],

Cell["\<\
Load the toolbox and specify the directory of the demo data folder. It \
assumes the demo data folder is in the same folder as the demo.nb\
\>", "Text",
 CellChangeTimes->{{3.7548943517375546`*^9, 3.754894370341078*^9}, {
  3.758433278150164*^9, 
  3.7584333047881756`*^9}},ExpressionUUID->"a102f725-94d2-43a9-822e-\
d1dd3b7c0c23"],

Cell[BoxData[{
 RowBox[{"<<", "QMRITools`"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<DemoData\>\""}], 
     "}"}], "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6907975416819487`*^9, 3.6907975437981606`*^9}, 
   3.7066051241018443`*^9, {3.7548942442159195`*^9, 3.754894244741446*^9}, {
   3.7578490603381467`*^9, 3.7578490607001114`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"cae7997b-5732-4630-8297-a72d2ca96db1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"pack", "=", 
  RowBox[{"Last", "[", 
   RowBox[{"PacletFind", "[", "\"\<QMRITools\>\"", "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Information", "@", "pack"}]}], "Input",
 CellChangeTimes->{{3.7983489419994574`*^9, 3.7983489542227497`*^9}, {
  3.7983498620226765`*^9, 3.798349880765444*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"806bff7c-106b-4eb2-952c-cd89f993a8f1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PacletObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1: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
vVNU4BwpQTiiSHJhT5JHOVPcyCLxoqbHH6G5GoivMCR1vRmSqo1IbDFHNKnf
GZnqMPW+QLhxFU6RUrANkaRiSWi8BHoGBwV+eG3/TecNz6a061meLh+7syJr
V+5H6RNuzC4L7snnxNzKaz5PZkV4I+APT2dO0OefryjPJiamYOlggOJGJcz+
oRTdS/FIrzGj8qf53xWhazYKJQ+cUNTmQPIoPVh63MAugvFX5cOLZMfH/wE7
9d1oS7yBEhJDivxPoDvrNuGFErrz5NESd4V6b70u4gza4q+gmnECSUEH0Vuq
ii9a9EjOfQEHP311bq6Uwwe2QOqmKZR057B3hxkqS5tE7Me1FffMYmJicPr0
abHv9f7722C6/yPEbzmAx5fO4u7eT6H51o+w7/0tr8WWL5Ot2z/Gbf3bsAk6
jJgSfRI33BFTaYR0wo+SFhsE5aiTfEub5MymCMxSRkW3L7KarKFjcwkf7Xjn
pftzbMOxER3Ps3wfLsDfnAC7cyJ2Fvod7tpZwdq5uVX45fFjbdzzZeYl868q
k5NTJIYHoaDWAFmtPhj6OgGNfX4oIbnqGIkfnM8Y1vd4Q9P8FHbsfe+NnN2h
Hf8JG+VPCT+O4PtBH3xJavLm2MsYJDnBF+3WGCK5b0v0GZQFHkaayzXCl+sI
tT302u5/TiIOlpaJpB6jx1ihcM79dd3L8p0fomEP4cq//79/E16sJQeOfQIZ
rf2kbtdBDakrUypNSJ2iT9Uk4QVaYJL8KzRXE3r2Vza8N8dW/NzllTA4RxOa
7+bHHXoexJun+ME5K+q8+PvMrMWJmRV8mRHRF1nDu175+p719aKRxOZykofW
9vihsceN4gcn5+TkUhx+eIerv9Qur/rzoj08DA/id9+l4bsuR4yVa+ILUpuz
Sb3x9QN7FJC6JMtlG5pZt9EYcRH7Pv3ha8PL1g9OwsmrEpNTM5iaGCN12ZSI
rTcTN1bKoR/+AB27f4o9//76Xv9meKJje5nU3gZIJnEjJEeNetZVSPIFTr2x
fe/7G96TY6vX4bdf4P8JN2aWZygdgveZGQr3In1eS+F/ZoaH/RmKT/x13D6X
LxwdamyWpzcr3Ce9pA76VndQ/EiH1OAhaBxKxL0Bb+rZVUadKcmnrm+KDxvl
ypVL+5AdqozhUhI7WszxXYc5atO04OkgiVrmYdyPO4XqsH2v5bXQ9wj0KKBs
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
vrhI9g+7qEwMj3Xz+OMpvhtn5EVwISq73nwD7mS/KFGSQ4LcZlQpyqNOfgvi
Tx2Hk2sgzDNiydlKF1rXDST2d3JyMjw8PJCRkUHP8WWOnyuUXZbDxxkO53MK
G28sb7NcNMbqjwl8z+F1/pqMc9ZlnF0P+hk0PkbHRjG6Ys1GV+ZHxwTpqIg+
KXNtjHLq2fKoaF9OfnRU+NmSrtflKxdgaGQIJycn+jNf1PtneXl5KCoqIuvo
DktbCyRFhKMiPQ8m+kbYqrRdYlw+DZs6EUHQCZ5FXdOAsO9EhPXTs+LqRcbi
tmUTGgmXVyjLoX6rFLmXHIbumTBcsPSFpro6VM+pS+zvpKQkBAYGoqWl5Zln
hLX+PRUjz+DyVWNY1P/jK2NUWGjMLI+OjlKC55ax59Mbey4bYxKv16UrV6Fv
oA9bWzukp6cjMjISJ0+ehJqaGi5euoLDhw5CR/sazp9f/f/kSvInzo6Tdxr6
e4YEcx3jzU10viEhq8fVyxoLhZHqbdLIWLcLcYduwdXDGurXb+Pm5dvQUDd7
of3D388PHp6eL238T5tLSEgI35/cmKLzDM8K6sb4OmNc/4vGJIMlMTFLsDHC
w8cI0zYyws+PMELn+fUjgvoR0bgeEa4XTRmdFSmxPTIieBYlkq7XnduqMDIy
QkhwCKKjo7F//36oqqrCydkJrq6ucHN1w10t8Z9VfRl/ojaDgwOF5rUSGyG/
2Fg8N21CL7mv+6tp4G5uPEKcdXDnvC40VfUk9je1N/v6+mLfvn0vffyrzYOP
kVcvyyOU0PHJxP0Ii4URfsrmBSLQE/QVYGOEjX2ujVFWh2N7VNBftF3S9dLS
1iEYcCX3xkiyR5ynzyxeXl6Ij48n561wBBGu3rZ12ytbS/HrGcznGB63ML4i
6aFDh37RsYTuegse52/imr0zwsIJV1y4Cw01HYn9Td3Pqb35Vc5B3DwojLA+
5HEsh3+5XL+Cp0eYtRDmYyEOE+wDFDaWR0Tjf5iRFbjgyfAzyry60TX3FyeS
rpeTnT1CQsNxh6zZwQMHYWhoSPsyJycHMTEx9N7yqtdS3HoGBwevmCNV9/cY
i/EJGdgcvw5b9zDcuK4OG2NXif1taWEBRSWlX3weFK+siBvuWYTlef5Zh8vt
nPMKWx4V5mxGf3lkeHh5eHgYK2SEzY9w8sO82CYphR+2bkRIn5Pn67J1I7Tw
8CfQZzFJ6zAi6XqlhrjDP8ALFy5ehra2NpwcnZCckoLi4mIYGxu/knPMWsYl
hJHhldj4pceiduE4LHStYaTrghi/SIn9Td3tfqk5iD6b9ecwE48jI8Mcjh8W
cDwTfwJ+HqZ1WZ5mY5KNUQ7mKGww+Bji4GOIUx5aiZ2nyvPqixdJ1yshJgiO
NobQuHMD1lZW8PT2oc/I1OtYO3fulGgtRWNL0r4U57Hzk/Rc9bLGIisrBycT
c5hoWyE7PVlif28id5rnHYu4OUjSl/WnMAeLysgzYo3Fldh+BBtDy9T3E6i4
HhoaZoTkic4QFetDPKHrh3ntw8M8HX4bB1M8W8OCOrqdwczQsEBnSHg8tP6Q
wIak6+Xj7gw9cv+2MNFHpL8XoqJjUFhYTN9JXtY6vogdivOCg4J+FWO5fPkG
7C2skJVbIrG/X0a/F5kDGztDIrE0JIqDoadhZFWhsEHjY3URYIFbZvODbPwz
Kd0+yMsPPtXukAj+hOsl9XuYtzPUDQxh4eCI2LAglOVlo7Sk7LlfX1nLWkpi
i+K85907XtVYpMkeEuTphtKKmv/f4oPH2xz+Zcv8eibGhHiY0zbM5fgV56Dl
wUGCj8FBDBIZGhrkxSddHhLkqXq6zEupNjr2hVKeDbbfIKM3NMjYZG0z+lSZ
34ep55VfbP9Izkok2LCGtb09AkJDUFmRj8aG6hdaA2VFFdxTN4anWzRUL56H
8ob1L43/n7cvha2gwCDah9RnnyQ5p3H1XV0ckJ+b+6vBhzg7q+kdOniIx92D
bEyJxJkI567K04OrthF8DC4LYnsQLFZYvAwOPl2EdJj4FrLFxcEgt31IpG5I
yK6kfs+rrICZjTnMbawQGBWF/OIC+Hh5SGxv5/Y9iAlKRLhfEoI9k+BoawNj
K1vIyiv84jF18OBBvl9ZDqN8e4jUS2rzxMlTiI2N+UXm8rS+kgiPJxj+Hhri
cy3rFz6vDwowI4hNtp7tOyTYI/h8T/AxMLhM9xlgYnNgYCUOBth2MW1iZIAR
XnlAYHutMiA5Pto6O2Hq5ABDW2sEhkcgjdzN977A2cre1AYZUQnITChFmE8q
bK0cYWplgSPHn+91m5eBD+pzHOL8RdVLapO6X4t+LuRVzWWtdp4lFE+wvhh6
nrji8PYa+9H4GKAxwYtjOs/IgKjwY52nPzDA4IDtNzjI1+PrD4q0MSKoH2Bs
MCljV9L1erQ0i4SMFNw10IUXOX9ExcdLvnfs2IHclHxkZRUgP6cKkT7pcLB2
h6WVGQwMDLBZSuqF4up59Om9g10nLk8xa3DwBfYQNze3vws+1mpXHC5EffBM
Dl4zRwvZpbCxPNi/Egv9jPDLrE4/le8Xahvg6PL0Bkl5cEUbr3+/AD986WdE
8AxJ1+vh0jxyyqtwWU0Vjt6eiEmQHB825A6TmVmApOhcJMbkIDIwDkHeAbCy
soaxiTFOnzz9i+GDiguBvzhcw/jyRfaQ533/m6srJyf3UjEi7hmiIuyLATHx
9CIi5Nvl/oF+SnhxT1I69un476djnVdm45zXNsDV6+fUsfjoF7YzwOCpn7HB
0+XVs3jj93lBfExMjGLpw8e4onYHeuZmiEuU/L2vurpaJKZnIzwoGrGhkXD3
9IG3tw9sbWxgYWGBe9r3fjF8cNdhgJvn+FxS26dOnZK479lzF14JPlZ7nhBG
+hm+FuV0rm/YstAe0C+ScrhbWGeZ+H1ZNNZfiQwMPJe+pOvVXF2Gzz77AF4h
4bippQlXb8nv5uXlpfAPCICPryeiIwPh7OwMOwcn2NnZkj3ECjr3tH5hfAhz
ikAGXshnBw4ckLivuYUVtm/f/soxIvpcGiNkbfgczPItG2cDwn7i1/cL8CLq
zwEO9/M4vX+5j4uPPtbffegjIqjrE6Skrq+PKlM6/bTw2vsgZKePbRPJi0gf
R59v/wXWOjMjAQMTI6iuLoWGlhr9uV1JbeUV5sPH24ucz93h5+cDFxdnGiP2
dvY0PvR0JP/enWT46BPjQ0Hd3+N8pW9giIuXV35X4FX9cZ9B3UfYeOnjnkFE
YnnFWWctHM2Lx2US65RgLULH+Rp1X0QorEm6XuExocgoKEZhaRnMnWyha6Qv
sa2EpAx4e3rC08MTbu4eND7c3d3p75NaWFrASF/yz70+rz7PNyv9z10TSW1T
3/+TGB96BrCyt4OGvvaK+f0S560Adg/h+IHH3Qx/8+v7eXUsrzN1/Ww9bYPj
W1q3n4ePXirfy2/rJfneXo4ule/tXRnLnLpekfbeVeO/l2NzpT6bSrpeTl7e
CIqJQXBkLPyCA3GV3EMkxkd8KgKJDU8vTxob1Os8lNhQ9w9zcxjo6v7C+BD1
P2cdeiX3GYV5SfsamZghJjoMaWmx0DZa+fnPV4ET0T3kFXL1MsHBMhXbwsKL
dxonVDyLtLN46WVjnNXnt7NtvTQeejkpbbuPTfs4+r2CZ5JU0vVyI7EcHBkC
37BgxCYnwdFD8tcuLcytERMTDTdXJ/r7ulQcUecrK0tLmJqZ4dz5878YPgL8
A/jrwfqN5TAqDQjwl9i2g4O9xH3tHB2RlRmPwvwcJObm4K6eLhSUlVfFycvC
ihB39ArHNS+OmBgV5Wwm/tg+veK4XLAfUNhg8NGDlTgRIz1sKtDv4daLtbXS
ds8znifpenm6O8M/PAxBkeEIiIlEaLzk7w3v3L0bkbGxcHK0JzHkQPYQVxon
5uYW8Pf1wS7S/kvhg7pDC/OPMI8dOPgid2wLifveuHkDW1VUnoqHZ4kkf9z+
rE96uD4R4dsVPmN4XsDXvcw+zO1H8NHTs9xDYr2HxDcvFeR72XIvIz3cVKDf
y62n+/YK+vbwsCOw3cNgQ1S3l2+HSiXmwqAghBFcxBEJiAlDVGo8FBXlJbZn
rGtAsOEKa2tLODo6EXGEiakZ/b2gF8GGJP38/Px4fuoVXiM/P8n3Dur9C30D
45cyl5cla/kTxocw1/b0CDi4h+Vyhs95PmOx1CuIY8YGn7d58bjczcfHr0sk
3j/CwxGTHIuoxDgEJ8QjNiMNGjoaEtvbvUMFzm4+0NPXg62tDbl7WMPP3/+l
fR74efpRewjXRywHvcjrs7du34a9veSv8a11Xi8bI1xdlmeF+X01vu8V1HE5
v7d3hW9pfHRT+Ojm1Xf3gJTBK3ejm6/Pa+/uJmk309YtsNXN9qX7cPqytuh+
Ah2+LSG7TH9GT1Jf2bo6w8XHDfbe5C7t7QzvYH84ez/f/7cQtamybSt934iL
iyWxZP/c8Shq70X6Us+m9pFuet/we+GxOLu4IdzX64Xx8bx9qLGLG79k+HgW
33aLKYvWiRWCj+5lXlwKhB/L3Uz8MnEraO/mY4Hfj6/Hre/h6/Z0Cz+jm8Hi
Sju8VFJfqWqp47q6OtTV70BNSw3XKblxGes3bnzpHCnpHvAifP+yx0Ktb2pU
yAuPZy1/r2oeAn4WiW8+H7Px2SPM3Xz+7uHweQ+f+7sZfHR1kT5dbIx2oYuk
XSQV5Nkyq9clSLu5KU+6unj9ROtX2Ofb6GL6CexL6itTckdwcrSEs7sLDGyd
oEmwcfroPijv3PNK1vN57dC86ev3qxgL9bs8jY2NiA6V/PXdX8M8hLi3SzTe
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
NJCTEUiDIpWB/n43fRxwixXp3Nwx84SxRz33pO0e9d7NrPxwxLpHu9u9e9jg
vXzuNnZDBpqgF8gM3Ul4djLPpzSxoqCb/akKyquWoR3bR3OPH9XabeTnHuG5
efPZvW0TZQVZ9LSruHV5lH/+8R1+/t4t3rgyxolTA9Rr25gY1HF2ogNza4Wo
P8poqCqholjwQ54u9owCCvLSKRR7h6X+kAlNtdQl3nu2Euy3hY+uJmJuWcVL
V5R8NhDJaEMQmtZG6xrazDGvadf3wmbQw71B11iD0/wG3cYedMaQ2/PtHO0Q
+WlhbQ7xBYcZr57HFeMuRsZ86FZE0ZK2ktDDm8mMjyJHxHBOguBJ8hEyctKs
v2+ZmxmHqjSHamU25nYlY4NGXn/9Fl9+9i7/8atPeffNm3QZtbQLXZFlJYr8
U299xzZzGUOX88irXUl5224qzD6kqJ8luqSEnQUv4y32jjJNGsX7lnE+ZR7Z
8iL6HXwe8KAJ0zGVaIgUQ4dWD0rHcOLp0iCnVjn8JLru1Hxbfxs/JM/pd573
u479kvfod/j147mfZ7vX/em+dfXlFMp3oimYz2DAPBbFVrOy6ji7AlooKlqN
ZmIXlQL77MrFvPMrGZqGXJ75p/kkxoZQ21TJDVFL/uKjV3j/9kVuXTvD2RGD
9eez+kd7GO8We0dtMd3tlSK/KqE0P5OSvFQUuWmiJs2ksDiFvKwI62eeRdmh
7PHxISFVxg+vp/Da0b38+pKKk0Z/0hPm020ouq+53g8OD8Nq5a3ojekY6w5y
ZdSfE1270aif5NLNJka04RzwXyIwixW1RzL5CaFiHxH8SEtCliDq9IwYUX9k
UlOeh15bxvBwNzdeuc6Xv/yQf/3F+7z56jm0rVrxjHxyCzOdz2ztzqFp0If8
Oi+KGreSkbuJNLkXmV0VHNJOsMSnXORc6dw2hvJS9iJ0bWV31dN76qyb3V2X
7tMmRbxPOuK9X8S+5e+9WDjQ7+RGv5MrVh8HX/r7rT79ds7Y+GL367eZ7dzW
7hxfMo47F/vdxumpzCYnM4DdOTH01S8jurqdrXU32LfbgEzwo9y0ioq2nRSp
V9N2LJjf/3qMlPWL8dm5lfJqOWM9Wt64fIyP37zCnZfPcay3jdHeZjp69Wjq
S2mtyKWrvUrkWEoUeXEU5aQjVxSIGiZD5NDpQjtF7ZFh+Z5ABMH7vfnVp+V8
8moEv3i7UOxHEZSm/h15fk8x2F3hiv3+ARd2Th1x3XPNWTL3aX6Otv5p40j5
5VybARfG0/XK8cykfSrOVC7k49MHKMjaxcnT6RhaNnK+fD5DqmL8vX1JiNtL
YW4qxbnxZIrcqlRYUWo4BWL+dYpM1MoCtLVy8S56rl69wueff84vfvEJt65O
0CVyq3xZCo0N1dZndjXU0HU0EoXIQ2s6AqgVe0er+TDxNYc4kJrL5vBG1vjm
U58ew5+u+Ir8bQe9NUn31o5+dwwGPMz3bn1mYNjvjtOAZExJXE4KbCet+Pbb
uNDvZgP09Tti+z5soM/tus/OO6nNfJbLTF0GFGVVZEdtJ1utoP7dq4Q0tLGv
+gbxiaIWrF6ComWdqO/80YwHUd22gSF9LsFBXgSsX05tYYaoJ5u4dKyPj+5c
4a1bp0UNWMd4n5aRASOV5SW0qGV0t5WjqZMLfsRTXppHlTJf7AlxlMozyUwN
Jjs9jPT0ZA7uX8fV4U0Mta3is/eKONXnTZ7PXzMau5zO2hL7HO064MRgjvOd
Bdu74TPDd2DAo39PTy/7IrK4pXyOqyNBIpd8AWNzAEUyL47pl/Hb23nUyELw
D/SlXin2jNwU0jMSKJdnkCs4kiNqdMueWiPyou6WMsa6dbz5yhV+JfKrn378
BufPDKNvrSK3RGbDwKSntSiK+OoUsioW0dIfTO/JSEpblpHRnkh8cQvPBetZ
uknBq8oYLil24rM+EHXoGobM7bPOeXr7XPwGPFy7zgfc1sqxD/TbdV/iO9nX
J/jRZ1nfPsQ5/XazXNt8+qzW12c3y7XVp88ZF1a/Podfv3s/q9nHdePM9Pm5
OFVdGEJUUQo9cQu5Y4qi++g4qyJy8W24QcQRNaWVS1F3bKW9N4i+i6GU1i4h
/XAlhSoZBza9QEF8GENdzbx8cYxbZ0ZELTJh/VndfsGZsX4Dbc3VtDSV0Kup
oqE8l4qCZAyinlSJXCItIZ7cDMv3kw+Tmx6Fv/9eUqOf5+LgDrTlSzk2uAlN
0bP4BAXTXHyE2435mAwat/fvt2Plea4OXOyY9bl8+pz+fR76SLGbdt+yXn3S
tbBddxs1JNapaQudx/mjPhwf2MNAzmoGK9YyMryX//pSiTzgRXbt2Y1alU2W
2EMKRE5Vq8gV9UQkBekRgh+pNIn92NSm4txYB+/dOMnkx7f4ROjOUVHLNVeX
IJfnWt+xXdtBub6cXPlm9EfD6TubSHH9OjLUuyk3p6MYb2Z37RiVsiyOttZS
lh2MPmQJVUWx9PV0e+Z/n4e2r2hSrO9hgh99k/32uO+zx7gNXzsXnNywr4GE
I1Z/57X7GA4+9fc5eDedY32u+JC0W967sTiQ5kN/x0sxj3OqP4+36n3YmyZn
S90bHNhWTr78RapNG2npDqDzeAiKVlGvm1v5+KXTpB5YR3z0YUxi3U53azg7
bLTWIqdF/TFi+Ryxo17kFwqRN6swNZVZ84cysX90ifUvUciITBK1R0IURXlR
Iu8IZ/+uVYyZNnP7XCjtlUvozH2EHYcOs1NWw0nVi1yv9cbQpnTFp9tc7esh
xa/fHTMnPhLOuPB1aZX7mjr44eKak4+OPuK6u6+F04LPFQGP8MZoANdGgxmu
XkN5shca5QvwH00Mlh7E28dL5JUyZKKGKM+IRC3ySws3SnNiaRJ5qF5oiaFO
wfVT3bxz6xyffPAu166eY8CsEbVMLrXV5dZn1ypKmTgbQlW3qBuHwmnsDURe
v0asTzgyrahxRvrZXnGRWpOZ105Vc/30QU5lLqY9fpv154od+uqcm0Rr3fSm
T6IxDnyn68U0PZFqTF/fTH644l2yBnZ+9EljV2q90uteD21zMI/+vR59e+3W
oY1H5vMMo2GP0inW6mxbNb7NfWwoukpwaASNxmW09ASibNrE4JlEbnxUwOuf
NfPFlYsiN4glJDiIXrWKowMdXDk7xKWjXQybm8Qe3shAdzudBrWozwvRtSip
VQl+iLyiVl1GaVEuqUmxIreKQp4bQ1jIIWTZaxjrWotJvZbGsudpjn6KMO/t
DGtDeadzp9DOzXSLfNDx/lbseyXzvl+85mT99ue51tWpTXafdvM4uv5xWpO+
T0n0fF6eCBKxHUFd1RKRe27i1DF/fn6rhHdPm/EO9hf7RbzQiXQKU6IoyY+j
WPCkODuJttoievSVDBhrOXt0jNu37/DenTe5cqJX4NlAa60MTXMjjXUakuOi
qOzdRppyOcq2XZiORaAdO0Bmro+4TqVkuJ3ViWUoSiKpO2ni1EAxlzOep93v
O+gMbRJNlWjxNJ2VXvdL5u3Kf6R+/c7x+qXjTcuJpOP0u+M42dfbO9nb24vF
LGtpO7esa6/Vep1HV/w62nv7JP36+py+lvi33etz93GM2zfzOVbO2M/LKlXk
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
986eN3xduDq48cD97THurmGWNis3hHU5uTG7df234IfFnlrwrfvu87DW46uu
pSds/7u9p9RSYu/v744einT/2/jfxHwelBsWs9a+Pd0uzbJypcfGGQs3umz8
sPyeXleXjQdddr50dYmjaLPdm50f0uu7xeZc8LpfLs32Hp6u7zbm/bbPdu9e
751g50iXXXMeFj/uhcNcsb6f58ylzzeF693e8V7PnH1P6JkUcW/hiI0HXV1O
LjiPXTbeWOxB1uNB/Gb7uh8+eXre3ca73/a5vvP0fha9supOt017vg5+3O35
XyfWXwc/HuY7zta3y74HOHhhWx/b/mHhh4sHd7dvih9z0YK/JH5M79tt3Ze7
7Pvz3XF92Px40He+X/8/B64P2s+aN83YG6ycmezsFCbaxJEuhz0AP6Rtnvzm
0m963wfB8n517GGu41zvdUow7rwLrvf6+qo4zHWMufb5c+P6oGPeZU+Y7Ors
nLT8Dciurk7rWnVajp2ebO78cLTNxWcuNtd5P+gYD2Md72fMri4XpgL/h86P
B+HG3XwedJ7fJK73O39pu2MtLLFv44FjbSz7h40fc7Fvkh+zff1/gR9zxfVe
X1+FH/eD1YO+018WPySa5dojJs0WfpjFucU6zbjObWa2mtl67+vmx1y+5jrn
tFLlXwg/7o3rXGwu/Wbz2bH0+/8/PzzbpNlsnrTFv40Hlp/7NJsdnOh0Xs9l
/5C2Tz+/H7zuZ+6z3Wu/JJuT35+FH3YNcmjPn5sf9/J70Hf6i+GHeRovzGaH
dtn4YeGAkxtm632zB/uqcf6gc3sQLPXGufH5z8KPzvvH9WHzYy7v7PB50Hf6
i+FH57SYd63PpLnDzg9zB45jhzh2dIjzDjPSe39J/Dh2PmHOY3zT/Oh4AN1x
rc/99Vv82N/M6ne3uT4sHL5JXOc65vT7nvYCBz86LNbh4oDj3PK3580OjnR8
c/y413hzxarnrP9Xfq+vlx8WHbLhPNc+1n5O3ZpbP0XownviMNvX/fb7OmL5
Qce8n3d17QO2WO9waZHgRofFmIt9U3oy13ndbbyGAb//tvxwccM8d37YfW26
ZbO59BtvkfP0o9956LH+IH2+blwfNI7MjrWQrovZivGkycoPEx2mDkxW/E0u
Tphc7aavmR/3iuHZ+s3WXtUXxvcffeSu4/+51vFBdOdB9apZEUWiz5o5x7sn
v6/S55vE9V7rPCdszW4YT4r4Fxyxc8LCBQcfBDcs7Y5zy71nnvlq/8v6m7J5
T3+bMu1Wdu746r+Xdz+xY7Gnnrw7Rk8//YwV4w4Hrh33xtXSp8OuUZZ1sGmW
iafv1e8H/4NzOc9y0ryFhPiFc3r/6ZYcG/UA+P/DQ1/ThxF7s62lI85dvDA5
9olJsUaTVi7MYhY/x3lsbOxDn/fXYXsOzaepeyspKl9eWLzia8F0NguPuHs8
xcbG2fG0a5E4j7sHrhbcbfwwWfd0k/38XusRnbKZH91JZajXB33V86RFLuCx
J/96TvOY/9TjRAb4MmzWkJOdM6c+jwtdikz0xu/wg/3++V0xiLv7XB90T7GY
qUMa5277g50fxln54TCjhCNPP+3OZcu1pf1h3nPYo/Pm8Td//4xb2/ef+Da+
QfN54um/c2uf99S3OBi5iKyKdTR3ChttYF9SFd57d/PkMzP/N/0T835AfEQQ
C6Zp02xfUp+//Z/unws9/eQ/kRzwLcqUsrvOdTZ8bX2emVufDrvNsh7feewH
7PJaxxnTHiZ0O2guXc2Vq9EMmbxRBzyC+sAaVj32jx7xnvfoo4Tv96VTV4tZ
XcqgQW393xBFpWW88OKLHvv8YN7fEhD+IrKGDcgb9tA1qiQkbjXfn+fOxQWL
FuGbX8xffevx2ePgmZm4xdkxuFuc3M/X9PEdNYUTWxfWVn5YY98oOGK08cBo
tN+3ttm4Y3QcBZcsZvU1Ss4t7UaT08fJKUebvb+jn+1of5bzGSbMRh0ddckc
LvHmau0mSlorCayvYvXSOkIKOqnQ7EDVuhxl41aK6jZRa/Qht2IV9eZ9tPUf
EuuziUL1RgrrXkSjTyOlZJzknGLGRkd4483XGD591vp5t6GlnOaSHHq19QwP
zp7Le8L0se/+LTERR4gO8MZoWIQ+dQmD8p10VzxBfnaUbc5Gd21xw8TkmrML
L6P9ntHe3yjxtbU7cDO54epYLyO5cTHo6hZwTsRoVmIoaYdWUxO3jTe7A7lw
Jgtt5VpOHHwRtMV8mLqb21GruaMK49DubUSHHKa0uARNvZzGklx0LY2YaxU0
1Ddy/uW3ePuDD3jtzdt0jI3hvSeUg2E+aI/up67bD3nTVnJrV5Ffu4G8mo2U
te+lpTfa+n+jTr2q5P/mdd58txP1+RsU6bvYtK+eCHkSHeUb0bU3YzAakGq0
0eQWo5I2owRP0wyuPAg/XPpjlLyD8zgpMJ90xLkTf6Pt3BX/Rmebyc4Doz3m
jZJ7RqNJEvfGaWZyG9ONIyZ3/9GyZJLz4omP2UtweBLLlVqWhtWyzLtKrMVe
Go2bKar1Qm3cS7V2J7LajWRVbqC8bSeq5q2U1G9C2b6a1PQd7NsYRFZmLmdf
Ossb77zGiYvnrL87aapSoVMX09/TxtCQcc57scWCg5+kNGs9dSVxTCjmU5S8
kOaygxiTn6BEHe+KdwkWLv2ZiZkLRwkWEn1y0yEJTiYn5jZ/VUkk5dVbKc6L
ICz9MEmZfiiqsxg/m89nF4MxZy3npfJdfKoI5G3Bm/MiDxor2EpG8D6Rv0RT
oyhG01BJhaoIk74JU30pKlUlN954nc8mv+TNH/8Mw+AA6728ORzsh+nEYcr0
m8Sa7KRGF0Z+tRfpZUtRajbTcSIS7UgYZ1+uYPSlFEZvabjy8R9p1bzD0qAB
Eg8eoDd1Le269mnzmq6ZkpiVxJ/l3FN+OVdeOPYOR7xL18ah60bL3uHghycz
zdL+Vc1097Er6/rJjs6gJHoR2xLzWCQ3svJQNT57sqgbCqFe502aajF1HX4Y
RkJo7NpPTrXgSNkKK18qNbvE/rGWap0fpaU+FETHM370Mq+88wkXL10Uc++k
o02NsVFBf1czI33tzr8ddy9LDHyG/rxVqIof4+T4ZnpLQ0nyXkH4IX/qLTpa
mDYt/j2bp/v36uPkmwQ/aR9VWjiluRsoUsRRr9zGxbznOD+WR2tfKNcan2M0
dAEv7VvBtcjVvBqzkbfCN3BFtZuk6ADyLb9rXlVMVU0TJUoFA6YquhqV1JeX
cu72HT779W/58Ge/FPu1idUL1xPhtZP6Hn8KW1ZSIPbrqvYwMivXkF21Gt1Y
KE19B1B37EPdu4vTr8XTXtnL6NiXxLd34h/fgGL1JhqzfDFpW93m4NKDaXrq
1GV3vf4qNbGlr1teJHm2fb+W8MNg3ecsR6PBKM6l62Jvt18bjI77030NrnaJ
v9UM09faft9g72Nw+esN4v2StlIX9SKr5JUsyWhidUwN67Y2UNq2l6q2JWJN
NlHWso1qoz9lYt+QiVzLmm/p91DauAV5qxfNxoM0NkWTkhKJvuMYt975lLM3
XqFzyPK/iBvoqC+jr7uesb42osIO3hPPopznyAxcTm5EJGcvpjPet4dBYzyt
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
3g/14laWDx37nyI/eAdlWl965E9Tl/gsN8ZW0iviIyAmh8q87ehbMr/yvD1r
1exW1VjPvgP7GU57nH85FcqPP1Nxqi6Eic7dGEpfwJi9kFHFej4q2sf1yE28
mevHR/HbuRm0kMJ9L5ISE0qzKh+VohRlSQ6leVmUy2W061sZP3OJNz/6lBOX
zhOZlMm6jdv50fs9/ORf+ilq2kOtKYDy1kAmrmdx9YMyGrsPUK7xof9Cstg/
gsUxReTBL1KnqyIyZYT4Q17o5EfQ6zQetfL+bXYNN8zwMczSPivmEn7orG06
t/s657lO6qNzv+d+Lkxnv9bdrY9kTJ3D13Zt+d5Mz2AHalUSTQHPkJZdyPzo
o+zNChX1uYGk3H6Kq3ORVa9C2bxW1BvrrZ/vFtdtsB7LWrdY65KChsUM9Bh4
5fh5QoN2o1K3cEPkCn1DIwwc62NQL/KJ5CTU5dk060ReocwjPz1FaN1+hvZ+
j9/LgvhjRzHHtz7JyMbH6Az2YSBjC221C0U+tYywjCihhYG8d2k/lTl7ORK8
gfamPA842ualmzF3ybnO870Z2E4f095PKeppXVcZo0dj+NPv1Nxq9qa56nm6
EsW7Wr5HdyGEdzsjOZ60js+z/Lm8ZxEXDz1DY/x64uMikKvqKCxUinFykCVl
kJ+pEHmblqHTl3jtzjuMHT2Gz4EIkgP3CX7UcfmTUhp7gtCNRJFb4cWlt0v4
2R/70IyEM3olg7OvFdMm+DH2Ugqnb+UxfOoM4XvK0BX4M1p2aBaMXPHjds8Z
H7oZOLrF2ywY3RvHmWZ/xqROp5u0vo/O0qazv5v9aGlzXtv6ONbDdm7z0zv8
dJK5Ocdz54bOMUfn2I740NnHsI2pNQ1R3VZPU/RCYtZksi3UxHZVIWuT64WO
NZOhTBV7+3JKGtZSrdmJWu+NvN72PRCLFdZ6kS34M3HiMMODMnz3BQlONXP8
7AX6J05jHh2gr1NDTWYyNSK2qmqqKRFHhcgxdvvtwrzzUaiL578MBdxJ9sW4
/tt0hG7leKEfbSXzONGzhe6uQ0Sn7qctbQ3G/OU0KJ6kuT7fOkedY94SPPU6
6TzdMXRi4NQT6RpIMXStlc4eNxbflsJYFGN6OrrTGNWso9vghaZmKZriRehS
n+N23m4u9h7gaq7ItZL8eSVlCx/rfKkUnI5MSKFYUU11eS6qigzk+WnIimTU
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
nuGuSxZu/M4an45109jiVaOxxaxm2npqLPemj6txxbjGsX4aD/cd8TE9Rqbf
l8ZBextJSYlEBe9lfngjT3uryFA0oTkTS3rRs5QK/TaNhaEbOkT38SO09Own
r2qVde8oVK8nu2olZy8EUlteQl6BnnMvXaVV34Wipo7KJh1tnT20tJZTmZdK
Q3kB1ZUywsJ34pcYhqZkL6PbH6FnzQ/o3/Ikx3Y+z5mY+XTE7qY8LQ5l+SYU
OU/T17KGrobVol5aTlOjB35IMXGbu8YNV8c9J4ZS3ZiGi9RqBK+zN/owpgpi
aHAjV04EcXXYjxbFQo4HreR46loujQbwYaovP80/yO+TtqFPPEBNRy55KYHE
iblUifqrSFZISW4cRZU1qPX99A32c+2V69z5+GdUNTQRFbGZ1Lw1pKpWiNxp
PZnl66x7SJjIpworA2nvTxJ51Q5yFf4ciHmO0MSnMEwcJMI0SniinP6iQ/Z1
nqmHHnV1FqzuqR0PSYcs3BDx/6l49h8EH/4gxrQeNZajVvsHW7vjqHFrs/pr
JfesfvZrrWUsx32t7dzRxzG2RuM021iO8e3voHX4av5QWZ3+n97PxHPwUMbU
0uz6qcTWiqk648GpXOWKqbKmPVOdE1FTPSdiptQ6n6niuk1TqtYdU/K6LVOF
1ZumShu9pgbPpkzVtZZOFRRWTo2eOj9VZ9BPKWvrp+q1xqkGbduUWl0yVVWS
O9VQXTKlKM6bOnxk/1Rrjf9UZ33ElNZn4VT36kenhve+OHUzeO3Uazm7plKS
kqca4w9M9eTPmyqVPTU13rFn6saJSIb0S/4frab1f2s1Uuxsc9BqpXjZjjZM
Zs7ZiZkEDwduDuw0znXQ/qG+pviPpkwvXjmey+efFE999n7pVGvTyqmT4wem
rqX6Tp0L3zh1vGD91KsJ26d+35A59X+Zs6Zu1UVOnRlTTSVnhE8lRsdOVdQV
TFVW5E5VFKRPFckKplp0pqnuobGpSzdfmnrl3Y+nSqvrp8J2+E6lZ/lOyZrX
TInaYqqo1mdK8GEqU7F1qklbNCWv3zsVl79kSjN0ZKpKGzilNm+bMtQfnVpz
8MRUeKq/5XcH/uRaY61zrrY52TGxx4HDz4GZMz7sWGgdMaOR+kn93Z/huNZI
Yt2jj9a1NsI+/X8BSrVjhg==
               "], {{0, 200.}, {200., 0}}, {0, 255}, ColorFunction -> 
               RGBColor, ImageResolution -> {72, 72}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True, 
               MetaInformation -> 
               Association[
                "XMP" -> Association[
                  "XMPBasicSchema" -> 
                   Association[
                    "CreatorTool" -> "Adobe Photoshop 21.1 (Windows)", 
                    "CreateDate" -> 
                    DateObject[{2018, 3, 30, 10, 0, 54.}, "Instant", 
                    "Gregorian", None], "ModifyDate" -> 
                    DateObject[{2020, 5, 12, 10, 7, 54.}, "Instant", 
                    "Gregorian", None], "MetadataDate" -> 
                    DateObject[{2020, 5, 12, 10, 7, 54.}, "Instant", 
                    "Gregorian", None]], "DublinCoreSchema" -> 
                   Association["Format" -> "image/png"], "PhotoshopSchema" -> 
                   Association[
                    "ColorMode" -> 3, "ICCProfile" -> "sRGB IEC61966-2.1", 
                    "TextLayers[1]" -> 
                    Association[
                    "PhotoshopSchema" -> 
                    Association["LayerName" -> "Layer 2"]], "TextLayers[2]" -> 
                    Association[
                    "PhotoshopSchema" -> 
                    Association[
                    "LayerName" -> "QMRI Tools  Martijn Froeling", 
                    "LayerText" -> "QMRI Tools  Martijn Froeling"]]], 
                   "XMPMediaManagementSchema" -> 
                   Association[
                    "InstanceID" -> 
                    "xmp.iid:73db1039-c23c-8a4b-bc22-0e890bdc5189", 
                    "DocumentID" -> 
                    "adobe:docid:photoshop:1b53660c-ce9f-b540-9f3f-\
0421ddc9c8b5", "OriginalDocumentID" -> 
                    "xmp.did:78517765-d5ae-1049-a795-83be95336798", 
                    "History[1]" -> 
                    Association[
                    "Event" -> 
                    Association[
                    "Action" -> "created", "InstanceID" -> 
                    "xmp.iid:78517765-d5ae-1049-a795-83be95336798", "When" -> 
                    DateObject[{2018, 3, 30, 10, 0, 54.}, "Instant", 
                    "Gregorian", None], "SoftwareAgent" -> 
                    "Adobe Photoshop 21.1 (Windows)"]], "History[2]" -> 
                    Association[
                    "Event" -> 
                    Association[
                    "Action" -> "converted", "Parameters" -> 
                    "from image/png to application/vnd.adobe.photoshop"]], 
                    "History[3]" -> 
                    Association[
                    "Event" -> 
                    Association[
                    "Action" -> "saved", "InstanceID" -> 
                    "xmp.iid:b2cb8151-47fe-d44d-b13e-2e095099bf79", "When" -> 
                    DateObject[{2020, 5, 12, 9, 34, 14.}, "Instant", 
                    "Gregorian", None], "SoftwareAgent" -> 
                    "Adobe Photoshop 21.1 (Windows)", "Changed" -> "/"]], 
                    "History[4]" -> 
                    Association[
                    "Event" -> 
                    Association[
                    "Action" -> "saved", "InstanceID" -> 
                    "xmp.iid:5b614a8c-a0ec-9343-8276-1c7e613508a5", "When" -> 
                    DateObject[{2020, 5, 12, 10, 7, 54.}, "Instant", 
                    "Gregorian", None], "SoftwareAgent" -> 
                    "Adobe Photoshop 21.1 (Windows)", "Changed" -> "/"]], 
                    "History[5]" -> 
                    Association[
                    "Event" -> 
                    Association[
                    "Action" -> "converted", "Parameters" -> 
                    "from application/vnd.adobe.photoshop to image/png"]], 
                    "History[6]" -> 
                    Association[
                    "Event" -> 
                    Association[
                    "Action" -> "derived", "Parameters" -> 
                    "converted from application/vnd.adobe.photoshop to \
image/png"]], "History[7]" -> 
                    Association[
                    "Event" -> 
                    Association[
                    "Action" -> "saved", "InstanceID" -> 
                    "xmp.iid:73db1039-c23c-8a4b-bc22-0e890bdc5189", "When" -> 
                    DateObject[{2020, 5, 12, 10, 7, 54.}, "Instant", 
                    "Gregorian", None], "SoftwareAgent" -> 
                    "Adobe Photoshop 21.1 (Windows)", "Changed" -> "/"]], 
                    "DerivedFrom" -> 
                    Association[
                    "Reference" -> 
                    Association[
                    "InstanceID" -> 
                    "xmp.iid:5b614a8c-a0ec-9343-8276-1c7e613508a5", 
                    "DocumentID" -> 
                    "xmp.did:78517765-d5ae-1049-a795-83be95336798", 
                    "OriginalDocumentID" -> 
                    "xmp.did:78517765-d5ae-1049-a795-83be95336798"]]]]]], 
              Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {200., 200.}, 
             PlotRange -> {{0, 200.}, {0, 200.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"QMRITools\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"2.4.5\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1: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
vVNU4BwpQTiiSHJhT5JHOVPcyCLxoqbHH6G5GoivMCR1vRmSqo1IbDFHNKnf
GZnqMPW+QLhxFU6RUrANkaRiSWi8BHoGBwV+eG3/TecNz6a061meLh+7syJr
V+5H6RNuzC4L7snnxNzKaz5PZkV4I+APT2dO0OefryjPJiamYOlggOJGJcz+
oRTdS/FIrzGj8qf53xWhazYKJQ+cUNTmQPIoPVh63MAugvFX5cOLZMfH/wE7
9d1oS7yBEhJDivxPoDvrNuGFErrz5NESd4V6b70u4gza4q+gmnECSUEH0Vuq
ii9a9EjOfQEHP311bq6Uwwe2QOqmKZR057B3hxkqS5tE7Me1FffMYmJicPr0
abHv9f7722C6/yPEbzmAx5fO4u7eT6H51o+w7/0tr8WWL5Ot2z/Gbf3bsAk6
jJgSfRI33BFTaYR0wo+SFhsE5aiTfEub5MymCMxSRkW3L7KarKFjcwkf7Xjn
pftzbMOxER3Ps3wfLsDfnAC7cyJ2Fvod7tpZwdq5uVX45fFjbdzzZeYl868q
k5NTJIYHoaDWAFmtPhj6OgGNfX4oIbnqGIkfnM8Y1vd4Q9P8FHbsfe+NnN2h
Hf8JG+VPCT+O4PtBH3xJavLm2MsYJDnBF+3WGCK5b0v0GZQFHkaayzXCl+sI
tT302u5/TiIOlpaJpB6jx1ihcM79dd3L8p0fomEP4cq//79/E16sJQeOfQIZ
rf2kbtdBDakrUypNSJ2iT9Uk4QVaYJL8KzRXE3r2Vza8N8dW/NzllTA4RxOa
7+bHHXoexJun+ME5K+q8+PvMrMWJmRV8mRHRF1nDu175+p719aKRxOZykofW
9vihsceN4gcn5+TkUhx+eIerv9Qur/rzoj08DA/id9+l4bsuR4yVa+ILUpuz
Sb3x9QN7FJC6JMtlG5pZt9EYcRH7Pv3ha8PL1g9OwsmrEpNTM5iaGCN12ZSI
rTcTN1bKoR/+AB27f4o9//76Xv9meKJje5nU3gZIJnEjJEeNetZVSPIFTr2x
fe/7G96TY6vX4bdf4P8JN2aWZygdgveZGQr3In1eS+F/ZoaH/RmKT/x13D6X
LxwdamyWpzcr3Ce9pA76VndQ/EiH1OAhaBxKxL0Bb+rZVUadKcmnrm+KDxvl
ypVL+5AdqozhUhI7WszxXYc5atO04OkgiVrmYdyPO4XqsH2v5bXQ9wj0KKBs
MzzUg8nxYZ5v4drvdd+r58SB127Ljdx/pRiTmBxboU+9l8gRzrPeMNJu5DXS
dQWYE/jjGZFWBIczswJ8C308H6uzgpa2lsuPmRm8XGbXnZvl92fX15+enkZZ
Wjr0vUJQf18fQTHxYNXHoGnQifrd2oQChzfCi1c5uxg3CTSTnOpJ8gXUxkkj
jXENX7SZoTdPDiXue147Zi8cksBkdSpGh/owNTMp8Dsx0TGv/V4L8vJ/c36s
91r4Yul1C7kt9ogp1UN4oRacWFJi84Py0TOzItibFWBR6L+FPn6WNi+MBfRW
4NNnZ9bhxzRPVo69Co9onKD1p6amkJ+Th5K+TjwcrwYz0wTpjfbIbTKFnd/t
vwk3XnRmhgqfICNUDh2JkniQeht/Hg3AbM0d3A8/9doxu3fvAXQ+eIbBvmci
9lqZW72Oe80qKf1d+bHWa+KIkuFxlD50hX+qAqyDL4vPj41gkp8P0X36i4Vw
Y3qZ897EzDQPz1Q7LYLt6Rnu2AxtnK9L8WZ6RV+wRiicsZbyBESXp6Jxdhid
U+GILVGBG0P5b8qN9ez86YfvIjXBE0XRSqj03o2/LLNQnW8HP7srr+210fe5
186zL8/u06R9E/dpP3D4H4IfK1/XB9v+E45h1+AZLwOXKPHjx/RKTE/PrMLu
2j5+etW6tfhB8p5lLh+mqRxomuIKjy+rrmdo1/w1PD1+n7fPDG0/vs7znhZU
tbmj+WkMMup9oO8i83fjxlq2zvU9h8Z0RVhrHMPyYz3cLXVEJOPOG8Et3W58
e76J+5Tv+OQfhh8rX9s1lb2wYUjAPebGJuIHHWc8zE/z/DgPh3ysCuemhbGA
p8vHr8gawo0pDj+mRO9Bl6kXzG1U+vu60dDmgrzaVKgam/zdubHS1lRurHAU
RT6c3yc8jqYUKYy16r8hfqy2z5u4T9eV8393G6/32j7e+Q4cw6/BKWIT8UNc
PAo5sEJm6H6eGz84HFiHB1M8oV9z+1Or9F72mroe9MLerxwJ90px+Pi2TZ3b
WjXE69jr4/fegb+NHEqTbVHodAn9CRfeCG6joqJEbMO5fhP3+Vpf+x+KH5wf
+uuR0zsKi6CLYvPjVXC3CSH8mKL4wamf+ffi9EVaWhyZIrzg9Kf481NTvDne
et4+9D34ez8Znkb+k3b4Roh/Zi/ixWZ4Ql8npaCIZtZlpPiagBnp/kZwe+rU
KZpdp6jrN3GfgeuSYmNvoyLO6+PEEEPv45vjB9+3Twn99hQPj4J2iu7Phbhd
5e9pe3C4QdYtC3EuKmuNcbG+zviaMs2TKerzJT3tlTh8dOM58Zs+N7r+zm1b
UM+6AH1GJDyS3V6r/xU5W5qd3tQ9cra8t6G9N2Nnce1tH7Ixf7meDYV4E2KX
mxsJx+mYnH45jpenJqeWJ6n+JG+MtJMcmQJnnJqbnBKZm5wUHZ+cnKTtOclb
Nymc510P987AyHLjz/jXOoN9Rz6Ena8M9d276bXGaOj3hXeEBg4e/+S1nJmX
zWVkRuqjzG1j+dXLdNY6W449X/UeG8VP1tZ/fH64pVi9Rn7Q8bppWZ7k8YOD
cQ6GKazzOEBxhD8umBPygT42RVvP59skX3eSN06uDx7eWCxdaQ8OLyLTzanv
vUqs0EXlY1fqu6kzCU+eL8ai57N4wpvbOHNx/6buc+TAFrREGaE03f+N8YNT
c3BsxWKx3hg/irZ/LDb22iJk0XQ/Fp8NsvB9uxLGq2Qx8E083FKV4UDq6uB0
FdiFXIGiwTHs2PdTse/jzbIWnx98nE6J+uiVHOFjmO6T1uUUD89cfkwu07kh
yg/hmNgyMSnCvc1x4yPkt1jj0Uwk9X1yGXUmKHvohDQSPzjfWX1/IADNgwGo
ee6Bns/jceLcrk3dj92phNL8jT3f3Qg/qBqE2GQjtcdG8VN7cK/Y2Etk+KAp
yQjj3U74bomBxIwCpGXrwy7gONxibiI0Xwv+qXLIbOR89lb89/icmAGbiB9C
3PP9Mdd/T4ryhDc2OSWcm6T7+kl6fiTw/4QbExzBBDU+IcD0BNWfWIH1CRrm
J4TXRCaoNcK+YM8Jbsuf20ysD4rTp77bivM7uZzfH+T8LlVOozkKWmxQ8sCR
+j2rhj4/xBRrwjv+OizdJVftsZF7Tnc4IcNr92vlx8p7iGOTjeyfv3Njzwnp
uvXJKgi2NERVkTeiwhLg5FEAz2AnhAcdhmvIBaQ02aKg1RGxpQbQ2+D7qHTd
chKHxF270rcLZGpq9RhNXuz7BWuXCX6XJya4WJ+gsDzBxT8H77xrCt+8eQr3
fP5MCIXiBP96coK2dkKw10byiJV28I7QRDbhgh/FDw/UPvOi2vgybe73jHK+
530qBCl37yA0SxlmXscRWywHB8Ytse9paaKE3Ewbsda/6j04dtlI7Njo/yH6
x/8h9v//Qdp5+NkYwMfZCeqmFljsCkZfbzJcGPvhkSSH0k531PUFQdX4zKb8
UHSurPj84GNV4IOF+BX4boHPpsUAmkxMCOPDBG0/0nK4sSzgxpsSHk82+gyT
rsv5nXTO343Ku2+J/i9InOjhxAkttI2G4G6XO7Lr9JBUYw+vND3oGelBwdAI
FU3GaO40E/ueB3b+BMOkvvln5kf6u29vKmaLI6/yQ9d3TBI/fgh8O80P8zHO
99WTImM0Pgh8/qTAvwv9PKVH8WN8TVyPvwDz45RQ68Zp4+Pr6PPGN2PDGs7f
ymkwR16zNfo+T8LnfyxH0l19dM2yUP7QET4Z+iSOBCM8wwQ+/jfgE2kN3xhH
+Dv6beq+kzXi+bZX3Z8VubHafKP4aTpx5G/Kj1f5oet/uutD+KWYboofL/PN
ghxncm0dIf5peRK3XR4fH1+eGCdYXyUTIv2JVXMTNI7wxifW2oc7ztER1wYn
z+5F13wQ9b27nO9xKO10xNh3mXgyH40Kwg1OrhVX54K+2QjUtpoirOgmni74
I7RAE9FZ2ti79wPx43ediVhrX/n/tsHafKOv//nVS38zfrzqD32NmtV1eKSq
booffCxO8LHJ60/w+xNCDHIxysMsb+04H8erYwLFjzUx/QZEXBsExvni+Zdl
GPk6Ds8XYvBwMgTVT92o7/7h/J21jvFQPJkJw/PPYvBgKgyhOWp4QMaK2w2Q
VKsDDVNFse/9ZVeg2GtfVW+j+ht5Dc3nX89n5l/nD/31FJYbg5lrIPb/j4+t
CYE/F/rrCZqPF+0LOcO/FvYnBFzhcYPIGHft2Fq45s+NYYw3Nsbv8/XH+P2x
dbgxRonYNuitRctMDh7NMvDF/+SjcywbHgwrFLSaY/CbFAx9nYq53xSiZTQY
T5YiUdHpwv27B7VaiK6xhLqd+Bj/rHzjz3f/kfjRuHfjz7jf5A/9tezZtRVF
Wc6wyzLaND/ekCwT3C+P8bBNtQT7FBeols8HnvDwT7VjY4I13Gs+b8ZE1gj2
3QQ/kvPy0Pt5BokPgZj4VS5qnoaioT+c8CUUvZ8lYPjnuXj+VRxKGzyQXmSD
mHI1OIVfQUSWLAoeaMOMKV6OxJGaAnWx176q3pvkR9nujeWWb/Jn5f9X09kD
EffT4FugJj4/6H55lX/n45Q2JtDnY3Z8xVphPODwY4zixyi4MrYxGX9VXe7e
4tqgbigUjZNj+PbP5Rj4PAL1/R4Y+1kqhr5NJzHDB0NLEah65ITsWls4Ossg
JFMBPikyiM6/jdw4DQR6KIt9784c8Z9/varem+SH28mNvW/3pn5W/l/9w02Q
0xUHRmE4DHzF//yVCBYFeBwXtmthVMSvr8DyOG2ecGOUEoLf0TFw2lG+/qgQ
14KWozMqvI+gL2hXcmxUZExcG/R+wcCThTK0jLSjdzYez38WisqaIPT0klzr
s0y0Pg7HyGIkctutEZwuC2a6EkJyb8MvRBGsiAD4xjDFvvdEmsQ/NT8Y7x37
u/Jjrf9ndKYjKmoiUZiuCo90fdhHeWyKH6M82bB/f7ksj46OLo/ysE76Qhnj
tmP8/phwboyuNyo6x73mcoO/J8Uf0oprgwcj7shtMkfk3TBSb+Tg2VIoEut0
URzvT/CfgIb5GHxJ6hLO3/AsaLUCI10B94a9kJFmj8JcJ+gGBIl977sx4n/2
+nVhfiN7rtSv+Pj9Da19XT9r8YIj3m5KyOqMQkiCL7pKjRFSZIfgkI39Dhpd
d3RUiDWB3xbkQzwZFfXlq/g0ujp/4u7B48dKvK/E/QhP1tMTyIiwv4a+uDZo
fGSD7FYHVD6xRd1DH9S0MFDZ64D0UhVkptngQXcUuoaTMfpFPsZ/kY24ci3U
PHNDyxgDLcPpKHDxFvveuUEb+5zjPxo/Yrae+JvyYz1ebNv3Hpy8NOGfGQbP
eAPkddgg4a45bK3dEOG7GX7wchS6fx9bo10xNkafX18IN0aWR0ZGKGxzWkrI
HCUjo4Jr7jx3jOpTOlz9UV6fw4mRUf41hyO8fXlrxbWBibMkGvp80DUXjuIW
F5S3OKN1JBTJbZ6ofO6Mrs5sjC0VoHMqFK2TgWh45kf9fdusdn1Sx6eAaSn+
80P3mNB/an5EfLSx57vr4XsjPyvXfrrnHeRXMsHK8UFkmRHC8/PRdl8PjBR1
RBQwEJejID4/Rvg44/rkEZ5fHnkB7rkYHVl7XnQ9hxvLAl5sQEbFWCOuDfYf
/Rg1TzzwZDYaX/21grRMpNVZ4sFMJsJTjXHwhPAz3IdPbIehwxUEBakjNE8b
+XcTcWjnxj9jyBdL1ax/an5U7RL/vdHXyRML69Nw8paCZUAAPAq8wGSdRkK1
HwIKWbDzF//5idD/8n071xfzeSPw2yMjPOyv8N98n86PC4L4QM29gB/Dwv6w
6PUwTW/4RZwYFtXZqJ3p+jXPPJDfak3q8wT84g9N6FqIhEeI0rrnuG3buzAK
uI7A2qZN3dfpivjPr14V+69zv5VrKk6K7xs2y5GV6w4fVYSepx3cUk6R1hbu
8TpwS1KGbbD4738IOfFqvpyfJ72if18eGR5eHubgeHgYnJYrw1w+0PrDAs5w
eULp8TgwTHFgeMXewyLznLGTJ06KbQfO7zxlNhojPEUbZXV+mP1DHg4c+/il
Z3lFSvxnh/u3/wjpx6T/qfmRdFL8z50n2V8Cy+UMrpzf/to4oqa3F/Y+OrCO
0AUj7QSs4oyhxbLbHD/W9M0r8bjS16/w98NrxAXCj2GKH8NcHvBagYwM03hD
b9fRF5GRVWNhYWFi22HPoa2ILtJAz+dxaOsPg47h1TX32qzvo+vqSlzH3RMO
Yq//R+BHyccb+35Uum4YyXs+q5XAH75lQVXL6bVwZNsn/wlW7CUEp5yFS7Q6
Al014eamIfZrXIWzEX67Gn+iOlyfzsf4yIgQt8L+sAg/hoc47RCvz2t510OC
eU5/iOrzx4aGh4U6vDVDlPDnSZ+3dqP2XRlDnpC86vF0JI6e3PnCvV4HP5hy
Yaj1qfin5kfqsY29/0HXNbPXxUSRDH4zaY6kNH9c2Gez4dey1r4KOoehG2QE
lzANuDroQsXBeRP8eJGP3rQsE+wuc7BL4ZfDiSEuroeGhgRc4OKbJ3xu8K75
POL3uev4erS1PJ3N8IMjzoEKcPB/tc+ci3OWdP2ohCg0uOhsmh8ve42va6+1
1vmryYnvH6Ij8bBAD/jCDFXhwZA9l4aTFww3zY8t29+HGUMHKs4MmNgZQMdG
/OeLQn9Mw/WQ0H8P0eb4PpqPSxF9mm/nx4FhihtDy4NDNPxvSAZfOL/WvidO
bPx5/Ep8cL6jYaP23Oh9duzYh3K3ABTv29j3D4qL6de5l4g/ua4r9trZ4Vw8
bIvBXxctEGWSCp1TTjBmsfDRJ+J9pou+Rs14LzytNWDnqQXnePFrPC6ueBzh
+fkhQV/oswW5DM3P89cKY8OwMAZw/TnhxuDy0CDB8uAgEXpL9Dj9Id411fJk
aEjQUvsNrtahuDM4JKLLmQ8N3dj7CWvZZLO4e5V7OHvEoEXFEfc/ej2/X7TZ
1yPua/DdJv53E/5/k9aor8vH2EgSMsOS4HhADYm5MpDROSzW/4+uv337TxAU
dg5O0dJgRYv/e6UcjHExOCTA2ypfzZuj++1Ben9wUNSfC/WXydyyAPcrZWid
8U2KODFkpV1eN0fo+106tR11NU/QqOqEmTMb+/s4/2j8iPxU/O8vwZAGhmq8
kTf2Le41P4HWj3QQG34bjkln4BC4sfcs1tpfRnc/vCMvwiN4E/FDgCsevkX8
Oh3DQp8/xPP5VJ/mu/l+fZDv81/Gj5fKAAYHXjLPaQcGaXoDYseQlbZ5nTyh
7xPsqwA/pwh0X3bE7/TE/+z1kZ9u7Duh1ttno/6Erut6Svz8arHVGP93wAg9
I7EITKmA7clo1N0NgFfKJUTVmeDE6Y1xb+X+HLmlcRJqvuJ/P9xauBvaAIZf
qEtyq4GBAS4/BrhYJtdEuO0g1dLmCLYHaLwQ1eOtGxTVp+Z46+h7iRtD1rPz
69rrxJ6PYHpHAqyLsvj8+FF8oyf+Z4Ns9v5Q7NdFXxcSIv5nXLw0xf9sbHmW
M2b6/PE85ybCVQzQ5DCO3vvliG6/hbB0RWiqSYtle7r++9s+hibT8rXyY4Df
p/nlARGdgfU5wcMwF8dcfnCxPSDCDb4MisytFJ5u/wo9Dh8G+tH/grUhISGv
1f9v5mctju3/tx/Dc9eHGJaUFPvsRi6t/R7NRl8Tx7bivoYmQ/F/v6s+0w4Z
hYGwiktEitRtLCcVoupBGqKLlJETfw0lXQ6w8d3Y87G17iOtdk7s17g+NgfW
wbHQr79Il6e/3D/Qv8zBtxDL/SJ97nU/r88d51z39w8Ixvr7B3g6nH4/xRfh
WtoYT/j7hTAY/9Ac4YjP1o/EPru/aIn/t3VEMdAvPn6Obez3a+m6z7rzEWjn
iK13WnBHNQJ18a0oeRKBwDu3ERPMQHCSFfwSOH+z/N1NxZC9uza2fqVthFjl
43Pghb755SLYa5lglyNYV3j4pjggGOPgnSsi47R5PidetHdvby8UVVZ/hurv
+bMeT8Q5u/8x0Xst/OjfRPy4e1n8Z0NZDwaRHJMFyyvhYEZlo7ygC0UF0QiP
loSlTAQs3FyRTWoUMzu5Ddtp5b3E5gcPo3yfLIJXPt55PlnIGyGXBmi+nYvX
AeF+XG68mB9E+vr7iLxYZ/21/by1favmup8/gaOaCqzs/nHiyFpnIO7ZITIc
pz7Y+N8Boutz6jSOrcR9DSnS4tf2FWEsZCemotSoBP0lmWiqLoKnfxoiC5Lg
YmyJkrtGmPw+HU0TgdAy2PjfAX0dNhb6ZyG+BDhf91q0XTMmcHm23NfXxxGs
lH6q5XGDtP2c/iq9/hX6a+3TL9xrjfV+zCyUZ6TDiXFpw3Z60z+bPbvfa2iA
dXNj3w24cg8mk0mdvdj8+OmnYq+deOiNvOhcdNh1Y3xiFnHNz6FhlAgp2XCk
Vnjg/jNHpJdrobqP1CFhhvh4x8bfN9w0P/q4vKAwyvPlFOYEuO3jcoc3T2GR
11KY7udhm8evFS2NH71r4vtNi196JRIKAlHUaA9Ll9XPQ14XVzaT34h7dl8q
qGPCYGPPLlfuwfVP4vPj/r4Xf07tRWtHhiMQ6ZYOT+tKRDeOglVYA23tfHgF
OaK0xAWlTz1h5eGE3oU0FLXZ4JzC5mv1jb5GCkf9fTw+CH31an/dTxvrF6wT
cmWFPsUpwo3e3mVOHcAZ6+VwhOpz2j6u8Mf563pXcKmXq9u7kl/89WS+l8c/
etvLm69qaIJjUBwqnz5BdL45NE0lVtlLXK5sZj1d/+yK9zFeRU785Cf4XlUB
wxZh2Hvw6IbXc+T48eMCe3L6G11/5Mc/Qsfpozj0ox9ueO3BQztRlJ6KAvsI
KBxwxi0La3hZ28BJwgNZHprIyLBGaJ46QkoiUdgRg+RKebinKGHLJ2v/faI3
IXT7vCHhcGOZwvAKoTBP9ftExyh8c3kkHOf1+4TXfbRrig99wn3o18+ePEFm
uAO+/r4UA59lILfdBU7B8th76MM3bt9X4capd99DtvT6cW09cfiv9/DNjfMY
YIbB2m71s+xXEQaTwfUnxE5M5uoa7WXit+MTlB68AqdP9mx4raGmMuwMauEh
FQWdT3Vx/X0d3LzkBYfTtoiP0INvgRQSK01R2+sOp8hrsGVegk+KFFQNxPMF
4giTwaT5aL6PF/r19YSP6bXzJp4f584v9/b0Lvf09FD6PRR+Sb+H0+eO9ZK5
nhVjnLaHxg/uetEx7lrunj28fTjXgvv0CPWKsxJxv4OB1LZ8POj0RO4DT8RV
mMIj5go0ib33H948Vz7+0bY1x1/Gj3Spa/i9jR1cfroFx0hMeNl99v37v8P8
nbeR8977GNlF8MnKR9zgl2AwGK8cAzh6HH2+/fh2etU9dv7Hj2B4dDdKjx5E
8pmreHzhFFinz+DQT9576dq3394GJRltJF+Og80pJ5gdcoH8v5pC7l0FGB7R
QHFCJBjhLvBiquLeUDByW6zgmSAJh6RbcIqXRnTUCUhJX8THn7zzymdz4Mx5
SJsG4bjUFWz54P2X6gvss4Zfp/vpF0vPi+e5exB+9FD8oDDfwxMK8728az7W
hfPUufHmheO9wvUCvZ5VYz1r6BdUNCGnPRWZVcGIiHRHdsUdRFYYIihZBea+
0ohIlkdlhwO0LM7hg09//Mp2/+l/vQvZ0zdRadGC8Ov5OPqvV7D1/3y0pu5a
3Dj+9jv4zsAAEzdl0HL4CKp37EDLkSNoO3YCuR9/gsIdO/H8wkVkkBhTuHUr
Sj76CLlbP0DO1veRveUD5P1wC57JauJB96iIfXtpfobrV3oEfohv316aDQW6
PT0CH9ZNJL7yIeoPnkEewYvbyTNII68p4sPjyPjgUxTv/gDlN44hU/YM8ne8
i2eEH+3H9qJq93bUHz6IpsO70LB1GzqsXVESnA7tDz2h/JYe7NWtERBVDMud
TjB51ww2ezyg844pLE/awvS2H+ozA+GspAS9i3fg7a8J9/TrcI6VgqfbZXjF
SMIj5SoUtWyg7aeJlPwD8PY9geuhfvByM0WW52EYeesjOEsC5iEq8Au2xuO+
JJRMPUNeeSacQ2Sgau+Nbj7uBPjrEfphnp/mzq/0xz0C/87nQI/AJ/eIjq2I
ASJ79fD3omLH8voY/ttISZYPBhbi8ehZKbxZJHZkKsAlSR3MFAMYuGnDO04a
WbUmSK81g4XvGdgGXYQT6wqCWKpgepvBxP84MiOckRibAN9MVfgESCPEwwUG
epdJnqCKHMNGBJ5Mxa0f3oHK26Ywv+D6SvyKOX8eDbt3o3jLVhR/8AGaDh3C
wzNn0XbqNNIJ90oIHp+fO49KwpNsEl8KPvoQGYQfse9vR+p7W1D4bz/A74xk
MPJ0iOZ71vYR6/mQF/mY4tpOtJ89idT/+iHSdv0EaR9uR97HW1G4bQvKSc2U
d2QbGMckkf7Tbbi77T08PHsCVXt2oPHQPjy8eAKPL8rga18n5MYFQ/a/HKH+
lgVyPW0Rmh0AlwvxsP/QHZbbXaH9ti5sD4TATiUIcYaJYFxNgIuzItzzLsLU
5Bb09RUQoH0WcSTeO6Tehof6RTj634CDuxb89C8iJOUUGFG3EcfUQHLkOXj5
bod1aByp9yvwhz8GoXygG8mFxTB2vQZzRzMexlf/f9e2Re8qHVHfQvc7K9bR
/JHA1r0ie/L40c297ua3PTwOd1N9fssZ66bdo5vod3fT9XpWtUL9bkrWui6M
d0BRjBnyHnYipDIEyXeNEZJxGyUddrjb5QhWgSbSqk1w97E7wrJV4Rx+GYwM
eQSm30ZggA78HG1Irq6I5BDd/5+6t4CS68iyRT3jaYNsQUnFVVKJmZmxpFKR
ipmZmZmZmZmZmUmSLdkyt7ttt/lVd0/3m5l+M//Nn7fm7R/35r2ZN7OypFJK
cvvXWmcFnTg34sTZOyKSClFVSfDJu40wL0P4uGpBX1MHzmrFCD2RDrU3zaC7
2Ql+h2JgdsAWyut3rIqNSOWd5G57Eg9Vb6Njx060qahg9MQJ9Ozeg+mTJ1FD
zk+LZ85h9vJllJO9o1JGDjXycigmadT2E0gne8j41s34Se0q+js/4qzL/TVw
xn2+7+6v0kZJUWMTlm6eQIG8AkLfWo/CY8pI3X0YFYoqqFeRRbXsFhRtPYrO
E+cxdXI/Prp7B/0H9qJRWQGtO7fj90Z38B+exii/GwenXREIP5eP7JBaVMW4
wWOPB3wPpCPyfCjsDmjBQdESaTrOSDR7AP/j0QjIvQoPD02YX9KFu/NduKfc
JXcSKxRU+8LP7DwKXM7D2toR/kH3EGJ8AbYRxvBINEVABsFSgTnee1yLrscT
6PuoFlP9TxCZVIKr5BxbmBW/CpesIivi7Nl+Xbv+g2US48u8OF+jLK1Fb2nN
9ihMLi0tITC5Cdldafj+5xQ0zYagacINGfUmSKnWR2mvEwrarJHWoIcq6n9E
xenAL/UqUht1EJx9HUkJdoiINoJTsD9i8iqQlEzukaHn4GymDWdrcha44o1M
3Qp4nAiG+huW0D/oDocb5Axw1AiqCgZQfnc7HxfbyT5hdOQsJgnHDu3Yge79
+/GIYOT+pUtYJHsFJU3KymgnmBk6RmJTWgZlBCs1CoqoJPtMKcFH6tZtKJNZ
j/Lzp/BFhC8yi2rW7l+Gc1jfrKYzPfcQgRFdeHTlJMq3qyBwpwoKyb6RLbOH
4IOcr1TIOW+rEsHIOvTtI1gw1McHt2+gZ98uNKooo0pBhux7ividnh6aTcIR
dbsKuRqZSLANR6JRNe68rofQYymIuJ6Gm9sd4KJsjzSrACTrFEH3LUPo7L8H
b2dThETqIyzhLrzzVGEV7YviEj/4xGjB9fo9RPnfxVXDONxV9YNJJDkL2DnB
IysKCYOBwHIiHj32RXTeEvq6HiOzxgGucTlYXJjD0uLC2uOH5VwR33F9yG1j
81zfPhDnax7/L5N4X16i4nlpiRfXS5zYZrCwxEmX6HpWZ4nW4bXz6tj2JY4d
2j7bztHl6xPpH5yAe3I6/vrfNfjkTyWY+iwNpT0OBBdWSCrXQ2D6NTSMeyO9
whSp5UYIImeugJRrSKhSRVTtdUT6WSA4OB5RlelkH3eHj989mN+8C6tr5Ex1
zB9p90oRcTENJtIeMDgQiLuy1rj5ljYM5VwQd6sQUSdyYa8WB5173ui+cg9/
uH4eC+fPo5rE/vjxE7h/4SJ+MDLCwqXLqCCY6N+9Gw1btyJr40bUKZI4JLgq
l5dFIcFI9GYVlG+WQrfiDnxhHYmuxugV3LG0Co8scfPiuIhTV1JcgQ+uXCH3
jU3I2r4FZdSdZ5cMKncokHOWAmpUCGbJXlFJsNCxdydGThxFyy7qDCaP+q3k
vLhnKx7q+KAooBCB+iVIOZuHmLP+iLNzwJ31OvBQsILlLi+cOxkJR3l/OJyI
gcFWe9x8TQ+WivpISTGBn6slPMNuwS9RDTbaRN/2FvxLrsJGUwPXTkfBwjEQ
PuSsFRp1Gd7W1rh0KhJltXnAfxShZyEcY9OjGP5wALlZe5GaWvWcPCIa08/H
zWuQZRLHvP2DiWlWRMsC4Y1hieF9Wo/JL4ngg9XntQny9+8vCTDH9iXlkrIC
tE2noW7UFk+Wy7CMbgy8H4EMcr5Kq9Wnfzsxp8oWIdk3kd2kA8coVVgE6iA0
/xwCU+7A1zUAReUBKMn3gNttJ1ieMYPODmMYKNgg9EI6bLeHwmZXGKy3euLO
m6a4/bY5dKXt0WQ/gQS1IlhfjoTD7Xi0nbqBh4d34bGaOpq2qmDs8BFyR7+D
sSNHyR1cCa0EF10EH7XbtqGO5OvJ+YY6YxWT+Mwj+0e+HInVDW/j/VMHsKRv
g46cGoZHlvi+YHljieuLJbaO47P7rL8Z7lpieWYBXQ1JaD3jhGqFd5Eqq4hC
BTlk7d+Nqm1KaCT3j6ptiqjeqkjGqUjGJ40ieRm6rW6rAi39uxVxX90SxUbp
CLoRgdTLlUi+Uo7yxDR4HvLFvW2WMNptCkMddbgcIWeqHTEwkrbC9de0oEf2
FPO9FjA5bADPhJuwOKOPQOfrMNC/ASdXdUTnXISxrjFSjXXh43QXPmHqiMxU
wxVy5ipp/APe+8sjjH6bjB/+VyoW5/yhpWpN7p0dQjy6xHLrkihXCHx4n6Nz
n+XeJYGe6LmGz+8iPH1/6b7ApmAdaHyIx8Hqsihatyim7ll9VthYRE9DE5Jq
EpFQcRnFXXYYfRKL2d+moXMhGF0LQajocUFujQ3iKu4iOcUekRnG8My9jPgo
B0T5WZGzlToqE8JRoNGAICMvmKs44oK8E+5JecBsvTMMFL2gfkQL2nImsNsW
RjjSGCYKbsi+V4eoW2UosAhExfVTqHpDFu9dvYTvrKzRS+4b35ua48/2DmiW
V0SL8laMkHv6BLmjt+3agzaCn3qCmRxZWeQSKSY4KZSRR4bUHszsPYJhLw10
1XG5YpH2l1CZzi+u9Mn9JUHbIteXPN3KsgGMnr+NCiUZhG86gVJZGcQeOoBM
1f3kji5PznzkjLWNwocSarYpoFBRDgVEqpUV0UDaGxRlMXNdA1MOGUg+4YZK
g0Yk3ShGrVUvBrzKYKhkD51tPnC0OATPq1YIP5gDnU1mcD7qA1/tCFgpBcNU
9zL8Kk8RvOhD66QF9E6rwVxNDbfcPeHipYVyizMICboF3yQD2FoaISIyFN9/
VYFP/m0Yf/3nTEw89EZGThi0jMNQ2TzA51wux96/LxovDBbE8vh9jg7rx/uc
+pU+ZvEi7He6vLy4uEgJKFli0mfJEjdd4smSqA1qHdl2EdvcfouLS3z9rqZ6
DH2cgtaHwfBNOIfsRmOMfxyPyc+SMfIkBu1TQYjPMUButz7SSi2QlmKH9KY7
SC02Q5pnJPJCIxHu5QR/+XIEnIuEsYwt7mxzg95xR5hvcoHeBhfcVdSGhrwZ
wUcotDfZwHlfCMJOFKDEpxf1UZaYvnYDbRsV8IPmFfx7YCBmTp6m942vDAzx
raERubOfxii5dwwdOky/hltJ8bSCAr13ZEtLE96WpV/7DVU6iPYjeqi1tcfc
g1Y6xnk+4fpFhEOYNp6vljg+5/EL35ckPzt/H56ZfWjUOoxaKUVkKEqhisR+
1tZdiL1wCMXHyJlPjmBEWQ6N22TofaSQnLkKydmqhsIM0Z08uBNfED7oy1mA
941y1GpUIPtqA+zPkLuGszfsNpoj7FgajA44w+KAIUw3O0B7nSkSbLKR5pcG
j9N+sDS7BEcHVejKmMLlijqMrt2Cue1FWAXeg7uLEaI9r8IxyRDuHia4ddIV
Y8k+GJqNxcQXMfi334eiu6cAOgEtSMwO4HHAIuuXRT6nsv6ieZj1EZdzFzkp
y9V8G4vC9UusLzlcI9LG6tP4WBDgY+2y8Jz6a5P5+Xm09MRj+W9pyO92RfWg
C9lHbJDbYo7eB6FonvVCeoM+cgvd0PS+PTLTPBEb6IbMdh0kW8SgzqsRWWZZ
cNkZAZ+DabBXCYWlvDsMlW2hI0XumHvCYKbgizvvmuLuejOovWWGMrMORJ4r
gvPhKHw12oOR61YoOXgZX0WU4MGla2S/UEQdibNHV67i91raeJ+6q99UpV/v
rSZ4qCV7R6mcLLmbk/O+ghLaNsugkdzVW8l9uUHDGIPhPhgfrRLE+aIgztfK
Q+Jkdn4OzuFhKNx5EFW7tyLiuAyKyP6Rp7wDxTf3o3rHBlRJb0CBwm5kKxxA
7VZZlCvL0/ioI2kTuZtMH9qL/woOwMPWCljtv4P40ynIVKuGprI6HNTJvW2D
K8LPJsJqkwd03raCzkZjGG22grGKDQINI+FxMwA6ykZwPukNfUUL2BvegbmV
DvRv3oPvicvwDdWCYbQLQv1uIFr1IrIyDVA1lQHLwCCMfRiMpS/isPRBCbxj
A9He07i6L5ZE8hzOZbmWlxfhlBVlEZ/S+zCDR6FnLrG2BPhY4MY9SRcWsEDX
c/L8NlaXqheUFxYWV/ZnZYHXvsB/ljDe2LbO/ioMzQfg03+txIc/5WPy02QU
d9uhvN8BhR1WKOoi59Rqa1K2R9dYFJLC3RHhb41UmziUO9aiVmcSvqdSEXI2
E6FE3PZGwFzWExobLOG8PxxOu0Nxb5MdTLe6Q32dBZJVy1FnO0y/vtnvP4fk
zSdQrO+FWrtyEutSaFKUweKlK5g4egxNZJ8YO3ESi+Te3kr2iFqCm6YtCigj
d+DUyzvJnWQP6o4SXCjKo/awCWKl92LJ0RRDw9U8Py2K+FjEP8/iIK4/F6Yn
kORmiZJ3jiHhqBICL6ogU1oW1fIb0HJqOyJP66Nk1zZUnVdGwVZy3iL7RSU5
hxWRtGG7Mrp3bcfDCyfwZxt7dJaMwMnMDxHX/VAcGAqHbS7kXu4Eu/NmMN7k
CEMpGxhtsYHBZhtYK7rj0muqcD7ngwiTGNidcYfzzRhoKGrARl0TTj6auHfm
HixP34NBpDcsE+1R7rEDgQ5XkVjqi/pGd2RnBmN0zAs//LUCHQvpyK32XyMn
L6zww8uSVbhoeWFhYZmOTTp+eULHLx2vvPgXal9cENLlyTwnT/rOc3VZbPDs
rrCzKGzz88fvIa+jGtnNqvT/8vj2/2nG4tdZ5M7uhvRaA4Tn3UZKwz2k5llj
9MM4tM37IcGLiF4yclQ7UG83jlLdKnI29kbYhRz4Hk+GqXQgtNa5wlzJC1bk
PH1vow0Sb5XASMYV8deLMej/EHZbQ+FzoRjt/qF4oGOGqrOHUPrmP6FVURnj
x46hTkkRRZs3o5mUqfcLy4nUKCqiXk4RFZvJnfyMMir2ySPx6GHEnTuAcXUD
JKrcQvZhQ1QXta/0G7XOC4wssmWOnxbZ/MLKtaHapsbRkJWNsmvWSFv/FuK3
SyNHeTPyyBibpDai+rohStVtUL9PipzzFNFE8Fyvoowimc2oVlFA775d+N5I
Bwh1QI99NBxvNyPmTAGKyL4wHFKA0CO5iPdzhtVOWxist4WhjDX0tljCeqsL
NN81gsabxnA6QHysTc6n+vHQOXUXDjraML2mAbPj1+DspY3zPpnkrKUPRzcN
6IRZoqHeCqUhhuitCsVUbw4+/Jc6lI9HYXq2H7NkPsPDs5y443CqSDyycbTI
cOoCy9ecuFrkxB2fw1k7QnUcXmc4akGwVyzPzy8sz1PxPT/Pi3MS29Q5Z35e
EPPzVLyLKzMpVZ5fYMu8/DyLEaqd6sPPzwv68p/Hy1Pp7PQSPvh0FMGF15Db
FoyP/1iI977NQ9usPxLLtRGacwuxJZpIrdVGTochJjprUOFfiEiTQCRcqUKu
VivybqXB+1AU3A6lwZ3aPzbbw2qjHTlzJcLxYBjU11vS+4jGOiuUm3ajyrwX
6m/aw4fsO+NxDegy0UfK/h14dPo8hvftQ/G7G1AjT71OqkC/D1hG7hiUVFF1
5JxF5Us2bUEq4e/QfzqIOJUdaPKwxOgNTTQcVkFXSz5vftxYnxeO+wW+j3jp
vJh2IS4i7R8/bkD9bS1k/uYfEbdZGdnyKmjZKY8K+S2ol3kXC5cvYfjMcTST
O9LA8UPoObQfw8cOo1RGCuUK0uTMeA1/NNNCW5IbEizT4aUQjusbddCQmYSx
oDlUaQ7Bap87TGRsoE8wYraD7Cfb9GG7zQtuZz1x9R804HsoArFXU2FKzlaG
17ShtVUXWhdNYW7nBPs4C3jYXMM1LUe4xzohrjAc9eXhGJxIxMhnhfji34vQ
MpZCz2egvwtj47OrzJma7+LqbaKyOC9UXhTnPyH9VW1R2Fhm8cDHBRvnTDwL
tTNxLNpnpd7CCr0Fjv35eY4dTt+J6fuYma3F0Ae2KOl3Q/WwK4o6bFDSZYeU
Gl3El2siuUIHOe2GSKxVR2N+JlrdBxF8OB2eB6OQqVmPwNOZcNkXBb11XvDZ
4QxP23uw9fZE6KF0pF0oh95mR1x/XR8Wij5osBtBp9ssrBWCYbjXE57q59Gv
exE/WpjjOx1d9O7eTe4TSqgld4oKggXqPUDqztG0dRtKt0ijhJSLFeRJzMkj
a9Nm+O87g9J3pFB6kNyRnT0wrH4OhU31/DkuiPEjlydYXmJ1Wd5geYXlISp9
9LgTxYe2Ie+N1xGpchTRO05hRO8Wmk8cQ8HGt9ByTAqTJhdReOIo2reqoO/g
bkycPIrhIwdRtmUDyje/iUKp7Yg6m49woyb4HyAx/xtN2B0hfjdvR7tlP+xU
7KH5jimMpW1hKmcH9XfJXfuoH6L1onHtTW2i64oSo0TYaphDm2DE4s456NvY
IrngBiKdzsJFWxvO+paE0wIQnZyPxe4Y1Aw4471/K8DkRxWYm5vH2MQ0Rscn
hXiS5ROWJ0T5VuAXxjdcnmF9ynLOgqCPqF2Wp+Y5eX6cUviYX4mPv7csTpUj
p88VbYveqB/1QmKlFoIyryK/3QoJZeRsVa2H3A5jlDQ5IcTTFB0eU2gwnYXf
iXjEq5Yi+HQu1H9jiTz3BHS3psGv0huOjWkosaxD8rFGqL9jAYMtLijQa0GH
2wzmoz+H49402B6+iqxkbSy4u+Bvmvp4cvMWJo+fQDXZHyoIDiipItKiTM5Y
BB81yltRQXBDvWdeKCeHDGkZ+n26XLktqNssizbpnQi5FY7mnoFX4qfC0jG0
kvNTwfr1SCZ3isL9W1G6eyfKLuxF8uEzZE+4idx9O5B09x7KdimTu9Im9B8+
gG+N9fCx+h007z2K988dxvuJbYjVa4XuG6bQ32SJK6+pI/tONZqs62EmbwD7
7X4wV7CHznoL6EiZQ/UNbWi8YYK7Gwyhf1QX/e6xcCf7jOouXThYnEZ4zSUE
hKjD8LApXK/qoTDBCq09PqgvjUR1awCGP03Cf2AQiRlOKC7uxPj0LI2TZ85Z
lIPFcO/T+i2sYmNBXH+e3vL83Nzy3Pwcb3zsGOdImdGbm5vjj53OE915WuZ5
6dwcr98c24/XRttkbbH25ub5/Xk254TGROlRdbPTHWjpzkBlmwEefR+LkY+S
kULOU+MfJaJ1wRPxFeqILtBAkp8nSl3zkOWegjLtYURfykHiuUhEnMuE5j/5
oKcgD9991478+lqUjcfjhw/bMdDaB/vDwUi/VIWZ6M/QSPaPIf/3EHy8Ei4a
x1BG/f+29Ar8dE8X9y+eQeeOnagj+Ghg9hAKHxVSW9C5dx9mLlxENSkXkPZs
go+cTbJI3yCDdKl3UaK0C6Unr8Jf3w2DNfn8udLzp/ywIh4Efp1jfTovSOfo
voyfmDQ3qRlt5M6RryiNDHlpcvfYhAIpGcRcPoLUI9vhdYucabyCUSb3DqbP
H0GJ9Gb0Hd6P/wwNAhIj8aOtN/5PUhjm+hqRr9cBD8VAaG80xbXX78JzfzB6
XWagR+7m1krOsFR2wt11erj7mhEsdjnA44wP7qzXhu1JRzhf9IPVWRuY7NWB
2h1yVyH7hZvfRZje0YeTdTjSmmzRWp2DwuxINEyG4W+YxVdfl+Cg/HYEu3kK
5io2vudWb1sLplYVQYw/RZbnKHzQ8UtheJZem1kmpul0lolvNhURSmd2fo6P
HV69wBa/r0j/eTG2BFiawz//3Iua6TS0L8Tgj38ax4MPKlA6boL8OgdEFakj
o00baem2yNIuhvcdTzjtC0bk2SIEn4yBtXwQDDc4ozYhHF9/8RE+/exrfPig
Hz/+bhBf/akacdpl6LR+hKmoJyjQb0HizVKUanbC7LoXmu6X4P8WhqL3vAbe
11fH4vEj9B29m+CkdeculJO9gsLJ8JEjaCb7RxHBRq4cuX9skUXBNnlkKBKM
EPyUbZRB0YUTSE3yR1VHDY0HobnOi/cn349CPp0Xq9fSVI46/bvIfv11JG1V
QKYSOetJyyNXcSMSTu1C8qELqLa3wKKzBZpktmHuGsEzwdHsuVMEH7H4bzdb
/GtECEoaFpBn0IYARbJPKDrATMYBt9/QRbVJK2pN26DxjiG5gzjASMkMgbdD
kOVaDJNdVrjw2m04nPVCSIg/jA+Qezy5o+tamcMlXAeW5FyZducGov11Ya1D
7uVFnihKD0LrVDh+QjN0713EqXcOYbCzVni+K2R+1fmv3kd8jM3PzXPSVWwK
96XxMUvH7yyJdZ7Q+Vkm9md5IqijUib2Z3l5QZknPDvcdgFuWJtc/LBlfhuR
Dz+bQNdnXSjKzMNH3xRiaCgXYTE68AlSQ3qKF2omHZAS6QHn8w6wlQmFkaIz
Ak+mwmFvIlwPBUBtuzVcQsPx4MMn+O7nH/HPP32JR929mCLny+myfoz6fIEe
9xkkXK8kZ4gAhF9MRYH6fUwk38dDE3XUHjmEpbMX8URVA4unT6F9mwqGjx7D
6NHj6FBRQZmsLAo3biJ3EnIvIff2wndlUHhcCXkniazbgjxZcjfZfwCdV5zR
MzvE+IXDKaIcwuWkOYG/xNYx/uxtqEDH/qPI2bwe8QSfRWdUUHtOCQVbZAhO
ZFCjdhFVZ0/jIy0jjN8xReMuJcwSjDy4ehFf6mrhL5b6+IPabUzkdSDEoRb3
lMNho+wG3c1m0NpgBLX1eijSqYH1TrJ/bHVBgnEaqjOr4XbNHxdfU8X1f9SA
2hZtRPhH0Hi5fsoRZtr2iA84Bc3bprDQdIHJsWvQJufU+HhtZBeZo7DWD5Wl
1P/a2Y6ElMynxuicGF88VWbF+ZLr51m+/2ZX4XsRIdiYXWZjnB/7nLh/6TK3
dt22Xn+0l4WhLC0T059moSInGsmZ1ojNMEKYnTsyUjzhfdkPJuv9YCjtDJdD
kXDalgbfbR7wdXWBbUox5h48wO+fPML/+P5LfDzehakHY5j+XS/GwmdRfH0M
LspBUF9nC9+j6bif+wQl5UtICbTH4L2zeHD8Klr3nMCX6mq4f+kKuvfuxeCh
w8hct57+7FU7ubtXSsuhjEguubtn7ZJH+VlFFG5VRMrb76By53EkXjbD9MyA
0LxW+HduVpiDhHQZ7uCuD8NjQ02ZqJA5g3SyV2XISyFrhxzyDu5BjsoRlJla
I3vXUYyq6qBlqxI5C57E9JULBNeb8a2FCT43NcRvNe7h8dVDKEuxRJp3LwJu
R8LzQDC5V+hCS8oIN9/WhL2KNwJOxJK9wxYZLoXorxtFlGEU7qkYQ38DOVMd
Noavmxd0FUxxe7s5NDVccfVYCAzvmkHnti6Mr9+FV9hV2OoZIMDDnnBbGC7L
XYOHgyG5l08K+JhJudwsiGUBzwp4l8PFrJ9mBbzM5lnunhWyPSvE/eyz+PvD
HF9PgI8Z3nNmRNduZmXczojTo+tmSDqzaj9uf0F5ZmWe6TvXVYXQ6kIEWzkg
3SsddbWJSMowRWbfLdjaqMLxjiV8bnrCWiYYbgei4X04DvEHXBB8yhdRni6I
jCzE3NID/O7TJfzx299iduAJ6gY6UN5chVbDcSTdrofh0TsIP30SVu9Eoyiy
An5RWZhTtcB3NlbIVTfFByeP4P0r1zBz/gJqCAbozyKSveThLVV07tuP3E3v
opDEXPmWLQg7cQxRJw4jl5ST33wT3VsPITchA6NTvSLzFO+/tQi3X0b+EBJP
H0H5HimkbpZGmqwUMjbJo/HIBVTZmKLt5nk0y27Cg7u3yLlQCuOnj2Pm4jks
XrmIrwg+/mRuArjrIysiDpoGDfDVtEHktWC4KkfQZ6p7G8yg+bYu4k+lwYjc
Q8KMItAU2Yay8BK4XPKEpZIjwjTjYXLIHAaHzXDjbTVo7tGEuqIlQu5cgIeT
BtJybOCqpopj/6AOF21bcsezwMU9Z5CQHoaZ6WmM9vaI580ZLl4kE/F95/i2
V+07wx/P8szMDCVYVWZX1s0yIq5+hth+lh3hvrOctlmBLhVPE30oGJjFw8d1
aI6MhL+ZHpzTLyAw3gCZDfqwVtWH6UYPwm+JiLxMvaeVj7gzFkiK0kVAYAgq
cyuwsDSL777/HF9/8j0Wpr5BfW0zmiMuYMpvGDXk/u7kfQ+RUfpQ22MHszcd
YWnqj+j8bHzuaoJZ9Vv48pYahsk5ifrMSPv27eglmKA+Y1JO9o/Mde8gYc9u
JCuroOqdd5CivAchKoeRvkkKmRvfxfSR00gwr0B7S7GwX2af7ivav+L8Pivs
u87yMuQ46yP/3BkUvfEbpCrIIUVOChXqlzGneQpTVw6imdyb2vftwqNb11Em
tQEfqt/G15am+I7IN3q38ZPWLYxoZUOHnEt9DVMRcTEMoUfDoStlAmMlO3Kn
MCP3cVv4HA2Fl3kSSpOa0VJRA1fTYOhf0ke0aRgMFBzhqGcLKyJX3rkK9d+c
g+41XZipW8DyjDmCPMxgdUsdl3eo485eNVw7pAANWyuMDg9hempCaO35sTXL
5mf5c59hOJTS5floVih+ZvnpLMfmLGNjlmN7Vsifs2y88e3yeZrGx/TMNDkD
rFwPQd00I0x5mhFuHVsvamN6Rtj2tGgfwbNFx9BcVYWhT+7jxydLmE4exFRQ
OTlrBcLeXxV+d11hIm8P/yNpCDufjcRbpUg+XgxPo2i4RzsjPiYUTW219GsH
X/z2B3z10Q94f/YTDDXOoKQpCTmdNfBLj0NSQjCymwZxW98Dd1/Txc0rYTBr
qsF3Tt6ApRmWLSzwB10djB45ipLNW9B/+Agqt21Fwrp15JwvhVDF4wg/fAr5
8pvo9wiLtmxGOjn7Z5M7Sfu6NxBw3BEDPV3iOWNVEfE3x7dcH431NCDOvwpl
J7VR8MZryNimhHR5cvfYKosGZUW07dxFf/+2WkEGPQf3on3XdoKR9XikdReI
DMB7l26i/I4DanIbEH2J2nuzEHEpCdZqnlCXM4LTHkfoXYzCjt32qDbPwuOF
r9A+tIiBoRE0D/XjgnkQvDwT4HHOFjb3nNBL9oJAN29EJVbC0zcTZ16/Se7w
BnA+5IhIs1tQv3AHB9+4iR0KN3DSwor4pf05/fILiDAvLZP4XaZjmIpTOpan
6fwMk9L5aUGep8vTm2Fin5fnxTmrL9SHaY+IiMSRI7/c77+s+vsXR0/AKjAY
h0xCkRmbismOPrjFxuDqCTWy/59HZFwW7ifU47+cHfH/erjjL7Z26Nq+g/7O
RxvZQ/JkZJApLY0iOQUUrZdG3iFlZF/ZTs5YMsjdLIv8DesQr7QP2dfPI0rP
CsMUPhg/sL5mcTDN54hpId5hfTYzvdK/bP/p6SkEZOWjdd9O5LyzDhnk3pOv
JIesLRtRt3cPek+eRM/RA6hWlkeJzGY0bKPe11TA8NGD+Fd3e3x6+SocNmoj
3LgWdrdToUruBbLrnv1bXyeOH0dQqB8cDZPg4paAUJNAmGs5YHRkhB87QwOj
CLzlDptD+rj8mh7y3LTgYaCKfa/dxSnCa7ommgRP/Rz8i/ABJw5nxPGsCHdM
TwvyXJ5ewb0rOFz0uZw+NDaml6eF4v8pMsVLp9aox5WIiIi/Oy5ERc3EDEnR
YWgv6kFedh2iY93g5XUdRnpOmNU1xI+aZniioYnpc+fxyd27GNm7H2UbNiJN
ajMqqHsIuY/kbpEl+4oMKvcoIlteDmmkXEzO/ElvyyDppgWsbJIx3NnE+JvL
MWvx+dQzdctrOlGksAN5Um8jVUkBOcoKyCR7RIX8ZjTtVEb1jm1o3KmCWoKL
KgVZtJE9ZP7CGXymqYF/IWezNiM3+BkX46LU3ef2n4+1BXTtveFk7AgfpwCM
jg7x+ZBKh7oH4KdmCKs9WjA6bI1Tb9zB5d3muHL6BhJDAxluYDh5ho1xASdw
uVmQcvhFiFdEOFzU36wew1EzMxybrC0RPWr/mJqaogR8mebkOWUq5uk8Hf9T
9NpNMWvI6k5z+9D1PF1K78iRwy89vl9UTp04jpbaepTn1aCCnDEq00rh5ET2
EZt4ZJ67gS/U7+DRtauYOXuO3CUOI0ZKjuwb8ujftYv+3FWWDPWdPHkUbZBG
/jvSSJeTRbasHLKl5VC4cR2+uHYLPjbVmP1whOcLxi903DM+5fl1Wsh3gjpe
yucj1p98/plCZ+s4SrQdkSv7GiKkpJAltxkT166h7OBOpO2WJXuHEsGGIhq2
K5G8Av2987mzp/CtuhaehGhhcDQEVtZe2PxPss/tvwMHjuGeUwpcfe+SfTcQ
w9099BgHyD4yPj6ByYlJOJ51hvYmPdz4jRHuEYxc3GaBgvJ8Xrxw5jXFzpXl
4CkxPDzF+o7NC+p5fpqCWB6ZYrmGw+98+yv7zAj4fSU+nkOmn6ON69e/9x93
LAO9oygrKkdRdhMK0ske4hcEXT1DaJvnYsjZGx8fP4A+clb5/I4aBsgd9wPC
u8N79iFj0yaUS8uiXFYB8ZfImWuHDEo2EpyQfSVr4yaUykrjfxsb4Yu0cnTM
DnF8Ms34ZPrp/p0WyYvyFiO15Z2YT76GuNdfR4iUNAql3kXvhQuIcrRC0v69
qJKWQhXBBXXGojBSt02J/i7Ie2cv4jsXSwyWJkPzaNpzrQ9XNzKtEvdMXWB3
2R8jPf30mEYmhjA0Mob+7iFYnbDH9X/UgdWBe7C8cxe391lgmNxdFuZ7yJxG
BZwwPS0UO0Lxw7Yx3CLsOxZfUwKccf03Laif5vSZml7pfz7vC+wvT01OEmF1
Jul0kiqzdSSdnOIJW+alkwK9SU77FFU/KWSPSn+t+Bjq7EVFQT2RVhRm1iPY
LwHO1lpw0/BF9Dk7FK57B1+QM9Z3utp4ZKiJh6o3kLlBitx5FdCiqIzyjRsQ
cuEsnK9ro5Ccs8rkqN+FewuJMjsxbeaEtjjqvc2hFWsxKVIWrAHH35NTK/qJ
SmlpKTLNyB3itS1IU5BCkuwWlLz7FsrNNFFy6zLK330XFdRvNFB7B5GGHVvR
SHBST/a8D3XVMTcQB4cAb4nxUV5XhEC/KDgcI/tH3zA9puHhIYyOjWBibBQD
XQOwuOGPe+QuYnkjDB0NbXgwUYBPHleJzGXymXOVSNbgw6fIMollSsCXKU5+
jTJFyxQ/z7XDln+1+GgfI9hoQ21ZJ4rJHSQpMgfONkFQM3SG765L+IScnz/W
0MfvCUYmr11G6oZ3CQdvR4OiErmPk7vGDlkU7VZG3IXTyCFxV7h+I/05pwcX
VfHEwwFhSeUYHezh+4fvkynGb1OTHH7htvF4ivWlgLcmGezw0u6OJhjvdkfc
6T0okFtPf74lX+p1pGzXQ45mCDp2vkMwS/Y5cv8oJ3f3ejLGFnllNCu8jXp/
S5SXZyAgQfL/sZiWmYPEtGj4WvqRO/kQPYfWhh6ClT7+GJMCiqCp5I6c4BKM
k31lcaEQi/e7hWJliuVU2heTArxMCnMG66dJLp6Y50zy+3Mxx8bplEiey0eT
wjia5JcJNiZofExM8ITOT04QofITPHsTgnZWZ3JC0D7B9J9k29h+dMqz9WvF
R3/HFKqLO9BS1Yfy/CakJZUhyDUSZhfPo0tDHV+pm+B9bU303dVBt+J2TB09
RmJuJyoUlFC6WRo5JPZyLx5Es+xGFFPv0b1N4nGHCv6vmS0SL1yHLrnPDA31
CviE7yPG1xM8fwt8NimsK6IvTup8HBBw9QDSlWTp19XS5KRRIiODeVtDLJrr
oV5RDmXk3kH9jkkVwUj7np14ePoIBrSuIiAgD2f1PCXGR2x0DMJjwuDt44Xe
nm6MkXvHyPAImsoakRfZgDS7ArjusoH2ZnWEm/lhdGgUPRNLmF2YFp7Hc/Py
lFB56ik64tvWJMsTExOUYKVMCpUnRdsnRXQnGZ1J0T68tl8tPtomUV/egda6
YVQWtSIlrRqBnmHwOXgchRqqWDpzDGOHDpE9QwbN5OzUunsPWrbvwOCJU/R3
P+qUVVCquB9FUoS3SUzmS29B5SZZTF86jiunNOAVT+6q5Ey7wq98TEww3CLc
xksFvCOuL+3jsTF0VBcj8IomCmQ3IZP6zUR5aVTKvo6qPSewaOSL9u1b6Pdq
6nZsQ5W8DBp3KOHJVVX81dsc7RUuOHvuosT4CAkNRmhwKGKiYsidfBwT47xx
R1klwUDGGNff1YTaOk2Y7NBDcGA2RkfH0NU7xvAsh0eFuJeZG59DWB7mxRRb
x/WbEMdP8Dibr8s8Y4Jjl2+L79NJge4E/5lPwYdAxhlZXWd8Zd24cPnXio+x
nhHUV/Sip3EYzQQnWeSO7uUXCfe7Bgi8fgq/tdfH/1A3Rvnuw4g8eQClUlJo
o75nrqBI7ufS6NqxC+0EJ7myMkTkUKGkhPZ17yKJpNf8chBS0YIJcj9/lo9f
RLoGBhB7Sxc1//gacndtR/mZaygne0XWO29i7txZfHz3FnKlqN/nlaV/x6Ru
mzIGCd7/JSgQBTExuHZUcnz4+/vD09MTebm5QmOKzvKF310NhGiZYNtrV2Ag
q4uR2nKyT4yjs3tYhGfZ2F5tjiJtk8LtvDOKKIdPCjh6kss5Au5ewfkrn7s8
Pk7hY5zG/vgEKxP8Mh3n4xNMntXjYWJ8nMENm7J9Jyb4dnh9fr34GOycQnt9
L8Y6RwmXtqM4pwaxQQnQtE2E+XEjdKtex5y7NwqPqSLownHUv/Eu2nftQf/B
Q2ii3v9QUEGO8g4UykijVF4RJVtkMPjma2i3jIaK+yzSpxYx/mBJPL+MC3hn
nOEYvj/Hx4X0xHEP27e8tRbx27ej7o3XULBjO4oPHEDJ+s3IlVZEtbI0frIy
w+TZU8jdtJ7cQ+TRQs6GCzfP4D+aUxBv64RbtyX/H9Y+Pj6ws7NDdlamEF+W
t5fASMMBNXeuwG6POqxPeGBiehALHyyuysETnBgSx8Hj46K6q3D0OMdn42K4
+yncPi5ctzw+Nr5MrcXYGBP7q8gYPz8m3LZavwnh8uHDkr//8Tzr9Txy8vhp
9LZMo7t5gIx3Dq1Ng6gtqoXZPSPIyKusycbut96EFTnT5G3ifda96J13sKS8
AQ2eBTjq9Qj5kz9gYH6K44uxVXw1IVye4Pk8NDR0zb7btXkzvH7zDwQH61B2
+Rpqd+5A/oa3yZlwJz5Xv41ycnfPkdmM3r0KGDlwA30u8XC1JOefG9oS+zso
KAiWlpZIS0vjzGmClmCXFFTe1YPRkZPYu3v/mteFmi81b1F7T4vPFe0T4uPw
acLDkpCt5bHxMQoj9FqMkbMsnY7zUjr2qbqxMXpdqfrxMXZ9xxhMjdF6bJ61
wWJujKmj5vtrw0dmciGGu+fRQzAyNTYHPy8/so77JLK1/Y034bye3M1/8zqa
rexQEZCJOyZ90DIvwMBQD8MljA/HOX5j6sdZnzPtz4MLUdlJxmJ78hTqqd9Q
3LKRnKkU0H76OIqVFVBEzlj15KzVfXQrUt1TcEHVGTp3JMdHVFQUvX8kJMQL
xRo1/t3blCRemxVYEeLhMWGeGRPmaa4fnypjAv0x8TrLJHaXxxgMrCbjQun4
c+gKi6Rr/rLxcewIiZWsPPz0w9+wMPkJ4iLTcerEmRdeS0oO/dMbCFW7CD9y
vrhI9g+7qEwMj3Xz+OMpvhtn5EVwISq73nwD7mS/KFGSQ4LcZlQpyqNOfgvi
Tx2Hk2sgzDNiydlKF1rXDST2d3JyMjw8PJCRkUHP8WWOnyuUXZbDxxkO53MK
G28sb7NcNMbqjwl8z+F1/pqMc9ZlnF0P+hk0PkbHRjG6Ys1GV+ZHxwTpqIg+
KXNtjHLq2fKoaF9OfnRU+NmSrtflKxdgaGQIJycn+jNf1PtneXl5KCoqIuvo
DktbCyRFhKMiPQ8m+kbYqrRdYlw+DZs6EUHQCZ5FXdOAsO9EhPXTs+LqRcbi
tmUTGgmXVyjLoX6rFLmXHIbumTBcsPSFpro6VM+pS+zvpKQkBAYGoqWl5Zln
hLX+PRUjz+DyVWNY1P/jK2NUWGjMLI+OjlKC55ax59Mbey4bYxKv16UrV6Fv
oA9bWzukp6cjMjISJ0+ehJqaGi5euoLDhw5CR/sazp9f/f/kSvInzo6Tdxr6
e4YEcx3jzU10viEhq8fVyxoLhZHqbdLIWLcLcYduwdXDGurXb+Pm5dvQUDd7
of3D388PHp6eL238T5tLSEgI35/cmKLzDM8K6sb4OmNc/4vGJIMlMTFLsDHC
w8cI0zYyws+PMELn+fUjgvoR0bgeEa4XTRmdFSmxPTIieBYlkq7XnduqMDIy
QkhwCKKjo7F//36oqqrCydkJrq6ucHN1w10t8Z9VfRl/ojaDgwOF5rUSGyG/
2Fg8N21CL7mv+6tp4G5uPEKcdXDnvC40VfUk9je1N/v6+mLfvn0vffyrzYOP
kVcvyyOU0PHJxP0Ii4URfsrmBSLQE/QVYGOEjX2ujVFWh2N7VNBftF3S9dLS
1iEYcCX3xkiyR5ynzyxeXl6Ij48n561wBBGu3rZ12ytbS/HrGcznGB63ML4i
6aFDh37RsYTuegse52/imr0zwsIJV1y4Cw01HYn9Td3Pqb35Vc5B3DwojLA+
5HEsh3+5XL+Cp0eYtRDmYyEOE+wDFDaWR0Tjf5iRFbjgyfAzyry60TX3FyeS
rpeTnT1CQsNxh6zZwQMHYWhoSPsyJycHMTEx9N7yqtdS3HoGBwevmCNV9/cY
i/EJGdgcvw5b9zDcuK4OG2NXif1taWEBRSWlX3weFK+siBvuWYTlef5Zh8vt
nPMKWx4V5mxGf3lkeHh5eHgYK2SEzY9w8sO82CYphR+2bkRIn5Pn67J1I7Tw
8CfQZzFJ6zAi6XqlhrjDP8ALFy5ehra2NpwcnZCckoLi4mIYGxu/knPMWsYl
hJHhldj4pceiduE4LHStYaTrghi/SIn9Td3tfqk5iD6b9ecwE48jI8Mcjh8W
cDwTfwJ+HqZ1WZ5mY5KNUQ7mKGww+Bji4GOIUx5aiZ2nyvPqixdJ1yshJgiO
NobQuHMD1lZW8PT2oc/I1OtYO3fulGgtRWNL0r4U57Hzk/Rc9bLGIisrBycT
c5hoWyE7PVlif28id5rnHYu4OUjSl/WnMAeLysgzYo3Fldh+BBtDy9T3E6i4
HhoaZoTkic4QFetDPKHrh3ntw8M8HX4bB1M8W8OCOrqdwczQsEBnSHg8tP6Q
wIak6+Xj7gw9cv+2MNFHpL8XoqJjUFhYTN9JXtY6vogdivOCg4J+FWO5fPkG
7C2skJVbIrG/X0a/F5kDGztDIrE0JIqDoadhZFWhsEHjY3URYIFbZvODbPwz
Kd0+yMsPPtXukAj+hOsl9XuYtzPUDQxh4eCI2LAglOVlo7Sk7LlfX1nLWkpi
i+K85907XtVYpMkeEuTphtKKmv/f4oPH2xz+Zcv8eibGhHiY0zbM5fgV56Dl
wUGCj8FBDBIZGhrkxSddHhLkqXq6zEupNjr2hVKeDbbfIKM3NMjYZG0z+lSZ
34ep55VfbP9Izkok2LCGtb09AkJDUFmRj8aG6hdaA2VFFdxTN4anWzRUL56H
8ob1L43/n7cvha2gwCDah9RnnyQ5p3H1XV0ckJ+b+6vBhzg7q+kdOniIx92D
bEyJxJkI567K04OrthF8DC4LYnsQLFZYvAwOPl2EdJj4FrLFxcEgt31IpG5I
yK6kfs+rrICZjTnMbawQGBWF/OIC+Hh5SGxv5/Y9iAlKRLhfEoI9k+BoawNj
K1vIyiv84jF18OBBvl9ZDqN8e4jUS2rzxMlTiI2N+UXm8rS+kgiPJxj+Hhri
cy3rFz6vDwowI4hNtp7tOyTYI/h8T/AxMLhM9xlgYnNgYCUOBth2MW1iZIAR
XnlAYHutMiA5Pto6O2Hq5ABDW2sEhkcgjdzN977A2cre1AYZUQnITChFmE8q
bK0cYWplgSPHn+91m5eBD+pzHOL8RdVLapO6X4t+LuRVzWWtdp4lFE+wvhh6
nrji8PYa+9H4GKAxwYtjOs/IgKjwY52nPzDA4IDtNzjI1+PrD4q0MSKoH2Bs
MCljV9L1erQ0i4SMFNw10IUXOX9ExcdLvnfs2IHclHxkZRUgP6cKkT7pcLB2
h6WVGQwMDLBZSuqF4up59Om9g10nLk8xa3DwBfYQNze3vws+1mpXHC5EffBM
Dl4zRwvZpbCxPNi/Egv9jPDLrE4/le8Xahvg6PL0Bkl5cEUbr3+/AD986WdE
8AxJ1+vh0jxyyqtwWU0Vjt6eiEmQHB825A6TmVmApOhcJMbkIDIwDkHeAbCy
soaxiTFOnzz9i+GDiguBvzhcw/jyRfaQ533/m6srJyf3UjEi7hmiIuyLATHx
9CIi5Nvl/oF+SnhxT1I69un476djnVdm45zXNsDV6+fUsfjoF7YzwOCpn7HB
0+XVs3jj93lBfExMjGLpw8e4onYHeuZmiEuU/L2vurpaJKZnIzwoGrGhkXD3
9IG3tw9sbWxgYWGBe9r3fjF8cNdhgJvn+FxS26dOnZK479lzF14JPlZ7nhBG
+hm+FuV0rm/YstAe0C+ScrhbWGeZ+H1ZNNZfiQwMPJe+pOvVXF2Gzz77AF4h
4bippQlXb8nv5uXlpfAPCICPryeiIwPh7OwMOwcn2NnZkj3ECjr3tH5hfAhz
ikAGXshnBw4ckLivuYUVtm/f/soxIvpcGiNkbfgczPItG2cDwn7i1/cL8CLq
zwEO9/M4vX+5j4uPPtbffegjIqjrE6Skrq+PKlM6/bTw2vsgZKePbRPJi0gf
R59v/wXWOjMjAQMTI6iuLoWGlhr9uV1JbeUV5sPH24ucz93h5+cDFxdnGiP2
dvY0PvR0JP/enWT46BPjQ0Hd3+N8pW9giIuXV35X4FX9cZ9B3UfYeOnjnkFE
YnnFWWctHM2Lx2US65RgLULH+Rp1X0QorEm6XuExocgoKEZhaRnMnWyha6Qv
sa2EpAx4e3rC08MTbu4eND7c3d3p75NaWFrASF/yz70+rz7PNyv9z10TSW1T
3/+TGB96BrCyt4OGvvaK+f0S560Adg/h+IHH3Qx/8+v7eXUsrzN1/Ww9bYPj
W1q3n4ePXirfy2/rJfneXo4ule/tXRnLnLpekfbeVeO/l2NzpT6bSrpeTl7e
CIqJQXBkLPyCA3GV3EMkxkd8KgKJDU8vTxob1Os8lNhQ9w9zcxjo6v7C+BD1
P2cdeiX3GYV5SfsamZghJjoMaWmx0DZa+fnPV4ET0T3kFXL1MsHBMhXbwsKL
dxonVDyLtLN46WVjnNXnt7NtvTQeejkpbbuPTfs4+r2CZ5JU0vVyI7EcHBkC
37BgxCYnwdFD8tcuLcytERMTDTdXJ/r7ulQcUecrK0tLmJqZ4dz5878YPgL8
A/jrwfqN5TAqDQjwl9i2g4O9xH3tHB2RlRmPwvwcJObm4K6eLhSUlVfFycvC
ihB39ArHNS+OmBgV5Wwm/tg+veK4XLAfUNhg8NGDlTgRIz1sKtDv4daLtbXS
ds8znifpenm6O8M/PAxBkeEIiIlEaLzk7w3v3L0bkbGxcHK0JzHkQPYQVxon
5uYW8Pf1wS7S/kvhg7pDC/OPMI8dOPgid2wLifveuHkDW1VUnoqHZ4kkf9z+
rE96uD4R4dsVPmN4XsDXvcw+zO1H8NHTs9xDYr2HxDcvFeR72XIvIz3cVKDf
y62n+/YK+vbwsCOw3cNgQ1S3l2+HSiXmwqAghBFcxBEJiAlDVGo8FBXlJbZn
rGtAsOEKa2tLODo6EXGEiakZ/b2gF8GGJP38/Px4fuoVXiM/P8n3Dur9C30D
45cyl5cla/kTxocw1/b0CDi4h+Vyhs95PmOx1CuIY8YGn7d58bjczcfHr0sk
3j/CwxGTHIuoxDgEJ8QjNiMNGjoaEtvbvUMFzm4+0NPXg62tDbl7WMPP3/+l
fR74efpRewjXRywHvcjrs7du34a9veSv8a11Xi8bI1xdlmeF+X01vu8V1HE5
v7d3hW9pfHRT+Ojm1Xf3gJTBK3ejm6/Pa+/uJmk309YtsNXN9qX7cPqytuh+
Ah2+LSG7TH9GT1Jf2bo6w8XHDfbe5C7t7QzvYH84ez/f/7cQtamybSt934iL
iyWxZP/c8Shq70X6Us+m9pFuet/we+GxOLu4IdzX64Xx8bx9qLGLG79k+HgW
33aLKYvWiRWCj+5lXlwKhB/L3Uz8MnEraO/mY4Hfj6/Hre/h6/Z0Cz+jm8Hi
Sju8VFJfqWqp47q6OtTV70BNSw3XKblxGes3bnzpHCnpHvAifP+yx0Ktb2pU
yAuPZy1/r2oeAn4WiW8+H7Px2SPM3Xz+7uHweQ+f+7sZfHR1kT5dbIx2oYuk
XSQV5Nkyq9clSLu5KU+6unj9ROtX2Ofb6GL6CexL6itTckdwcrSEs7sLDGyd
oEmwcfroPijv3PNK1vN57dC86ev3qxgL9bs8jY2NiA6V/PXdX8M8hLi3SzTe
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
NJCTEUiDIpWB/n43fRxwixXp3Nwx84SxRz33pO0e9d7NrPxwxLpHu9u9e9jg
vXzuNnZDBpqgF8gM3Ul4djLPpzSxoqCb/akKyquWoR3bR3OPH9XabeTnHuG5
efPZvW0TZQVZ9LSruHV5lH/+8R1+/t4t3rgyxolTA9Rr25gY1HF2ogNza4Wo
P8poqCqholjwQ54u9owCCvLSKRR7h6X+kAlNtdQl3nu2Euy3hY+uJmJuWcVL
V5R8NhDJaEMQmtZG6xrazDGvadf3wmbQw71B11iD0/wG3cYedMaQ2/PtHO0Q
+WlhbQ7xBYcZr57HFeMuRsZ86FZE0ZK2ktDDm8mMjyJHxHBOguBJ8hEyctKs
v2+ZmxmHqjSHamU25nYlY4NGXn/9Fl9+9i7/8atPeffNm3QZtbQLXZFlJYr8
U299xzZzGUOX88irXUl5224qzD6kqJ8luqSEnQUv4y32jjJNGsX7lnE+ZR7Z
8iL6HXwe8KAJ0zGVaIgUQ4dWD0rHcOLp0iCnVjn8JLru1Hxbfxs/JM/pd573
u479kvfod/j147mfZ7vX/em+dfXlFMp3oimYz2DAPBbFVrOy6ji7AlooKlqN
ZmIXlQL77MrFvPMrGZqGXJ75p/kkxoZQ21TJDVFL/uKjV3j/9kVuXTvD2RGD
9eez+kd7GO8We0dtMd3tlSK/KqE0P5OSvFQUuWmiJs2ksDiFvKwI62eeRdmh
7PHxISFVxg+vp/Da0b38+pKKk0Z/0hPm020ouq+53g8OD8Nq5a3ojekY6w5y
ZdSfE1270aif5NLNJka04RzwXyIwixW1RzL5CaFiHxH8SEtCliDq9IwYUX9k
UlOeh15bxvBwNzdeuc6Xv/yQf/3F+7z56jm0rVrxjHxyCzOdz2ztzqFp0If8
Oi+KGreSkbuJNLkXmV0VHNJOsMSnXORc6dw2hvJS9iJ0bWV31dN76qyb3V2X
7tMmRbxPOuK9X8S+5e+9WDjQ7+RGv5MrVh8HX/r7rT79ds7Y+GL367eZ7dzW
7hxfMo47F/vdxumpzCYnM4DdOTH01S8jurqdrXU32LfbgEzwo9y0ioq2nRSp
V9N2LJjf/3qMlPWL8dm5lfJqOWM9Wt64fIyP37zCnZfPcay3jdHeZjp69Wjq
S2mtyKWrvUrkWEoUeXEU5aQjVxSIGiZD5NDpQjtF7ZFh+Z5ABMH7vfnVp+V8
8moEv3i7UOxHEZSm/h15fk8x2F3hiv3+ARd2Th1x3XPNWTL3aX6Otv5p40j5
5VybARfG0/XK8cykfSrOVC7k49MHKMjaxcnT6RhaNnK+fD5DqmL8vX1JiNtL
YW4qxbnxZIrcqlRYUWo4BWL+dYpM1MoCtLVy8S56rl69wueff84vfvEJt65O
0CVyq3xZCo0N1dZndjXU0HU0EoXIQ2s6AqgVe0er+TDxNYc4kJrL5vBG1vjm
U58ew5+u+Ir8bQe9NUn31o5+dwwGPMz3bn1mYNjvjtOAZExJXE4KbCet+Pbb
uNDvZgP09Tti+z5soM/tus/OO6nNfJbLTF0GFGVVZEdtJ1utoP7dq4Q0tLGv
+gbxiaIWrF6ComWdqO/80YwHUd22gSF9LsFBXgSsX05tYYaoJ5u4dKyPj+5c
4a1bp0UNWMd4n5aRASOV5SW0qGV0t5WjqZMLfsRTXppHlTJf7AlxlMozyUwN
Jjs9jPT0ZA7uX8fV4U0Mta3is/eKONXnTZ7PXzMau5zO2hL7HO064MRgjvOd
Bdu74TPDd2DAo39PTy/7IrK4pXyOqyNBIpd8AWNzAEUyL47pl/Hb23nUyELw
D/SlXin2jNwU0jMSKJdnkCs4kiNqdMueWiPyou6WMsa6dbz5yhV+JfKrn378
BufPDKNvrSK3RGbDwKSntSiK+OoUsioW0dIfTO/JSEpblpHRnkh8cQvPBetZ
uknBq8oYLil24rM+EHXoGobM7bPOeXr7XPwGPFy7zgfc1sqxD/TbdV/iO9nX
J/jRZ1nfPsQ5/XazXNt8+qzW12c3y7XVp88ZF1a/Podfv3s/q9nHdePM9Pm5
OFVdGEJUUQo9cQu5Y4qi++g4qyJy8W24QcQRNaWVS1F3bKW9N4i+i6GU1i4h
/XAlhSoZBza9QEF8GENdzbx8cYxbZ0ZELTJh/VndfsGZsX4Dbc3VtDSV0Kup
oqE8l4qCZAyinlSJXCItIZ7cDMv3kw+Tmx6Fv/9eUqOf5+LgDrTlSzk2uAlN
0bP4BAXTXHyE2435mAwat/fvt2Plea4OXOyY9bl8+pz+fR76SLGbdt+yXn3S
tbBddxs1JNapaQudx/mjPhwf2MNAzmoGK9YyMryX//pSiTzgRXbt2Y1alU2W
2EMKRE5Vq8gV9UQkBekRgh+pNIn92NSm4txYB+/dOMnkx7f4ROjOUVHLNVeX
IJfnWt+xXdtBub6cXPlm9EfD6TubSHH9OjLUuyk3p6MYb2Z37RiVsiyOttZS
lh2MPmQJVUWx9PV0e+Z/n4e2r2hSrO9hgh99k/32uO+zx7gNXzsXnNywr4GE
I1Z/57X7GA4+9fc5eDedY32u+JC0W967sTiQ5kN/x0sxj3OqP4+36n3YmyZn
S90bHNhWTr78RapNG2npDqDzeAiKVlGvm1v5+KXTpB5YR3z0YUxi3U53azg7
bLTWIqdF/TFi+Ryxo17kFwqRN6swNZVZ84cysX90ifUvUciITBK1R0IURXlR
Iu8IZ/+uVYyZNnP7XCjtlUvozH2EHYcOs1NWw0nVi1yv9cbQpnTFp9tc7esh
xa/fHTMnPhLOuPB1aZX7mjr44eKak4+OPuK6u6+F04LPFQGP8MZoANdGgxmu
XkN5shca5QvwH00Mlh7E28dL5JUyZKKGKM+IRC3ySws3SnNiaRJ5qF5oiaFO
wfVT3bxz6xyffPAu166eY8CsEbVMLrXV5dZn1ypKmTgbQlW3qBuHwmnsDURe
v0asTzgyrahxRvrZXnGRWpOZ105Vc/30QU5lLqY9fpv154od+uqcm0Rr3fSm
T6IxDnyn68U0PZFqTF/fTH644l2yBnZ+9EljV2q90uteD21zMI/+vR59e+3W
oY1H5vMMo2GP0inW6mxbNb7NfWwoukpwaASNxmW09ASibNrE4JlEbnxUwOuf
NfPFlYsiN4glJDiIXrWKowMdXDk7xKWjXQybm8Qe3shAdzudBrWozwvRtSip
VQl+iLyiVl1GaVEuqUmxIreKQp4bQ1jIIWTZaxjrWotJvZbGsudpjn6KMO/t
DGtDeadzp9DOzXSLfNDx/lbseyXzvl+85mT99ue51tWpTXafdvM4uv5xWpO+
T0n0fF6eCBKxHUFd1RKRe27i1DF/fn6rhHdPm/EO9hf7RbzQiXQKU6IoyY+j
WPCkODuJttoievSVDBhrOXt0jNu37/DenTe5cqJX4NlAa60MTXMjjXUakuOi
qOzdRppyOcq2XZiORaAdO0Bmro+4TqVkuJ3ViWUoSiKpO2ni1EAxlzOep93v
O+gMbRJNlWjxNJ2VXvdL5u3Kf6R+/c7x+qXjTcuJpOP0u+M42dfbO9nb24vF
LGtpO7esa6/Vep1HV/w62nv7JP36+py+lvi33etz93GM2zfzOVbO2M/LKlXk
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
986eN3xduDq48cD97THurmGWNis3hHU5uTG7df234IfFnlrwrfvu87DW46uu
pSds/7u9p9RSYu/v744einT/2/jfxHwelBsWs9a+Pd0uzbJypcfGGQs3umz8
sPyeXleXjQdddr50dYmjaLPdm50f0uu7xeZc8LpfLs32Hp6u7zbm/bbPdu9e
751g50iXXXMeFj/uhcNcsb6f58ylzzeF693e8V7PnH1P6JkUcW/hiI0HXV1O
LjiPXTbeWOxB1uNB/Gb7uh8+eXre3ca73/a5vvP0fha9supOt017vg5+3O35
XyfWXwc/HuY7zta3y74HOHhhWx/b/mHhh4sHd7dvih9z0YK/JH5M79tt3Ze7
7Pvz3XF92Px40He+X/8/B64P2s+aN83YG6ycmezsFCbaxJEuhz0AP6Rtnvzm
0m963wfB8n517GGu41zvdUow7rwLrvf6+qo4zHWMufb5c+P6oGPeZU+Y7Ors
nLT8Dciurk7rWnVajp2ebO78cLTNxWcuNtd5P+gYD2Md72fMri4XpgL/h86P
B+HG3XwedJ7fJK73O39pu2MtLLFv44FjbSz7h40fc7Fvkh+zff1/gR9zxfVe
X1+FH/eD1YO+018WPySa5dojJs0WfpjFucU6zbjObWa2mtl67+vmx1y+5jrn
tFLlXwg/7o3rXGwu/Wbz2bH0+/8/PzzbpNlsnrTFv40Hlp/7NJsdnOh0Xs9l
/5C2Tz+/H7zuZ+6z3Wu/JJuT35+FH3YNcmjPn5sf9/J70Hf6i+GHeRovzGaH
dtn4YeGAkxtm632zB/uqcf6gc3sQLPXGufH5z8KPzvvH9WHzYy7v7PB50Hf6
i+FH57SYd63PpLnDzg9zB45jhzh2dIjzDjPSe39J/Dh2PmHOY3zT/Oh4AN1x
rc/99Vv82N/M6ne3uT4sHL5JXOc65vT7nvYCBz86LNbh4oDj3PK3580OjnR8
c/y413hzxarnrP9Xfq+vlx8WHbLhPNc+1n5O3ZpbP0XownviMNvX/fb7OmL5
Qce8n3d17QO2WO9waZHgRofFmIt9U3oy13ndbbyGAb//tvxwccM8d37YfW26
ZbO59BtvkfP0o9956LH+IH2+blwfNI7MjrWQrovZivGkycoPEx2mDkxW/E0u
Tphc7aavmR/3iuHZ+s3WXtUXxvcffeSu4/+51vFBdOdB9apZEUWiz5o5x7sn
v6/S55vE9V7rPCdszW4YT4r4Fxyxc8LCBQcfBDcs7Y5zy71nnvlq/8v6m7J5
T3+bMu1Wdu746r+Xdz+xY7Gnnrw7Rk8//YwV4w4Hrh33xtXSp8OuUZZ1sGmW
iafv1e8H/4NzOc9y0ryFhPiFc3r/6ZYcG/UA+P/DQ1/ThxF7s62lI85dvDA5
9olJsUaTVi7MYhY/x3lsbOxDn/fXYXsOzaepeyspKl9eWLzia8F0NguPuHs8
xcbG2fG0a5E4j7sHrhbcbfwwWfd0k/38XusRnbKZH91JZajXB33V86RFLuCx
J/96TvOY/9TjRAb4MmzWkJOdM6c+jwtdikz0xu/wg/3++V0xiLv7XB90T7GY
qUMa5277g50fxln54TCjhCNPP+3OZcu1pf1h3nPYo/Pm8Td//4xb2/ef+Da+
QfN54um/c2uf99S3OBi5iKyKdTR3ChttYF9SFd57d/PkMzP/N/0T835AfEQQ
C6Zp02xfUp+//Z/unws9/eQ/kRzwLcqUsrvOdTZ8bX2emVufDrvNsh7feewH
7PJaxxnTHiZ0O2guXc2Vq9EMmbxRBzyC+sAaVj32jx7xnvfoo4Tv96VTV4tZ
XcqgQW393xBFpWW88OKLHvv8YN7fEhD+IrKGDcgb9tA1qiQkbjXfn+fOxQWL
FuGbX8xffevx2ePgmZm4xdkxuFuc3M/X9PEdNYUTWxfWVn5YY98oOGK08cBo
tN+3ttm4Y3QcBZcsZvU1Ss4t7UaT08fJKUebvb+jn+1of5bzGSbMRh0ddckc
LvHmau0mSlorCayvYvXSOkIKOqnQ7EDVuhxl41aK6jZRa/Qht2IV9eZ9tPUf
EuuziUL1RgrrXkSjTyOlZJzknGLGRkd4483XGD591vp5t6GlnOaSHHq19QwP
zp7Le8L0se/+LTERR4gO8MZoWIQ+dQmD8p10VzxBfnaUbc5Gd21xw8TkmrML
L6P9ntHe3yjxtbU7cDO54epYLyO5cTHo6hZwTsRoVmIoaYdWUxO3jTe7A7lw
Jgtt5VpOHHwRtMV8mLqb21GruaMK49DubUSHHKa0uARNvZzGklx0LY2YaxU0
1Ddy/uW3ePuDD3jtzdt0jI3hvSeUg2E+aI/up67bD3nTVnJrV5Ffu4G8mo2U
te+lpTfa+n+jTr2q5P/mdd58txP1+RsU6bvYtK+eCHkSHeUb0bU3YzAakGq0
0eQWo5I2owRP0wyuPAg/XPpjlLyD8zgpMJ90xLkTf6Pt3BX/Rmebyc4Doz3m
jZJ7RqNJEvfGaWZyG9ONIyZ3/9GyZJLz4omP2UtweBLLlVqWhtWyzLtKrMVe
Go2bKar1Qm3cS7V2J7LajWRVbqC8bSeq5q2U1G9C2b6a1PQd7NsYRFZmLmdf
Ossb77zGiYvnrL87aapSoVMX09/TxtCQcc57scWCg5+kNGs9dSVxTCjmU5S8
kOaygxiTn6BEHe+KdwkWLv2ZiZkLRwkWEn1y0yEJTiYn5jZ/VUkk5dVbKc6L
ICz9MEmZfiiqsxg/m89nF4MxZy3npfJdfKoI5G3Bm/MiDxor2EpG8D6Rv0RT
oyhG01BJhaoIk74JU30pKlUlN954nc8mv+TNH/8Mw+AA6728ORzsh+nEYcr0
m8Sa7KRGF0Z+tRfpZUtRajbTcSIS7UgYZ1+uYPSlFEZvabjy8R9p1bzD0qAB
Eg8eoDd1Le269mnzmq6ZkpiVxJ/l3FN+OVdeOPYOR7xL18ah60bL3uHghycz
zdL+Vc1097Er6/rJjs6gJHoR2xLzWCQ3svJQNT57sqgbCqFe502aajF1HX4Y
RkJo7NpPTrXgSNkKK18qNbvE/rGWap0fpaU+FETHM370Mq+88wkXL10Uc++k
o02NsVFBf1czI33tzr8ddy9LDHyG/rxVqIof4+T4ZnpLQ0nyXkH4IX/qLTpa
mDYt/j2bp/v36uPkmwQ/aR9VWjiluRsoUsRRr9zGxbznOD+WR2tfKNcan2M0
dAEv7VvBtcjVvBqzkbfCN3BFtZuk6ADyLb9rXlVMVU0TJUoFA6YquhqV1JeX
cu72HT779W/58Ge/FPu1idUL1xPhtZP6Hn8KW1ZSIPbrqvYwMivXkF21Gt1Y
KE19B1B37EPdu4vTr8XTXtnL6NiXxLd34h/fgGL1JhqzfDFpW93m4NKDaXrq
1GV3vf4qNbGlr1teJHm2fb+W8MNg3ecsR6PBKM6l62Jvt18bjI77030NrnaJ
v9UM09faft9g72Nw+esN4v2StlIX9SKr5JUsyWhidUwN67Y2UNq2l6q2JWJN
NlHWso1qoz9lYt+QiVzLmm/p91DauAV5qxfNxoM0NkWTkhKJvuMYt975lLM3
XqFzyPK/iBvoqC+jr7uesb42osIO3hPPopznyAxcTm5EJGcvpjPet4dBYzyt
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
3g/14laWDx37nyI/eAdlWl965E9Tl/gsN8ZW0iviIyAmh8q87ehbMr/yvD1r
1exW1VjPvgP7GU57nH85FcqPP1Nxqi6Eic7dGEpfwJi9kFHFej4q2sf1yE28
mevHR/HbuRm0kMJ9L5ISE0qzKh+VohRlSQ6leVmUy2W061sZP3OJNz/6lBOX
zhOZlMm6jdv50fs9/ORf+ilq2kOtKYDy1kAmrmdx9YMyGrsPUK7xof9Cstg/
gsUxReTBL1KnqyIyZYT4Q17o5EfQ6zQetfL+bXYNN8zwMczSPivmEn7orG06
t/s657lO6qNzv+d+Lkxnv9bdrY9kTJ3D13Zt+d5Mz2AHalUSTQHPkJZdyPzo
o+zNChX1uYGk3H6Kq3ORVa9C2bxW1BvrrZ/vFtdtsB7LWrdY65KChsUM9Bh4
5fh5QoN2o1K3cEPkCn1DIwwc62NQL/KJ5CTU5dk060ReocwjPz1FaN1+hvZ+
j9/LgvhjRzHHtz7JyMbH6Az2YSBjC221C0U+tYywjCihhYG8d2k/lTl7ORK8
gfamPA842ualmzF3ybnO870Z2E4f095PKeppXVcZo0dj+NPv1Nxq9qa56nm6
EsW7Wr5HdyGEdzsjOZ60js+z/Lm8ZxEXDz1DY/x64uMikKvqKCxUinFykCVl
kJ+pEHmblqHTl3jtzjuMHT2Gz4EIkgP3CX7UcfmTUhp7gtCNRJFb4cWlt0v4
2R/70IyEM3olg7OvFdMm+DH2Ugqnb+UxfOoM4XvK0BX4M1p2aBaMXPHjds8Z
H7oZOLrF2ywY3RvHmWZ/xqROp5u0vo/O0qazv5v9aGlzXtv6ONbDdm7z0zv8
dJK5Ocdz54bOMUfn2I740NnHsI2pNQ1R3VZPU/RCYtZksi3UxHZVIWuT64WO
NZOhTBV7+3JKGtZSrdmJWu+NvN72PRCLFdZ6kS34M3HiMMODMnz3BQlONXP8
7AX6J05jHh2gr1NDTWYyNSK2qmqqKRFHhcgxdvvtwrzzUaiL578MBdxJ9sW4
/tt0hG7leKEfbSXzONGzhe6uQ0Sn7qctbQ3G/OU0KJ6kuT7fOkedY94SPPU6
6TzdMXRi4NQT6RpIMXStlc4eNxbflsJYFGN6OrrTGNWso9vghaZmKZriRehS
n+N23m4u9h7gaq7ItZL8eSVlCx/rfKkUnI5MSKFYUU11eS6qigzk+WnIimTU
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
nuGuSxZu/M4an45109jiVaOxxaxm2npqLPemj6txxbjGsX4aD/cd8TE9Rqbf
l8ZBextJSYlEBe9lfngjT3uryFA0oTkTS3rRs5QK/TaNhaEbOkT38SO09Own
r2qVde8oVK8nu2olZy8EUlteQl6BnnMvXaVV34Wipo7KJh1tnT20tJZTmZdK
Q3kB1ZUywsJ34pcYhqZkL6PbH6FnzQ/o3/Ikx3Y+z5mY+XTE7qY8LQ5l+SYU
OU/T17KGrobVol5aTlOjB35IMXGbu8YNV8c9J4ZS3ZiGi9RqBK+zN/owpgpi
aHAjV04EcXXYjxbFQo4HreR46loujQbwYaovP80/yO+TtqFPPEBNRy55KYHE
iblUifqrSFZISW4cRZU1qPX99A32c+2V69z5+GdUNTQRFbGZ1Lw1pKpWiNxp
PZnl66x7SJjIpworA2nvTxJ51Q5yFf4ciHmO0MSnMEwcJMI0SniinP6iQ/Z1
nqmHHnV1FqzuqR0PSYcs3BDx/6l49h8EH/4gxrQeNZajVvsHW7vjqHFrs/pr
JfesfvZrrWUsx32t7dzRxzG2RuM021iO8e3voHX4av5QWZ3+n97PxHPwUMbU
0uz6qcTWiqk648GpXOWKqbKmPVOdE1FTPSdiptQ6n6niuk1TqtYdU/K6LVOF
1ZumShu9pgbPpkzVtZZOFRRWTo2eOj9VZ9BPKWvrp+q1xqkGbduUWl0yVVWS
O9VQXTKlKM6bOnxk/1Rrjf9UZ33ElNZn4VT36kenhve+OHUzeO3Uazm7plKS
kqca4w9M9eTPmyqVPTU13rFn6saJSIb0S/4frab1f2s1Uuxsc9BqpXjZjjZM
Zs7ZiZkEDwduDuw0znXQ/qG+pviPpkwvXjmey+efFE999n7pVGvTyqmT4wem
rqX6Tp0L3zh1vGD91KsJ26d+35A59X+Zs6Zu1UVOnRlTTSVnhE8lRsdOVdQV
TFVW5E5VFKRPFckKplp0pqnuobGpSzdfmnrl3Y+nSqvrp8J2+E6lZ/lOyZrX
TInaYqqo1mdK8GEqU7F1qklbNCWv3zsVl79kSjN0ZKpKGzilNm+bMtQfnVpz
8MRUeKq/5XcH/uRaY61zrrY52TGxx4HDz4GZMz7sWGgdMaOR+kn93Z/huNZI
Yt2jj9a1NsI+/X8BSrVjhg==
               "], {{0, 200.}, {200., 0}}, {0, 255}, ColorFunction -> 
               RGBColor, ImageResolution -> {72, 72}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True, 
               MetaInformation -> 
               Association[
                "XMP" -> Association[
                  "XMPBasicSchema" -> 
                   Association[
                    "CreatorTool" -> "Adobe Photoshop 21.1 (Windows)", 
                    "CreateDate" -> 
                    DateObject[{2018, 3, 30, 10, 0, 54.}, "Instant", 
                    "Gregorian", None], "ModifyDate" -> 
                    DateObject[{2020, 5, 12, 10, 7, 54.}, "Instant", 
                    "Gregorian", None], "MetadataDate" -> 
                    DateObject[{2020, 5, 12, 10, 7, 54.}, "Instant", 
                    "Gregorian", None]], "DublinCoreSchema" -> 
                   Association["Format" -> "image/png"], "PhotoshopSchema" -> 
                   Association[
                    "ColorMode" -> 3, "ICCProfile" -> "sRGB IEC61966-2.1", 
                    "TextLayers[1]" -> 
                    Association[
                    "PhotoshopSchema" -> 
                    Association["LayerName" -> "Layer 2"]], "TextLayers[2]" -> 
                    Association[
                    "PhotoshopSchema" -> 
                    Association[
                    "LayerName" -> "QMRI Tools  Martijn Froeling", 
                    "LayerText" -> "QMRI Tools  Martijn Froeling"]]], 
                   "XMPMediaManagementSchema" -> 
                   Association[
                    "InstanceID" -> 
                    "xmp.iid:73db1039-c23c-8a4b-bc22-0e890bdc5189", 
                    "DocumentID" -> 
                    "adobe:docid:photoshop:1b53660c-ce9f-b540-9f3f-\
0421ddc9c8b5", "OriginalDocumentID" -> 
                    "xmp.did:78517765-d5ae-1049-a795-83be95336798", 
                    "History[1]" -> 
                    Association[
                    "Event" -> 
                    Association[
                    "Action" -> "created", "InstanceID" -> 
                    "xmp.iid:78517765-d5ae-1049-a795-83be95336798", "When" -> 
                    DateObject[{2018, 3, 30, 10, 0, 54.}, "Instant", 
                    "Gregorian", None], "SoftwareAgent" -> 
                    "Adobe Photoshop 21.1 (Windows)"]], "History[2]" -> 
                    Association[
                    "Event" -> 
                    Association[
                    "Action" -> "converted", "Parameters" -> 
                    "from image/png to application/vnd.adobe.photoshop"]], 
                    "History[3]" -> 
                    Association[
                    "Event" -> 
                    Association[
                    "Action" -> "saved", "InstanceID" -> 
                    "xmp.iid:b2cb8151-47fe-d44d-b13e-2e095099bf79", "When" -> 
                    DateObject[{2020, 5, 12, 9, 34, 14.}, "Instant", 
                    "Gregorian", None], "SoftwareAgent" -> 
                    "Adobe Photoshop 21.1 (Windows)", "Changed" -> "/"]], 
                    "History[4]" -> 
                    Association[
                    "Event" -> 
                    Association[
                    "Action" -> "saved", "InstanceID" -> 
                    "xmp.iid:5b614a8c-a0ec-9343-8276-1c7e613508a5", "When" -> 
                    DateObject[{2020, 5, 12, 10, 7, 54.}, "Instant", 
                    "Gregorian", None], "SoftwareAgent" -> 
                    "Adobe Photoshop 21.1 (Windows)", "Changed" -> "/"]], 
                    "History[5]" -> 
                    Association[
                    "Event" -> 
                    Association[
                    "Action" -> "converted", "Parameters" -> 
                    "from application/vnd.adobe.photoshop to image/png"]], 
                    "History[6]" -> 
                    Association[
                    "Event" -> 
                    Association[
                    "Action" -> "derived", "Parameters" -> 
                    "converted from application/vnd.adobe.photoshop to \
image/png"]], "History[7]" -> 
                    Association[
                    "Event" -> 
                    Association[
                    "Action" -> "saved", "InstanceID" -> 
                    "xmp.iid:73db1039-c23c-8a4b-bc22-0e890bdc5189", "When" -> 
                    DateObject[{2020, 5, 12, 10, 7, 54.}, "Instant", 
                    "Gregorian", None], "SoftwareAgent" -> 
                    "Adobe Photoshop 21.1 (Windows)", "Changed" -> "/"]], 
                    "DerivedFrom" -> 
                    Association[
                    "Reference" -> 
                    Association[
                    "InstanceID" -> 
                    "xmp.iid:5b614a8c-a0ec-9343-8276-1c7e613508a5", 
                    "DocumentID" -> 
                    "xmp.did:78517765-d5ae-1049-a795-83be95336798", 
                    "OriginalDocumentID" -> 
                    "xmp.did:78517765-d5ae-1049-a795-83be95336798"]]]]]], 
              Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {200., 200.}, 
             PlotRange -> {{0, 200.}, {0, 200.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"QMRITools\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"2.4.5\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"C:\\\\ProgramData\\\\Mathematica\\\\Applications\\\\\
QMRITools\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"Toolbox for Quantitative MRI.\"", Short], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PacletObject[
   Association[
   "Name" -> "QMRITools", "Version" -> "2.4.5", "WolframVersion" -> "12.3+", 
    "Description" -> "Toolbox for Quantitative MRI.", "Creator" -> 
    "Martijn Froeling <m.froeling@gmail.com>", "Support" -> 
    "https://github.com/mfroeling/QMRITools", "Icon" -> "icon.png", 
    "Extensions" -> {{
      "Kernel", "Root" -> "Kernel", "Context" -> "QMRITools`"}, {
      "Documentation", "Language" -> "English", "MainPage" -> 
       "Guides/QMRITools"}}, "Location" -> 
    "C:\\ProgramData\\Mathematica\\Applications\\QMRITools"]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8374985001751995`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"f08a84a5-427d-4661-9227-b98b342fe0f0"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    TagBox[GridBox[{
       {
        ItemBox[
         PaneBox[
          StyleBox["\<\" Paclet\"\>", "InformationTitleText",
           StripOnInput->False],
          FrameMargins->{{4, 0}, {-1, 1}}],
         BaseStyle->"InformationTitleBackground",
         StripOnInput->False]},
       {
        PaneBox[GridBox[{
           {
            
            DynamicModuleBox[{System`InformationDump`open$$ = {
             False, False, False, False, False, False, False, False, False, 
              False, False, False, False, False, False, False, False, False}}, 
             StyleBox[GridBox[{
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Name\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Name", "Tooltip"]& ], "\<\"QMRITools\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Version\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Version\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Version", "Tooltip"]& ], "\<\"2.4.5\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Wolfram Version\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"WolframVersion\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, "WolframVersion", 
                   "Tooltip"]& ], "\<\"12.3+\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Qualifier\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Qualifier\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Qualifier", "Tooltip"]& ], "\<\"\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" System ID\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"SystemID\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "SystemID", "Tooltip"]& ], "All"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Description\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Description\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, "Description", 
                   "Tooltip"]& ], "\<\"Toolbox for Quantitative MRI.\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Category\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Category\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Category", "Tooltip"]& ], 
                 RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Keywords\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Keywords\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Keywords", "Tooltip"]& ], 
                 RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" UUID\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"UUID\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "UUID", "Tooltip"]& ], 
                 RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Creator\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Creator\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, "Creator", 
                   "Tooltip"]& ], "\<\"Martijn Froeling \
<m.froeling@gmail.com>\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" URL\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"URL\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "URL", "Tooltip"]& ], 
                 RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Internal\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Internal\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Internal", "Tooltip"]& ], "False"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Context\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Context\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Context", "Tooltip"]& ], 
                 RowBox[{"{", "\<\"QMRITools`\"\>", "}"}]},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Loading\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Loading\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Loading", "Tooltip"]& ], "Manual"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Auto Updating\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"AutoUpdating\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "AutoUpdating", "Tooltip"]& ], "False"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Enabled\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Enabled\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Enabled", "Tooltip"]& ], "True"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Location\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Location\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, "Location", 
                   "Tooltip"]& ], \
"\<\"C:\\\\ProgramData\\\\Mathematica\\\\Applications\\\\QMRITools\"\>"}
               },
               AutoDelete->False,
               GridBoxAlignment->{"Columns" -> {Right, Left}},
               GridBoxDividers->None,
               GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.8]}, 
                   Offset[0.2]}}], "DialogStyle",
              StripOnInput->False],
             DynamicModuleValues:>{}]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[3.6]}, 
              Offset[0.2]}}],
         FrameMargins->6]}
      },
      DefaultBaseStyle->"Column",
      FrameStyle->Directive[
        GrayLevel[0.8], 
        Thickness[Tiny]],
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxDividers->{
       "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Paclet", "Name" -> "QMRITools", "Version" -> "2.4.5", 
    "WolframVersion" -> "12.3+", "Qualifier" -> "", "SystemID" -> All, 
    "Description" -> "Toolbox for Quantitative MRI.", "Category" -> 
    Missing["NotAvailable"], "Keywords" -> Missing["NotAvailable"], "UUID" -> 
    Missing["NotAvailable"], "Creator" -> 
    "Martijn Froeling <m.froeling@gmail.com>", "URL" -> 
    Missing["NotAvailable"], "Internal" -> False, "Context" -> {"QMRITools`"},
     "Loading" -> Manual, "AutoUpdating" -> False, "Enabled" -> True, 
    "Location" -> "C:\\ProgramData\\Mathematica\\Applications\\QMRITools"], 
   True]]], "Output",
 CellChangeTimes->{3.837498500310624*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"86e8008f-b926-43e0-8291-0ac67d2ad18f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["List all Packages and toolboxes", "Subsection",
 CellChangeTimes->{{3.7548980189899817`*^9, 
  3.7548980262380056`*^9}},ExpressionUUID->"1037c5ba-e19a-4732-8360-\
f60e7a2fa01d"],

Cell["\<\
List of all the QMRITool packages and functions that are loaded. For more \
information about the functions open the \
\[OpenCurlyDoubleQuote]All-Functions.nb\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.7548944148778186`*^9, 3.754894435542356*^9}, {
   3.758433347012531*^9, 3.7584333792364187`*^9}, 
   3.758456464343998*^9},ExpressionUUID->"9def143d-308d-45ea-9146-\
337b684f48fb"],

Cell[BoxData[
 RowBox[{"Column", "@", 
  RowBox[{"QMRIToolsPackages", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.6905384062405696`*^9, 3.690538415376483*^9}, {
   3.7205166672714324`*^9, 3.7205166714124327`*^9}, 3.7519491491125264`*^9, {
   3.7519502607371855`*^9, 3.75195026609664*^9}, {3.7541410126212564`*^9, 
   3.7541410154539833`*^9}, {3.7546767448038144`*^9, 
   3.7546767457753997`*^9}, {3.7584343247944927`*^9, 3.7584343283449416`*^9}},
 CellLabel->
  "In[428]:=",ExpressionUUID->"66f0941d-b74d-4f23-a6d3-c5e28a3d33c5"],

Cell[BoxData[
 RowBox[{"QMRIToolsFunctions", "[", "25", "]"}]], "Input",
 CellChangeTimes->{{3.75195384157756*^9, 3.7519538451427054`*^9}, {
  3.751953883350589*^9, 3.751953894726776*^9}, {3.751954298264811*^9, 
  3.75195431300511*^9}, {3.7541411531669445`*^9, 3.7541411772612*^9}, {
  3.7546318724060435`*^9, 3.754631887081112*^9}, {3.754631931343922*^9, 
  3.7546319316547194`*^9}, {3.7548944382622967`*^9, 3.7548944389976683`*^9}},
 CellLabel->
  "In[429]:=",ExpressionUUID->"2daef7a9-1b9d-41bf-a8ae-40d232f006a0"],

Cell[BoxData[
 RowBox[{"CompilebleFunctions", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7548979688171806`*^9, 3.754897973478301*^9}, {
  3.768799206937463*^9, 3.76879921041768*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"017dd998-8132-4761-a2ee-0fc908034fca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NotebookOpen", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"PacletFind", "[", "\"\<QMRITools\>\"", "]"}], "]"}], "[", 
       "\"\<Location\>\"", "]"}], ",", "\"\<All-Functions.nb\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8374908586072235`*^9, 3.8374909507656727`*^9}, 
   3.837491232736039*^9},
 CellLabel->
  "In[452]:=",ExpressionUUID->"aab0b17b-4665-4b8a-a984-f94dd7cd5cc1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Memory Usage", "Subsection",
 CellChangeTimes->{{3.754898004573657*^9, 
  3.754898010080146*^9}},ExpressionUUID->"8ee5c0ae-81ad-4d98-953f-\
c7e16140406d"],

Cell[BoxData[
 RowBox[{"MemoryUsage", "[", "]"}]], "Input",
 CellChangeTimes->{{3.754897976850383*^9, 3.7548979821966505`*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"a66d2a05-f5eb-4f7c-8218-62ea88883b7a"],

Cell["\<\
MemoryUsage gives a visual overview of all datasets in memory\
\>", "Text",
 CellChangeTimes->{
  3.7548980027240057`*^9, {3.754898034906535*^9, 3.754898050783702*^9}, {
   3.7968832190760508`*^9, 
   3.7968832206492825`*^9}},ExpressionUUID->"0b15c18e-462f-410c-a373-\
4af09d51be09"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
SpufqzrU9bnuVXVvPt1/nKnqXZrWs7+jBzNItDjMGCTNSa/9KVyTeWFUA+6U
nH/OwonKXxlvylz+cW9p327iFsom8n90ZtFSCLOtGUP1D81/nke0o6930s/P
W6YQ3RRRlBHrbK0/OSvnBcfxd3tEfTVosv77j5B/bM6uZn+37e41J9g3dZC0
HXn+aFXmSG2oEbIV3prYjHMWi6NuMxTGxpuT3JmYvOG0LZRt5N85S8g/XObt
xkj3n+44fxC+3Sxr6XrpTBF1ysjZF87Q8eA4C/fPy0j/nSiZf3CtXmvdf5b8
pw4SeaD9+VlWi5Rakfdp7jmLRc38Y+MtOpd/+t3IfxdsJX9zx9wPjiAxiM3r
t5pUA3iLLMqUcdWfknIq8vdPJuv1K8gif++SM03+I7dOfjDHr7Zz5B8/Z7HE
5K/HOTaX3Y2wNZvJv3u+6Mvf3kir87q/z39//PX/YMr46v9JCI5cuPGmsiJ/
P/PPsezTLeio+35mDZIhUTcEVzanjPw6nGWfWecsFn3NPxbnYC7bkfO8JB5i
Bu+fX81hUfk7K6bmTtE+DdbntXuz+R4zy6A/xXW2npQoiLJzgyNy97j8Y2dc
7W1PvU4tDjMGiSpqtSY14HKzunw9fM7CiT3w1cabMpedh+hk/nsht/xhX9zT
s/c13/QHgLVB/gfncU+z/4qv+QNABpD/4Xk8HtmOAoC9gPwBAA4I8gcAOCDI
HwDggGSW/wkAoGQWEe8eIPMHADggyB8A4IAgfwCAA4L8AaB0vnKxdUeXBPkD
QOnUWv679UH+AAC7AvkngPwBoHSQfwLIHwBKB/kngPwBoHSQfwLIHwDSaf9M
y+Z/nQX5J1Ca/MVfBNq6Katg+uf+4aQe7y9DTfyjeOGfk939n0ObF4dZJ507
ciL1Ki2UZee2ME8t6UT/IuVU+a/7B7w0+X9/fvQR/fj8brbcLv1PyP+nPPk/
ede/BGf/Lq/359s7wr8rW1VjoXjOWv/v78bOuQ/mxWH6SSeEa5C7/LOEYQvF
37SNx3svtczk5T9HnFf+rfgvN/vx84b8ffLL/16dr/cwn7F/+VT+VdRTsLHf
szthLYs6rbW/pDoxFFFN7PxvjI/H4Yn4Q+96KjoQrtFjB+qVLRSCVu4x8tSy
GlqrIrfh4ibG/KVlhxVa7Mq/Ub81vwX5O2whf+dvPbcDwWY4uth9Bby//N0e
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
l2NJ73B/o7WMZ9HhOpr52CU5avw3qeVFJsu/605QOK/89QTfyF9cBW4Xt6ws
498nIP+XiMm/GbtV97/zoeUfcdHASu5giNpbbpk8V3f3yeleV9YGnBzrcp0+
VNXA6oTS38FaYid0zuzl5Kaozej9+G9Ty4tMl79thDOw9pT5i0fBNtW3qX9w
gUD+i8jfDkyZ7zQDo7q2KUwzD+QgOZb84y6Kzmh/h+OBH2edTXmuudPwjjlZ
i4VdNRy+FrpJ9MCa2fgJBx7EmFgPxz9XLS8zV/7BMes0q2femn+4324xtw3I
f2n5O0+JzLCxt7LiCZj7mGjFgbMfvCdj8irpbRQllSeV2n24nuDvU/5qHOJd
/vEWgsQgUso5xaJ3PyMnVL8UZ7O3UKO3O08tS+A2JfhGTuq01d5XXqeB/ts+
bRoff9snWNIxe5qrAPJfS/4AAMuivOcv13bC9/zl3uYi0X9unvEif+QPAGXA
b/gmgPwBoHSQfwLIHwBKB/kngPwBoHSQfwLIHwBKB/kngPwBoHSQfwLIHwBK
B/kngPwBoHS+crF1R5cE+QMAHBDkDwBwQJA/AMABQf4AAAcE+QMAHBDkDwBw
QJA/AJQOr3omgPwBoHS++CWv+SB/ACgd5J8A8geA0kH+CSB/ACgd5J8A8geA
0kH+CSB/AEjncT2fTtV941Yg/wSQ/464VyfJ+fpotrazyzA0zWTJ7uDIOXeP
6YptsNa7lJPOFVWkXqWFsuzcFuapJZ26Tr2yqfKvB+KKlwhN/t+fH31EPz6/
my23S/8T8v9B/rvFzpXotJt2+NjGPVJ3uWto3WSl80kdaSxVVS+FwPlSwhY2
F1q7P7miPLXMJGkUSvLKvxX/5WY/ft6Qv09u+d+rc1Wd25zlWtlMVuandoi4
OW8pSesSyKmWMu20Y16evlug6k3pSTOA5J2SdkyzUVPQ6LED9coWCkEr9xh5
almNyIjSbkfFtH0e4t19rtFiV/6N+q35LcjfIb/8T90cbAaGMqLUUV5MyroQ
Tn9nLXf08ywsWGYM3VbHe2eLqv00oyoShaFjR+o1x8g6nrmNf648taxDPHXw
uhMrmDHzj7lfyt+uCXUl633Bho/LxbmBQP4v4Y5/O1Cc5ODg8o/fzIs7/hH8
5ZKMCwTL0TQ6JhJteywTFp2PjqRJWXRQr2xhO5jvZkP0IrR+LWswWf5dH4PC
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
    "], {{0, 709}, {511, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{511, 709},
  PlotRange->{{0, 511}, {0, 709}}]], "Input",ExpressionUUID->"538c1a9a-c29d-\
462c-aafe-1d9d7b0e26f9"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Data manipulation and visualisation", "Subchapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7548957249234715`*^9, 3.7548957340260887`*^9}, 
   3.754896730602828*^9},ExpressionUUID->"fa1ebb06-be4c-4fd9-86a2-\
22990e083b10"],

Cell[CellGroupData[{

Cell["Import and show Data", "Subsection",
 CellChangeTimes->{{3.7549994514814043`*^9, 
  3.7549994633790565`*^9}},ExpressionUUID->"ef8f60c6-1123-44e0-aa4c-\
01d9fab680a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"simple", " ", "3", "D", " ", "dataset"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data", ",", "vox"}], "}"}], "=", 
    RowBox[{"ImportNii", "[", "\"\<twoLegs.nii\>\"", "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.7548957374891505`*^9, 3.754895753834767*^9}, {
  3.7549964692498875`*^9, 3.7549964755607624`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"1ba38701-07bb-494e-82ee-7d21f0bb7296"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"plot", " ", "the", " ", "data"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"PlotData", "[", 
   RowBox[{"data", ",", "vox"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.75489575524968*^9, 3.7548957584863043`*^9}, {
  3.754995988097462*^9, 3.754995993429183*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"7d5996b5-b119-4a70-987f-a14d8037aa23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "plot", " ", "the", " ", "data", " ", "as", " ", "a", " ", "grid"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"PlotData", "[", 
   RowBox[{"GridData", "[", 
    RowBox[{"data", ",", "5"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7548978782380743`*^9, 3.7548979239802003`*^9}, {
  3.7968834573206654`*^9, 3.796883506106614*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"8df64434-479f-48f3-bbf6-1802ed564d7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "plot", " ", "every", " ", "third", " ", "slice", " ", "of", " ", "the", 
    " ", "the", " ", "data", " ", "as", " ", "a", " ", "grid"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"PlotData", "[", 
   RowBox[{"GridData", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{";;", ";;", "3"}], "]"}], "]"}], ",", "3"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.796883522563427*^9, 3.7968835410341206`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"badbbd02-e57d-4ec4-810d-6622b65b0f90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "plot", " ", "every", " ", "third", " ", "slice", " ", "of", " ", "the", 
     " ", "the", " ", "data", " ", "as", " ", "a", " ", "grid"}], ",", " ", 
    RowBox[{"with", " ", "auto", " ", "cropping"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"PlotData", "[", 
   RowBox[{"GridData", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"First", "[", 
       RowBox[{"AutoCropData", "[", "data", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", ";;", "3"}], "]"}], "]"}], ",", "3"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.796883550169964*^9, 3.796883555922459*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"81cf639d-6f31-468e-b872-cad9f6306326"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"3", "D", " ", "data", " ", "viewer"}], ",", " ", 
    RowBox[{"Still", " ", "work", " ", "in", " ", "progress"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"PlotData3D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"AutoCropData", "[", "data", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "vox"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.755579992373293*^9, 3.7555799968214226`*^9}, {
  3.7555800831520844`*^9, 3.7555800968222437`*^9}, {3.755582133406342*^9, 
  3.7555821460149403`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"c8c8f4f5-4916-4152-948c-043243f8ee7f"],

Cell["\<\
All Nii files in a folders can be compressed or uncompressed using \
\"CompressNiiFiles\" and \"ExtractNiiFiles\".
The nii import function is blind to the .gz extension.  
To convert Dcm to nii format used DcmToNii\
\>", "Text",
 CellChangeTimes->{{3.758439698486055*^9, 3.7584397588478365`*^9}, {
  3.758440313504073*^9, 
  3.7584403278589478`*^9}},ExpressionUUID->"d94c84c5-f9c9-40aa-9e19-\
7f2d8597b49a"],

Cell[BoxData[
 RowBox[{"CompressNiiFiles", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7584403338440795`*^9, 
  3.7584403404572797`*^9}},ExpressionUUID->"ec69b542-77af-4c0e-bf6a-\
9c11fe192c0f"],

Cell[BoxData[
 RowBox[{"ExtractNiiFiles", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7584403422927895`*^9, 
  3.758440345373513*^9}},ExpressionUUID->"fbd8dc75-cbe9-45b8-b0ca-\
9e88bdcb7310"],

Cell[BoxData[
 RowBox[{"DcmToNii", "[", "]"}]], "Input",
 CellChangeTimes->{{3.758440329175229*^9, 
  3.7584403314135933`*^9}},ExpressionUUID->"b43b9775-acff-4fd1-995d-\
6f0beb3f15d3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Automatically find cross section images", "Subsection",
 CellChangeTimes->{{3.754900085790572*^9, 
  3.7549001005289216`*^9}},ExpressionUUID->"b78c9120-ccf2-40e5-87d7-\
a484213417b3"],

Cell["\<\
By also providing the voxel size the pos is in mm else it will be in vox \
position\
\>", "Text",
 CellChangeTimes->{{3.7549970681669893`*^9, 
  3.754997097646651*^9}},ExpressionUUID->"dc9dff42-f5b7-4251-8736-\
a0dca6b379bb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pos", "=", 
   RowBox[{"GetSlicePositions", "[", 
    RowBox[{"data", ",", 
     RowBox[{"MakeCheckPlot", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdat", "=", 
   RowBox[{"GetSliceData", "[", 
    RowBox[{"data", ",", "pos"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549001402595067`*^9, 3.7549001450991135`*^9}, {
  3.754900182877452*^9, 3.75490019767517*^9}, {3.7549971051334467`*^9, 
  3.75499710529536*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"696f126b-efab-4a13-8aa9-b44de55e3f44"],

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"MakeSliceImages", "[", 
   RowBox[{"pdat", ",", "vox", ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.754900227384843*^9, 3.754900278369254*^9}, {
  3.754900311661749*^9, 3.7549003196111603`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"5a9a50a3-b161-48d9-a14d-cc00a14c8221"],

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"MakeSliceImages", "[", 
   RowBox[{"pdat", ",", "vox", ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
    RowBox[{"ImageLegend", "\[Rule]", "True"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.754900330522708*^9, 3.754900358891019*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"41ec57c1-ef10-4a83-b8a8-146c45bdf378"]
}, Closed]],

Cell[CellGroupData[{

Cell["Rescaling Data", "Subsection",
 CellChangeTimes->{{3.7548972317539077`*^9, 
  3.7548972416276026`*^9}},ExpressionUUID->"0d830d7c-dc92-4a0f-96b0-\
5cb8ad6ed729"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"to", " ", "specific", " ", "dimensions"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataReD", "=", 
     RowBox[{"RescaleData", "[", 
      RowBox[{"data", ",", 
       RowBox[{"{", 
        RowBox[{"50", ",", "100", ",", "100"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "data", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "dataReD", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7548972474095426`*^9, 3.754897282795484*^9}, {
  3.7548973385554056`*^9, 3.7548973428257017`*^9}, {3.75491362838943*^9, 
  3.75491362884214*^9}, {3.754996052863373*^9, 3.754996054764976*^9}, {
  3.754996104164212*^9, 3.7549961231872067`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"2c5f1eed-b1d2-413a-a711-e9e26a4cb615"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"to", " ", "specific", " ", "voxel", " ", "Size"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"voxNew", "=", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2", ",", "2"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataRe", "=", 
     RowBox[{"RescaleData", "[", 
      RowBox[{"data", ",", 
       RowBox[{"{", 
        RowBox[{"vox", ",", "voxNew"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "data", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "dataRe", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7548972474095426`*^9, 3.754897349049699*^9}, {
  3.7549136307567587`*^9, 3.754913632740061*^9}, {3.7549960717341003`*^9, 
  3.754996116028576*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"0711c021-52b7-4374-b710-c62812e3419e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cropping", "Subsection",
 CellChangeTimes->{{3.754895767888637*^9, 
  3.7548957752315803`*^9}},ExpressionUUID->"d51e43d8-34ee-4df9-8bf3-\
5b69733ed3ff"],

Cell[CellGroupData[{

Cell["Automatic crop", "Subsubsection",
 CellChangeTimes->{{3.7548959281933174`*^9, 
  3.754895939466611*^9}},ExpressionUUID->"968fa70b-c4b4-4d48-a949-\
8da4355d6428"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "corp", " ", "finds", " ", "the", " ", "crop", " ", "values", 
    " ", "to", " ", "remove", " ", "zero", " ", "background"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"crop", "=", 
    RowBox[{"FindCrop", "[", "data", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7548957772353544`*^9, 3.75489578023491*^9}, {
  3.7548958558205953`*^9, 3.754895858171589*^9}, {3.796883647542039*^9, 
  3.796883665395658*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"0ec03379-9273-43c8-969d-41d370813788"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"apply", " ", "thecropping"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dataCrop", "=", 
    RowBox[{"ApplyCrop", "[", 
     RowBox[{"data", ",", "crop"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.754895864337891*^9, 3.754895874794386*^9}, {
  3.79688366999612*^9, 3.7968836752993383`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"74538836-333a-4a62-b9e6-38ff5ee95d7f"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataCrop", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548958768655567`*^9, 3.7548958814837*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"5d2b3531-cdd4-413e-b108-ae67e2b9af5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"do", " ", "this", " ", "in", " ", "one", " ", "go"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dataCrop", ",", "crop"}], "}"}], "=", 
    RowBox[{"AutoCropData", "[", "data", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7584345511696253`*^9, 3.758434577431771*^9}, {
  3.796883683501377*^9, 3.79688368861938*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"63dc3f77-e418-418a-bf38-bffe8d178bb3"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataCrop", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548958768655567`*^9, 3.7548958814837*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"13b3872f-1f90-4567-aefb-ea163cfd148c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Apply To Rescaled Data", "Subsubsection",
 CellChangeTimes->{{3.754996141489622*^9, 
  3.754996149022614*^9}},ExpressionUUID->"267579d6-9b73-4c4b-aa48-\
be3e08dfda04"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataCR", "=", 
   RowBox[{"ApplyCrop", "[", 
    RowBox[{"dataRe", ",", "crop", ",", 
     RowBox[{"{", 
      RowBox[{"vox", ",", "voxNew"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754996151823556*^9, 3.754996180449548*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"9298008e-ebb6-4839-b787-3eb2650efb20"],

Cell[BoxData[
 RowBox[{"PlotData", "[", "dataCR", "]"}]], "Input",
 CellChangeTimes->{{3.754996181470619*^9, 3.754996185551729*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"c002fff5-58c3-459d-bd3c-c4ccbb6ca90d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Manual crop", "Subsubsection",
 CellChangeTimes->{{3.7548959281933174`*^9, 
  3.7548959469545145`*^9}},ExpressionUUID->"9c3fe646-8c82-4fa5-ba13-\
4d6d8bf9eb94"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dataCrop", ",", "crop"}], "}"}], "=", 
   RowBox[{"CropData", "[", 
    RowBox[{"data", ",", "vox"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "dataCrop", "]"}]}], "Input",
 CellChangeTimes->{{3.754895886578994*^9, 3.754895900203232*^9}, {
  3.754898147470261*^9, 3.7548981511626015`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"8d1daacd-8970-4659-9835-8f732610f46c"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataCrop", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548959110895987`*^9, 3.754895916314752*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"30981062-8ace-4811-b1a0-840f0ffb8e73"]
}, Closed]],

Cell[CellGroupData[{

Cell["Reverse the Crop", "Subsubsection",
 CellChangeTimes->{{3.796883884010044*^9, 
  3.796883892212609*^9}},ExpressionUUID->"55749168-63df-4963-aab6-\
cb1fc8c970cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "reverse", " ", "the", " ", "crop", " ", "to", " ", "the", " ", "original",
     " ", "dimensions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dim", "=", 
    RowBox[{"Dimensions", "[", "data", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataRev", "=", 
     RowBox[{"ReverseCrop", "[", 
      RowBox[{"dataCrop", ",", "dim", ",", "crop"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "dataRev", "]"}], "\[IndentingNewLine]", 
   RowBox[{"dataRev", "\[Equal]", "data"}]}]}]], "Input",
 CellChangeTimes->{{3.7548980821477985`*^9, 3.754898209277037*^9}, {
  3.754996203266838*^9, 3.7549962378253393`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"95428a0b-7e40-4b51-92e8-5da74f819672"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Splitting Data", "Subsection",
 CellChangeTimes->{{3.7548959535708256`*^9, 
  3.7548959678359003`*^9}},ExpressionUUID->"93607360-ed31-4145-8241-\
5b261eccc5b0"],

Cell[CellGroupData[{

Cell["Split and Stitch", "Subsubsection",
 CellChangeTimes->{{3.7548966988321905`*^9, 
  3.7548967050227375`*^9}},ExpressionUUID->"4f8cb032-dea0-497b-bd1c-\
d723913ce783"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"left", ",", "right", ",", "cut"}], "}"}], "=", 
   RowBox[{"CutData", "[", "data", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.75489597096496*^9, 3.754895981690065*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"3cd642da-fd22-4802-9288-f01565803535"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"left", ",", "right", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548959833550625`*^9, 3.7548959917719293`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"203bb6e8-79b2-4927-b104-77c6b4bb166c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataStich", "=", 
   RowBox[{"StichData", "[", 
    RowBox[{"left", ",", "right"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754896002692444*^9, 3.754896037290599*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"a26cc5d9-e803-45fa-b22e-fae71af4e8d4"],

Cell[BoxData[
 RowBox[{"PlotData", "[", "dataStich", "]"}]], "Input",
 CellChangeTimes->{{3.754896038898155*^9, 3.7548960516428165`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"3309429c-25c3-464f-a97a-6193bde41c61"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"cut", " ", "with", " ", "known", " ", "value"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"left", ",", "right", ",", "cut"}], "}"}], "=", 
    RowBox[{"CutData", "[", 
     RowBox[{"data", ",", "80"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7549962901804953`*^9, 3.754996316284766*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"c7b59436-5334-4cdf-8c43-2d2fe93b3917"]
}, Closed]],

Cell[CellGroupData[{

Cell["Example make both legs left", "Subsubsection",
 CellChangeTimes->{{3.7548960915332003`*^9, 
  3.754896117086524*^9}},ExpressionUUID->"2e5b960f-ce39-4cd9-a390-\
ec4c724d0794"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Split", " ", "in", " ", "Left", " ", "and", " ", "right", " ", "leg"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"left", ",", "right", ",", "cut"}], "}"}], "=", 
     RowBox[{"CutData", "[", "data", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "crop", " ", "to", " ", "minimal", " ", "Space", " ", "and", " ", "flip", 
     " ", "right", " ", "leg"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"leftC", ",", "rightC"}], "}"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"AutoCropData", "[", "#", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"left", ",", "right"}], "}"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rightC", "=", 
     RowBox[{"Reverse", "[", 
      RowBox[{"rightC", ",", 
       RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataC", "=", 
     RowBox[{"{", 
      RowBox[{"leftC", ",", "rightC"}], "}"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "find", " ", "maximal", " ", "common", " ", "dimensions", " ", "and", " ",
      "make", " ", "into", " ", "one", " ", "dataset", " ", "of", " ", "same",
      " ", "dimensions"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dimMax", "=", 
     RowBox[{"FindMaxDimensions", "[", "dataC", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dataP", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PadToDimensions", "[", 
         RowBox[{"#", ",", "dimMax"}], "]"}], "&"}], "/@", "dataC"}], "]"}]}],
     ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7548961301895275`*^9, 3.7548961547482977`*^9}, {
  3.7548962451826963`*^9, 3.754896265258726*^9}, {3.7548964883490496`*^9, 
  3.7548964898496*^9}, {3.7548965238705263`*^9, 3.7548965522816167`*^9}, {
  3.754896607389285*^9, 3.754896665362072*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"ccc5fd89-681d-4742-9855-ddf4ecfe57a6"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataP", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548965964969034`*^9, 3.7548965998974333`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"53fddc99-c4e8-45c0-a9f3-8bc732aba17d"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Joining multiple stacks", "Subsection",
 CellChangeTimes->{{3.7548959535708256`*^9, 3.7548959678359003`*^9}, {
  3.7555791021749706`*^9, 
  3.7555791092126975`*^9}},ExpressionUUID->"6033b32e-4c89-4553-869f-\
3243e5607bf1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dataJ", ",", "voxJ"}], "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ImportNii", "/@", 
     RowBox[{"FileNames", "[", 
      RowBox[{"\"\<Join*.nii.gz\>\"", ",", "\"\<\>\""}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"overlap", "=", "5"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "slice", " ", "overlap", " ", "between", " ", 
    "stacks"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.755579130003971*^9, 3.755579220092123*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"a0948096-3a17-480e-88aa-5f8f54122f9a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"all", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ArrayPad", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "]"}], "&"}], "/@", 
      "dataJ"}], ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MakeSliceImages", "[", 
   RowBox[{
    RowBox[{"GetSliceData", "[", 
     RowBox[{"all", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "140", "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"voxJ", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"ImageLegend", "\[Rule]", "True"}]}], "]"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7584383745606956`*^9, 3.758438458513606*^9}, 
   3.758439203171208*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"414b81d5-a5f7-405e-88ec-356977cae10c"],

Cell["\<\
With JoinSets multiple stacks which have overlapping slices can be joined \
into one set. 
If There is motion between the stacks this can be resolved using the option \
MotionCorrectSets which uses rigid registration of the overlap to align the \
sets.
Using JoinSetSplit the data can be split into a left and right side. \
\>", "Text",
 CellChangeTimes->{{3.75557935543929*^9, 3.7555794024582915`*^9}, {
  3.7555796023296337`*^9, 3.755579633544137*^9}, {3.758439242175694*^9, 
  3.7584392453430185`*^9}},ExpressionUUID->"7f20e0cc-33ba-4b02-a0c9-\
60eb0f4f1498"],

Cell[BoxData[
 RowBox[{"Column", "@", 
  RowBox[{"Options", "@", "JoinSets"}]}]], "Input",
 CellChangeTimes->{{3.7555792952002583`*^9, 3.755579301563833*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"33670142-c814-4498-b5e7-7e7f8a967c11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"joined", "=", 
   RowBox[{"JoinSets", "[", 
    RowBox[{"dataJ", ",", "overlap"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.755579226890072*^9, 3.755579254219699*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"58d93156-a8c6-41f9-b9b1-fcef6a398386"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MakeSliceImages", "[", 
      RowBox[{
       RowBox[{"GetSliceData", "[", 
        RowBox[{"all", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "140", "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"voxJ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"ImageLegend", "\[Rule]", "True"}]}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"MakeSliceImages", "[", 
      RowBox[{
       RowBox[{"GetSliceData", "[", 
        RowBox[{"joined", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "140", "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"voxJ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"ImageLegend", "\[Rule]", "True"}]}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7687996241793427`*^9, 3.7687996402444882`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"6b678fcd-e62e-4b59-b44a-6d3933285c04"],

Cell[BoxData[
 RowBox[{
  RowBox[{"joinedC", "=", 
   RowBox[{"JoinSets", "[", 
    RowBox[{"dataJ", ",", "overlap", ",", 
     RowBox[{"MotionCorrectSets", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.755579226890072*^9, 3.755579254219699*^9}, {
  3.7555794661552687`*^9, 3.7555794729238205`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"e6b3fb20-ac33-4f43-b582-08fbcf2dfdcb"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MakeSliceImages", "[", 
      RowBox[{
       RowBox[{"GetSliceData", "[", 
        RowBox[{"joined", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "140", "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"voxJ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"ImageLegend", "\[Rule]", "True"}]}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"MakeSliceImages", "[", 
      RowBox[{
       RowBox[{"GetSliceData", "[", 
        RowBox[{"joinedC", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "140", "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"voxJ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"ImageLegend", "\[Rule]", "True"}]}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.768801848948256*^9, 3.7688018828857217`*^9}, {
  3.7688019258459616`*^9, 
  3.768801926497698*^9}},ExpressionUUID->"86ed8633-ec47-4ba1-be57-\
e700c52982a5"],

Cell["\<\
Using MotionCorrectSets->True is similar to using CorrectjoinSetMotion\
\>", "Text",
 CellChangeTimes->{{3.758439253411528*^9, 
  3.75843928223833*^9}},ExpressionUUID->"80e50c85-aa4a-47c4-beb7-\
0309b49cd6c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"joinedC2", "=", 
   RowBox[{"JoinSets", "[", 
    RowBox[{
     RowBox[{"CorrectJoinSetMotion", "[", 
      RowBox[{"dataJ", ",", 
       RowBox[{"voxJ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "overlap"}], "]"}], ",", 
     "overlap"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584392837338314`*^9, 3.7584393160317907`*^9}, {
  3.7584394021774907`*^9, 
  3.758439402366995*^9}},ExpressionUUID->"73c1be5e-ad36-4648-8909-\
3528e2e910da"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"joined", ",", "joinedC", ",", 
   RowBox[{"voxJ", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7555792715562243`*^9, 3.755579290655113*^9}, {
  3.7555796934206696`*^9, 3.755579695114016*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"fc9202f0-a708-46b9-8993-d99ef8b9d57b"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"joined", ",", "joinedC2", ",", 
   RowBox[{"voxJ", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7555792715562243`*^9, 3.755579290655113*^9}, {
   3.7555796934206696`*^9, 3.755579695114016*^9}, 
   3.758439411551588*^9},ExpressionUUID->"f1990163-3f6a-4f58-af53-\
f8ca35b8f4a7"],

Cell[BoxData[
 RowBox[{"PlotData3D", "[", 
  RowBox[{"joined", ",", 
   RowBox[{"voxJ", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.755580174147581*^9, 3.75558020919563*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"d92afaa3-6d6b-4204-9fe8-9f4f22d4295d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vis1", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ArrayPad", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"-", "10"}]}], "]"}], "&"}], "/@", "dataJ"}], ",", "1"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vis2", "=", 
   RowBox[{"ArrayPad", "[", 
    RowBox[{"joined", ",", 
     RowBox[{"{", 
      RowBox[{"22", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7555847214767513`*^9, 3.755584805729162*^9}, {
  3.7555848588179345`*^9, 3.7555848721598897`*^9}, {3.7555849881995764`*^9, 
  3.7555849909446087`*^9}, {3.7555850278273573`*^9, 3.755585109091962*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"de6395af-73f2-4054-8b7c-bf1b424351e4"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"vis1", ",", "vis2", ",", 
   RowBox[{"voxJ", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "500"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.755584884875352*^9, 3.7555849150253825`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"f164bc20-17db-485f-bab3-bd1f8fca5c29"],

Cell[BoxData[
 RowBox[{
  RowBox[{"split", "=", 
   RowBox[{"SplitSets", "[", 
    RowBox[{"joined", ",", "7", ",", "5"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584347326051683`*^9, 3.7584347494823847`*^9}, {
  3.7584348910358076`*^9, 3.7584349309490457`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"f0370879-7fa9-4d95-9ac3-91e74e92672f"],

Cell[BoxData[
 RowBox[{"Dimensions", "/@", 
  RowBox[{"{", 
   RowBox[{"dataJ", ",", "joined", ",", "split"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7584349360205956`*^9, 3.758434949067378*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"c7506f17-b6e6-45d7-bb3c-531b214b21e6"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["General functions", "Subchapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7548957249234715`*^9, 3.7548957340260887`*^9}, 
   3.754896730602828*^9, {3.7584543478729453`*^9, 
   3.7584543507405863`*^9}},ExpressionUUID->"2d81b315-c178-4a19-82de-\
edec401ad759"],

Cell[CellGroupData[{

Cell["Define Data", "Subsection",
 CellChangeTimes->{{3.7584547733856807`*^9, 
  3.758454776199445*^9}},ExpressionUUID->"6ac426ee-2cf2-4609-a70a-\
b7bbae6bed70"],

Cell["\<\
Noise1 contains no zero values with mean 50 and standard deviation 10, noise \
2 has 10 zero columns\
\>", "Text",
 CellChangeTimes->{{3.7584547806476603`*^9, 3.758454816483077*^9}, {
  3.7584549997473*^9, 
  3.7584550122754955`*^9}},ExpressionUUID->"0d5ac3c1-0a5f-441b-82aa-\
56ceb05deba1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"noise1", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"50", ",", "10"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "60", ",", "70"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noise2", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"50", ",", "10"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "60", ",", "70"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noise2", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", "10"}]}], "]"}], "]"}], "=", 
   RowBox[{"0", 
    RowBox[{"noise2", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"1", ";;", "10"}]}], "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7584543728903065`*^9, 3.758454486434905*^9}, {
  3.758454557252824*^9, 3.7584545583231735`*^9}, {3.7584549043087444`*^9, 
  3.758455017443534*^9}, {3.758455049828519*^9, 3.7584550572053843`*^9}, {
  3.758455224724218*^9, 3.7584552291557035`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"17b788ed-dfdb-4bc8-8387-cc24a2843518"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"noise1", ",", "noise2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7584550187961307`*^9, 3.758455024372986*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"59e4d47e-c682-496c-8f5f-8a3d84d8ebfe"]
}, Closed]],

Cell[CellGroupData[{

Cell["Data Operations", "Subsection",
 CellChangeTimes->{{3.7584552323003864`*^9, 
  3.7584552380227914`*^9}},ExpressionUUID->"f6a0af4d-c709-4e10-972b-\
30d8c0b63b74"],

Cell["Rotate the dimensions left or right", "Text",
 CellChangeTimes->{{3.758455269368188*^9, 
  3.7584552810795007`*^9}},ExpressionUUID->"f5dfccdd-d0a8-49d0-9956-\
18c3955c2e22"],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Dimensions", "[", "noise1", "]"}], ",", 
   RowBox[{"Dimensions", "[", 
    RowBox[{"TransData", "[", 
     RowBox[{"noise1", ",", "\"\<l\>\""}], "]"}], "]"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Dimensions", "[", "noise1", "]"}], ",", 
   RowBox[{"Dimensions", "[", 
    RowBox[{"TransData", "[", 
     RowBox[{"noise1", ",", "\"\<r\>\""}], "]"}], "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.7584552414665833`*^9, 3.7584552658440447`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"259e8c14-471b-4fd7-99a3-e05a12e7c44b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Filters", "Subsection",
 CellChangeTimes->{{3.7584543604570937`*^9, 
  3.758454367958213*^9}},ExpressionUUID->"8519decb-a647-4082-a417-\
8490e787bc1d"],

Cell["Laplacian Filtering", "Text",
 CellChangeTimes->{{3.758454729816031*^9, 
  3.7584547691720047`*^9}},ExpressionUUID->"2542e184-2b55-431e-8712-\
57b4010b0208"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fil1", "=", 
   RowBox[{"LapFilter", "[", "noise2", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotData", "[", 
  RowBox[{"noise2", ",", "fil1", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"30", ",", "70"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.758454439402272*^9, 3.7584544485292573`*^9}, {
   3.758454493268995*^9, 3.758454510579565*^9}, {3.758454681539337*^9, 
   3.758454714835467*^9}, {3.7584549450761485`*^9, 3.758454945155693*^9}, 
   3.7688022351743865`*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"dfd024d4-6cd0-4f3e-978b-924b02a9eace"],

Cell["Find the local StandardDeviation", "Text",
 CellChangeTimes->{{3.758454729816031*^9, 
  3.7584547394974756`*^9}},ExpressionUUID->"8bd6ea94-2eed-481c-aad6-\
78ae01eb6ab7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fil2", "=", 
   RowBox[{"StdFilter", "[", 
    RowBox[{"noise2", ",", "5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotData", "[", 
  RowBox[{"noise2", ",", "fil2", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"30", ",", "70"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "15"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.758454512714678*^9, 3.7584545251230903`*^9}, {
   3.758454564263178*^9, 3.7584545732690616`*^9}, {3.7584546833811293`*^9, 
   3.758454693523153*^9}, {3.7584547270448294`*^9, 3.7584547479382086`*^9}, 
   3.7584548250450144`*^9, {3.758454948325635*^9, 3.7584549483722744`*^9}, 
   3.7688022340229635`*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"fb343542-47c9-446d-80da-03fd3e2252ae"]
}, Closed]],

Cell[CellGroupData[{

Cell["Operation ignoring zeros", "Subsection",
 CellChangeTimes->{{3.7584548402024508`*^9, 
  3.7584548490643578`*^9}},ExpressionUUID->"a08bed25-3efe-40d5-bc4e-\
9f803924dddc"],

Cell["Calculate statistics while ignoring zero values", "Text",
 CellChangeTimes->{{3.758455088824503*^9, 3.758455107620838*^9}, {
  3.7584552965942955`*^9, 
  3.758455298258358*^9}},ExpressionUUID->"69abaf44-84b6-4abe-bd7d-\
0b63dd967e4e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MeanNoZero", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}], ",", 
   RowBox[{"Mean", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7584548714341726`*^9, 3.758454888596833*^9}, {
  3.758455067525513*^9, 3.7584550866285696`*^9}, {3.7584551399090753`*^9, 
  3.7584551399879603`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"7d4f3e83-d26e-4cd2-9549-83ece73a5532"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MedianNoZero", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}], ",", 
   RowBox[{"Median", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.758455301330388*^9, 3.7584553080034685`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"eecbc129-2d09-4c25-91df-5406a1cd99e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MADNoZero", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}], ",", 
   RowBox[{"MedianDeviation", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7584551448745203`*^9, 3.7584551679240603`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"d0a3c222-4a31-4f3f-b352-e910a84f88bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"RMSNoZero", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}], ",", 
   RowBox[{"RootMeanSquare", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7584551750798836`*^9, 3.758455195990754*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"3687dac5-32c8-484e-8e0a-e79866596754"],

Cell["\<\
Mathematical operators ignoring zero values and keeping them zero.\
\>", "Text",
 CellChangeTimes->{{3.7584553267017984`*^9, 3.7584553393192234`*^9}, {
  3.758455420257972*^9, 
  3.75845542611469*^9}},ExpressionUUID->"91fc0eea-f728-45cb-8c20-\
ef67f376c886"],

Cell[BoxData[
 RowBox[{"Grid", "@", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Exp", "[", "0.", "]"}], ",", 
      RowBox[{"ExpNoZero", "[", "0.", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Log", "[", "0.", "]"}], ",", 
      RowBox[{"LogNoZero", "[", "0.", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "0."}], ",", 
      RowBox[{"DevideNoZero", "[", 
       RowBox[{"1", ",", "0"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.7584553933658457`*^9, 3.758455463921315*^9}, {
  3.7688023080278807`*^9, 3.768802315654275*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"94169326-674a-4442-b858-2906e886a2b0"],

Cell[BoxData[{
 RowBox[{"Quiet", "@", 
  RowBox[{"AllTrue", "[", 
   RowBox[{
    RowBox[{"noise1", "/", "noise2"}], ",", "NumericQ", ",", "3"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"AllTrue", "[", 
  RowBox[{
   RowBox[{"DevideNoZero", "[", 
    RowBox[{"noise1", ",", "noise2"}], "]"}], ",", "NumericQ", ",", "3"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.758455473676674*^9, 3.7584556912035503`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"2b83ea3b-6e52-4222-9a3a-9c2ffa1e2c9f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"noised", "=", 
   RowBox[{"DevideNoZero", "[", 
    RowBox[{"noise1", ",", "noise2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotData", "[", "noised", "]"}]}], "Input",
 CellChangeTimes->{{3.7584555218231277`*^9, 3.758455541096366*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"3bdb8d5b-aba4-46e3-94d0-0ebf4e2145f5"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Masking", "Subchapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7548957249234715`*^9, 3.7548957340260887`*^9}, {
   3.754896730602828*^9, 
   3.7548967366514826`*^9}},ExpressionUUID->"ff48cf42-cb85-4663-b23e-\
43657c60dfe7"],

Cell[CellGroupData[{

Cell["Import Data", "Subsection",
 CellChangeTimes->{{3.7549995580790825`*^9, 
  3.754999562037315*^9}},ExpressionUUID->"47e835ce-4699-4923-898e-\
db43e06f49d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "simple", " ", "3", "D", " ", "dataset", " ", "with", " ", 
    "segmentations"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "vox"}], "}"}], "=", 
     RowBox[{"ImportNii", "[", "\"\<twoLegs.nii\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"labels", ",", "vox"}], "}"}], "=", 
     RowBox[{"ImportNii", "[", "\"\<labels.nii\>\"", "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7548957374891505`*^9, 3.754895753834767*^9}, {
  3.7548968059006653`*^9, 3.7548968188103466`*^9}, {3.754996484117587*^9, 
  3.754996490273179*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"d9902e8c-2a9f-40e9-88a5-9c6eca85b9c9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Create Mask", "Subsection",
 CellChangeTimes->{{3.754896948255337*^9, 
  3.754896952256016*^9}},ExpressionUUID->"586003b9-59ba-4f2a-a670-\
aeb201812c92"],

Cell[CellGroupData[{

Cell["Automated and threshold masking", "Subsubsection",
 CellChangeTimes->{{3.754897629379714*^9, 
  3.754897646170933*^9}},ExpressionUUID->"69a2c8a5-fb3b-4839-94de-\
bdb3a0a3b69c"],

Cell["Normalize the data to the mean of the data", "Text",
 CellChangeTimes->{{3.758435238643988*^9, 
  3.7584352479102488`*^9}},ExpressionUUID->"04bdad1b-08c0-4975-a86c-\
fca0695bde0f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataN", "=", 
   RowBox[{"NormalizeData", "[", "data", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584352272494774`*^9, 3.7584352377225018`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"8607c804-68f1-4d3e-8467-339871a55b60"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Mask", "[", "dataN", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.75489694083027*^9, 3.7548969455958157`*^9}, 
   3.7584352520748158`*^9, {3.7655240259208345`*^9, 3.7655240309784946`*^9}, 
   3.7655240858064466`*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"76a2f7e3-7d49-45ab-aaf7-cdffb72eccbf"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", "mask"}], "]"}]], "Input",
 CellChangeTimes->{{3.754896956287656*^9, 3.7548969633718243`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"a853d33f-3e4d-4a97-be23-2d351b6b6b09"],

Cell["\<\
Clean up the mask. By default it will only find one mask component, but you \
can force the method to find more components.\
\>", "Text",
 CellChangeTimes->{{3.7584350855989523`*^9, 3.758435118937801*^9}, {
  3.7688023861994405`*^9, 
  3.7688024410295568`*^9}},ExpressionUUID->"e0643ea0-003f-48a0-b7b3-\
9ccba6e37a8e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cleanMask1", "=", 
   RowBox[{"SmoothMask", "[", "mask", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584350950829754`*^9, 3.7584350951481504`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"302b44be-ef86-48c9-aa2c-564b391aa0b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cleanMask2", "=", 
   RowBox[{"SmoothMask", "[", 
    RowBox[{"mask", ",", 
     RowBox[{"MaskComponents", "\[Rule]", "2"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758435097834414*^9, 3.7584351036756153`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"03e3091e-977d-4e2f-81d5-da8fb825aec4"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PlotContour", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"AutoCropData", "[", "#", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "vox"}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"mask", ",", "cleanMask1", ",", "cleanMask2"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.758439549186763*^9, 3.7584396152002277`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"b1b59af8-238e-45ed-aa75-edbfe25101fd"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"cleanMask1", ",", "cleanMask2"}], "}"}]}], ",", "vox"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7548968195865602`*^9, 3.75489682314767*^9}, {
   3.7548969267494087`*^9, 3.7548969272596483`*^9}, {3.754897123440123*^9, 
   3.7548971322361813`*^9}, {3.758435066268244*^9, 3.758435068234647*^9}, 
   3.7584351323951216`*^9},
 CellLabel->"In[62]:=",ExpressionUUID->"90b9f4a2-b104-45e2-93f3-8188b310c05e"],

Cell["\<\
Create mask based on threshold, smooth the mask, close holes larger then two, \
maintain two separate masks.
Default the algorithm finds only one mask but it is possible to maintain two \
separate masks.\
\>", "Text",
 CellChangeTimes->{{3.7548970239521685`*^9, 3.7548970593877783`*^9}, {
  3.7549965137525163`*^9, 
  3.754996538270686*^9}},ExpressionUUID->"b2a29537-e3dd-40af-9ab3-\
396f946f0c7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cleanMask1", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"data", ",", "15", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskClosing", "\[Rule]", "2"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7548969762405014`*^9, 3.754897019614797*^9}, {
  3.7548970656280413`*^9, 3.7548971136952505`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"ca643546-dc1d-430e-b21a-ecac262f9a1e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cleanMask2", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"data", ",", "15", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskClosing", "\[Rule]", "2"}], ",", 
     RowBox[{"MaskComponents", "\[Rule]", "2"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7548969762405014`*^9, 3.754897019614797*^9}, {
  3.7548971000115485`*^9, 3.7548971153576403`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"0ca068e9-45ab-4193-b700-ea079aa30009"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"cleanMask1", ",", "cleanMask2"}], "}"}]}], ",", "vox"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7548968195865602`*^9, 3.75489682314767*^9}, {
   3.7548969267494087`*^9, 3.7548969272596483`*^9}, {3.754897123440123*^9, 
   3.7548971322361813`*^9}, {3.758435066268244*^9, 3.758435068234647*^9}, 
   3.7584351453578053`*^9},
 CellLabel->"In[65]:=",ExpressionUUID->"3c45e684-0113-4b2f-9a58-889dba598670"],

Cell["Apply the mask", "Text",
 CellChangeTimes->{{3.7548984571554413`*^9, 
  3.7548984608932505`*^9}},ExpressionUUID->"cc0b2c2b-3f9b-46a3-812b-\
fdd16430c436"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataMask", "=", 
   RowBox[{"MaskData", "[", 
    RowBox[{"data", ",", "cleanMask2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754898464052139*^9, 3.754898476810136*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"0653d5ab-e1f9-42eb-9a3c-efc992067962"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", "dataMask"}], "]"}]], "Input",
 CellChangeTimes->{{3.754898478482792*^9, 3.754898483306509*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"06c51025-4365-4585-b0fb-f98b6c96c521"]
}, Closed]],

Cell[CellGroupData[{

Cell["Manual segmentation processing", "Subsubsection",
 CellChangeTimes->{{3.7548971432028255`*^9, 3.7548971624585037`*^9}, {
  3.754997254313919*^9, 
  3.7549972630274973`*^9}},ExpressionUUID->"ded5d62a-f398-4005-9427-\
e92efe288312"],

Cell["\<\
Separate a segmentation with multiple labels into individual masks.\
\>", "Text",
 CellChangeTimes->{{3.754897188163585*^9, 3.7548971975499716`*^9}, {
  3.7549966745269656`*^9, 
  3.754996682995769*^9}},ExpressionUUID->"30dac8a6-273d-4495-981c-\
2a1d6d3a8f80"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"seg", ",", "lab"}], "}"}], "=", 
   RowBox[{"SplitSegmentations", "[", "labels", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"lab", " ", 
  RowBox[{"(*", 
   RowBox[{"the", " ", "label", " ", "numbers"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "labels", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "seg", "]"}]}], "Input",
 CellChangeTimes->{{3.754897200405677*^9, 3.7548972097258873`*^9}, {
  3.7548973800581846`*^9, 3.754897407083606*^9}, {3.7549966939951077`*^9, 
  3.754996707304601*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"5d3cf964-b905-48d5-a57a-61d50ebef712"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"labels", ",", "seg"}], "]"}]], "Input",
 CellChangeTimes->{{3.7655242470091815`*^9, 3.7655242496937475`*^9}, {
  3.7688025721037664`*^9, 3.7688025757831926`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"0a118751-0dac-4729-ad1e-d7f094a26af9"],

Cell["Use masks to get mean value from data", "Text",
 CellChangeTimes->{{3.758437757266612*^9, 
  3.7584377887212005`*^9}},ExpressionUUID->"726f5912-6fe1-4cf0-b67e-\
2d661dfbc98b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"segData", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"GetMaskData", "[", 
      RowBox[{"data", ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"Transpose", "[", "seg", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584378127358265`*^9, 3.75843783967611*^9}, 
   3.758438200481134*^9},
 CellLabel->"In[72]:=",ExpressionUUID->"6ffb097a-81f0-4f7b-994e-a5ecaff9ecde"],

Cell[BoxData[
 RowBox[{"MeanStd", "/@", "segData"}]], "Input",
 CellChangeTimes->{{3.7584378427039266`*^9, 3.7584378485084696`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"793842ff-54de-40e7-8b1e-caad93d21916"],

Cell[BoxData[
 RowBox[{"MeanRange", "/@", "segData"}]], "Input",
 CellChangeTimes->{{3.7584378626683087`*^9, 3.7584378662372503`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"5130ff98-956a-4b72-a8af-0af211b0903e"],

Cell[BoxData[
 RowBox[{"TableForm", "@", 
  RowBox[{"GetMaskMeans", "[", 
   RowBox[{"data", ",", "seg", ",", "\"\<lab\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7584378015039597`*^9, 3.758437806384256*^9}, {
  3.7584381420497675`*^9, 3.758438189647224*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"fe0f0767-29b1-46ab-89a9-7c9514129412"],

Cell["\<\
Smooth the segmentations labels should be separate volumes and can be joined \
after smoothing\
\>", "Text",
 CellChangeTimes->{{3.7548974138922253`*^9, 3.7548974270718637`*^9}, {
  3.7549967229077616`*^9, 3.754996739591938*^9}, {3.754997287286001*^9, 
  3.7549972904431376`*^9}},ExpressionUUID->"1f4758f5-443f-4df8-b208-\
0f642bb70f02"],

Cell[BoxData[
 RowBox[{
  RowBox[{"segS", "=", 
   RowBox[{"SmoothSegmentation", "[", "seg", "]"}]}], ";"}]], "Input",
 CellLabel->"In[85]:=",ExpressionUUID->"510825b1-6656-4549-a8ae-a1243cb118fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"labelsS", "=", 
   RowBox[{"MergeSegmentations", "[", 
    RowBox[{"segS", ",", "lab"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754897429058359*^9, 3.7548974455303636`*^9}, {
   3.7548975010185823`*^9, 3.754897551866062*^9}, {3.7549967217767105`*^9, 
   3.7549967425199823`*^9}, 3.7655242451792927`*^9, 3.7655243573762045`*^9},
 CellLabel->"In[86]:=",ExpressionUUID->"4434b8fb-f66c-460e-a0c4-571c04a56121"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"labels", ",", "labelsS", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548974476027365`*^9, 3.75489744853773*^9}, {
  3.7548975206376605`*^9, 3.754897520693297*^9}, {3.754897554553789*^9, 
  3.754897560410267*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"9365ecdb-b734-4c5d-8503-bb51d35b6eac"],

Cell["If segmentations have overlaps they can be removed.", "Text",
 CellChangeTimes->{{3.754900015110106*^9, 3.7549000280632486`*^9}, {
  3.7549968084521008`*^9, 3.75499681990247*^9}, {3.7584353282033224`*^9, 
  3.75843534207345*^9}},ExpressionUUID->"460b4f2c-53bc-49cd-9398-\
41759cefa4a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"segDil", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Dilation", "[", 
       RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
     RowBox[{"Transpose", "[", "seg", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584353606845264`*^9, 3.7584353853861103`*^9}, {
  3.7584354600899343`*^9, 3.7584354650010266`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"3e8ca21d-0805-49fc-aa4d-9912aeb2dfcd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"labelsD", "=", 
   RowBox[{"MergeSegmentations", "[", 
    RowBox[{"segDil", ",", "lab"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labelsDCor", "=", 
   RowBox[{"MergeSegmentations", "[", 
    RowBox[{
     RowBox[{"RemoveMaskOverlaps", "[", "segDil", "]"}], ",", "lab"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7584353954389086`*^9, 3.758435424235038*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"b537de9b-c104-43d8-880b-c1a199590c8f"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"labelsD", ",", "labelsDCor"}], "]"}]], "Input",
 CellChangeTimes->{{3.7584354343956237`*^9, 3.7584354431801386`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"9f532b89-2b9a-45c6-a97a-44e8cda1cce1"],

Cell["\<\
Split a Segmentation in 5 equal parts along the slice direction\
\>", "Text",
 CellChangeTimes->{{3.754900015110106*^9, 3.7549000280632486`*^9}, {
  3.7549968084521008`*^9, 
  3.75499681990247*^9}},ExpressionUUID->"1b611f18-649c-473d-992a-\
229c3cb8c4f4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"segSplit", "=", 
   RowBox[{"SegmentMask", "[", 
    RowBox[{
     RowBox[{"segS", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "5"}], "]"}], "]"}], ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "segSplit", "]"}]}], "Input",
 CellChangeTimes->{{3.7549000341808167`*^9, 3.754900077803177*^9}, {
  3.7549968320547333`*^9, 3.754996849848937*^9}, {3.7549969480467005`*^9, 
  3.7549969627801375`*^9}, {3.7549973916421013`*^9, 3.75499739634338*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"abe1de54-7eda-49dd-816f-028249e80717"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"segPlot", "=", 
   RowBox[{"MergeSegmentations", "[", 
    RowBox[{
     RowBox[{"Transpose", "@", "segSplit"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"Flatten", "@", 
   RowBox[{"MakeSliceImages", "[", 
    RowBox[{
     RowBox[{"GetSliceData", "[", 
      RowBox[{"segPlot", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "90", "}"}], ",", 
         RowBox[{"{", "57", "}"}]}], "}"}]}], "]"}], ",", "vox", ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
     RowBox[{"ImageLegend", "\[Rule]", "True"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7549968586522613`*^9, 3.7549969027831244`*^9}, {
   3.7549971148782835`*^9, 3.754997193776729*^9}, 3.7549972305497293`*^9, {
   3.754997362242589*^9, 3.754997385157033*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"524331ef-fe4b-4ceb-9bd0-466fdbff5ae8"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rescaling Segmentations", "Subsection",
 CellChangeTimes->{{3.7548982710095882`*^9, 
  3.754898277261891*^9}},ExpressionUUID->"cf83491c-53d6-4317-902a-\
83e581aa5dc7"],

Cell[BoxData[{
 RowBox[{"Dimensions", "[", "labels", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labelsRescale", "=", 
   RowBox[{"RescaleSegmentation", "[", 
    RowBox[{"labels", ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "100", ",", "100"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "labelsRescale", "]"}]}], "Input",
 CellChangeTimes->{{3.7548983134739094`*^9, 3.7548983442978315`*^9}, 
   3.7548984151164074`*^9},
 CellLabel->
  "In[124]:=",ExpressionUUID->"295b97a0-e9dc-4121-923c-5eaf1358301e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"data", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskComponents", "\[Rule]", "2"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Dimensions", "[", "mask", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maskRescale", "=", 
   RowBox[{"RescaleSegmentation", "[", 
    RowBox[{"mask", ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "100", ",", "100"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "maskRescale", "]"}]}], "Input",
 CellChangeTimes->{{3.7548984416639953`*^9, 3.754898450361798*^9}, 
   3.75489851302268*^9, {3.765524412418682*^9, 3.7655244329762945`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"f34b5322-4762-42a1-b96d-7c26a6f0c9fb"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"labelsRescale", ",", "maskRescale"}], "]"}]], "Input",
 CellChangeTimes->{{3.754898351665933*^9, 3.7548983535309544`*^9}, {
  3.7548984184096174`*^9, 3.754898420601936*^9}, {3.7548985162034864`*^9, 
  3.754898518921974*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"da20adbf-60c7-4030-adc2-fd83c41d3f1b"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Registration using ",
 StyleBox["Elastix",
  IgnoreSpellCheck->True]
}], "Subchapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7550018766471777`*^9, 3.75500188405846*^9}, 
   3.7554985306225977`*^9},ExpressionUUID->"7e315242-c9a0-48d7-a79c-\
e62367557aee"],

Cell[CellGroupData[{

Cell["Import Data", "Subsection",
 CellChangeTimes->{{3.755001887184451*^9, 
  3.7550018903509445`*^9}},ExpressionUUID->"932638bc-7c62-479b-bb0d-\
3cffa205baac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"data", ",", "vox"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<twoLegs.nii\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"water", ",", "voxW"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<water.nii.gz\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fat", ",", "voxF"}], "}"}], "=", 
    RowBox[{"ImportNii", "[", "\"\<fat.nii.gz\>\"", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maskw", "=", 
   RowBox[{"Dilation", "[", 
    RowBox[{
     RowBox[{"Mask", "[", "water", "]"}], ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maskd", "=", 
    RowBox[{"Dilation", "[", 
     RowBox[{
      RowBox[{"Mask", "[", "data", "]"}], ",", "5"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataS", "=", 
   RowBox[{"First", "@", 
    RowBox[{"AutoCropData", "[", 
     RowBox[{"First", "@", 
      RowBox[{"CutData", "[", "data", "]"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7550019174395823`*^9, 3.7550019801348104`*^9}, {
   3.7554970050231967`*^9, 3.755497020462471*^9}, {3.755497070579788*^9, 
   3.755497089024849*^9}, 3.755497197154114*^9, {3.755498244863391*^9, 
   3.75549825377567*^9}, {3.7554983679412785`*^9, 3.7554983689980946`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"fbf5ef71-e74a-4a87-867e-8a3346fab1f4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Affine Transformation", "Subsection",
 CellChangeTimes->{{3.7554969356157484`*^9, 
  3.7554969409560246`*^9}},ExpressionUUID->"5c27d6f6-8cde-4515-862a-\
aa9c9642bd78"],

Cell["Transform a dataset", "Text",
 CellChangeTimes->{{3.7550025866078415`*^9, 
  3.755002593789109*^9}},ExpressionUUID->"4c5eacb3-63dd-4261-bae3-\
aa2546f96de9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rot", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "10", ",", 
     RowBox[{"-", "5"}]}], "}"}]}], ";", 
  RowBox[{"trans", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "10", ",", 
     RowBox[{"-", "5"}]}], "}"}]}], ";", 
  RowBox[{"scale", "=", 
   RowBox[{"{", 
    RowBox[{"1.05", ",", "1.10", ",", "0.95"}], "}"}]}], ";", 
  RowBox[{"scew", "=", 
   RowBox[{"{", 
    RowBox[{"0.0", ",", "0.0", ",", "0.00"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"rot", ",", "trans", ",", "scale", ",", "scew"}], "}"}], "]"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{
  3.7554935427180634`*^9, {3.7554936688766527`*^9, 3.7554936711797667`*^9}, {
   3.755493857645252*^9, 3.755493860590698*^9}, {3.755493921859911*^9, 
   3.755493924898139*^9}, {3.7554940882691007`*^9, 3.7554941002690487`*^9}, {
   3.755494147293077*^9, 3.755494151323444*^9}, {3.7554949317268133`*^9, 
   3.7554949574041276`*^9}, {3.7554950103346453`*^9, 
   3.7554950121565256`*^9}, {3.7554950576477118`*^9, 3.755495098843875*^9}, {
   3.755495251868786*^9, 3.755495259885165*^9}, {3.7554953240931206`*^9, 
   3.755495329594754*^9}, {3.7554961133439054`*^9, 3.75549613987008*^9}, 
   3.7554961714243813`*^9, {3.7554962575032167`*^9, 3.755496258845815*^9}, {
   3.7554965736785517`*^9, 3.755496576428899*^9}, {3.7554966608794184`*^9, 
   3.7554966685258923`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"63000fed-904c-4a4f-b696-9368e0f79cb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataT", "=", 
   RowBox[{"DataTransformation", "[", 
    RowBox[{"dataS", ",", "vox", ",", "w", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7550036180647516`*^9, 3.7550036920620947`*^9}, {
   3.755004077409649*^9, 3.7550041133533134`*^9}, 3.7554934700311456`*^9, {
   3.755493502350135*^9, 3.7554935405656757`*^9}, 3.7554972023038435`*^9, {
   3.755497234848613*^9, 3.7554972378395543`*^9}, 3.7584358146511583`*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"816e27ef-b777-4331-a0c7-f21e570a53c8"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataS", ",", "dataT", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7550022340223675`*^9, 3.755002252298395*^9}, 
   3.755497204974934*^9},
 CellLabel->
  "In[166]:=",ExpressionUUID->"914da50d-8987-45c6-86c2-efa574454895"],

Cell["\<\
Register data using default parameters, however use affineDTI to ensure \
output of scale skew, rot and trans as transform instead of the translation \
rotation matrix.\
\>", "Text",
 CellChangeTimes->{{3.7550037015844655`*^9, 
  3.7550037516765904`*^9}},ExpressionUUID->"71e298ab-c4f6-4b0e-9225-\
05f491f97805"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataS", ",", "dataT"}], "]"}]], "Input",
 CellChangeTimes->{{3.8293709626311665`*^9, 3.8293709667513037`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"e2c62f91-87ae-4684-9c45-f35ac0d1d1e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"dataS", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.829371978096118*^9, 3.829371984168358*^9}, {
  3.8293720731967287`*^9, 3.8293720789962473`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"baed26dd-0455-4c7c-8a1b-0fa20555865e"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataS", ",", "mask"}], "]"}]], "Input",
 CellChangeTimes->{{3.8293719850380554`*^9, 3.829371988762413*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"d10f611a-3618-4a47-bf35-3dfcdb3b7e18"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataR", "=", 
   RowBox[{"RegisterData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dataS", ",", "mask", ",", "vox"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"dataT", ",", "vox"}], "}"}], ",", 
     RowBox[{"DeleteTempDirectory", "\[Rule]", "False"}], ",", 
     RowBox[{"Iterations", "\[Rule]", "250"}], ",", 
     RowBox[{"MethodReg", "\[Rule]", "\"\<affine\>\""}], ",", 
     RowBox[{"NumberSamples", "\[Rule]", "2000"}], ",", 
     RowBox[{"Resolutions", "\[Rule]", "1"}], ",", 
     RowBox[{"TempDirectory", "\[Rule]", "\"\<temp\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7550023988649707`*^9, 3.7550024494733624`*^9}, {
   3.755002535812727*^9, 3.7550025408794737`*^9}, 3.755002634724679*^9, {
   3.7550028984936285`*^9, 3.7550029092135963`*^9}, {3.755003190934188*^9, 
   3.755003197011985*^9}, {3.755003506953833*^9, 3.7550035156619873`*^9}, {
   3.7554937732977695`*^9, 3.755493773625546*^9}, {3.755496822865201*^9, 
   3.755496823631248*^9}, {3.7554968777917175`*^9, 3.755496889230296*^9}, 
   3.755496966880742*^9, 3.755497213807523*^9, {3.7603537926945276`*^9, 
   3.760353801002678*^9}, {3.760355225228295*^9, 3.7603552278192377`*^9}, {
   3.760780271039136*^9, 3.7607802711243715`*^9}, {3.7655245882755346`*^9, 
   3.765524588542246*^9}, {3.8293708829913855`*^9, 3.8293708896093583`*^9}, {
   3.829371005930195*^9, 3.8293710354471645`*^9}, {3.829371381563196*^9, 
   3.8293713991315727`*^9}, {3.829372083629218*^9, 3.829372085121773*^9}, {
   3.829372781996848*^9, 3.829372790824048*^9}, {3.8293737010096006`*^9, 
   3.829373712264394*^9}, {3.8293737593508773`*^9, 3.829373767227377*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"1c36b922-6e1f-438c-8272-93926ea59256"],

Cell["\<\
The last output can be used to transform the data according to the last \
registration results.\
\>", "Text",
 CellChangeTimes->{{3.758435601020697*^9, 
  3.7584356338497334`*^9}},ExpressionUUID->"9b6ebdf0-bddb-44b7-968e-\
d85858606ab3"],

Cell[BoxData[
 RowBox[{"Options", "[", "TransformData", "]"}]], "Input",
 CellChangeTimes->{{3.8293738367291217`*^9, 3.8293738456737256`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"1b339f6e-472b-4aad-8eef-0e5b926333fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataR2", "=", 
   RowBox[{"TransformData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dataT", ",", "vox"}], "}"}], ",", 
     RowBox[{"DeleteTempDirectory", "\[Rule]", "False"}], ",", 
     RowBox[{"TempDirectory", "\[Rule]", "\"\<temp\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7584356534685717`*^9, 3.7584356945386114`*^9}, {
  3.7584357315818825`*^9, 3.7584357400423775`*^9}, {3.829373848909996*^9, 
  3.8293738543219557`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"da3d4eea-df63-4b2e-b74e-059cacab7254"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataR2", ",", "dataR"}], "]"}]], "Input",
 CellChangeTimes->{{3.758435696450838*^9, 3.758435703242414*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"102974f4-2d9b-4cde-bfaf-358b8fb9ac16"],

Cell["\<\
Compare the input transformation to the output transformation of elastix.\
\>", "Text",
 CellChangeTimes->{{3.755003769101974*^9, 3.7550037929279623`*^9}, {
  3.7554952677230234`*^9, 
  3.7554952698980217`*^9}},ExpressionUUID->"619ccb59-1402-4b29-83d1-\
c92d637ab02a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inpTran", "=", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{"rot", ",", "trans", ",", "scale", ",", "scew"}], "}"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasTran", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"First", "@", 
        RowBox[{"ReadTransformParameters", "[", 
         RowBox[{"$TemporaryDirectory", "<>", "\"\<\\\\QMRIToolsReg\>\""}], 
         "]"}]}], ",", "3"}], "]"}], ",", "0.01"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7550038191867886`*^9, 3.7550038270044966`*^9}, {
  3.755496835679539*^9, 3.7554968567675114`*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"8ceb4c98-d616-490c-8fb5-4843ba78006c"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TableForm", "[", 
      RowBox[{"#", ",", 
       RowBox[{"TableHeadings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<rot\>\"", ",", "\"\<trans\>\"", ",", "\"\<scale\>\"", ",", 
            "\"\<skew\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<z\>\"", ",", "\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}],
          "}"}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"inpTran", ",", "elasTran"}], "}"}]}], ",", "\"\<     \>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.755496756624278*^9, 3.755496802430605*^9}, {
  3.7554968548172693`*^9, 3.7554968664934816`*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"3696fe4f-f01d-45bd-92a4-16e14eb5f35f"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"dataS", "-", "dataT"}], ",", 
   RowBox[{"dataS", "-", "dataR"}], ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.75500313369658*^9, 3.7550031501992936`*^9}, {
  3.7655245717982025`*^9, 3.7655245734715223`*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"09229319-c33b-4e4a-ba78-73bea25fef4c"]
}, Closed]],

Cell[CellGroupData[{

Cell["B-spline Registration of two legs", "Subsection",
 CellChangeTimes->{{3.7554969738975*^9, 3.7554969829936905`*^9}, {
  3.755497119471081*^9, 3.755497119982411*^9}, {3.755497161169385*^9, 
  3.7554971633752675`*^9}},ExpressionUUID->"c10c058b-a500-4c2d-bffa-\
2955b14de21a"],

Cell[CellGroupData[{

Cell["Full Registration", "Subsubsection",
 CellChangeTimes->{{3.7554980649307795`*^9, 
  3.755498069987264*^9}},ExpressionUUID->"adaf1997-c6af-46c4-ae60-\
0fb87f7483c2"],

Cell["\<\
First Perform Rigid registration to align and upscale data, then use b-spline \
to correct non rigid deformations\
\>", "Text",
 CellChangeTimes->{{3.755497446401965*^9, 3.7554974866711407`*^9}, 
   3.7554975985448885`*^9},ExpressionUUID->"8fc205d5-3384-40ca-a0e5-\
a8c9f829c920"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataB", "=", 
   RowBox[{"RegisterDataSplit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"water", ",", "maskw", ",", "voxW"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"data", ",", "maskd", ",", "vox"}], "}"}], ",", 
     RowBox[{"Iterations", "\[Rule]", "250"}], ",", 
     RowBox[{"MethodReg", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<rigid\>\"", ",", "\"\<bspline\>\""}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.755497124088678*^9, 3.7554971281453304`*^9}, {
  3.7554973375502577`*^9, 3.755497361022441*^9}, {3.75549739332679*^9, 
  3.755497424319078*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"646203ff-d303-4507-9da0-c6c6b2da4b18"],

Cell["Show the result using FlipView", "Text",
 CellChangeTimes->{{3.7554979330790215`*^9, 
  3.7554979449646964`*^9}},ExpressionUUID->"869142fd-77a5-4044-bfa0-\
ffaeaff29d3f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pos", "=", 
   RowBox[{"GetSlicePositions", "[", 
    RowBox[{"dataB", ",", 
     RowBox[{"MakeCheckPlot", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datIm", "=", 
   RowBox[{"Grid", "@", 
    RowBox[{"MakeSliceImages", "[", 
     RowBox[{
      RowBox[{"GetSliceData", "[", 
       RowBox[{"dataB", ",", "pos"}], "]"}], ",", "voxW", ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"watIm", "=", 
   RowBox[{"Grid", "@", 
    RowBox[{"MakeSliceImages", "[", 
     RowBox[{
      RowBox[{"GetSliceData", "[", 
       RowBox[{"water", ",", "pos"}], "]"}], ",", "voxW", ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"FlipView", "[", 
  RowBox[{"{", 
   RowBox[{"datIm", ",", "watIm"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7549001402595067`*^9, 3.7549001450991135`*^9}, {
  3.754900182877452*^9, 3.75490019767517*^9}, {3.7549971051334467`*^9, 
  3.75499710529536*^9}, {3.755497779940259*^9, 3.7554978936477385`*^9}, {
  3.755497951667218*^9, 3.755497959091016*^9}},
 CellLabel->
  "In[331]:=",ExpressionUUID->"c5d26f17-e5d3-4460-99c6-c6d6d4fc11dd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Constrained in one direction", "Subsubsection",
 CellChangeTimes->{{3.755498072434825*^9, 
  3.755498082354246*^9}},ExpressionUUID->"f38c2344-3618-4b65-86d0-\
b42b8689639d"],

Cell["\<\
Constrain the b-spline to one direction, e.g. the EPI phase encoding\
\>", "Text",
 CellChangeTimes->{{3.755497446401965*^9, 3.7554975197909365`*^9}, 
   3.7554980513906684`*^9},ExpressionUUID->"8b20a75d-31f3-4056-ac74-\
f1127d0d96dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataB2", "=", 
   RowBox[{"RegisterDataSplit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"water", ",", "maskw", ",", "voxW"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"data", ",", "maskd", ",", "vox"}], "}"}], ",", 
     RowBox[{"Iterations", "\[Rule]", "250"}], ",", 
     RowBox[{"NumberSamples", "\[Rule]", "4000"}], ",", " ", 
     RowBox[{"MethodReg", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<rigid\>\"", ",", "\"\<bspline\>\""}], "}"}]}], ",", 
     RowBox[{"BsplineDirections", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ",", 
     RowBox[{"BsplineSpacing", "\[Rule]", "25"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.755497124088678*^9, 3.7554971281453304`*^9}, {
  3.7554973375502577`*^9, 3.755497361022441*^9}, {3.75549739332679*^9, 
  3.755497424319078*^9}, {3.755497990528892*^9, 3.755498016273543*^9}, {
  3.755498142259413*^9, 3.755498169600134*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"e8e00cae-5dc7-462d-8948-526b28aeb597"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pos", "=", 
   RowBox[{"GetSlicePositions", "[", 
    RowBox[{"dataB2", ",", 
     RowBox[{"MakeCheckPlot", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datIm", "=", 
   RowBox[{"Grid", "@", 
    RowBox[{"MakeSliceImages", "[", 
     RowBox[{
      RowBox[{"GetSliceData", "[", 
       RowBox[{"dataB2", ",", "pos"}], "]"}], ",", "voxW", ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"watIm", "=", 
   RowBox[{"Grid", "@", 
    RowBox[{"MakeSliceImages", "[", 
     RowBox[{
      RowBox[{"GetSliceData", "[", 
       RowBox[{"water", ",", "pos"}], "]"}], ",", "voxW", ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"FlipView", "[", 
  RowBox[{"{", 
   RowBox[{"datIm", ",", "watIm"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7549001402595067`*^9, 3.7549001450991135`*^9}, {
  3.754900182877452*^9, 3.75490019767517*^9}, {3.7549971051334467`*^9, 
  3.75499710529536*^9}, {3.755497779940259*^9, 3.7554978936477385`*^9}, {
  3.755497951667218*^9, 3.755497959091016*^9}, {3.7554980024647155`*^9, 
  3.755498007583373*^9}},
 CellLabel->
  "In[336]:=",ExpressionUUID->"a8ab54f5-bbbb-4ea9-a109-96d066fc16c2"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Register And Apply to other Data", "Subsection",
 CellChangeTimes->{{3.7554982597977324`*^9, 
  3.755498271396658*^9}},ExpressionUUID->"52e9fa03-400d-4512-9bf9-\
1437a0e5fcb7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"watR", ",", "fatR"}], "}"}], "=", 
   RowBox[{"RegisterDataTransform", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "maskd", ",", "vox"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"water", ",", "maskw", ",", "voxW"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"fat", ",", "voxF"}], "}"}], ",", 
     RowBox[{"MethodReg", "\[Rule]", "\"\<affine\>\""}], ",", 
     RowBox[{"Iterations", "\[Rule]", "250"}], ",", " ", 
     RowBox[{"DeleteTempDirectory", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.755498275094519*^9, 3.755498319890134*^9}, {
   3.7554983831047416`*^9, 3.7554983952150755`*^9}, {3.7554984445763817`*^9, 
   3.7554984498083334`*^9}, 3.7584361136142426`*^9, {3.760357623138256*^9, 
   3.760357626463493*^9}, {3.82937395602829*^9, 3.829373959843869*^9}, 
   3.8293739979094467`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"3efd9f8d-ac18-4503-896c-60556b22f764"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"watR", ",", "fatR"}], "}"}], "]"}], ",", "vox"}], 
  "]"}]], "Input",
 CellLabel->"In[20]:=",ExpressionUUID->"0cbe21c8-5790-42e6-a0ba-1f030e3e5997"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"watRS", ",", "fatRS"}], "}"}], "=", 
   RowBox[{"RegisterDataTransformSplit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "maskd", ",", "vox"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"water", ",", "maskw", ",", "voxW"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"fat", ",", "voxF"}], "}"}], ",", 
     RowBox[{"MethodReg", "\[Rule]", "\"\<affine\>\""}], ",", 
     RowBox[{"Iterations", "\[Rule]", "10"}], ",", 
     RowBox[{"DeleteTempDirectory", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.755498275094519*^9, 3.755498319890134*^9}, {
  3.7554983831047416`*^9, 3.7554983952150755`*^9}, {3.7554984445763817`*^9, 
  3.7554984498083334`*^9}, {3.758436068173047*^9, 3.758436069372244*^9}, {
  3.7685395567423387`*^9, 3.768539567048854*^9}, {3.768539629002274*^9, 
  3.768539629076474*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"27a1cde0-d94a-47cf-abeb-3c946e78e8b6"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"watRS", ",", "fatRS"}], "}"}], "]"}], ",", "vox"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7554984005698614`*^9, 3.7554984135662374`*^9}, {
  3.7584360760791397`*^9, 
  3.758436077389354*^9}},ExpressionUUID->"d1be5a12-791a-4350-96bc-\
97a8b33f7dcb"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dixon and Phase unwrapping", "Subchapter",
 CellChangeTimes->{{3.7548951014856977`*^9, 
  3.754895112634607*^9}},ExpressionUUID->"bd72d8f9-e5f9-4dc6-8f74-\
865e5a0d73d1"],

Cell[CellGroupData[{

Cell["Simulated phase unwrapping", "Subsection",
 CellChangeTimes->{{3.7548951197254925`*^9, 3.754895134108882*^9}, {
  3.7548952739283686`*^9, 3.754895275862955*^9}, {3.758467755337638*^9, 
  3.7584677709681816`*^9}},ExpressionUUID->"a6da33c3-efdf-4208-ba9d-\
24feeed10a88"],

Cell[CellGroupData[{

Cell["Simulate some Data", "Subsubsection",
 CellChangeTimes->{{3.7548989462240496`*^9, 3.754898949663735*^9}, {
  3.754998398991782*^9, 
  3.7549984023582215`*^9}},ExpressionUUID->"2edddb44-1bfb-48ca-829f-\
4e01ababe642"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xdat", "=", 
    RowBox[{"ydat", "=", "250"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"Create", " ", "some", " ", "gradients"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gradients", "=", 
    RowBox[{"N", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "+", "j"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"10", " ", 
            RowBox[{"Sqrt", "[", "i", "]"}]}], " ", "+", 
           RowBox[{"10", " ", 
            RowBox[{"Sqrt", "[", "j", "]"}]}]}], ")"}], ",", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"i", "-", 
              RowBox[{".5", "xdat"}]}], "]"}], "1.2"], "+", 
           RowBox[{"4", " ", 
            RowBox[{"Sqrt", "[", "j", "]"}]}]}], ")"}], " ", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"2", "Pi", " ", 
             RowBox[{"(", 
              RowBox[{"i", "/", "60"}], ")"}]}], "]"}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "Pi", " ", 
             RowBox[{"(", 
              RowBox[{"j", "/", "60"}], ")"}]}], "]"}]}], ")"}]}], "}"}], ",",
        " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "xdat"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", "ydat"}], "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"normalize", " ", "and", " ", "add", " ", "some", " ", "noise"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noise", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", 
       RowBox[{"1", "/", "100"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"xdat", ",", "ydat"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gradients", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"noise", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "-", 
           RowBox[{"Min", "[", "#", "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Max", "[", "#", "]"}], "-", 
           RowBox[{"Min", "[", "#", "]"}]}], ")"}]}], "-", "0.5"}], ")"}], 
      "&"}], "/@", 
     RowBox[{"TransData", "[", 
      RowBox[{"gradients", ",", "\"\<r\>\""}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "numer", " ", "of", " ", "wraps", " ", "over", " ", "the", " ", 
    "gradient"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nwraps", "=", 
   RowBox[{"{", 
    RowBox[{"10", ",", "10", ",", "5", ",", "5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"un", "=", 
    RowBox[{"nwraps", "*", "2", "Pi", " ", "gradients"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"wrap", " ", "the", " ", "data"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"im", " ", "=", 
   RowBox[{"Mod", "[", 
    RowBox[{"un", ",", 
     RowBox[{"2", "Pi"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549976917055855`*^9, 3.754997793597664*^9}, 
   3.754997849787154*^9, {3.754997938490676*^9, 3.754997938950401*^9}, {
   3.7549980726370535`*^9, 3.754998097766305*^9}, {3.754998131589113*^9, 
   3.7549983965618825`*^9}, {3.7549984543741026`*^9, 3.754998533495485*^9}, {
   3.7549985780393105`*^9, 3.7549985926172285`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"9b91eb61-00ab-48df-a447-fedb2fd2f5db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Show", " ", "The", " ", "wrapped", " ", "data"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"GraphicsRow", "[", 
   RowBox[{
    RowBox[{"ArrayPlot", "/@", "im"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.754899296253713*^9, 3.754899302074945*^9}, {
  3.7548997047204943`*^9, 3.754899726571189*^9}, {3.7548999202062306`*^9, 
  3.754899923419654*^9}, {3.7549985691741757`*^9, 3.754998575763955*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"8d073112-10fc-4030-921c-ef26a3c0437e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Unwrap simulated Data", "Subsubsection",
 CellChangeTimes->{{3.7548952024977303`*^9, 3.7548952076400723`*^9}, 
   3.7548952687600183`*^9},ExpressionUUID->"b587fa99-4fd2-4a9f-84c3-\
cef7608ce734"],

Cell[BoxData[
 RowBox[{
  RowBox[{"unw", "=", 
   RowBox[{"Unwrap", "/@", "im"}]}], ";"}]], "Input",
 CellLabel->
  "In[104]:=",ExpressionUUID->"1d7b806a-dd41-45bf-9618-e62a5081374b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"correct", " ", "to", " ", "mean", " ", "phase"}], " ", "=", 
    "0"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"unw2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "-", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"Mean", "[", 
           RowBox[{"Flatten", "[", "#", "]"}], "]"}], ",", 
          RowBox[{"2", "Pi"}]}], "]"}]}], "&"}], "/@", "unw"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"un2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "-", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"Mean", "[", 
           RowBox[{"Flatten", "[", "#", "]"}], "]"}], ",", 
          RowBox[{"2", "Pi"}]}], "]"}]}], "&"}], "/@", "un"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Show", " ", "the", " ", "results"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"ArrayPlot", ",", 
       RowBox[{"{", 
        RowBox[{"im", ",", "un2", ",", "unw2"}], "}"}], ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.754899510078083*^9, 3.7548996092769794`*^9}, {
   3.754899730076022*^9, 3.754899740058651*^9}, 3.754899897935336*^9, {
   3.754998598008664*^9, 3.7549986049417105`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"7e46033f-85f1-4dc7-bd60-9ce5bc39fd40"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dixon data", "Subsection",
 CellChangeTimes->{{3.754895417479931*^9, 3.754895434517124*^9}, 
   3.754997531203142*^9},ExpressionUUID->"7b0ca489-2d98-4b70-8d0f-\
822a0387c0f1"],

Cell[CellGroupData[{

Cell["Import Data", "Subsubsection",
 CellChangeTimes->{{3.754997533020477*^9, 
  3.7549975367605343`*^9}},ExpressionUUID->"177a1753-5f03-4991-89d8-\
98a1aa966a50"],

Cell["\<\
Very specific case of dixon data converted from a phipils MRI scanner with \
magnitude, phase, real, imaginary, fat, water and B0 which was converted from \
dcm to Nii using DcmToNii.
You only need the real and imaginary data to perform the reconstructions. \
\>", "Text",
 CellChangeTimes->{{3.7548954792598314`*^9, 3.7548955300130854`*^9}, 
   3.7549026270064087`*^9, {3.7549986310072975`*^9, 
   3.7549986675954037`*^9}},ExpressionUUID->"87f508a6-1540-4424-bb30-\
6ac782debcec"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dix", ",", " ", "B0", ",", 
     RowBox[{"{", 
      RowBox[{"real", ",", "imag", ",", "mag", ",", "phase"}], "}"}], ",", 
     "dixvox"}], "}"}], "=", 
   RowBox[{"ImportNiiDix", "[", "\"\<Dixondata.nii\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.754895436716581*^9, 3.754895475639389*^9}, {
  3.7548955587023845`*^9, 3.7548956000566998`*^9}, {3.7548956465255575`*^9, 
  3.754895647049635*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"423e2d86-3a51-46b3-9197-72f7f0028581"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"nEcho", ",", "echo"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0.76"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"echos", "=", 
    RowBox[{
     RowBox[{"Range", "[", "nEcho", "]"}], 
     RowBox[{"echo", "/", "1000"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"in", " ", "seconds"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7549009826085634`*^9, 3.7549010174370785`*^9}, {
  3.7549013021727595`*^9, 3.75490131146694*^9}, {3.754902432765706*^9, 
  3.7549024396770434`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"58d81c30-8194-49d8-99f2-afe922769900"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"real", ",", "imag", ",", "dixvox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548955873392324`*^9, 3.754895602809918*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"d5065ca8-34be-491d-8e7c-859fa128d3ef"],

Cell["Mask the background for better fitting", "Text",
 CellChangeTimes->{{3.754998713229601*^9, 
  3.754998728766362*^9}},ExpressionUUID->"5d8722a6-0f30-46da-9a66-\
70fc6e81a4e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"meanMag", "=", 
   RowBox[{"NormalizeData", "[", 
    RowBox[{"Mean", "@", 
     RowBox[{"Transpose", "@", "mag"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mask", "=", 
    RowBox[{"Mask", "[", 
     RowBox[{"meanMag", ",", "5", ",", 
      RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
      RowBox[{"MaskComponents", "\[Rule]", "2"}], ",", 
      RowBox[{"MaskClosing", "\[Rule]", "2"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"real", ",", "imag", ",", "mag", ",", "phase"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"MaskData", "[", 
      RowBox[{"#", ",", "mask"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"real", ",", "imag", ",", "mag", ",", "phase"}], "}"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.754901597258956*^9, 3.754901597375744*^9}, {
  3.754998684206936*^9, 3.7549987122940793`*^9}, {3.754998827495366*^9, 
  3.7549988310379753`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"cdcc633d-9298-474d-8926-467ed718c7df"]
}, Closed]],

Cell[CellGroupData[{

Cell["Create a B0Map from phase data", "Subsubsection",
 CellChangeTimes->{{3.7549011981743827`*^9, 
  3.7549012066710663`*^9}},ExpressionUUID->"fad4d634-1ff8-466d-8264-\
61cf6051a1dc"],

Cell["Uses UnwrapSplit to unwrap both legs separately", "Text",
 CellChangeTimes->{{3.7584362210925174`*^9, 3.758436244684272*^9}, 
   3.768806763579346*^9},ExpressionUUID->"c7901d06-820c-4d80-adf0-\
e69af1db8e84"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"B0Map", "=", 
   RowBox[{"mask", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"phase", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "4"}], "]"}], "]"}], "-", 
      RowBox[{"phase", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0MapU", "=", 
   RowBox[{"UnwrapSplit", "[", 
    RowBox[{"B0Map", ",", "mag"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hz", "=", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "Pi", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"nEcho", "-", "1"}], ")"}], 
         RowBox[{"echo", "/", "1000"}]}], ")"}]}], ")"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "convert", " ", "the", " ", "B0map", " ", "to", " ", "Hz", " ", "for", " ",
     "dixon", " ", "reconstruction"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0Hz", "=", 
   RowBox[{"hz", " ", "B0MapU"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549010337577896`*^9, 3.7549010764325085`*^9}, {
  3.7549011783346214`*^9, 3.7549012406207705`*^9}, {3.7549016324444876`*^9, 
  3.7549016325870314`*^9}, {3.7549987461412563`*^9, 3.7549987618038483`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"f00cc5d1-3776-4533-888e-d37a4fe114b1"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"B0Map", ",", "B0Hz", ",", "dixvox", ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "100"}], ",", "100"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.754901161022546*^9, 3.754901171131878*^9}, {
  3.754901417212268*^9, 3.754901418059086*^9}, {3.7549987770718904`*^9, 
  3.7549988046390266`*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"0d87a2c4-dbb9-4b69-9cbd-5329e4c7140f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculate a T2 star map from the echos", "Subsubsection",
 CellChangeTimes->{{3.75490125599796*^9, 
  3.7549012670385733`*^9}},ExpressionUUID->"1b109d2e-a32c-48ad-9a6b-\
09b964323db5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"s0", ",", "T2star"}], "}"}], "=", 
   RowBox[{"T2Fit", "[", 
    RowBox[{"mag", ",", "echos"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754901290700407*^9, 3.754901324588889*^9}, {
   3.7549013810507326`*^9, 3.754901394283003*^9}, {3.7549016467968245`*^9, 
   3.754901652796183*^9}, {3.7549021603045063`*^9, 3.754902160892595*^9}, {
   3.7549022127335978`*^9, 3.7549022158522654`*^9}, 3.7549024289920497`*^9},
 CellLabel->
  "In[120]:=",ExpressionUUID->"d7bdf8d5-6e6b-401a-9fb0-4bd3e02954af"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"s0", ",", "T2star", ",", "dixvox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.05"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549013968454103`*^9, 3.7549014130665936`*^9}, {
  3.754901466908824*^9, 3.75490147737572*^9}, {3.7549021722049284`*^9, 
  3.754902181595815*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"bc8e7efa-dd51-4c32-b014-721652d5ace8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Perform iDeal reconstruction with initial B0 and T2star", \
"Subsubsection",
 CellChangeTimes->{{3.754901503069392*^9, 
  3.754901520094133*^9}},ExpressionUUID->"202a85c6-aa77-469d-80b0-\
13a415d3aa61"],

Cell["The reconstruction uses a 8 peak fat spectrum by default.", "Text",
 CellChangeTimes->{{3.754901708095419*^9, 3.754901724207772*^9}, 
   3.754998889567275*^9},ExpressionUUID->"e24414a3-74e8-46ce-b0b6-\
aa68e3bb6b37"],

Cell[BoxData[
 RowBox[{"Column", "@", 
  RowBox[{"Options", "[", "DixonReconstruct", "]"}]}]], "Input",
 CellChangeTimes->{{3.7549017008317294`*^9, 3.7549017047021294`*^9}, {
  3.7549988929307747`*^9, 3.7549988959752254`*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"61f94af4-5685-4721-b8e5-76cc0311a7c5"],

Cell["\<\
The Dixon reconstruction uses IDEAL with B0 and T2* correction\
\>", "Text",
 CellChangeTimes->{{3.758436296048541*^9, 
  3.758436325020463*^9}},ExpressionUUID->"f029d1df-9364-4a0f-aa02-\
4b00dc60486b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"perform", " ", "the", " ", "IDEAL", " ", "dixon", " ", "fit"}], 
    ",", " ", 
    RowBox[{"B0map", " ", "in", " ", "Hz"}], ",", " ", 
    RowBox[{"T2star", " ", "in", " ", "s"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fraction", ",", "watfat", ",", "iopImages", ",", 
      RowBox[{"{", 
       RowBox[{"B0fit", ",", "t2St", ",", "r2St"}], "}"}], ",", "itt", ",", 
      "resDix"}], "}"}], "=", 
    RowBox[{"DixonReconstruct", "[", 
     RowBox[{
     "real", ",", "imag", ",", "echos", ",", "B0Hz", ",", "T2star", ",", 
      RowBox[{"DixonFilterInput", "\[Rule]", "True"}], ",", 
      RowBox[{"DixonFilterOutput", "\[Rule]", "True"}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.754901525562724*^9, 3.754901528603548*^9}, {
  3.754901978846877*^9, 3.754901984012291*^9}, {3.754902191998588*^9, 
  3.7549022027641563`*^9}, {3.7549023148142376`*^9, 3.7549023278657026`*^9}, {
  3.7549024464298067`*^9, 3.75490245145186*^9}, {3.7549026391006436`*^9, 
  3.754902642427657*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"df9ae3da-52fc-492a-9b8d-9589c9e0af8a"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"B0fit", ",", "t2St", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.05"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549019554403896`*^9, 3.7549019595644007`*^9}, {
  3.7549020857896004`*^9, 3.754902087723256*^9}, {3.754902383757766*^9, 
  3.754902394123337*^9}, {3.7549024747014837`*^9, 3.7549024767484083`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"3b55af4b-60ef-43ab-be1f-e829b9d3ed23"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"iopImages", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"iopImages", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", "dixvox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549016899492655`*^9, 3.7549016978680615`*^9}, {
  3.7549028011392927`*^9, 3.7549028300607553`*^9}},
 CellLabel->
  "In[594]:=",ExpressionUUID->"d640f839-5ffc-4132-865e-cae8836aa204"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"watfat", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"watfat", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", "dixvox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549016899492655`*^9, 3.7549016978680615`*^9}, {
  3.7549028011392927`*^9, 3.7549028266850023`*^9}},
 CellLabel->
  "In[595]:=",ExpressionUUID->"5f8b9cc7-a71a-4c83-b65d-69c317df4b2a"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"fraction", ",", "dixvox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549015332953105`*^9, 3.7549015571315794`*^9}},
 CellLabel->
  "In[596]:=",ExpressionUUID->"ef9d930e-46b1-4c08-ab9d-54b1b8bc8691"],

Cell["\<\
Internally DixonReconstruct estimates the fat fraction from the complex water \
and fat images however it can also be done using the magnitude\
\>", "Text",
 CellChangeTimes->{{3.758436330990307*^9, 
  3.7584363600954485`*^9}},ExpressionUUID->"625f8eae-ed64-4f89-b2e8-\
8ef3060fd8cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fractionM", "=", 
   RowBox[{"DixonToPercent", "[", 
    RowBox[{
     RowBox[{"watfat", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"watfat", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758436363630905*^9, 3.758436392588728*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"264346c4-6b3f-4ece-bceb-9414c6eb6281"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"fraction", ",", "fractionM", ",", "dixvox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549015332953105`*^9, 3.7549015571315794`*^9}, {
  3.7584364908952923`*^9, 3.7584364927021093`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"894f94a1-23b7-4463-b2d5-abe725435936"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulate Dixon Data and fit testing", "Subchapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7554985560315247`*^9, 3.755498559150863*^9}, {
   3.758348438387064*^9, 3.75834843870792*^9}, {3.758433092886845*^9, 
   3.758433096742123*^9}, {3.7584677846255093`*^9, 
   3.7584677903386955`*^9}},ExpressionUUID->"992e29c7-eb37-4be7-8ec9-\
9e6018497ff7"],

Cell[CellGroupData[{

Cell["Simulate the Dixon signal", "Subsection",
 CellChangeTimes->{{3.7583490562055683`*^9, 3.758349062121837*^9}, {
  3.758470058569296*^9, 
  3.758470059263226*^9}},ExpressionUUID->"6f5b2db9-e346-4bd8-a44c-\
8cca8c836fad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fDix", ",", "sDix", ",", "nEcho"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"2.55", ",", "0.76", ",", "5"}], "}"}]}], ";"}], "\n", 
 RowBox[{"echos", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"fDix", " ", "+", " ", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"nEcho", "-", "1"}]}], "]"}], "sDix"}]}], ")"}], "/", 
   "1000."}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"snri", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0i", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2stari", "=", 
   RowBox[{"20", "/", "1000."}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fri", "=", ".3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"size", "=", "50"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7584671757058945`*^9, 3.7584672119603086`*^9}, 
   3.758467333286623*^9, {3.758467940853444*^9, 3.7584679409315567`*^9}, {
   3.7584681309643965`*^9, 3.758468190755753*^9}, {3.75846826763535*^9, 
   3.7584682804636946`*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"ca9c1bf2-57fe-44ba-a162-d1be1d85a590"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"frs", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "1", ",", ".1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"snrs", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"5", ",", "50", ",", "5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0s", "=", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"-", "100"}], ",", "100", ",", "10"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7584678184581175`*^9, 3.758467825496066*^9}, {
  3.758468081991387*^9, 3.7584681157660894`*^9}, {3.758468230479967*^9, 
  3.758468230993506*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"4c0239ee-d9ac-403c-a918-dd9d399cea36"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"realF", ",", "imagF"}], "}"}], "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"real", ",", "imag"}], "}"}], "=", 
        RowBox[{"SimulateDixonSignal", "[", 
         RowBox[{"echos", ",", "fr", ",", "B0i", ",", "T2stari"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"realM", "=", 
        RowBox[{"TransData", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"real", ",", 
            RowBox[{"{", 
             RowBox[{"size", ",", "size"}], "}"}]}], "]"}], ",", 
          "\"\<r\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"imagM", "=", 
        RowBox[{"TransData", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"imag", ",", 
            RowBox[{"{", 
             RowBox[{"size", ",", "size"}], "}"}]}], "]"}], ",", 
          "\"\<r\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"realN", "=", 
        RowBox[{"realM", "+", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "snri"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"nEcho", ",", "size", ",", "size"}], "}"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"imagN", "=", 
        RowBox[{"imagM", "+", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "snri"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"nEcho", ",", "size", ",", "size"}], "}"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"realN", ",", "imagN"}], "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"fr", ",", "frs"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758466519299549*^9, 3.758466533241519*^9}, {
   3.7584667308462963`*^9, 3.7584667585138855`*^9}, {3.75846692142552*^9, 
   3.7584669273582945`*^9}, 3.758467253788074*^9, {3.7584672882083406`*^9, 
   3.758467358363638*^9}, {3.75846812003065*^9, 3.758468139996991*^9}, {
   3.758468177586877*^9, 3.758468182008848*^9}, {3.758468225153759*^9, 
   3.758468320828058*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"f1884fe1-586b-4852-b44e-8ac602f5e42f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"realS", ",", "imagS"}], "}"}], "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"real", ",", "imag"}], "}"}], "=", 
        RowBox[{"SimulateDixonSignal", "[", 
         RowBox[{"echos", ",", "fri", ",", "B0i", ",", "T2stari"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"realM", "=", 
        RowBox[{"TransData", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"real", ",", 
            RowBox[{"{", 
             RowBox[{"size", ",", "size"}], "}"}]}], "]"}], ",", 
          "\"\<r\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"imagM", "=", 
        RowBox[{"TransData", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"imag", ",", 
            RowBox[{"{", 
             RowBox[{"size", ",", "size"}], "}"}]}], "]"}], ",", 
          "\"\<r\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"realN", "=", 
        RowBox[{"realM", "+", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "snr"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"nEcho", ",", "size", ",", "size"}], "}"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"imagN", "=", 
        RowBox[{"imagM", "+", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "snr"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"nEcho", ",", "size", ",", "size"}], "}"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"realN", ",", "imagN"}], "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"snr", ",", "snrs"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758466519299549*^9, 3.758466533241519*^9}, {
   3.7584667308462963`*^9, 3.7584667585138855`*^9}, {3.75846692142552*^9, 
   3.7584669273582945`*^9}, 3.758467253788074*^9, {3.7584672882083406`*^9, 
   3.758467358363638*^9}, {3.75846812003065*^9, 3.758468139996991*^9}, {
   3.758468177586877*^9, 3.7584682188132477`*^9}, {3.758468292265744*^9, 
   3.7584682995314426`*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"53fc9933-5872-4125-b0f8-f68f33bb3a1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"realB", ",", "imagB"}], "}"}], "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"real", ",", "imag"}], "}"}], "=", 
        RowBox[{"SimulateDixonSignal", "[", 
         RowBox[{"echos", ",", "fri", ",", "B0", ",", "T2stari"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"realM", "=", 
        RowBox[{"TransData", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"real", ",", 
            RowBox[{"{", 
             RowBox[{"size", ",", "size"}], "}"}]}], "]"}], ",", 
          "\"\<r\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"imagM", "=", 
        RowBox[{"TransData", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"imag", ",", 
            RowBox[{"{", 
             RowBox[{"size", ",", "size"}], "}"}]}], "]"}], ",", 
          "\"\<r\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"realN", "=", 
        RowBox[{"realM", "+", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "snri"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"nEcho", ",", "size", ",", "size"}], "}"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"imagN", "=", 
        RowBox[{"imagM", "+", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "snri"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"nEcho", ",", "size", ",", "size"}], "}"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"realN", ",", "imagN"}], "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"B0", ",", "B0s"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758466519299549*^9, 3.758466533241519*^9}, {
   3.7584667308462963`*^9, 3.7584667585138855`*^9}, {3.75846692142552*^9, 
   3.7584669273582945`*^9}, 3.758467253788074*^9, {3.7584672882083406`*^9, 
   3.758467358363638*^9}, {3.75846812003065*^9, 3.758468139996991*^9}, {
   3.758468177586877*^9, 3.758468262882839*^9}, {3.7584683010011992`*^9, 
   3.7584683079738092`*^9}, {3.7584683776609764`*^9, 
   3.7584683796218987`*^9}, {3.758468552311184*^9, 3.7584685530545883`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"75be3c89-2250-4c15-8fc1-95fc5153710d"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"realB", ",", "imagB"}], "]"}]], "Input",
 CellChangeTimes->{{3.75846961932992*^9, 3.758469625453643*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"ea6aef23-0e48-4bd6-8dc9-a82b13ee01d7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fit the simulated Dixon signal", "Subsection",
 CellChangeTimes->{{3.758349069323036*^9, 3.7583490793226967`*^9}, {
  3.7584700639547195`*^9, 
  3.758470064704809*^9}},ExpressionUUID->"33202e28-0fa0-4880-a579-\
60fd33dd0adb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dim", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Dimensions", "[", "realF", "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0F", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"B0i", ",", "10"}], "]"}], ",", "dim"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2starF", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"T2stari", ",", 
       RowBox[{"10", "/", "1000."}]}], "]"}], ",", "dim"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "frF", ",", "watfat", ",", "iop", ",", "fit", ",", "itt", ",", "res"}], 
    "}"}], "=", 
   RowBox[{"DixonReconstruct", "[", 
    RowBox[{"realF", ",", "imagF", ",", "echos", ",", "B0F", ",", "T2starF"}],
     "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.758467394348463*^9, 3.758467455297535*^9}, {
  3.7584675625496063`*^9, 3.758467583969634*^9}, {3.758468346560258*^9, 
  3.7584684084834604`*^9}, {3.7584687683687506`*^9, 3.758468770816373*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"753b0a2a-9d05-49da-9bee-81c36f6f89af"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dim", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Dimensions", "[", "realS", "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0S", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"B0i", ",", "10"}], "]"}], ",", "dim"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2starS", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"T2stari", ",", 
       RowBox[{"10", "/", "1000."}]}], "]"}], ",", "dim"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "frS", ",", "watfat", ",", "iop", ",", "fit", ",", "itt", ",", "res"}], 
    "}"}], "=", 
   RowBox[{"DixonReconstruct", "[", 
    RowBox[{"realS", ",", "imagS", ",", "echos", ",", "B0S", ",", "T2starS"}],
     "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.758467394348463*^9, 3.758467455297535*^9}, {
  3.7584675625496063`*^9, 3.758467583969634*^9}, {3.758468346560258*^9, 
  3.758468436183395*^9}, {3.7584687768387537`*^9, 3.758468779833809*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"400f995e-d5ab-42fe-a587-30e34e83f443"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dim", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Dimensions", "[", "realB", "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0B", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"B0", ",", "10"}], "]"}], ",", 
       RowBox[{"dim", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;"}], "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"B0", ",", "B0s"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2starB", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"T2stari", ",", 
       RowBox[{"10", "/", "1000."}]}], "]"}], ",", "dim"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "frB", ",", "watfat", ",", "iop", ",", "fit", ",", "itt", ",", "res"}], 
    "}"}], "=", 
   RowBox[{"DixonReconstruct", "[", 
    RowBox[{"realB", ",", "imagB", ",", "echos", ",", "B0B", ",", "T2starB"}],
     "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.758467394348463*^9, 3.758467455297535*^9}, {
  3.7584675625496063`*^9, 3.758467583969634*^9}, {3.758468346560258*^9, 
  3.758468436183395*^9}, {3.7584685365832167`*^9, 3.7584685751552095`*^9}, {
  3.7584686090232754`*^9, 3.7584686365387163`*^9}, {3.7584687862576866`*^9, 
  3.75846881556581*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"b43542ca-c929-4028-8aee-c7176c7cf527"]
}, Closed]],

Cell[CellGroupData[{

Cell["Evaluate the fits", "Subsection",
 CellChangeTimes->{{3.7583490835356913`*^9, 
  3.75834908874759*^9}},ExpressionUUID->"6c868790-2893-463e-a2d0-\
1a9a571113d7"],

Cell[BoxData[{
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"frF", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<fat frac.\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<Imposed frac. = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"frs", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "frs", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"frS", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", ".5"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<fat frac.\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<SNR = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"snrs", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "snrs", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"frB", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", ".5"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<fat frac.\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<B0 = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"B0s", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], "<>", "\"\< Hz\>\""}]}]}], "]"}],
      "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"5", ",", 
      RowBox[{"Length", "[", "B0s", "]"}], ",", "8"}], "]"}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.7584691146759214`*^9, 3.7584692172196293`*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"1ef20ff1-6d49-4deb-877d-7de44dfed40d"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"frF", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "frs", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Imposed\>\"", ",", "\"\<Fitted frac.\>\""}], "}"}]}], 
      ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<fitted vs imposed fat fraction\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"frS", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "snrs", ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "0.4"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<Fitted frac.\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<fitted fat fraction vs SNR\>\""}]}], "]"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"frB", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "B0s", ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "0.4"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<B0\>\"", ",", "\"\<Fitted frac.\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<fitted fat fraction vs B0\>\""}]}],
      "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.758467870613595*^9, 3.7584679842631335`*^9}, {
  3.7584684443567295`*^9, 3.758468470692998*^9}, {3.7584686893642855`*^9, 
  3.758468762361865*^9}, {3.758468960321937*^9, 3.7584689743737674`*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"e9c3029c-e293-4798-9790-fdf3c938956f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ME-SE  (TSE) T2 mapping", "Subchapter",
 CellChangeTimes->{{3.7548951014856977`*^9, 3.754895112634607*^9}, {
  3.75489562596196*^9, 3.754895628456525*^9}, {3.7549025592745514`*^9, 
  3.7549025710189853`*^9}},ExpressionUUID->"b341beda-5ee8-44a9-9312-\
619b2c8f81f1"],

Cell[CellGroupData[{

Cell["Import Data", "Subsection",
 CellChangeTimes->{{3.7549991104024525`*^9, 
  3.7549991145354114`*^9}},ExpressionUUID->"b8cae968-01be-4d76-93c4-\
914725dacb60"],

Cell["\<\
Very specific case of T2 data converted from a phipils MRI scanner using a \
multi echo spin echo acquisition and exported with the T2 map which was \
converted from dcm to Nii using DcmToNii.\
\>", "Text",
 CellChangeTimes->{{3.7548954792598314`*^9, 3.7548955300130854`*^9}, {
   3.754902580410942*^9, 3.7549026194989295`*^9}, 
   3.7549029519227858`*^9},ExpressionUUID->"838c8185-e694-4949-9dd0-\
0c59b961e8bf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"T2data", ",", "fit", ",", "T2vox"}], "}"}], "=", 
   RowBox[{"ImportNiiT2", "[", "\"\<T2data.nii\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"echo", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Necho", ",", "T2echo"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"17", ",", "7.6"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"echos", "=", 
   RowBox[{
    RowBox[{"Range", "[", "Necho", "]"}], "T2echo"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.754902725324188*^9, 3.754902785821125*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"b207c621-7de3-43fa-8bdf-ef8e64f0d8bd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"meanT2", "=", 
   RowBox[{"NormalizeData", "[", 
    RowBox[{"Mean", "@", 
     RowBox[{"Transpose", "@", "T2data"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"meanT2", ",", "15", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskComponents", "\[Rule]", "2"}], ",", 
     RowBox[{"MaskClosing", "\[Rule]", "3"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"T2data", "=", 
   RowBox[{"MaskData", "[", 
    RowBox[{"T2data", ",", "mask"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.754903335308236*^9, 3.7549033466208315`*^9}, {
   3.754903384462629*^9, 3.7549034269760156`*^9}, 3.754913701077524*^9},
 CellLabel->
  "In[600]:=",ExpressionUUID->"6a0e43c3-6e49-4acf-a0d5-faa81d3c50fd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Define Slice Profiles", "Subsection",
 CellChangeTimes->{{3.7549037926246223`*^9, 
  3.7549037996799846`*^9}},ExpressionUUID->"e4d814b7-307b-44b1-8176-\
77d613190d5c"],

Cell["Simulate RF pulse using bloch", "Text",
 CellChangeTimes->{{3.758436631234725*^9, 3.758436643807841*^9}, {
  3.758437145534289*^9, 
  3.7584371487969856`*^9}},ExpressionUUID->"08e92c98-8105-4c77-848e-\
fff3f471f75e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pulse", "=", 
   RowBox[{"Pulses", "[", "\"\<sg_150_100_167\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sim", "=", 
   RowBox[{"BlochSeries", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"4.", " ", 
      RowBox[{"10", "^", 
       RowBox[{"-", "5"}]}]}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "4000"}], ",", "4000", ",", "50"}], "]"}], ",", 
     RowBox[{"4", " ", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}], "pulse"}]}], " ", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7584366502214785`*^9, 3.7584366573124576`*^9}, {
   3.7584367145087543`*^9, 3.758436716860037*^9}, 
   3.75843714147445*^9},ExpressionUUID->"b1483bf9-66dd-4581-84a9-\
c843d760fb15"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", "pulse", "]"}], ",", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"sim", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7584369139245076`*^9, 3.7584369191665163`*^9}, {
  3.758436965037548*^9, 3.7584369703172874`*^9}, {3.7584371252779617`*^9, 
  3.7584371369439707`*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"e6d0f667-bae9-4dd4-a3f7-1cb0f0305255"],

Cell["\<\
To accurately fit the data the slice profile needs to be defined with the \
exitiation and refocussing pulses\
\>", "Text",
 CellChangeTimes->{{3.7549028998233905`*^9, 
  3.754902948209705*^9}},ExpressionUUID->"84309912-9796-472d-8aa5-\
a93ea74bc056"],

Cell[BoxData[
 RowBox[{"<<", "QMRITools`"}]], "Input",
 CellChangeTimes->{{3.7584371853919587`*^9, 3.758437187677429*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"c631e283-9e8c-41c3-82cb-807c278b0f53"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ex", ",", "ref"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"90", ",", "180"}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"flip", " ", "angles"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"exitation", ",", "refocus", ",", "plots"}], "}"}], "=", 
    RowBox[{"GetPulseProfile", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<sg_150_100_167\>\"", ",", "ex", ",", 
        RowBox[{"{", 
         RowBox[{"2.2845", ",", "3.9632", ",", "768"}], "}"}]}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"exitation", " ", "puls"}], ",", 
        RowBox[{"{", 
         RowBox[{"name", ",", "angle", ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "t", ",", "w"}], "}"}]}], "}"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<sinc_centre\>\"", ",", "ref", ",", 
        RowBox[{"{", 
         RowBox[{"1.9037", ",", "2.0560", ",", "486"}], "}"}]}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"refocussing", " ", "puls"}], ",", 
        RowBox[{"{", 
         RowBox[{"name", ",", "angle", ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "t", ",", "w"}], "}"}]}], "}"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"SliceRange", "\[Rule]", "12"}], ",", 
      RowBox[{"SliceRangeSamples", "\[Rule]", "15"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "sliceRangeSamples", " ", "determines", " ", "the", " ", "speed", " ", 
    "of", " ", "the", " ", "EPGT2", " ", "fit"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"angle", "=", 
   RowBox[{"{", 
    RowBox[{"exitation", ",", "refocus"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "@", "plots"}]}], "Input",
 CellChangeTimes->{
  3.754902749179872*^9, {3.754902845965876*^9, 3.7549028890530605`*^9}, {
   3.754902919632263*^9, 3.7549029249090977`*^9}, {3.75490298065442*^9, 
   3.754902999821941*^9}, {3.7549032406720304`*^9, 3.7549032407331963`*^9}, {
   3.758437195117894*^9, 3.7584372048792877`*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"83924ee4-b18d-4de6-b618-a5e212f482da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"slices", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"SimulateSliceEPG", "[", 
      RowBox[{"exitation", ",", "refocus", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1000", ",", "70"}], "}"}], ",", "echo", ",", "#"}], 
        "}"}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"0.8", ",", "1.", ",", "1.2"}], "}"}]}]}], ";"}], "\n", 
 RowBox[{"Row", "[", "slices", "]"}]}], "Input",
 CellChangeTimes->{{3.75490295733055*^9, 3.75490303724695*^9}, {
  3.754903110045624*^9, 3.754903180060878*^9}, {3.7549032511356535`*^9, 
  3.754903254044939*^9}, {3.754903298110441*^9, 3.754903309416548*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"d3e7e3d0-876a-4f04-a706-ec1533d2392e"]
}, Closed]],

Cell[CellGroupData[{

Cell["calibrate and Fit the data", "Subsection",
 CellChangeTimes->{{3.7549136808715067`*^9, 
  3.754913705573042*^9}},ExpressionUUID->"a32b7405-2d28-4efa-ad38-\
9fc2d3fe6ff7"],

Cell["Calibrate the T2 fat using automated fat masking", "Text",
 CellChangeTimes->{{3.7584375079307623`*^9, 
  3.758437522559623*^9}},ExpressionUUID->"07ba9190-658c-49b3-addf-\
eafc175f6ae3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"T2f", ",", "B1", ",", "S0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"stdT2f", ",", "stdB1", ",", "stdS0"}], "}"}]}], "}"}], "=", 
  RowBox[{"CalibrateEPGT2Fit", "[", 
   RowBox[{"T2data", ",", "echo", ",", "angle", ",", 
    RowBox[{"EPGRelaxPars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"10", ",", "60"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"50", ",", "300"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1400.", ",", "365."}], "}"}]}], "}"}]}], ",", 
    RowBox[{"EPGFitPoints", "\[Rule]", "20"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7549036012855253`*^9, 3.75490366959524*^9}, {
   3.7549101256964436`*^9, 3.7549101531350975`*^9}, 3.7549139103888135`*^9, {
   3.7549181943181515`*^9, 3.7549181966994443`*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"2b8f0007-7a5b-43a9-8a6e-74ff32e52a1c"],

Cell["\<\
Create a dictionary for fitting manually (never needed, fit function does \
this automatically)\
\>", "Text",
 CellChangeTimes->{{3.7584375249941444`*^9, 
  3.758437553571023*^9}},ExpressionUUID->"691708d6-126e-4d41-be2c-\
d857f4226500"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dict", "=", 
   RowBox[{"CreateT2Dictionary", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1500", ",", "300"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Necho", ",", "T2echo"}], "}"}], ",", "angle"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.758437310560252*^9, 3.7584373257910223`*^9}, {
  3.758437386751029*^9, 3.758437430172845*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"4b0a9093-cbed-430e-a3b8-9877643a7ed4"],

Cell["\<\
Perform the EPGfit, only fitting water signal and calibrating the fat T2 from \
the subcutaneous fat\
\>", "Text",
 CellChangeTimes->{{3.7549994845540285`*^9, 
  3.7549994980291653`*^9}},ExpressionUUID->"fd6e9fa0-b5a6-4e96-bc4d-\
c468cb86b649"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2map", ",", "B1Map"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"watEPG", ",", "fatEPG", ",", "ffEPG"}], "}"}], ",", "resEPG"}],
     "}"}], " ", "=", " ", 
   RowBox[{"EPGT2Fit", "[", 
    RowBox[{"T2data", ",", "echo", ",", "angle", ",", 
     RowBox[{"EPGCalibrate", "\[Rule]", "True"}], ",", 
     RowBox[{"OutputCalibration", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7549034567488422`*^9, 3.7549035295651903`*^9}, {
  3.7549994821031966`*^9, 3.754999489810546*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"8de819ca-705a-4220-8130-c192af8d549b"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"T2map", ",", "B1Map", ",", "T2vox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.", ",", "70"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.5"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549042371860256`*^9, 3.7549042619343824`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"47a0659c-4df1-4f1b-9d7b-b96779ba5cb1"],

Cell["perform the EPGfit, fitting both water and fat signal", "Text",
 CellChangeTimes->{
  3.7549995006740847`*^9},ExpressionUUID->"3ef473e1-450e-4731-ae4d-\
89c5b79bd2a1"],

Cell[BoxData["\<\"The dictionary contains 908871 values, and took 17.8 \
seconds to generate.\"\>"], "Print",
 CellChangeTimes->{3.754916254717434*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"fac8500f-e172-4333-a9f7-7e02973e79b9"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"T2map", ",", "B1Map", ",", "T2vox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.", ",", "70"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.5"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[182]:=",ExpressionUUID->"3e9a97a0-dd2f-4ec4-bfe3-85b303b130d6"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"T2map", ",", "T2fmap", ",", "T2vox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.", ",", "70"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"100", ",", "200"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549099865144615`*^9, 3.7549099905281663`*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"6a2dbfc3-df24-43c6-a38b-c46b51dc77c7"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulate EPG Data and fit testing", "Subchapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7554985560315247`*^9, 3.755498559150863*^9}, {
   3.758348438387064*^9, 3.75834843870792*^9}, {3.758433092886845*^9, 
   3.758433096742123*^9}},ExpressionUUID->"206c273f-0ccf-4695-9121-\
5be90826dd71"],

Cell[CellGroupData[{

Cell["Simulate the EPG signal", "Subsection",
 CellChangeTimes->{{3.7583490562055683`*^9, 
  3.758349062121837*^9}},ExpressionUUID->"8445ef95-5973-4648-871d-\
e56f6b632789"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ex", ",", "ref", ",", 
     RowBox[{"{", 
      RowBox[{"pl1", ",", "pl2"}], "}"}]}], "}"}], "=", 
   RowBox[{"GetPulseProfile", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<sg_150_100_167\>\"", ",", "90", ",", 
       RowBox[{"{", 
        RowBox[{"2.2845", ",", "3.9632", ",", "768"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<sinc_centre\>\"", ",", "180", ",", 
       RowBox[{"{", 
        RowBox[{"1.9037", ",", "2.0560", ",", "486"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"SliceRange", "\[Rule]", "12"}], ",", 
     RowBox[{"SliceRangeSamples", "\[Rule]", "100"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.73657451115738*^9, 3.736671472682128*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"57234781-617a-4162-9879-35e308aaf866"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"echo", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Necho", ",", "T2echo"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"17", ",", "7.6"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"angle", "=", 
   RowBox[{"{", 
    RowBox[{"ex", ",", "ref"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tfat", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"T1fat", ",", "T2fat"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"365", ",", "150"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Twat", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"T1wat", ",", "T2wat"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"1400", ",", "30"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7383022683834667`*^9, 3.7383022686959963`*^9}, {
  3.7583484500849504`*^9, 3.758348461828597*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"24da691e-d6de-410f-b0ef-1d2de61863d9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"b1", "=", 
   RowBox[{"N", "@", 
    RowBox[{"Range", "[", 
     RowBox[{".75", ",", "1.25", ",", ".05"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SNR", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"5", ",", "55", ",", "5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fat", "=", 
   RowBox[{
    RowBox[{"N", "@", 
     RowBox[{"Range", "[", 
      RowBox[{"10", ",", "60", ",", "5"}], "]"}]}], "/", "100"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.758348577382124*^9, 3.7583486435100155`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"8984a19f-eabf-4e62-97e2-98267e2bcc61"],

Cell["\<\
sigB1 : SNR = 30 and fat = 30%
sigSNR: B1=0.9 and fat=30%
sigfat: B1-0.9, fat=30% and SNR=30\
\>", "Text",
 CellChangeTimes->{{3.758348486184921*^9, 3.7583485082277412`*^9}, {
  3.758348672821705*^9, 3.758348688469573*^9}, {3.758348848328043*^9, 
  3.7583488612875695`*^9}, {3.7583513359319706`*^9, 
  3.7583513506832733`*^9}},ExpressionUUID->"054abc16-56b6-40bf-a212-\
835aa4516f1a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sigB1", "=", 
   RowBox[{"AddNoise", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"TransData", "[", 
        RowBox[{
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"0.7", 
             RowBox[{"EPGSignal", "[", 
              RowBox[{"echo", ",", "Twat", ",", "angle", ",", "b1s"}], 
              "]"}]}], "+", 
            RowBox[{"0.3", 
             RowBox[{"EPGSignal", "[", 
              RowBox[{"echo", ",", "Tfat", ",", "angle", ",", "b1s"}], 
              "]"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"50", ",", "50"}], "}"}]}], "]"}], ",", "\"\<r\>\""}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"b1s", ",", "b1"}], "}"}]}], "]"}], ",", "30", ",", 
     RowBox[{"NoiseSize", "\[Rule]", "\"\<SNR\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sig", "=", 
   RowBox[{"TransData", "[", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0.7", 
         RowBox[{"EPGSignal", "[", 
          RowBox[{"echo", ",", "Twat", ",", "angle", ",", "0.9"}], "]"}]}], 
        "+", 
        RowBox[{"0.3", 
         RowBox[{"EPGSignal", "[", 
          RowBox[{"echo", ",", "Tfat", ",", "angle", ",", "0.9"}], "]"}]}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"50", ",", "50"}], "}"}]}], "]"}], ",", "\"\<r\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigSNR", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"AddNoise", "[", 
      RowBox[{"sig", ",", "snrs", ",", 
       RowBox[{"NoiseSize", "\[Rule]", "\"\<SNR\>\""}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"snrs", ",", "SNR"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sigFat", "=", 
    RowBox[{"AddNoise", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"TransData", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "ff"}], ")"}], 
              RowBox[{"EPGSignal", "[", 
               RowBox[{"echo", ",", "Twat", ",", "angle", ",", "0.9"}], 
               "]"}]}], "+", 
             RowBox[{"ff", " ", 
              RowBox[{"EPGSignal", "[", 
               RowBox[{"echo", ",", "Tfat", ",", "angle", ",", "0.9"}], 
               "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"50", ",", "50"}], "}"}]}], "]"}], ",", "\"\<r\>\""}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ff", ",", "fat"}], "}"}]}], "]"}], ",", "30", ",", 
      RowBox[{"NoiseSize", "\[Rule]", "\"\<SNR\>\""}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "/@", 
  RowBox[{"{", 
   RowBox[{"sigB1", ",", "sigSNR", ",", "sigFat"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.7583484752998204`*^9, 3.7583484835448604`*^9}, {
  3.7583485161003*^9, 3.7583485602140207`*^9}, {3.7583486512417836`*^9, 
  3.7583486703280087`*^9}, {3.7583487385524225`*^9, 3.7583487506008997`*^9}, {
  3.7583492916439*^9, 3.7583492959631824`*^9}, {3.758351355182659*^9, 
  3.7583513564450274`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"ace4a269-d905-4882-89d8-90bd356cd7f9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fit the simulated EPG signal", "Subsection",
 CellChangeTimes->{{3.758349069323036*^9, 
  3.7583490793226967`*^9}},ExpressionUUID->"d12758da-d1d5-43a6-8aaa-\
503db8464fff"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2B1", ",", "B1B1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"watB1", ",", " ", "fatB1", ",", " ", "ffB1"}], "}"}], ",", 
     "resB1"}], "}"}], "=", 
   RowBox[{"EPGT2Fit", "[", 
    RowBox[{"sigB1", ",", "echo", ",", "angle", ",", 
     RowBox[{"DictT2fRange", "\[Rule]", "150"}], ",", 
     RowBox[{"EPGSmoothB1", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758348920042689*^9, 3.7583489895278234`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"552a216f-db51-4a52-837c-8826af038d2c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2SNR", ",", "B1SNR"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"watSNR", ",", " ", "fatSNR", ",", " ", "ffSNR"}], "}"}], ",", 
     "resSNR"}], "}"}], "=", 
   RowBox[{"EPGT2Fit", "[", 
    RowBox[{"sigSNR", ",", "echo", ",", "angle", ",", 
     RowBox[{"DictT2fRange", "\[Rule]", "150"}], ",", 
     RowBox[{"EPGSmoothB1", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758348920042689*^9, 3.7583490207110653`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"75ab4e15-7874-4e05-accb-830a5a8437a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2Fat", ",", "B1Fat"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"watFat", ",", " ", "fatFat", ",", " ", "ffFat"}], "}"}], ",", 
     "resFat"}], "}"}], "=", 
   RowBox[{"EPGT2Fit", "[", 
    RowBox[{"sigFat", ",", "echo", ",", "angle", ",", 
     RowBox[{"DictT2fRange", "\[Rule]", "150"}], ",", 
     RowBox[{"EPGSmoothB1", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758348920042689*^9, 3.7583489895278234`*^9}, {
  3.758349024935327*^9, 3.7583490403141985`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"e5f441ab-6c4e-4b17-a787-cc5a724424cb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Evaluate the fits", "Subsection",
 CellChangeTimes->{{3.7583490835356913`*^9, 
  3.75834908874759*^9}},ExpressionUUID->"3661d520-8d0a-475a-b073-\
957f7c24d670"],

Cell[BoxData[{
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"T2B1", "[", 
        RowBox[{"[", "#", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"20", ",", "50"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<T2\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<B1 = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"b1", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "b1", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"T2SNR", "[", 
        RowBox[{"[", "#", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"20", ",", "50"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<T2\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<SNR = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"SNR", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "SNR", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"T2Fat", "[", 
        RowBox[{"[", "#", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"20", ",", "50"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<T2\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<fat frac = \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"100", 
           RowBox[{"fat", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "<>", "\"\<%\>\""}]}]}], 
      "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "fat", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.75834910393007*^9, 3.758349169277294*^9}, {
  3.758349205810248*^9, 3.7583492386886806`*^9}, {3.7583513807354507`*^9, 
  3.7583513963960643`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"2df86a65-6a91-4969-a35f-485561eeaf98"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorPlot", "[", 
     RowBox[{"T2B1", ",", "b1", ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "60"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<B1\>\"", ",", "\"\<T2wat\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<T2wat as function of B1\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{"T2SNR", ",", "SNR", ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "60"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<T2wat\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<T2wat as function of SNR\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{"T2Fat", ",", "fat", ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "60"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<T2wat\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<T2wat as function of fat fraction\>\""}]}], 
     "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7583511545395966`*^9, 3.758351217714362*^9}, {
  3.758351299601017*^9, 3.7583513035333433`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"c373eede-fb5d-4af4-906d-3ef381ffe28c"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DTI and IVIM ", "Subchapter",
 CellChangeTimes->{{3.7548951014856977`*^9, 3.754895112634607*^9}, {
   3.75489562596196*^9, 3.754895628456525*^9}, 
   3.7549109686882687`*^9},ExpressionUUID->"47034db1-d0d6-4b23-af6e-\
0f6546045b3b"],

Cell[CellGroupData[{

Cell["Generating diffusion gradients", "Subsection",
 CellChangeTimes->{{3.754910970230391*^9, 
  3.754910977730441*^9}},ExpressionUUID->"25adc37f-e4d2-4d9f-a5ed-\
8612c20d46c3"],

Cell["Generate gradients in the notebook.", "Text",
 CellChangeTimes->{{3.75491113415291*^9, 3.754911143400069*^9}, 
   3.754913719097209*^9},ExpressionUUID->"ea42799b-6877-4b38-b569-\
13addb9d2db3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"grad", "=", 
   RowBox[{"GenerateGradients", "[", 
    RowBox[{"{", 
     RowBox[{"6", ",", "6", ",", "12", ",", "24"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bval", "=", 
   RowBox[{"{", 
    RowBox[{"10", ",", "100", ",", "250", ",", "600"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bvals", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"Length", "[", "#2", "]"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"bval", ",", "grad"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grads", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"grad", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bvals", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"bvals", ",", "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549109906143837`*^9, 3.754911107683816*^9}, {
  3.7549144751927624`*^9, 3.7549144808054914`*^9}},
 CellLabel->
  "In[293]:=",ExpressionUUID->"27dca582-2b36-49e0-88a2-e3bb99bd2d01"],

Cell[BoxData[
 RowBox[{"GradientPlot", "[", 
  RowBox[{"grads", ",", "bvals"}], "]"}]], "Input",
 CellChangeTimes->{{3.754911113493312*^9, 3.754911119058152*^9}},
 CellLabel->
  "In[278]:=",ExpressionUUID->"9d2e7d89-461c-48fc-92b8-0015aa0d0da2"],

Cell[BoxData[
 RowBox[{"ListSpherePlot", "[", 
  RowBox[{
   RowBox[{"bvals", " ", "grads"}], ",", 
   RowBox[{"SphereSize", "\[Rule]", "30"}], ",", 
   RowBox[{"SphereColor", "\[Rule]", "Blue"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758439780019206*^9, 3.7584398502570844`*^9}},
 CellLabel->
  "In[284]:=",ExpressionUUID->"512a6259-5ab7-4fd1-b670-1393be8510df"],

Cell["Or generate Gradients in the GUI", "Text",
 CellChangeTimes->{{3.7549111465330987`*^9, 
  3.7549111568381367`*^9}},ExpressionUUID->"06fed56e-cf72-4eab-877f-\
8a2fa48264d1"],

Cell[BoxData[
 RowBox[{"GenerateGradientsGUI", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7549111235416102`*^9, 3.7549111293220572`*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"505f5e4d-61b2-45a6-8a8a-10a30bdf2cee"]
}, Closed]],

Cell[CellGroupData[{

Cell["Import The Data", "Subsection",
 CellChangeTimes->{{3.755000756204663*^9, 
  3.7550007614125185`*^9}},ExpressionUUID->"37567aef-8b97-425f-abdf-\
d82ae053b962"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dwi", ",", "grad", ",", "val", ",", "dwivox"}], "}"}], "=", 
   RowBox[{"ImportNiiDiff", "[", "\"\<DTIdata.nii\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"datareg", ",", "dwivox"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<DTIdata-reg.nii\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tens", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"ImportNii", "[", 
     RowBox[{"\"\<DTI-tensor.nii\>\"", ",", 
      RowBox[{"NiiMethod", "\[Rule]", "\"\<data\>\""}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"labels", ",", "vox"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<labels.nii\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.754895634046774*^9, 3.754895667562751*^9}, 
   3.7549147982158546`*^9, {3.7549998933836317`*^9, 3.7549998936081953`*^9}, {
   3.7550004747855062`*^9, 3.7550004893652954`*^9}, {3.7550005862069235`*^9, 
   3.755000615146139*^9}, {3.7550007439214835`*^9, 3.7550007442834463`*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"b6a6e3c8-61e2-4f74-8ee2-1ecd45f55cfc"]
}, Closed]],

Cell[CellGroupData[{

Cell["Prep the IVIM and DTI data", "Subsection",
 CellChangeTimes->{{3.75491344533817*^9, 3.754913448807496*^9}, {
  3.754913730092126*^9, 3.754913732275964*^9}, {3.7549138844520955`*^9, 
  3.7549138871242504`*^9}, {3.754999581165014*^9, 3.7549995852456675`*^9}, {
  3.755000767977996*^9, 
  3.755000769270936*^9}},ExpressionUUID->"29712ec0-7f9d-4363-bd69-\
fedc89b926de"],

Cell[CellGroupData[{

Cell["Sort and mask", "Subsubsection",
 CellChangeTimes->{{3.755000777818706*^9, 
  3.755000782394892*^9}},ExpressionUUID->"7b6f1d42-3372-4eae-9f3b-\
52b01fd6c20a"],

Cell["\<\
First step is to order and Normalize the diffusion data. Also find all the \
unique b - values and their positions.\
\>", "Text",
 CellChangeTimes->{{3.754999902345565*^9, 3.7549999343805895`*^9}, 
   3.755000639302743*^9},ExpressionUUID->"27abfcd5-f584-46cd-8df8-\
6aa1f69b339e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dwi", "=", 
   RowBox[{"NormalizeData", "[", "dwi", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dwi", ",", "grad", ",", "val"}], "}"}], "=", 
   RowBox[{"SortDiffusionData", "[", 
    RowBox[{"dwi", ",", "grad", ",", "val"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"bval", ",", "pos"}], "}"}], "=", 
   RowBox[{"UniqueBvalPosition", "[", "val", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bmat", " ", "=", " ", 
   RowBox[{"Bmatrix", "[", 
    RowBox[{"val", ",", "grad"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mdata", "=", 
   RowBox[{"Mean", "@", 
    RowBox[{"Transpose", "@", "dwi"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549134223765755`*^9, 3.75491346814913*^9}, 
   3.7549137609540815`*^9, {3.7549145002322235`*^9, 3.75491450083834*^9}, {
   3.754914563063095*^9, 3.754914615898838*^9}, {3.7549159495136757`*^9, 
   3.7549159519931593`*^9}},
 CellLabel->
  "In[325]:=",ExpressionUUID->"e685e2ff-8cec-433d-90f3-cd1e4ba107a4"],

Cell[BoxData[
 RowBox[{"GradientPlot", "[", 
  RowBox[{"grad", ",", "val"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549137630150776`*^9, 3.7549137707406816`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"2c219bff-98ca-4149-8f73-f5d4c18d1d6f"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"mdata", ",", "dwivox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549135038347163`*^9, 3.75491351177946*^9}, 
   3.7549996248755584`*^9},
 CellLabel->"In[73]:=",ExpressionUUID->"58a620c5-fd10-4d1a-b298-19131a1f4f75"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"mdata", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskComponents", "\[Rule]", "2"}], ",", 
     RowBox[{"MaskClosing", "\[Rule]", "3"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dwi", "=", 
   RowBox[{"MaskData", "[", 
    RowBox[{"dwi", ",", "mask"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549135142786407`*^9, 3.754913543186923*^9}, {
  3.75491373622853*^9, 3.7549137504520597`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"82cbf336-e0f4-43db-94e4-46d687594afa"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"mdata", ",", "mask", ",", " ", "dwivox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549135038347163`*^9, 3.75491351177946*^9}, {
   3.754913554131217*^9, 3.7549135547232995`*^9}, 3.7549996256124425`*^9},
 CellLabel->"In[76]:=",ExpressionUUID->"e78c9670-4878-485f-9214-babcab9aa322"]
}, Closed]],

Cell[CellGroupData[{

Cell["Denoise DWI data", "Subsubsection",
 CellChangeTimes->{{3.754914631559713*^9, 
  3.7549146366652336`*^9}},ExpressionUUID->"75236b9f-93a9-4123-9f0b-\
e0d6063ca27a"],

Cell["\<\
Denoise with a PCA based method, if noise is also measured it can be used as \
an input.\
\>", "Text",
 CellChangeTimes->{{3.754999595850682*^9, 3.7549996174036827`*^9}, 
   3.7549996609142113`*^9},ExpressionUUID->"8f267ee5-face-4d96-81f2-\
eb7a65fb2c80"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dwiN", ",", "sigma"}], "}"}], " ", "=", " ", 
   RowBox[{"PCADeNoise", "[", 
    RowBox[{"dwi", ",", "mask", ",", 
     RowBox[{"PCAOutput", "\[Rule]", "False"}], ",", 
     RowBox[{"PCATollerance", "\[Rule]", "0"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754914643126322*^9, 3.7549146569014473`*^9}, {
   3.7549147466066494`*^9, 3.7549147486135406`*^9}, {3.7549996343115797`*^9, 
   3.754999634647128*^9}, {3.7987708057251964`*^9, 3.7987708090481696`*^9}, 
   3.7987730509492016`*^9, {3.837232613241161*^9, 3.8372326175714617`*^9}, {
   3.8372430897617474`*^9, 
   3.837243096623809*^9}},ExpressionUUID->"b25ec0c8-9dee-4355-8b9d-\
d5d64b8430a5"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dwiN", ",", 
   RowBox[{"MaskData", "[", 
    RowBox[{
     RowBox[{"dwi", "-", "dwiN"}], ",", "mask"}], "]"}], ",", "dwivox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "150"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "15"}], ",", "15"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549147303342247`*^9, 3.754914741221796*^9}, {
  3.754914837336503*^9, 3.7549148434932365`*^9}, {3.754999733194705*^9, 
  3.754999744672658*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"2421eea9-a6e2-44b3-aab6-fe2b35f370c9"],

Cell["\<\
With the sigma map from the PCA denoise the SNR can be calculated.\
\>", "Text",
 CellChangeTimes->{{3.7549996406923895`*^9, 
  3.754999661576975*^9}},ExpressionUUID->"645118b4-3efb-4e87-b82b-\
7000552f32c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SNR4D", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"DevideNoZero", "[", 
        RowBox[{"#", ",", "sigma"}], "]"}], "&"}], ",", 
      RowBox[{"Transpose", "[", "dwiN", "]"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.754914770757429*^9, 3.7549147779259467`*^9}, 
   3.754999639357337*^9},
 CellLabel->"In[47]:=",ExpressionUUID->"3d0989cb-3f8b-44de-811e-bb762ce4f8ac"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"SNR4D", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "75"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549997522715864`*^9, 3.7549997718589225`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"cb791753-16a4-485a-856b-2d0dfaadcfaf"]
}, Closed]],

Cell[CellGroupData[{

Cell["Motion and eddy current correction", "Subsubsection",
 CellChangeTimes->{{3.754914684136002*^9, 
  3.754914709700195*^9}},ExpressionUUID->"d4ebefef-2c40-4afa-86e2-\
01e82ef7e608"],

Cell["Register both legs simultaneous.", "Text",
 CellChangeTimes->{{3.7549999548970714`*^9, 3.7549999729488125`*^9}, {
  3.7584403903058157`*^9, 
  3.758440413362672*^9}},ExpressionUUID->"fcfdba04-a6f9-409b-bf78-\
69c9d9a513ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datareg", " ", "=", " ", 
   RowBox[{"RegisterDiffusionData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dwi", ",", 
       RowBox[{"Dilation", "[", 
        RowBox[{"mask", ",", "2"}], "]"}], ",", "dwivox"}], "}"}], ",", 
     RowBox[{"Iterations", "\[Rule]", "100"}], ",", 
     RowBox[{"NumberSamples", "\[Rule]", "1500"}], ",", 
     RowBox[{"DeleteTempDirectory", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7549147131639323`*^9, 3.7549147214124303`*^9}, {
   3.7549999466673007`*^9, 3.7549999473195624`*^9}, 3.758440407491884*^9, {
   3.76035821701776*^9, 3.7603582235379643`*^9}, 3.7607790796429935`*^9, {
   3.7607794942163477`*^9, 3.760779497513489*^9}, 3.7614797778632016`*^9, 
   3.761479997024624*^9},ExpressionUUID->"bd7f1df1-29c6-4ca4-a54c-\
3c906bd69bd4"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dwiN", ",", "datareg"}], "]"}]], "Input",
 CellChangeTimes->{{3.7603570660581474`*^9, 3.760357074591647*^9}, {
   3.7614797897215075`*^9, 3.7614797925769625`*^9}, 
   3.761480001444144*^9},ExpressionUUID->"a91ec2ea-8cf7-45a9-9683-\
d4520d9dcf90"],

Cell["Separately register the left and right leg", "Text",
 CellChangeTimes->{{3.7549999548970714`*^9, 
  3.7549999729488125`*^9}},ExpressionUUID->"2c663dae-ce55-4c0e-9ead-\
798d28b2441d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datareg", " ", "=", " ", 
   RowBox[{"RegisterDiffusionDataSplit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dwiN", ",", 
       RowBox[{"Dilation", "[", 
        RowBox[{"mask", ",", "2"}], "]"}], ",", "dwivox"}], "}"}], ",", 
     RowBox[{"Iterations", "\[Rule]", "100"}], ",", 
     RowBox[{"NumberSamples", "\[Rule]", "1500"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7549147131639323`*^9, 3.7549147214124303`*^9}, {
  3.7549999466673007`*^9, 
  3.7549999473195624`*^9}},ExpressionUUID->"9b20175a-57c0-4449-83ec-\
169ccd6f1d3d"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IVIM Fitting", "Subsection",
 CellChangeTimes->{{3.7549137794368954`*^9, 
  3.7549137848242793`*^9}},ExpressionUUID->"194fc7a6-9250-4380-ab91-\
b6f48a0893c5"],

Cell[CellGroupData[{

Cell["Whole volume calibrate", "Subsubsection",
 CellChangeTimes->{{3.7549138637211986`*^9, 3.7549138972407355`*^9}, 
   3.754999859291905*^9},ExpressionUUID->"c83a9054-dd74-47d7-ad95-\
3b9d6619e603"],

Cell["\<\
Calculate the Iso images from each b - value and calculate the mean signal \
volume\
\>", "Text",
 CellChangeTimes->{{3.7549999858705673`*^9, 
  3.755000031508486*^9}},ExpressionUUID->"c0285daf-d6f8-45d3-b7b0-\
a5175ce9af64"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dwiIso", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{"Transpose", "[", 
        RowBox[{"datareg", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "#"}], "]"}], "]"}], "]"}], "]"}], "&"}], "/@", 
     "pos"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sig", " ", "=", " ", 
   RowBox[{"MeanSignal", "[", "datareg", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sigI", "=", 
   RowBox[{"MeanSignal", "[", "dwiIso", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549159320232944`*^9, 3.7549159330627413`*^9}, {
   3.7549160034802017`*^9, 3.754916006774444*^9}, 3.754999982025779*^9},
 CellLabel->
  "In[318]:=",ExpressionUUID->"2c24046e-db0b-4e2d-93ce-548abb04f40d"],

Cell["Fit and show the IVIM signal of the whole volume", "Text",
 CellChangeTimes->{{3.7550000404661784`*^9, 
  3.7550000531960096`*^9}},ExpressionUUID->"ee6a7083-6d3f-4950-8cbe-\
77fbc5364897"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fiti", "=", 
   RowBox[{"IVIMCalc", "[", 
    RowBox[{"sig", ",", "val", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", ".05", ",", ".003", ",", ".1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitIi", "=", 
    RowBox[{"IVIMCalc", "[", 
     RowBox[{"sigI", ",", "bval", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", ".05", ",", ".003", ",", ".1"}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotIVIM", "[", 
  RowBox[{"fiti", ",", "sig", ",", "val", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotIVIM", "[", 
  RowBox[{"fitIi", ",", "sigI", ",", "bval", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7549155168555403`*^9, 3.75491555474142*^9}, 
   3.7549157282165155`*^9, {3.7549157951437693`*^9, 3.7549157954631233`*^9}, {
   3.754915838571384*^9, 3.754915852712798*^9}, {3.754915888023015*^9, 
   3.7549158974301367`*^9}, {3.754915972296256*^9, 3.7549159737517576`*^9}, 
   3.754916032154574*^9},
 CellLabel->
  "In[321]:=",ExpressionUUID->"fea884d6-0f69-4111-9d39-fa9e2a661e4d"]
}, Closed]],

Cell[CellGroupData[{

Cell["IVIM fit ", "Subsubsection",
 CellChangeTimes->{{3.7549138637211986`*^9, 3.7549138972407355`*^9}, {
   3.7549155771892085`*^9, 3.7549155820371375`*^9}, 
   3.755000066069899*^9},ExpressionUUID->"37c42ac9-91fe-46e0-b5f0-\
8a8055e0e5be"],

Cell["\<\
Fit using the whole volume fit as a initial guess and using a fixed D*\
\>", "Text",
 CellChangeTimes->{{3.755000067813447*^9, 
  3.75500009744042*^9}},ExpressionUUID->"0f42b6f0-0ac9-4f04-a3fa-\
eb1d2d31934f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"S0Ii", ",", "fracI", ",", "diff", ",", "pDiff"}], "}"}], "=", 
   RowBox[{"IVIMCalc", "[", 
    RowBox[{"dwiIso", ",", "bval", ",", "fiti", ",", 
     RowBox[{"IVIMConstrained", "\[Rule]", "False"}], ",", 
     RowBox[{"Parallelize", "\[Rule]", "True"}], ",", 
     RowBox[{"MonitorIVIMCalc", "\[Rule]", "True"}], ",", 
     RowBox[{"IVIMFixed", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fracI", "=", 
   RowBox[{"Clip", "[", 
    RowBox[{"fracI", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549160511618843`*^9, 3.754916055224902*^9}},
 CellLabel->
  "In[325]:=",ExpressionUUID->"9b64546e-04bc-4e97-994c-1aede4a4f620"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"fracI", ",", "diff", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", ".1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.002"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758440831414627*^9, 3.7584408799931316`*^9}},
 CellLabel->
  "In[337]:=",ExpressionUUID->"18361a8d-0015-46b1-91d8-24b5e8b80e9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"IVIMResiduals", "[", 
    RowBox[{"dwiIso", ",", "bval", ",", 
     RowBox[{"{", 
      RowBox[{"S0Ii", ",", "fracI", ",", "diff", ",", "pDiff"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758440682540387*^9, 3.7584406853178387`*^9}, {
  3.7584407331240063`*^9, 3.7584407573610716`*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"7a02e95a-55d3-4dcf-811f-6f7a57c0aed4"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dwiIso", ",", "res", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758440767656734*^9, 3.7584408171734514`*^9}},
 CellLabel->
  "In[333]:=",ExpressionUUID->"c8cd8936-aaa0-4ffd-bcc6-64ae1a6de48c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Split signals into perfusion and diffusion", "Subsubsection",
 CellChangeTimes->{{3.754915593226927*^9, 
  3.7549156019133368`*^9}},ExpressionUUID->"e507394d-7fce-45ce-bab9-\
205bc132c31e"],

Cell["\<\
With a IVIM fit you can remove the perfusion contribution form the original \
DWI signal\
\>", "Text",
 CellChangeTimes->{{3.7550001029416046`*^9, 3.755000124998373*^9}, 
   3.755000646175701*^9},ExpressionUUID->"f1339e48-5568-4181-9103-\
13343d87b5ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dataCor", ",", "dataSyn"}], "}"}], "=", 
   RowBox[{"IVIMCorrectData", "[", 
    RowBox[{"datareg", ",", 
     RowBox[{"{", 
      RowBox[{"S0Ii", ",", "fracI", ",", "pDiff"}], "}"}], ",", "val", ",", 
     RowBox[{"FilterMaps", "\[Rule]", "False"}], ",", 
     RowBox[{"FilterType", "\[Rule]", "\"\<Laplatian\>\""}], ",", 
     RowBox[{"FilterSize", "\[Rule]", "0.8"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754213347702221*^9, 3.754213350373131*^9}, {
   3.7542134659202547`*^9, 3.754213466512255*^9}, 3.7549161050522118`*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"01726389-dcb2-4df4-a42f-14741a4d3969"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataCor", ",", "dataSyn", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "100"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.754213485564293*^9, 3.754213492195796*^9}, {
  3.7549161354346447`*^9, 3.7549161421385717`*^9}, {3.755000140840662*^9, 
  3.7550001411680336`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"377f4aec-7083-4a3a-92f1-91ca05e12f9b"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tensor analysis", "Subsection",
 CellChangeTimes->{{3.754920706637082*^9, 3.754920714715969*^9}, {
  3.7550002741128864`*^9, 
  3.755000276412504*^9}},ExpressionUUID->"46cb5c22-df36-42f1-8278-\
128db9e6546d"],

Cell[CellGroupData[{

Cell["Fit the tensors", "Subsubsection",
 CellChangeTimes->{{3.7550002776467867`*^9, 
  3.755000283657793*^9}},ExpressionUUID->"46110b45-9f52-4171-ae7f-\
cc9053aa8a39"],

Cell[BoxData[
 RowBox[{"Column", "@", 
  RowBox[{"Options", "[", "TensorCalc", "]"}]}]], "Input",
 CellChangeTimes->{{3.755000157238582*^9, 3.755000168626581*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"4cc308f1-c626-492a-91a8-f47d2cfafa5c"],

Cell["Calculate tensor from corrected data", "Text",
 CellChangeTimes->{{3.755000205572136*^9, 
  3.7550002111624765`*^9}},ExpressionUUID->"9b1f7978-adca-4e60-bbe3-\
3c5f3c0ab3f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tens", ",", "S0", ",", "outlier", ",", "res"}], "}"}], "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{"datareg", ",", "grad", ",", "val"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7542133092285795`*^9, 3.754213342561816*^9}, 
   3.754213542568743*^9, {3.7542147650041075`*^9, 3.7542147659083357`*^9}, {
   3.754918564252726*^9, 3.7549185903437014`*^9}, {3.754918924687765*^9, 
   3.754918928371292*^9}, {3.75500019939853*^9, 3.7550002177135515`*^9}, {
   3.7550005139963884`*^9, 3.7550005196559925`*^9}, 3.7550005581957283`*^9, {
   3.755585887168521*^9, 3.75558588745653*^9}, {3.7699584120848637`*^9, 
   3.7699584163511925`*^9}, 3.7699589571456165`*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"c4046150-0e85-4051-a718-7bc3b4410eb8"],

Cell["Convert Tensor To matrix and vector format", "Text",
 CellChangeTimes->{{3.7584417914797144`*^9, 
  3.758441805382854*^9}},ExpressionUUID->"c1085988-fab4-4e7a-b40f-\
1be293ded423"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensMat", "=", 
   RowBox[{"TensMat", "[", "tens", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tensVec", "=", 
   RowBox[{"TensVec", "[", "tensMat", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "/@", 
  RowBox[{"{", 
   RowBox[{"tensMat", ",", "tensVec"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.7584418079588037`*^9, 3.7584418549323115`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"61179b73-6cfe-420a-8029-ad2d32a322e9"],

Cell["Plot the tensor.", "Text",
 CellChangeTimes->{{3.7584410647431507`*^9, 3.758441071843142*^9}, 
   3.7584420061501074`*^9},ExpressionUUID->"be4e95c3-60da-4f88-9331-\
306f45cd1c4e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"crp", "=", 
   RowBox[{"FindCrop", "[", "mdata", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tensPlot", "=", 
   RowBox[{"1000", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"ApplyCrop", "[", 
          RowBox[{"#", ",", "crp"}], "]"}], "&"}], "/@", "tens"}], ")"}], "/.",
       " ", 
      RowBox[{"0.", "\[Rule]", 
       RowBox[{"-", "1"}]}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.755000323126373*^9, 3.7550004528731933`*^9}, 
   3.755000654989583*^9, {3.7555869291906013`*^9, 3.755586936545241*^9}, {
   3.758441889125291*^9, 3.7584419446473494`*^9}, 3.758441979190585*^9, {
   3.7584557880197663`*^9, 3.7584558215242443`*^9}, {3.837509279580782*^9, 
   3.8375092879598637`*^9}},ExpressionUUID->"81b68c3e-6296-44bd-95a1-\
16e20540b96c"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"GridData", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"TensMat", "[", "tensPlot", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5"}], "}"}]}], "]"}], ",", "3"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.758455792751069*^9, {3.837502116587649*^9, 3.8375021398980265`*^9}, {
   3.8375092129606934`*^9, 3.8375092308665075`*^9}, 
   3.8375092713038282`*^9},ExpressionUUID->"5feffc29-319a-4d91-98df-\
d76aafbbbd23"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ax", ",", "cor", ",", "sag"}], "}"}], "=", 
   RowBox[{"GridData3D", "[", 
    RowBox[{"tensPlot", ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584560457474313`*^9, 3.7584560724689875`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"8b0730ee-7362-439c-a55d-7b48c7668c7d"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"ax", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758455736008664*^9, 3.7584557692527666`*^9}, {
  3.758456044004887*^9, 3.7584560853204393`*^9}, {3.769959016241742*^9, 
  3.769959016528507*^9}, {3.837509292475665*^9, 
  3.837509294902581*^9}},ExpressionUUID->"9a36fc92-d1e1-461a-affd-\
7a4634929124"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"sag", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758455736008664*^9, 3.7584557692527666`*^9}, {
   3.758456044004887*^9, 3.7584560853204393`*^9}, 
   3.8375093009034433`*^9},ExpressionUUID->"c10b5f5f-1c4e-46fc-8457-\
7ae8c5de5e55"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"cor", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758455736008664*^9, 3.7584557692527666`*^9}, {
   3.758456044004887*^9, 3.7584560629483066`*^9}, 
   3.837509303071743*^9},ExpressionUUID->"53def0d8-f168-477c-b7cb-\
c8fe6942331d"],

Cell["\<\
Calculate tensor using only high b-values, first find the positions of the \
high b-values ad then select the correct data and fit the tensor.\
\>", "Text",
 CellChangeTimes->{{3.755000220724985*^9, 3.755000228452171*^9}, {
  3.7550006807677164`*^9, 
  3.755000705520234*^9}},ExpressionUUID->"b7b2a8a2-13df-4751-8d89-\
c4d73b0ea43f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"selH", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"pos", "[", 
     RowBox[{"[", 
      RowBox[{"Flatten", "@", 
       RowBox[{"Position", "[", 
        RowBox[{"bval", ",", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "\[GreaterEqual]", "200"}], ")"}], "&"}], ")"}]}]}],
         "]"}]}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tensH", ",", "S0H", ",", "outlierH", ",", "resH"}], "}"}], "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{
     RowBox[{"datareg", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "selH"}], "]"}], "]"}], ",", 
     RowBox[{"grad", "[", 
      RowBox[{"[", "selH", "]"}], "]"}], ",", 
     RowBox[{"val", "[", 
      RowBox[{"[", "selH", "]"}], "]"}], ",", 
     RowBox[{"FullOutput", "\[Rule]", "True"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7541969378065863`*^9, 3.754196960757258*^9}, {
   3.7549187589191275`*^9, 3.754918786013351*^9}, 3.754919332812829*^9, {
   3.754919561177947*^9, 3.7549195659665613`*^9}, {3.7549196440639453`*^9, 
   3.7549196533154583`*^9}, {3.755000217149051*^9, 3.755000255723921*^9}, {
   3.7550006858586383`*^9, 3.7550007090440454`*^9}, {3.7550013675359993`*^9, 
   3.755001371129531*^9}},ExpressionUUID->"0e3b5a12-1999-4716-a93f-\
1cb468138eef"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"S0H", ",", 
   RowBox[{"Total", "@", 
    RowBox[{"Transpose", "@", "outlierH"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.754919594117535*^9, 3.7549196290454493`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"9219a9f5-b371-4dfb-9bc4-f5c419d321ba"],

Cell["\<\
Based on the tensor residuals you can estimate a noise sigma map however this \
will severely overestimate the sigma\
\>", "Text",
 CellChangeTimes->{{3.7550016396203413`*^9, 
  3.7550016675961504`*^9}},ExpressionUUID->"db2d0a1f-9d4a-4bf6-94d9-\
6893ddbeb429"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sigmaT", "=", 
   RowBox[{"SigmaCalc", "[", 
    RowBox[{
     RowBox[{"datareg", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "selH"}], "]"}], "]"}], ",", 
     RowBox[{"Join", "[", 
      RowBox[{"tensH", ",", 
       RowBox[{"{", "S0H", "}"}]}], "]"}], ",", 
     RowBox[{"grad", "[", 
      RowBox[{"[", "selH", "]"}], "]"}], ",", 
     RowBox[{"val", "[", 
      RowBox[{"[", "selH", "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.755001350995302*^9, 3.755001397833783*^9}, {
  3.7550015474069123`*^9, 3.7550015510458455`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"81d0d641-85ea-42a6-9641-aa770949ecd2"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"S0H", ",", "sigmaT"}], "]"}]], "Input",
 CellChangeTimes->{{3.755001400060593*^9, 3.755001400226844*^9}, {
  3.7550015763895607`*^9, 3.755001580891612*^9}, {3.7550016333778324`*^9, 
  3.7550016367930765`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"28bec43e-e76d-4463-9d29-c32ba0fd6212"]
}, Closed]],

Cell[CellGroupData[{

Cell["Analyse Tensor parameters", "Subsubsection",
 CellChangeTimes->{{3.7549186656015377`*^9, 3.7549186728649974`*^9}, 
   3.7549194024976115`*^9, {3.7550008603924294`*^9, 3.7550008637192807`*^9}, 
   3.7550015902694283`*^9},ExpressionUUID->"5df7f489-c3af-447f-892b-\
2d741b7472b9"],

Cell["\<\
ParameterCalc will calculate l1, l2, l3, MD and FA. Internally it uses \
EignvalCalc, ADCCal and FACalc\
\>", "Text",
 CellChangeTimes->{{3.7550008023956223`*^9, 3.7550008212908936`*^9}, {
  3.758440930595067*^9, 
  3.758440954625654*^9}},ExpressionUUID->"827dae19-915f-47c7-88e0-\
29476a68b6eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"par", "=", 
   RowBox[{"ParameterCalc", "[", "tens", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7549186746012135`*^9, 3.75491868181139*^9}, 
   3.75491987629683*^9, {3.7549199750647078`*^9, 3.7549199854126315`*^9}, 
   3.755000732829716*^9, {3.755000800069415*^9, 3.7550008004599547`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"6288443b-53ef-46c2-adb6-5fd242877ecd"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"par", "[", 
    RowBox[{"[", "4", "]"}], "]"}], ",", 
   RowBox[{"par", "[", 
    RowBox[{"[", "5", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", ".5"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549201719106073`*^9, 3.7549202047145824`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"7d283bc0-0b1c-4f90-843a-7e94e6175fe9"],

Cell["Get the parameters from muscle masks in table form", "Text",
 CellChangeTimes->{{3.755000843971737*^9, 
  3.755000856556223*^9}},ExpressionUUID->"c7e1f636-4a65-44ba-97f5-\
3c532c2ec232"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"masks", ",", "labs"}], "}"}], "=", 
   RowBox[{"SplitSegmentations", "[", "labels", "]"}]}], ";"}], "\n", 
 RowBox[{"TableForm", "@", 
  RowBox[{"GetMaskMeans", "[", 
   RowBox[{
    RowBox[{"par", "[", 
     RowBox[{"[", "4", "]"}], "]"}], ",", "masks", ",", "\"\<MD\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "@", 
  RowBox[{"GetMaskMeans", "[", 
   RowBox[{
    RowBox[{"par", "[", 
     RowBox[{"[", "5", "]"}], "]"}], ",", "masks", ",", "\"\<FA\>\""}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.754919933167025*^9, 3.7549199519066277`*^9}, 
   3.7550008748413715`*^9},
 CellLabel->"In[71]:=",ExpressionUUID->"016438a3-9162-4cbf-bae2-0cd4f7115cfa"],

Cell["\<\
Plot the parameters prom a muscle mask as a Histogram to evaluate their \
distribution\
\>", "Text",
 CellChangeTimes->{{3.7550008867946796`*^9, 
  3.7550009101257515`*^9}},ExpressionUUID->"811ccd9c-c131-4267-85e8-\
406bc2e46d47"],

Cell[BoxData[
 RowBox[{"Grid", "@", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Hist", "[", 
       RowBox[{
        RowBox[{"GetMaskData", "[", 
         RowBox[{
          RowBox[{"par", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", "#"}], "]"}], ",", 
        RowBox[{"Method", "\[Rule]", "\"\<Both\>\""}]}], "]"}], "&"}], "/@", 
     RowBox[{
      RowBox[{"Transpose", "[", "masks", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "6"}], "]"}], "]"}]}], ",", "3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.754920962778118*^9, 3.7549209861502666`*^9}, {
  3.7549211603226004`*^9, 3.7549211784332447`*^9}, {3.754921251856983*^9, 
  3.7549212556549807`*^9}, {3.754999246118026*^9, 3.754999247507222*^9}, {
  3.7550009157742796`*^9, 3.7550009289458475`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"a7a27062-ebb2-4ed3-a1d1-3025b602e14b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculate Tensor angles", "Subsubsection",
 CellChangeTimes->{{3.7549205638416615`*^9, 3.7549205750434775`*^9}, {
  3.7550009652188683`*^9, 
  3.755000970820772*^9}},ExpressionUUID->"e037ed65-c2cd-4cc5-8065-\
ba7af72e972b"],

Cell["\<\
First filter the tensor using a diffusionFilter and anisotropic smoothing.\
\>", "Text",
 CellChangeTimes->{{3.755000973750066*^9, 3.7550009919163976`*^9}, {
  3.755001047885309*^9, 
  3.7550010495798187`*^9}},ExpressionUUID->"da9608bd-9f5a-4fa4-b8a1-\
f1650dab7c2a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tensF", "=", 
   RowBox[{"AnisoFilterTensor", "[", 
    RowBox[{"tens", ",", "datareg"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7549202250785255`*^9, 3.7549202397016525`*^9}, 
   3.755001029185559*^9},
 CellLabel->"In[77]:=",ExpressionUUID->"3fe6c7c2-00b5-4d1e-b4f8-750688380984"],

Cell[BoxData[
 RowBox[{"ColorFAPlot", "[", "tensF", "]"}]], "Input",
 CellChangeTimes->{{3.755001208033079*^9, 3.7550012133556104`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"d05c621c-17a6-4dab-b5a8-744183e72ded"],

Cell["\<\
Calculate the eigenvectors and their angle with respect to the slice normal\
\>", "Text",
 CellChangeTimes->{{3.7550009993812585`*^9, 
  3.755001024147148*^9}},ExpressionUUID->"c2e709da-971c-4de4-a9f5-\
34d1b012c9b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eigVal", "=", 
   RowBox[{"EigenvecCalc", "[", "tensF", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"angMap", "=", 
   RowBox[{"AngleCalc", "[", 
    RowBox[{
     RowBox[{"eigVal", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "All", ",", "All", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"Distribution", "\[Rule]", "\"\<0-90\>\""}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7549204064330254`*^9, 3.754920423101942*^9}, 
   3.755000996767805*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"cfeacfe6-ee62-43ac-999d-2a12cb57a737"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"angMap", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "90"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549205923651466`*^9, 3.754920595437496*^9}, {
  3.754920650714964*^9, 3.7549206547954545`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"ecc0c585-9da4-4f6a-a6fe-b989e06865e6"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulate Tensor Data and fit testing", "Subchapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7554985560315247`*^9, 3.755498559150863*^9}, {
   3.7584331056859984`*^9, 
   3.758433107556983*^9}},ExpressionUUID->"1751ae4d-03af-43ab-814a-\
5f1f74188c44"],

Cell[CellGroupData[{

Cell["Simulate Diffusion signal", "Subsection",
 CellChangeTimes->{{3.7555055424913597`*^9, 
  3.755505547990526*^9}},ExpressionUUID->"d31f39f7-0271-44c7-bb22-\
4483ca591ade"],

Cell["MRI acquisition parameters used in simulation", "Text",
 CellChangeTimes->{{3.755498706578211*^9, 
  3.7554987088653297`*^9}},ExpressionUUID->"10ef7ece-7769-4d88-bcb0-\
24ae840e2ae7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"grad", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"GenerateGradients", "[", 
      RowBox[{"16", ",", 
       RowBox[{"VisualOpt", "\[Rule]", "False"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "0.", ",", "0."}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bvec", "=", 
   RowBox[{
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"450", ",", 
        RowBox[{
         RowBox[{"Length", "[", "grad", "]"}], "-", "1"}]}], "]"}], ",", 
      "0"}], "]"}], "//", "N"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"TR", ",", "TE"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"2990", ",", "49"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"parMus", "=", 
    RowBox[{"{", 
     RowBox[{"0.9", ",", "1200", ",", "37"}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"pd", ",", "T1", ",", "T2"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parFat", "=", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", "300", ",", "80"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dim", "=", 
    RowBox[{"{", 
     RowBox[{"50", ",", "50"}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"2500", " ", "voxels"}], "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7554991728825464`*^9, 3.7554991895206566`*^9}, {
   3.7555027201165314`*^9, 3.755502726818404*^9}, 3.7555027960200157`*^9, {
   3.7555046513955193`*^9, 3.755504652242817*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"5bf5b320-1c49-437a-99de-8917ff7c9d0c"],

Cell["diffusion properties of fat and muscle", "Text",
 CellChangeTimes->{{3.7554987153767567`*^9, 3.755498717795229*^9}, {
  3.755498845121635*^9, 
  3.755498846384009*^9}},ExpressionUUID->"924a6c5c-f5e2-49c7-9aec-\
d99cba543428"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eigFat", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.8", ",", "0.8", ",", "0.8"}], "}"}], "/", "1000."}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"MDfat", ",", "FAfat"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", "eigFat", "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"ADCCalc", ",", "FACalc"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"trueFat", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"1000", "*", "eigFat"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1000", "MDfat"}], ",", "FAfat"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eigMus", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.6", ",", "1.4", ",", "1.0"}], "}"}], "/", "1000."}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"MDmus", ",", "FAmus"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", "eigMus", "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"ADCCalc", ",", "FACalc"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trueMus", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"1000", "*", "eigMus"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1000", "MDmus"}], ",", "FAmus"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7554987124178233`*^9, 3.7554987420325537`*^9}, {
  3.755498807491068*^9, 3.7554989260180225`*^9}, {3.7554989951714444`*^9, 
  3.7554990114404864`*^9}, {3.755503913939555*^9, 3.755503915827593*^9}, {
  3.7555045928829904`*^9, 3.7555045943549566`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"ac329d16-f122-4398-9d78-bd98c3eb7a70"],

Cell["\<\
relative signal of muscle and fat, muscle signal is set to 1 and fat signal \
is relative to that\
\>", "Text",
 CellChangeTimes->{
  3.7554987349964027`*^9},ExpressionUUID->"1460edd8-ebc9-4085-89c9-\
9648c5994b0c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sigMus", "=", 
   RowBox[{"Signal", "[", 
    RowBox[{"parMus", ",", "TR", ",", "TE"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sigFat", "=", 
   RowBox[{"Signal", "[", 
    RowBox[{"parFat", ",", "TR", ",", "TE"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sigMus", ",", "sigFat"}], "}"}], "=", 
   RowBox[{"1000", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigMus", ",", "sigFat"}], "}"}], "/", "sigMus"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.755498733095319*^9, 3.7554987566720223`*^9}, {
  3.7555040874450517`*^9, 3.755504088387574*^9}, {3.7555045991718335`*^9, 
  3.7555046397624445`*^9}, {3.7555046804054747`*^9, 3.75550471723564*^9}, {
  3.755505126598693*^9, 3.755505158163907*^9}, {3.755505202579651*^9, 
  3.7555052230444407`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"8ef48365-f337-4591-929a-e3834a62a6b4"],

Cell["SNR and fat range for simulation", "Text",
 CellChangeTimes->{
  3.7554987547880144`*^9},ExpressionUUID->"a46f428a-dc95-4a9c-94ee-\
db51bba31c07"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SNR", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"5", ",", "55", ",", "5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fat", "=", 
   RowBox[{
    RowBox[{"N", "@", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "60", ",", "5"}], "]"}]}], "/", "100"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.755498747952379*^9, 3.7554987529771776`*^9}, {
  3.7555026885814595`*^9, 3.7555026952833323`*^9}, {3.7555039261491194`*^9, 
  3.7555039312025957`*^9}, {3.7555047653022795`*^9, 3.755504765826683*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"4c01170b-1dc6-4a6f-94bb-326f8fac8dcb"],

Cell["Each slice has a different SNR value", "Text",
 CellChangeTimes->{{3.7554992010614014`*^9, 3.755499222088479*^9}, {
  3.7554992963196063`*^9, 3.7554993090876026`*^9}, {3.7554993879996243`*^9, 
  3.7554993928785996`*^9}},ExpressionUUID->"26edf3b3-8ad9-461c-86ea-\
f42fcabaaf29"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"diffSNRData", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"AddNoise", "[", 
      RowBox[{
       RowBox[{"CreateDiffData", "[", 
        RowBox[{
        "sigMus", ",", "eigMus", ",", "bvec", ",", "grad", ",", "dim"}], 
        "]"}], ",", "#", ",", 
       RowBox[{"NoiseSize", "\[Rule]", "\"\<SNR\>\""}]}], "]"}], "&"}], "/@", 
    "SNR"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "diffSNRData", "]"}]}], "Input",
 CellChangeTimes->{{3.755499371169255*^9, 3.755499410639565*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"dc246c71-2d8c-4755-93db-3ddef0094fa6"],

Cell["\<\
Each slice has a different fat concentration and all data has an SNR of 30\
\>", "Text",
 CellChangeTimes->{{3.7554992010614014`*^9, 3.755499222088479*^9}, {
  3.7554992963196063`*^9, 3.7554993090876026`*^9}, {3.755499418469868*^9, 
  3.755499419198783*^9}},ExpressionUUID->"2870d320-5902-4ad9-9183-\
18b8640c365a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"diffFatData", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "#"}], ")"}], 
        RowBox[{"CreateDiffData", "[", 
         RowBox[{
         "sigMus", ",", "eigMus", ",", "bvec", ",", "grad", ",", "dim"}], 
         "]"}]}], "+", 
       RowBox[{"#", " ", 
        RowBox[{"CreateDiffData", "[", 
         RowBox[{
         "sigFat", ",", "eigFat", ",", "bvec", ",", "grad", ",", "dim"}], 
         "]"}]}]}], ")"}], "&"}], "/@", "fat"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"diffFatData", "=", 
   RowBox[{"AddNoise", "[", 
    RowBox[{"diffFatData", ",", 
     RowBox[{"1000", "/", "30."}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "diffFatData", "]"}]}], "Input",
 CellChangeTimes->{{3.7554990540502625`*^9, 3.7554990574422503`*^9}, {
  3.755499098578025*^9, 3.755499165345476*^9}, {3.7554991990731335`*^9, 
  3.755499199856219*^9}, {3.7554992345026464`*^9, 3.7554992567207756`*^9}, {
  3.7554992876353903`*^9, 3.7554993508476458`*^9}, {3.7555040025015373`*^9, 
  3.755504002562702*^9}, {3.755504115733507*^9, 3.755504119538631*^9}, {
  3.7555051476217604`*^9, 3.7555051480198555`*^9}, {3.7555058283248744`*^9, 
  3.755505829011708*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"bc673003-00c7-4136-ab12-9df2d7f84eeb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fit the simulated diffusion signal", "Subsection",
 CellChangeTimes->{{3.758349069323036*^9, 3.7583490793226967`*^9}, {
  3.7584697305882645`*^9, 
  3.758469732599307*^9}},ExpressionUUID->"09dc6daf-59ee-4840-bd77-\
0dfd2bff5562"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tensSNR", ",", "S0SNR", ",", "outSNR", ",", "resSNR"}], "}"}], 
   "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{"diffSNRData", ",", "grad", ",", "bvec"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tensFat", ",", "S0Fat", ",", "outFat", ",", "resFat"}], "}"}], 
   "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{"diffFatData", ",", "grad", ",", "bvec"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7554994561780434`*^9, 3.7554994672640123`*^9}, {
   3.7554995041277866`*^9, 3.7554995062093306`*^9}, {3.7554999740035515`*^9, 
   3.7554999771208525`*^9}, {3.7555000830755177`*^9, 3.755500086728283*^9}, {
   3.7555038872848186`*^9, 3.755503894660489*^9}, {3.7555040058494663`*^9, 
   3.7555040072512045`*^9}, 3.755505488884363*^9},
 CellLabel->"In[49]:=",ExpressionUUID->"936e9f89-0d66-473b-9277-3d000d5d55d5"],

Cell["\<\
Calculate Parameters with and without rejection of negative eigenvalues\
\>", "Text",
 CellChangeTimes->{{3.7555057186792235`*^9, 
  3.755505737032175*^9}},ExpressionUUID->"8fa6be86-0e1e-4c2d-92fd-\
815afc33504c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parSNR", "=", 
   RowBox[{"ParameterCalc", "[", 
    RowBox[{"tensSNR", ",", 
     RowBox[{"Reject", "\[Rule]", "False"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"parFat", "=", 
   RowBox[{"ParameterCalc", "[", 
    RowBox[{"tensFat", ",", 
     RowBox[{"Reject", "\[Rule]", "False"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.755500102429257*^9, 3.755500118594836*^9}, 
   3.755500158406703*^9, {3.7555022625180807`*^9, 3.755502271492881*^9}, {
   3.758470651156897*^9, 3.7584706560885053`*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"16a20155-a9d0-46dd-9004-3126334dafa9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parSNRT", "=", 
   RowBox[{"ParameterCalc", "[", 
    RowBox[{"tensSNR", ",", 
     RowBox[{"Reject", "\[Rule]", "True"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"parFatT", "=", 
   RowBox[{"ParameterCalc", "[", 
    RowBox[{"tensFat", ",", 
     RowBox[{"Reject", "\[Rule]", "True"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.755500102429257*^9, 3.755500118594836*^9}, 
   3.755500158406703*^9, {3.7555022625180807`*^9, 3.755502271492881*^9}, {
   3.7555057406599007`*^9, 3.755505770595284*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"d9be655b-99c1-4a49-92e9-1066227e6a3d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Evaluate the fits", "Subsection",
 CellChangeTimes->{{3.7583490835356913`*^9, 
  3.75834908874759*^9}},ExpressionUUID->"f1a32196-e07f-40de-9d22-\
2a3e291b7dda"],

Cell["Show histogram of MD and FA with different SNR values", "Text",
 CellChangeTimes->{{3.755500179573262*^9, 3.7555001958141766`*^9}, {
  3.755500399489155*^9, 
  3.755500419601555*^9}},ExpressionUUID->"ca482818-c0ff-4fd6-a65d-\
7ccf593d5fbc"],

Cell[BoxData[{
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"parSNR", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.1", ",", "1.8"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<MD\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<SNR = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"SNR", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "SNR", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"parSNR", "[", 
        RowBox[{"[", 
         RowBox[{"5", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.01", ",", "0.5"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<FA\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<SNR = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"SNR", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "SNR", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.755500162982013*^9, 3.7555001712671423`*^9}, {
  3.755500207797134*^9, 3.755500389828378*^9}, {3.755500476213152*^9, 
  3.7555004765159626`*^9}, {3.755502751367876*^9, 3.755502765781315*^9}, {
  3.7555028251228733`*^9, 3.7555028274430604`*^9}, {3.755505256917855*^9, 
  3.755505257698938*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"e1644f4b-cc91-419f-a202-938b3f310269"],

Cell["Show histogram of MD and FA with different fat values", "Text",
 CellChangeTimes->{{3.755500179573262*^9, 3.7555001958141766`*^9}, {
  3.755500399489155*^9, 3.755500419601555*^9}, {3.755504259300619*^9, 
  3.7555042596989145`*^9}},ExpressionUUID->"eb75b5be-106f-402c-87c8-\
a260f27e02a9"],

Cell[BoxData[{
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"parFat", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.8", ",", "1.8"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<MD\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<fat [%] = \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"100", 
           RowBox[{"fat", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"Length", "[", "fat", "]"}], ",", "5"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"parFat", "[", 
        RowBox[{"[", 
         RowBox[{"5", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.01", ",", "0.5"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<FA\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<fat [%] = \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"100", 
           RowBox[{"fat", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"Length", "[", "fat", "]"}], ",", "5"}], "]"}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.755500162982013*^9, 3.7555001712671423`*^9}, {
  3.755500207797134*^9, 3.755500389828378*^9}, {3.755500476213152*^9, 
  3.7555004765159626`*^9}, {3.755502751367876*^9, 3.755502765781315*^9}, {
  3.7555028251228733`*^9, 3.7555028274430604`*^9}, {3.755504263621405*^9, 
  3.7555043462739897`*^9}, {3.755505301230109*^9, 3.7555053021796412`*^9}, {
  3.755505373463333*^9, 3.7555053828834915`*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"73bedda0-2b21-40b2-b6f2-ac649cc09720"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parSNR", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", "SNR", ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "2"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<MD\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<MD as function of SNR\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parSNR", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", "SNR", ",", 
      RowBox[{"{", 
       RowBox[{"0.15", ",", "0.5"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<FA\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<FA as function of SNR\>\""}]}], "]"}]}],
    "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7555029294139233`*^9, 3.755502944645937*^9}, {
   3.7555032449315224`*^9, 3.755503245778783*^9}, {3.7555033968206387`*^9, 
   3.755503412773309*^9}, {3.755503455748889*^9, 3.755503541041586*^9}, {
   3.7555037516536865`*^9, 3.7555038438775*^9}, 3.7555054146962986`*^9, {
   3.7555054546298923`*^9, 3.7555054697152395`*^9}, {3.7555056432709084`*^9, 
   3.7555056532680564`*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"e72fb9d0-91ec-427c-bffa-63847b71c7e9"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQEiDumFNnIz5b/YQ/gqDvsW/nhSLvUVytdzkGjg
KnnJBOObOMw6FnJSNhjGt3S4sHS2aIMrjG/nsGxf9creECi/wdFhHsey304+
MHkXh/Syp/w/Yfob3Bza3afxxgfA5D0dtJQD2Fy8YfLeDntvHah/EAeTF3GY
NRMEXsLd62w7X7hJ4iPcvR5rQ5bL2XyCu9cpsev37sDPcPe+FbU8zDv/M9y9
UScnqnz99hnu3mf/mXK4JL/A3at7/EOan/8XuHst/x9ufRT3Be7eLYcf3u4o
+QJ3r+3r90vvLPwCd6/YgwUWt3n+wN1ryRa0LVfmJ9y9L4IOOGw5+R3u3k/a
8tPrQ77D3bvZ9F/6p9ff4O79tDlVT23TN7h7wwQ9u6vrv8Hdu1D11o7FEd/g
7r3anzH1tuM3uHsXNO0z+K/4DeHeUxMjn0h/sz/t3HhvQpkYPHwBuqGodg==

      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          Opacity[0.2], 
          RGBColor[1, 0, 0]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{12, 34, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 33, 
            32, 31, 30, 29, 28, 27, 26, 25, 24, 
            23}}]}]}, {}, {}, {}}, {{}, {}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{34, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22}]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
          33}]}}}], {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {5.25, 0.806}, PlotRange -> {{5, 55}, {0.8, 2}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {5.25, 0.806}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"MD\"", TraditionalForm], None}, {
        FormBox["\"SNR\"", TraditionalForm], None}}, FrameStyle -> 
     Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"MD as function of SNR\"", TraditionalForm], 
     PlotRange -> {{5, 55}, {0.8, 2}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQEiDhD6gT2EVnF4EJyqtHTWLShfzyFNIHOtQ8tV
KN/EwWWOWdrW2ZegfEuHvgC+nIPJF6F8O4f/b8qX6FldgPAbHB1yrSeWz7hw
Hirv4hDS9YQ/gAfKb3BzuPzWp0by3TmovKfDvPdV6dwuUH6Dt8Oa2CrGK9Iw
eRGHa9IyFyr33oG71/DjxWrzRRfh7hVi32N1TPsc3L05nEK3/0qehrs3g+FI
Y0zaKbh7f131E9coOQl374tN8a/enDoJd2+RY2z3heMn4e49tPrUD0uDU3D3
Tsttt9FlPgV3L/eZOsEDQafg7kUNXz0HZ9kS23mfbsPdd8n4yb3sVdfh7nux
wGp6yJSrcPcx5nvYeu66DHffz8REJqXXl+Dum/3S9FS6xiW4+z5Nf17/5+pF
uPsuW5ifLHG6CHff8u+7fhR/umA/r7Q9rPaeAtx9R5arMlxcrwHnAwCmgJqN

      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          Opacity[0.2], 
          RGBColor[1, 0, 0]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 32, 31, 
            30, 29, 28, 27, 26, 25, 24, 34, 
            23}}]}]}, {}, {}, {}}, {{}, {}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large]], 
         LineBox[{33, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22}]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{34, 24, 25, 26, 27, 28, 29, 30, 31, 
          32}]}}}], {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {5.25, 0.15175}, PlotRange -> {{5, 55}, {0.15, 0.5}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {5.25, 0.15175}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"FA\"", TraditionalForm], None}, {
        FormBox["\"SNR\"", TraditionalForm], None}}, FrameStyle -> 
     Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"FA as function of SNR\"", TraditionalForm], 
     PlotRange -> {{5, 55}, {0.15, 0.5}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Input",
 CellChangeTimes->{{3.7585379195504637`*^9, 
  3.758537942921279*^9}},ExpressionUUID->"659a2995-7727-4d66-9c45-\
aaeb505470d5"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parFat", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", 
      RowBox[{"100", "fat"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.5"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<fat fraction [%]\>\"", ",", "\"\<MD\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<MD as function of fat fraction\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parFat", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", 
      RowBox[{"100", "fat"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.4"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<fat fraction [%]\>\"", ",", "\"\<FA\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<FA as function of fat fraction\>\""}]}],
      "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7555054226454363`*^9, 3.755505444498875*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"7039e879-900b-4789-b0f3-47a256fa0bbf"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parSNRT", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", "SNR", ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "2"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<MD\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<MD as function of SNR\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parSNRT", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", "SNR", ",", 
      RowBox[{"{", 
       RowBox[{"0.15", ",", "0.5"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<FA\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<FA as function of SNR\>\""}]}], "]"}]}],
    "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7555029294139233`*^9, 3.755502944645937*^9}, {
   3.7555032449315224`*^9, 3.755503245778783*^9}, {3.7555033968206387`*^9, 
   3.755503412773309*^9}, {3.755503455748889*^9, 3.755503541041586*^9}, {
   3.7555037516536865`*^9, 3.7555038438775*^9}, 3.7555054146962986`*^9, {
   3.7555054546298923`*^9, 3.7555054697152395`*^9}, {3.7555056432709084`*^9, 
   3.7555056532680564`*^9}, {3.7555057548698072`*^9, 3.755505756086052*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"e4f0b636-a1bc-40f5-a4ba-1f9a6c814878"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parFatT", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", 
      RowBox[{"100", "fat"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.5"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<fat fraction [%]\>\"", ",", "\"\<MD\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<MD as function of fat fraction\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parFatT", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", 
      RowBox[{"100", "fat"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.4"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<fat fraction [%]\>\"", ",", "\"\<FA\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<FA as function of fat fraction\>\""}]}],
      "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7555054226454363`*^9, 3.755505444498875*^9}, {
  3.7555057607111783`*^9, 3.755505761685171*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"9ea6aef0-d1d8-4b93-aa04-3764b091c42d"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fiber Tractography", "Subchapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7554985560315247`*^9, 3.755498559150863*^9}, {
   3.7584331056859984`*^9, 3.758433107556983*^9}, {3.8375093153349724`*^9, 
   3.8375093191763477`*^9}},ExpressionUUID->"bc90db84-1b9a-464f-bfcb-\
7bfcdc17cc16"],

Cell[CellGroupData[{

Cell["Import The Data", "Subsection",
 CellChangeTimes->{{3.755000756204663*^9, 
  3.7550007614125185`*^9}},ExpressionUUID->"01c3231d-098c-4ccb-98c5-\
ca29c556a67d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"datareg", ",", "gradF", ",", "valF", ",", "dwivox"}], "}"}], "=", 
   RowBox[{"ImportNiiDiff", "[", 
    RowBox[{"\"\<DTIdata-reg.nii\>\"", ",", 
     RowBox[{"FlipBvec", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tensF", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"ImportNii", "[", 
     RowBox[{"\"\<DTI-tensor-filt.nii\>\"", ",", 
      RowBox[{"NiiMethod", "\[Rule]", "\"\<data\>\""}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"labels", ",", "vox"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<labels.nii\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.754895634046774*^9, 3.754895667562751*^9}, 
   3.7549147982158546`*^9, {3.7549998933836317`*^9, 3.7549998936081953`*^9}, {
   3.7550004747855062`*^9, 3.7550004893652954`*^9}, {3.7550005862069235`*^9, 
   3.755000615146139*^9}, {3.7550007439214835`*^9, 3.7550007442834463`*^9}, {
   3.8375094202002344`*^9, 3.8375094204766045`*^9}, {3.8375096188675065`*^9, 
   3.8375096327441254`*^9}, {3.8375106329545126`*^9, 
   3.8375106331145935`*^9}, {3.837511057132757*^9, 3.8375110681724567`*^9}, 
   3.8375111830577602`*^9, {3.8375115007051735`*^9, 3.8375115008517933`*^9}, {
   3.8375116843240447`*^9, 3.8375116917766247`*^9}, 3.8375119754757657`*^9, {
   3.837512081798009*^9, 3.837512107347674*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"3d03fde1-41a5-4faa-a08e-3aa8eeca546a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Process the data for tractography", "Subsection",
 CellChangeTimes->{{3.8375104797294474`*^9, 
  3.8375104885479608`*^9}},ExpressionUUID->"7b2df312-5a60-4afc-9c09-\
a780d1b79f27"],

Cell["Smooth the data which helps fiber tractography", "Text",
 CellChangeTimes->{{3.8375106376639895`*^9, 
  3.8375106504812546`*^9}},ExpressionUUID->"5f0b1bca-e3d5-41ed-9a70-\
a694208969b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataF", "=", 
   RowBox[{"AnisoFilterData", "[", 
    RowBox[{"datareg", ",", 
     RowBox[{"AnisoItterations", "->", "2"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8375104731632657`*^9, 3.8375105249107714`*^9}, {
  3.8375105761397724`*^9, 3.837510580044135*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"d2775a6c-75c0-463c-becb-f6bfa512909f"],

Cell["calculate the tensor with the smoothed data.", "Text",
 CellChangeTimes->{{3.8375106376639895`*^9, 
  3.8375106653089695`*^9}},ExpressionUUID->"dcc0e6b5-0a89-49d9-90d4-\
a98753f46dde"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tensF", ",", "S0", ",", "outlier", ",", "res"}], "}"}], "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{"dataF", ",", "gradF", ",", "valF"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.837510590028081*^9, 3.8375105986846066`*^9}, {
  3.8375121743634157`*^9, 
  3.8375121759722643`*^9}},ExpressionUUID->"9dfec1b0-002d-4e9b-8152-\
5110df278580"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fiber Tractography", "Subsection",
 CellChangeTimes->{{3.755000756204663*^9, 3.7550007614125185`*^9}, 
   3.8375096562311816`*^9},ExpressionUUID->"d662ecba-578b-4489-8e5f-\
fa36d3871aa7"],

Cell["Constrain the fiber tractography to the soleus muscle", "Text",
 CellChangeTimes->{{3.7550008867946796`*^9, 3.7550009101257515`*^9}, {
  3.837509665144559*^9, 
  3.8375096866313095`*^9}},ExpressionUUID->"3a89b8c7-8566-4bd6-af14-\
e74989a4dc81"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"masks", ",", "labs"}], "}"}], "=", 
   RowBox[{"SplitSegmentations", "[", "labels", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"masks", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "5"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.837509467801848*^9, 3.8375094726240377`*^9}, {
   3.83750962007218*^9, 3.8375096447132525`*^9}, {3.83750968068489*^9, 
   3.83750968257232*^9}, 3.837510273622922*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"e94f71ad-35d3-45b1-b3f9-da7a4a305fbf"],

Cell["\<\
Calculate the tensor parameters which will be used as stop criteria\
\>", "Text",
 CellChangeTimes->{{3.8375096937244864`*^9, 
  3.8375097131614184`*^9}},ExpressionUUID->"416dd865-07cf-4983-831e-\
47ee4c74ed0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"l1", ",", "l2", ",", "l3", ",", "md", ",", "fa"}], "}"}], "=", 
   RowBox[{"ParameterCalc", "[", "tensF", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.8375106064921355`*^9, {3.837511371858053*^9, 3.83751140314091*^9}, 
   3.837512222171653*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"d1993912-fbeb-4d5c-9270-ec462e67e431"],

Cell["Define where the tractography is allowed", "Text",
 CellChangeTimes->{{3.83750972099186*^9, 
  3.837509741100566*^9}},ExpressionUUID->"0e98120e-f12a-4c08-9535-\
de77cbef1e91"],

Cell[BoxData[
 RowBox[{
  RowBox[{"stop", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sol", ",", 
       RowBox[{"{", 
        RowBox[{"0.9", ",", "1.1"}], "}"}]}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{"within", " ", "the", " ", "soleus", " ", "mask"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"fa", ",", 
       RowBox[{"{", 
        RowBox[{"0.05", ",", "0.6"}], "}"}]}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{"within", " ", "a", " ", "FA", " ", "range"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"md", ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "2."}], "}"}]}], "}"}]}], 
    RowBox[{"(*", 
     RowBox[{"within", " ", "a", " ", "MD", " ", "range"}], "*)"}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8375097171183987`*^9, 3.8375097844276857`*^9}, 
   3.8375123060070024`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"9b120239-90bf-4ad0-aecf-298d967ccc6f"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"sol", " ", "fa"}], ",", " ", 
   RowBox[{"sol", " ", "md"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.05", ",", "0.6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "2."}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8375106716325436`*^9, 3.8375106939961233`*^9}, 
   3.8375123077213917`*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"563e0d28-bc72-4f64-8c7f-3ab5a3ead7ec"],

Cell["Perform the tractography", "Text",
 CellChangeTimes->{{3.83750972099186*^9, 3.837509741100566*^9}, {
  3.837509809802057*^9, 
  3.837509813389328*^9}},ExpressionUUID->"29a9ffcf-a4f5-4810-b77b-\
7ca390550ef8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"tracts", "=", 
   RowBox[{"FiberTractography", "[", 
    RowBox[{"tensF", ",", "dwivox", ",", "stop", ",", "\[IndentingNewLine]", 
     RowBox[{"FiberLengthRange", "->", 
      RowBox[{"{", 
       RowBox[{"20", ",", "400"}], "}"}]}], ",", 
     RowBox[{"FiberAngle", "->", "25"}], ",", 
     RowBox[{"SeedRandomization", "->", "1"}], ",", 
     RowBox[{"SeedSpacing", "->", "4"}], ",", "\[IndentingNewLine]", 
     RowBox[{"InterpolationOrder", "->", "1"}], ",", 
     RowBox[{"StepSize", "->", "1"}], ",", 
     RowBox[{"Method", "->", "\"\<Euler\>\""}], ",", 
     RowBox[{"MaxSeedPoints", "->", "5000"}], ",", "\[IndentingNewLine]", 
     RowBox[{"TensorFilps", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}], ",", 
     RowBox[{"TensorPermutations", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8375095081137714`*^9, 3.8375095852271957`*^9}, {
   3.8375097962658777`*^9, 3.83750979687728*^9}, 3.837510610321103*^9, {
   3.837513176880524*^9, 3.8375131860162334`*^9}, {3.837513371308124*^9, 
   3.8375133714457674`*^9}, {3.837513435209813*^9, 3.8375134353165283`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"14c90507-55f9-4bf4-9cda-701078118cf0"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"number of selected seedpoints: \"\>", "\[InvisibleSpace]", 
   "5000"}],
  SequenceForm["number of selected seedpoints: ", 5000],
  Editable->False]], "Print",
 CellChangeTimes->{3.837509584734612*^9, 3.837509813179375*^9, 
  3.8375102892778826`*^9, 3.837513204710061*^9, 3.8375133840746927`*^9, 
  3.837513448648825*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"50fda0b2-6e40-47c8-b451-dee93fc2e326"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Tractography took \"\>", "\[InvisibleSpace]", "29.5847957`", 
   "\[InvisibleSpace]", "\<\" seconds\"\>"}],
  SequenceForm["Tractography took ", 29.5847957, " seconds"],
  Editable->False]], "Print",
 CellChangeTimes->{3.837509584734612*^9, 3.837509813179375*^9, 
  3.8375102892778826`*^9, 3.837513204710061*^9, 3.8375133840746927`*^9, 
  3.8375134773883657`*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"43fafa60-a85c-489e-9355-402ca81e6e32"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "4248", "\[InvisibleSpace]", "\<\" tracts were generated with average \
length \"\>", "\[InvisibleSpace]", "56.5`", 
   "\[InvisibleSpace]", "\<\"mm\"\>"}],
  SequenceForm[
  4248, " tracts were generated with average length ", 56.5, "mm"],
  Editable->False]], "Print",
 CellChangeTimes->{3.837509584734612*^9, 3.837509813179375*^9, 
  3.8375102892778826`*^9, 3.837513204710061*^9, 3.8375133840746927`*^9, 
  3.837513477401329*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"207e8f99-99e1-4e78-b058-6d961dbf207a"]
}, Open  ]]
}, Open  ]],

Cell["Fit the tracts with 4th order polynomials", "Text",
 CellChangeTimes->{{3.837509851965728*^9, 3.8375098628005795`*^9}, {
  3.8375132423252225`*^9, 
  3.837513244198758*^9}},ExpressionUUID->"8e9aaa2a-5ea2-4fb3-8ba8-\
9490bfc44b9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tractsF", "=", 
   RowBox[{"FitTract", "[", 
    RowBox[{"tracts", ",", 
     RowBox[{"FittingOrder", "->", "4"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[45]:=",ExpressionUUID->"7e65216a-8696-4aec-85f5-9495fc545906"],

Cell["Show the tracts, still work in progress", "Text",
 CellChangeTimes->{{3.837509851965728*^9, 3.8375098628005795`*^9}, {
  3.8375100894986153`*^9, 
  3.837510096138882*^9}},ExpressionUUID->"fb00c8d7-543c-4112-9c5f-\
e61d4d89b341"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MakeColor", "[", "tract_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "dirs", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dirs", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"Differences", "[", "tract", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"RGBColor", "@@", 
         RowBox[{"Normalize", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"2", ",", "1", ",", "3"}], "}"}], "]"}], "]"}], "]"}]}], 
        "&"}], "/@", 
       RowBox[{"Mean", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Prepend", "[", 
           RowBox[{"dirs", ",", 
            RowBox[{"dirs", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"Append", "[", 
           RowBox[{"dirs", ",", 
            RowBox[{"dirs", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}]}]}],
     "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trp", "=", "tractsF"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ran", "=", 
   RowBox[{"MinMax", "/@", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"tractsF", ",", "1"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"size", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "-", 
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "&"}], "/@", "ran"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"select", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"tractsF", ",", 
     RowBox[{"Min", "[", 
      RowBox[{"1000", ",", 
       RowBox[{"Length", "[", "tractsF", "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"col", "=", 
   RowBox[{"(", 
    RowBox[{"MakeColor", "/@", "select"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tube", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"CapForm", "[", "\"\<Square\>\"", "]"}], ",", 
      RowBox[{"JoinForm", "[", "\"\<Miter\>\"", "]"}], ",", 
      RowBox[{"Tube", "[", 
       RowBox[{"select", ",", "0.75", ",", 
        RowBox[{"VertexColors", "\[Rule]", "col"}]}], "]"}]}], "}"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"opts", "=", 
    RowBox[{"Sequence", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Method", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<TubePoints\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"6", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
       RowBox[{"ImageSize", "->", "400"}], ",", 
       RowBox[{"SphericalRegion", "\[Rule]", "True"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
       RowBox[{"Background", "->", 
        RowBox[{"Lighter", "@", "Gray"}]}], ",", 
       RowBox[{"PlotRange", "->", "ran"}], ",", 
       RowBox[{"BoxRatios", "\[Rule]", "size"}], ",", 
       RowBox[{"Axes", "->", "False"}], ",", "\[IndentingNewLine]", 
       RowBox[{"LabelStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"{", 
          RowBox[{"Bold", ",", " ", "16", ",", "White"}], "}"}], "]"}]}]}], 
      "}"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics3D", "[", 
  RowBox[{"tube", ",", "opts"}], "]"}]}], "Input",
 CellChangeTimes->{{3.837510102444442*^9, 3.8375102383621993`*^9}, {
  3.8375103795546646`*^9, 3.8375103874520626`*^9}, {3.837513315016389*^9, 
  3.837513328665035*^9}, {3.8375133835346394`*^9, 3.8375133866719737`*^9}, {
  3.837513443320264*^9, 3.83751344384838*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"c5930088-4b53-4012-b8d5-cb10c07967b8"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.837510197245088*^9},ExpressionUUID->"6f82067b-6501-4af8-bd80-\
c99ad86e215c"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["J-coupling simulations", "Subchapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9},ExpressionUUID->"3b817272-df1a-4e68-aaea-\
c22d9c35e327"],

Cell[CellGroupData[{

Cell["Spin systems", "Subsection",
 CellChangeTimes->{{3.751786128248234*^9, 3.751786134998006*^9}, {
  3.8374894790943804`*^9, 
  3.83748948039189*^9}},ExpressionUUID->"16e4c173-1b98-4694-a73e-\
a9458b44e628"],

Cell[CellGroupData[{

Cell["Predefined spin systems", "Subsubsection",
 CellChangeTimes->{{3.8374894849067287`*^9, 
  3.8374894926988764`*^9}},ExpressionUUID->"2d7a5585-863f-40ad-b02f-\
be363d7913a3"],

Cell["\<\
Fat contains multiple peak with various j coupling frequencies\
\>", "Text",
 CellChangeTimes->{{3.7548947643514943`*^9, 
  3.754894808814317*^9}},ExpressionUUID->"a933a9a3-528b-4c0e-a038-\
17f710e1fe43"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sys", "=", 
   RowBox[{"GetSpinSystem", "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
      ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Total", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Times", "@@", "#"}], "&"}], "/@", 
    RowBox[{"sys", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5"}], "}"}]}], "]"}], "]"}]}], "]"}], "]"}], "\n", 
 RowBox[{"tabs", "=", 
  RowBox[{"Column", "[", 
   RowBox[{"SysTable", "[", "sys", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.748421110877775*^9, 3.7484211355335054`*^9}, {
  3.7484326404391546`*^9, 3.748432641990839*^9}, {3.751786144851331*^9, 
  3.7517861574756746`*^9}},
 CellLabel->
  "In[414]:=",ExpressionUUID->"07aa0cbd-4fe8-4a6b-9db7-30e546e930eb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Custom spin systems", "Subsubsection",
 CellChangeTimes->{{3.837489496118237*^9, 
  3.837489503311245*^9}},ExpressionUUID->"26074711-b967-4b74-9ac1-\
52cb8c789745"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sys", "=", 
   RowBox[{"MakeSpinSystem", "[", 
    RowBox[{"\"\<custom\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.9", ",", "1.3", ",", "1.3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], ",", "8"}], "}"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SysTable", "@", "sys"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sys", "=", 
   RowBox[{"MakeSpinSystem", "[", 
    RowBox[{"\"\<custom2\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.9", ",", "1.3", ",", "2.7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}], ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SysTable", "@", "sys"}]}], "Input",
 CellChangeTimes->{{3.8374895371310387`*^9, 3.8374896901372747`*^9}, {
  3.837489735565732*^9, 3.8374897757400455`*^9}},
 CellLabel->
  "In[424]:=",ExpressionUUID->"1d338fd5-7504-4d71-a854-b193d2d7194f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Glutamate spectra with Steam", "Subsection",
 CellChangeTimes->{{3.748230398223116*^9, 3.7482304059809375`*^9}, {
  3.7517854856684136`*^9, 
  3.751785492675087*^9}},ExpressionUUID->"2cfca995-51c1-4930-93bd-\
525f0bdfb9d5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"echoTime", "=", "18"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"field", ",", "nuc", ",", "bw"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", "\"\<1H\>\"", ",", "bw"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"din", ",", "struct"}], "}"}], "=", 
    RowBox[{"SimHamiltonian", "[", 
     RowBox[{"\"\<glu\>\"", ",", 
      RowBox[{"SimNucleus", "\[Rule]", "nuc"}], ",", 
      RowBox[{"FieldStrength", "\[Rule]", "field"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pls", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"dout", "=", 
       RowBox[{"SequenceSteam", "[", 
        RowBox[{"din", ",", "struct", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"echoTime", ",", "tm"}], "}"}], "/", "1000"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fids", ",", "dout"}], "}"}], "=", 
       RowBox[{"SimReadout", "[", 
        RowBox[{"dout", ",", "struct", ",", 
         RowBox[{"ReadoutSamples", "\[Rule]", "2048"}], ",", 
         RowBox[{"ReadoutBandwith", "\[Rule]", "bw"}], ",", 
         RowBox[{"Linewidth", "\[Rule]", "20"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotSpectra", "[", 
       RowBox[{
        RowBox[{"ShiftedFourier", "[", "fids", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "bw"}], ",", 
          RowBox[{"GetGyro", "[", 
           RowBox[{"field", ",", "nuc"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "5"}], "}"}], ",", "Full"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "2"}]}], ",", 
        RowBox[{"ImageSize", "->", "300"}]}], "]"}]}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{"{", 
      RowBox[{"tm", ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "18", ",", "31"}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{"various", " ", "mixing", " ", "times"}], "*)"}], "}"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Row", "[", "pls", "]"}]}], "Input",
 CellChangeTimes->{{3.7479933058095455`*^9, 3.7479933209230604`*^9}, {
   3.74799337592723*^9, 3.747993379465663*^9}, {3.7479934307764482`*^9, 
   3.7479934308255777`*^9}, {3.747994172569626*^9, 3.747994190903458*^9}, {
   3.7479953736250553`*^9, 3.7479953743923707`*^9}, 3.7480552391296186`*^9, {
   3.7481520234935246`*^9, 3.7481520371906805`*^9}, {3.748163203680167*^9, 
   3.748163204069208*^9}, {3.748163296543931*^9, 3.7481633122749677`*^9}, {
   3.7481634309156246`*^9, 3.7481634317759542`*^9}, 3.748182235067433*^9, {
   3.748230250760906*^9, 3.7482302866392374`*^9}, {3.7483409653608446`*^9, 
   3.7483409747667446`*^9}, {3.748615798967787*^9, 3.748615808831251*^9}, {
   3.7486855583611155`*^9, 3.7486855858293495`*^9}, {3.7486857183285575`*^9, 
   3.7486857941830215`*^9}, {3.7486858366955214`*^9, 3.748685837158784*^9}, {
   3.75178526306184*^9, 3.7517852706866055`*^9}, {3.7517853329146557`*^9, 
   3.751785333778942*^9}, {3.751785366968247*^9, 3.7517854513493204`*^9}, {
   3.754894725276472*^9, 3.7548947325069942`*^9}, {3.754894783470517*^9, 
   3.754894786444804*^9}, {3.7548948200756025`*^9, 3.754894849418341*^9}, {
   3.83724467272298*^9, 3.837244679429534*^9}, {3.8374843297977057`*^9, 
   3.8374843540853415`*^9}, {3.837484410598259*^9, 3.837484507244242*^9}, {
   3.837484599182022*^9, 3.837484602660529*^9}, {3.837484666072288*^9, 
   3.837484666156204*^9}, {3.837487662843403*^9, 3.8374878011877007`*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"b250ee77-119c-4a6c-ae60-654c651ae432"]
}, Closed]],

Cell[CellGroupData[{

Cell["Simulate Fat Spectra", "Subsection",
 CellChangeTimes->{{3.7517855020534177`*^9, 3.7517855103606234`*^9}, 
   3.7517855655882206`*^9, {3.754894858185709*^9, 
   3.7548948670807133`*^9}},ExpressionUUID->"bdc44691-f744-4c66-a1dd-\
7438bdd242a3"],

Cell[CellGroupData[{

Cell["PulseAcquire", "Subsubsection",
 CellChangeTimes->{{3.7517855668535924`*^9, 
  3.7517855716387463`*^9}},ExpressionUUID->"59807f79-d229-49e5-b637-\
790a17413076"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"field", ",", "nuc", ",", "bw"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", "\"\<1H\>\"", ",", "bw"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"out", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sys", "=", 
         RowBox[{"GetSpinSystem", "[", "#", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"din", ",", "struct"}], "}"}], "=", 
         RowBox[{"SimHamiltonian", "[", 
          RowBox[{"sys", ",", 
           RowBox[{"FieldStrength", "\[Rule]", "field"}], ",", 
           RowBox[{"SimNucleus", "\[Rule]", "nuc"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dout", "=", 
         RowBox[{"SequencePulseAcquire", "[", 
          RowBox[{"din", ",", "struct"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"SimReadout", "[", 
         RowBox[{"dout", ",", "struct", ",", 
          RowBox[{"ReadoutSamples", "\[Rule]", "2048"}], ",", 
          RowBox[{"ReadoutBandwith", "\[Rule]", "2000"}], ",", 
          RowBox[{"Linewidth", "\[Rule]", "10"}]}], "]"}]}], 
       "\[IndentingNewLine]", ")"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
       ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spec", "=", 
   RowBox[{"ShiftedFourier", "[", 
    RowBox[{"Total", "@", 
     RowBox[{"out", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"pl", "=", 
  RowBox[{"PlotSpectra", "[", 
   RowBox[{"spec", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "bw"}], ",", 
      RowBox[{"GetGyro", "[", 
       RowBox[{"field", ",", "nuc"}], "]"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "6"}], "}"}], ",", "Full"}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.748229992433153*^9, 3.7482299971147556`*^9}, 
   3.7482300738180714`*^9, {3.748230123918957*^9, 3.748230124951667*^9}, {
   3.748230157213933*^9, 3.7482301620531178`*^9}, {3.7482351352193537`*^9, 
   3.7482351488687196`*^9}, {3.748235686160855*^9, 3.74823568660807*^9}, {
   3.7482691809371367`*^9, 3.7482691985853415`*^9}, {3.748273843907975*^9, 
   3.7482738738285837`*^9}, 3.7483200865733805`*^9, {3.7483210079837885`*^9, 
   3.748321016638588*^9}, 3.74832117160981*^9, {3.7483214752212343`*^9, 
   3.7483214819391317`*^9}, {3.7483217949776864`*^9, 3.748321814935499*^9}, {
   3.748321866491704*^9, 3.748321894899328*^9}, {3.7483219461685305`*^9, 
   3.7483219953029013`*^9}, {3.7483221618890285`*^9, 3.7483221687140117`*^9}, 
   3.748322245547207*^9, {3.748322561946589*^9, 3.748322564920495*^9}, {
   3.7483225975762873`*^9, 3.748322646232254*^9}, {3.748322689960739*^9, 
   3.748322713285779*^9}, {3.748323077665245*^9, 3.748323087386416*^9}, {
   3.7483237079179506`*^9, 3.7483237318664637`*^9}, 3.748332445544182*^9, {
   3.748332547703269*^9, 3.7483325609005604`*^9}, {3.748332698717409*^9, 
   3.748332706487593*^9}, {3.7483387227967024`*^9, 3.748338763325821*^9}, {
   3.748338807236164*^9, 3.7483388192757797`*^9}, {3.748338926064983*^9, 
   3.748338946316023*^9}, {3.748339008784735*^9, 3.748339010300783*^9}, 
   3.7483399760707045`*^9, {3.7483400127685337`*^9, 3.7483400176555862`*^9}, {
   3.748340636143362*^9, 3.7483406523026686`*^9}, {3.748340994495614*^9, 
   3.7483409992298527`*^9}, 3.7486158338071747`*^9, {3.7517855145478144`*^9, 
   3.7517855190458183`*^9}, {3.751785587862006*^9, 3.751785589428156*^9}, {
   3.7548948726829386`*^9, 3.7548948811473913`*^9}, {3.8374878424536524`*^9, 
   3.8374880181702404`*^9}, {3.8374880490054812`*^9, 3.837488077366084*^9}, 
   3.837488148770634*^9},
 CellLabel->
  "In[357]:=",ExpressionUUID->"869625c4-c640-4b6d-963c-5879d140481b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Spin echo", "Subsubsection",
 CellChangeTimes->{{3.7517855668535924`*^9, 3.7517855716387463`*^9}, {
  3.751785612129964*^9, 3.751785613522607*^9}, {3.751786027777651*^9, 
  3.751786028417385*^9}},ExpressionUUID->"dab93187-a908-4ba7-ae93-\
e35b0b7d7535"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"field", ",", "nuc", ",", "bw"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", "\"\<1H\>\"", ",", "bw"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"te", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"out", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sys", "=", 
        RowBox[{"GetSpinSystem", "[", "#", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"din", ",", "struct"}], "}"}], "=", 
        RowBox[{"SimHamiltonian", "[", 
         RowBox[{"sys", ",", 
          RowBox[{"FieldStrength", "\[Rule]", "field"}], ",", 
          RowBox[{"SimNucleus", "\[Rule]", "nuc"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dout", "=", 
        RowBox[{"SequenceSpinEcho", "[", 
         RowBox[{"din", ",", "struct", ",", 
          RowBox[{"te", "/", "1000"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"SimReadout", "[", 
        RowBox[{"dout", ",", "struct", ",", 
         RowBox[{"ReadoutSamples", "\[Rule]", "2048"}], ",", 
         RowBox[{"ReadoutBandwith", "\[Rule]", "2000"}], ",", 
         RowBox[{"Linewidth", "\[Rule]", "10"}]}], "]"}]}], 
      "\[IndentingNewLine]", ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
      ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spec", "=", 
   RowBox[{"ShiftedFourier", "[", 
    RowBox[{"Total", "@", 
     RowBox[{"out", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"pl", "=", 
  RowBox[{"PlotSpectra", "[", 
   RowBox[{"spec", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "bw"}], ",", 
      RowBox[{"GetGyro", "[", 
       RowBox[{"field", ",", "nuc"}], "]"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "6"}], "}"}], ",", "Full"}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7482351714990845`*^9, 3.748235191739445*^9}, {
   3.748273924937831*^9, 3.74827395143205*^9}, 3.748339867254298*^9, {
   3.7483399355053816`*^9, 3.748339960080967*^9}, {3.7483400574082403`*^9, 
   3.748340059871789*^9}, {3.7483406608814077`*^9, 3.7483406634237876`*^9}, 
   3.748615848685067*^9, {3.7517856216532736`*^9, 3.751785623062027*^9}, {
   3.7548948899820714`*^9, 3.7548948976117563`*^9}, {3.837488071516144*^9, 
   3.8374881516367564`*^9}},
 CellLabel->
  "In[361]:=",ExpressionUUID->"7e2a2150-d80c-4034-83d6-d9565cf12a88"]
}, Closed]],

Cell[CellGroupData[{

Cell["STEAM", "Subsubsection",
 CellChangeTimes->{{3.7517856346602097`*^9, 
  3.7517856380873747`*^9}},ExpressionUUID->"11b0bc08-716e-4837-a55b-\
d3c98505048d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"field", ",", "nuc", ",", "bw"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", "\"\<1H\>\"", ",", "bw"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"te", ",", "tm"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"50", ",", "100"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"out", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sys", "=", 
        RowBox[{"GetSpinSystem", "[", "#", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"din", ",", "struct"}], "}"}], "=", 
        RowBox[{"SimHamiltonian", "[", 
         RowBox[{"sys", ",", 
          RowBox[{"FieldStrength", "\[Rule]", "field"}], ",", 
          RowBox[{"SimNucleus", "\[Rule]", "nuc"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dout", "=", 
        RowBox[{"SequenceSteam", "[", 
         RowBox[{"din", ",", "struct", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"te", ",", "tm"}], "}"}], "/", "1000"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"SimReadout", "[", 
        RowBox[{"dout", ",", "struct", ",", 
         RowBox[{"ReadoutSamples", "\[Rule]", "2048"}], ",", 
         RowBox[{"ReadoutBandwith", "\[Rule]", "2000"}], ",", 
         RowBox[{"Linewidth", "\[Rule]", "10"}]}], "]"}]}], 
      "\[IndentingNewLine]", ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
      ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spec", "=", 
   RowBox[{"ShiftedFourier", "[", 
    RowBox[{"Total", "@", 
     RowBox[{"out", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"pl", "=", 
  RowBox[{"PlotSpectra", "[", 
   RowBox[{"spec", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "bw"}], ",", 
      RowBox[{"GetGyro", "[", 
       RowBox[{"field", ",", "nuc"}], "]"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "6"}], "}"}], ",", "Full"}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{
  3.7481818389400015`*^9, 3.7481819043061547`*^9, {3.748182035959757*^9, 
   3.7481820635046773`*^9}, {3.748182213971154*^9, 3.7481822141298923`*^9}, {
   3.748182985022589*^9, 3.7481829851078463`*^9}, {3.748183176701327*^9, 
   3.748183191138928*^9}, {3.7481837396375275`*^9, 3.7481837399500513`*^9}, {
   3.7481848422946672`*^9, 3.748184842377087*^9}, {3.7482302286989613`*^9, 
   3.748230234199986*^9}, {3.748235208171048*^9, 3.748235241162552*^9}, 
   3.7483399007853546`*^9, {3.7483400698624706`*^9, 3.748340071613772*^9}, {
   3.748340674871582*^9, 3.748340676398965*^9}, 3.748615857818198*^9, {
   3.7517856460385566`*^9, 3.751785648340697*^9}, {3.754894903115119*^9, 
   3.7548949094661736`*^9}, {3.8374881412516994`*^9, 3.837488214103676*^9}, {
   3.8374882714432406`*^9, 3.83748827157574*^9}},
 CellLabel->
  "In[375]:=",ExpressionUUID->"d097a75f-b5e4-4687-abe5-6b28aa73ed5f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fat STEAM with various TEs", "Subsection",
 CellChangeTimes->{{3.751785834342079*^9, 
  3.7517858461181536`*^9}},ExpressionUUID->"6705b400-369d-4acb-94b1-\
826717b38934"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "simuluate", " ", "STEAM", " ", "j", " ", "coupling", " ", "for", " ", 
    "various", " ", "TEs"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"TEs", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"10", ",", "100", ",", "10"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"field", ",", "nuc", ",", "bw"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"3", ",", "\"\<1H\>\"", ",", "bw"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"out", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"din", ",", "struct"}], "}"}], "=", 
          RowBox[{"SimHamiltonian", "[", 
           RowBox[{"#", ",", 
            RowBox[{"FieldStrength", "\[Rule]", "field"}], ",", 
            RowBox[{"SimNucleus", "\[Rule]", "nuc"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"dout", "=", 
             RowBox[{"SequenceSteam", "[", 
              RowBox[{"din", ",", "struct", ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", "16"}], "}"}], "/", "1000"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"SimReadout", "[", 
             RowBox[{"dout", ",", "struct", ",", 
              RowBox[{"ReadoutSamples", "\[Rule]", "2024"}], ",", 
              RowBox[{"ReadoutBandwith", "\[Rule]", "2000"}], ",", 
              RowBox[{"Linewidth", "\[Rule]", "20"}]}], "]"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "TEs"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ")"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
        ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"spec", "=", 
     RowBox[{"ShiftedFourier", "/@", 
      RowBox[{"Total", "[", 
       RowBox[{"out", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}], "]"}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.746847702956359*^9, 3.746847705100912*^9}, {
   3.7468479330417895`*^9, 3.746847952202388*^9}, {3.746848216013152*^9, 
   3.746848222191821*^9}, {3.746867356897272*^9, 3.7468673656261845`*^9}, {
   3.7469409624679255`*^9, 3.746940997218149*^9}, {3.7469412837966795`*^9, 
   3.7469413006612544`*^9}, {3.746947619898952*^9, 3.746947642884818*^9}, {
   3.7469743198506145`*^9, 3.7469743256202364`*^9}, {3.746974428086774*^9, 
   3.746974429134055*^9}, {3.74702703695601*^9, 3.747027064566635*^9}, {
   3.747027165936557*^9, 3.7470271708788805`*^9}, 3.7470273367688255`*^9, {
   3.7470347282528763`*^9, 3.747034737261882*^9}, {3.74711149700712*^9, 
   3.747111525534052*^9}, 3.7471116676340513`*^9, {3.747111911059723*^9, 
   3.747111917714374*^9}, {3.747114588771387*^9, 3.7471146516068797`*^9}, {
   3.7471166314768953`*^9, 3.747116631987259*^9}, {3.747127234573103*^9, 
   3.7471272350985055`*^9}, {3.7471306683493767`*^9, 3.747130668924918*^9}, {
   3.7471315273127337`*^9, 3.7471315516455436`*^9}, {3.7471321219486876`*^9, 
   3.7471321847326574`*^9}, {3.7476337305343657`*^9, 
   3.7476337744916043`*^9}, {3.747633832030656*^9, 3.747633836796017*^9}, {
   3.7476342984003572`*^9, 3.747634306030753*^9}, {3.747634466656008*^9, 
   3.747634468544018*^9}, {3.747635769872473*^9, 3.747635780432063*^9}, {
   3.7476363974099693`*^9, 3.747636398321417*^9}, {3.74763650353691*^9, 
   3.7476365081429768`*^9}, {3.7476393842920556`*^9, 3.747639385170397*^9}, {
   3.74764448938281*^9, 3.7476444908432393`*^9}, {3.7476477306289525`*^9, 
   3.7476477314119787`*^9}, {3.747647779191697*^9, 3.7476477810777893`*^9}, {
   3.747647829237409*^9, 3.7476478295081244`*^9}, 3.7476500709523573`*^9, {
   3.747654333852504*^9, 3.7476543406161475`*^9}, {3.747654371015292*^9, 
   3.7476543755804176`*^9}, {3.747654422730257*^9, 3.747654429002034*^9}, {
   3.7476675470303087`*^9, 3.7476675588223953`*^9}, 3.7477280521847553`*^9, 
   3.7477356641071596`*^9, {3.7477361631787443`*^9, 3.7477361853068104`*^9}, {
   3.7477363563671713`*^9, 3.7477364114518213`*^9}, {3.747739148767829*^9, 
   3.747739149101492*^9}, {3.7479780758682137`*^9, 3.7479780763334537`*^9}, {
   3.7479781439989133`*^9, 3.747978148798498*^9}, 3.7479792037889395`*^9, {
   3.747979391919927*^9, 3.747979392126504*^9}, {3.7479799066708283`*^9, 
   3.747979907452491*^9}, {3.747980692702307*^9, 3.7479807026207476`*^9}, 
   3.7479808276809664`*^9, {3.7479809349769087`*^9, 3.7479809358236504`*^9}, {
   3.7479809894711394`*^9, 3.7479810158581653`*^9}, {3.747981348595498*^9, 
   3.7479813646464586`*^9}, {3.74798319683325*^9, 3.7479832002891583`*^9}, 
   3.7479842186745553`*^9, {3.747995457844248*^9, 3.747995510024599*^9}, 
   3.7479958258832617`*^9, {3.74807035312002*^9, 3.748070356575066*^9}, {
   3.748070871569313*^9, 3.748070907324333*^9}, {3.748070996381597*^9, 
   3.7480709968789206`*^9}, {3.748071062064003*^9, 3.7480710622434826`*^9}, {
   3.7480715415038767`*^9, 3.748071542000207*^9}, {3.748155127640109*^9, 
   3.748155141911248*^9}, {3.748155187464883*^9, 3.7481551884560943`*^9}, {
   3.748155911609275*^9, 3.7481559358457966`*^9}, {3.74815596876221*^9, 
   3.748155970425609*^9}, {3.748163734305396*^9, 3.748163734499945*^9}, {
   3.7481638602877836`*^9, 3.7481638611199694`*^9}, {3.7481639585134196`*^9, 
   3.748164021183906*^9}, {3.7481641352187877`*^9, 3.7481641355206037`*^9}, 
   3.748164233552312*^9, 3.748164520050725*^9, {3.7481650363078775`*^9, 
   3.748165037298518*^9}, {3.748183627588142*^9, 3.748183630401523*^9}, {
   3.74818374905184*^9, 3.7481837531270247`*^9}, {3.748184010324383*^9, 
   3.7481840350810156`*^9}, {3.748184901581254*^9, 3.7481849016752176`*^9}, {
   3.748184963572925*^9, 3.748185002889196*^9}, {3.748185244432699*^9, 
   3.748185244495197*^9}, {3.7481853966725035`*^9, 3.748185409793804*^9}, 
   3.7482356701465745`*^9, {3.748236803697485*^9, 3.748236935330164*^9}, 
   3.748236996960808*^9, {3.7482372353783035`*^9, 3.7482372416149197`*^9}, 
   3.7482384531850214`*^9, {3.7482385653166056`*^9, 3.748238584817676*^9}, 
   3.7482387650455165`*^9, {3.748238885012453*^9, 3.7482388851718793`*^9}, {
   3.748239053475803*^9, 3.7482390569960413`*^9}, {3.7482392158578467`*^9, 
   3.74823921592115*^9}, 3.748241105142406*^9, {3.748241442903722*^9, 
   3.748241442947858*^9}, 3.7482516734992294`*^9, {3.748260670691536*^9, 
   3.7482606708134456`*^9}, 3.7483232357717247`*^9, {3.7483237520266685`*^9, 
   3.7483237571758156`*^9}, {3.7483238221696987`*^9, 3.748323840248466*^9}, {
   3.748340712448462*^9, 3.7483407347322335`*^9}, 3.7484211561194906`*^9, {
   3.74842123880229*^9, 3.7484213926426015`*^9}, {3.748421629781578*^9, 
   3.7484216299536457`*^9}, {3.748429378027416*^9, 3.748429382407913*^9}, {
   3.7484294783384333`*^9, 3.7484295103613825`*^9}, 3.7486823458223124`*^9, 
   3.7486846945995955`*^9, {3.74868594788026*^9, 3.74868594808681*^9}, {
   3.7486859934652977`*^9, 3.748685994134081*^9}, 3.748690600121831*^9, {
   3.7486907570038414`*^9, 3.748690766999828*^9}, {3.7517857312706747`*^9, 
   3.751785742947794*^9}, {3.7548949310998926`*^9, 3.7548949712902346`*^9}, {
   3.837488244180147*^9, 3.837488265541151*^9}, 3.837488302136152*^9, {
   3.837488392412905*^9, 3.837488395635414*^9}, {3.8374884264035497`*^9, 
   3.837488440679239*^9}, {3.8374885402627897`*^9, 3.8374885476874027`*^9}},
 CellLabel->
  "In[405]:=",ExpressionUUID->"3edd32fa-7110-4380-a1ac-e91a7e073cb0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"define", " ", "the", " ", "T2", " ", "relaxation"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"t2sim", "=", "90"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T2relax", "=", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "TEs"}], "/", "t2sim"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"max", "=", 
     RowBox[{
      RowBox[{"T2relax", "[", 
       RowBox[{"[", "1", "]"}], "]"}], 
      RowBox[{"Max", "[", 
       RowBox[{"Abs", "@", "spec"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"pls", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PlotSpectra", "[", 
         RowBox[{
          RowBox[{"#1", " ", "#2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "bw"}], ",", 
            RowBox[{"GetGyro", "[", 
             RowBox[{"field", ",", "nuc"}], "]"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", ".5"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"Method", "->", "\"\<Re\>\""}]}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"spec", "/", "max"}], ",", "T2relax"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7482369404648113`*^9, 3.7482369435500307`*^9}, {
   3.7482369917619576`*^9, 3.74823700190097*^9}, {3.748237046433651*^9, 
   3.748237163011227*^9}, {3.7482372480360584`*^9, 3.7482372551559963`*^9}, 
   3.7482386052210474`*^9, {3.7483234243515415`*^9, 3.748323428072304*^9}, {
   3.748325389244517*^9, 3.7483253896906757`*^9}, 3.748325462450378*^9, {
   3.7483255575170727`*^9, 3.7483255582841234`*^9}, {3.7483411264195046`*^9, 
   3.7483411281903915`*^9}, {3.748343977350229*^9, 3.748344058210185*^9}, {
   3.748344088963969*^9, 3.7483440922413635`*^9}, 3.748421279533637*^9, {
   3.7484213472454386`*^9, 3.748421385632394*^9}, {3.748421426973504*^9, 
   3.7484215145800934`*^9}, {3.748429497485859*^9, 3.748429515080805*^9}, {
   3.7484296177337627`*^9, 3.748429617827312*^9}, {3.748429653038226*^9, 
   3.748429655905289*^9}, {3.748431245924173*^9, 3.7484312512832603`*^9}, 
   3.7484313278619294`*^9, {3.7486670014810476`*^9, 3.748667008235139*^9}, 
   3.748667040122573*^9, {3.751785801650653*^9, 3.7517858077166452`*^9}, {
   3.7517858690923147`*^9, 3.7517858693640347`*^9}, {3.754894949211228*^9, 
   3.754894957913658*^9}, {3.8374883253961544`*^9, 3.837488332564783*^9}, {
   3.837488368283723*^9, 3.8374883716035175`*^9}, {3.8374884800688906`*^9, 
   3.8374885281168756`*^9}},
 CellLabel->
  "In[409]:=",ExpressionUUID->"1aef8f21-e40a-49dc-bf08-ddabcbdf3501"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"pls", "[", 
    RowBox[{"[", "n", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "\"\<echo time\>\""}], "}"}], ",", "1", ",", 
     RowBox[{"Length", "[", "pls", "]"}], ",", "1"}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.754894922908832*^9, 3.754894926506301*^9}, {
  3.754894978542844*^9, 3.754895009340332*^9}},
 CellLabel->
  "In[413]:=",ExpressionUUID->"04a56dc3-b7cd-4cbf-ac36-5103d5b1f965"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cardiac data processing and simulation", "Subchapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7584420169007683`*^9, 
   3.758442023511436*^9}},ExpressionUUID->"b6662280-803b-4ab0-8481-\
332a70f0e978"],

Cell[CellGroupData[{

Cell["Simulate Cardiac Shape", "Subsection",
 CellChangeTimes->{{3.758442083934099*^9, 
  3.7584420913366747`*^9}},ExpressionUUID->"6a10872d-dcba-422d-a092-\
ff6bf02d5699"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"73", ",", "2.85", ",", "2.8", ",", "0.02", ",", "0.38"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"62.9", ",", "3.35", ",", "7.9", ",", "0.17"}], "}"}], ",", 
     "106"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6711726287505345`*^9, 3.671172644021535*^9}, 
   3.6797325739582977`*^9, {3.7583551753746085`*^9, 3.758355194706151*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"22f5062f-e958-45c9-8d1c-7514a2cedd75"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mask", ",", "vox", ",", "pars"}], "}"}], "=", 
   RowBox[{"CreateHeart", "[", "pars", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.671170073521743*^9, {3.679738162513242*^9, 3.679738179287202*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"da2e39d9-15b9-45d3-b9f6-8a42e2783620"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"voxn", "=", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Round", "@", 
    RowBox[{"RescaleData", "[", 
     RowBox[{"mask", ",", 
      RowBox[{"{", 
       RowBox[{"vox", ",", "voxn"}], "}"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"vox", "=", "voxn"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.6691045104681473`*^9, {3.66910496414051*^9, 3.6691049808451805`*^9}, {
   3.6711694406624904`*^9, 3.671169475574981*^9}, {3.671170020538472*^9, 
   3.6711700775777426`*^9}, {3.671184338392166*^9, 3.671184365792906*^9}, 
   3.671184409626419*^9, {3.7583529541897182`*^9, 3.7583529581785526`*^9}, {
   3.7583531072015476`*^9, 3.7583531097914815`*^9}, 3.758355257583712*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"84325218-4520-4673-b3ba-afbcc56e439e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"maskR", "=", 
   RowBox[{"Round", "[", 
    RowBox[{"DataTransformation", "[", 
     RowBox[{"mask", ",", "vox", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10", ",", "10"}], "}"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7550036180647516`*^9, 3.7550036920620947`*^9}, {
   3.755004077409649*^9, 3.7550041133533134`*^9}, 3.7554934700311456`*^9, {
   3.755493502350135*^9, 3.7554935405656757`*^9}, 3.7554972023038435`*^9, {
   3.755497234848613*^9, 3.7554972378395543`*^9}, {3.758355062662741*^9, 
   3.758355112130682*^9}, 3.75835525956623*^9, 3.758442139575473*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"4f50d823-b631-4620-97d5-9d9b11e937c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{"mask", " ", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"50", ",", "10"}], "]"}], ",", 
      RowBox[{"Dimensions", "[", "mask", "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758443079672928*^9, 3.758443105879885*^9}, {
  3.7584511955891147`*^9, 3.758451243536791*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"44816932-b5e2-4726-bf22-347533cdb0c9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Analyse Cardiac shape", "Subsection",
 CellChangeTimes->{{3.7584421602015347`*^9, 
  3.7584421684585533`*^9}},ExpressionUUID->"6cd6b54a-4e4f-4aea-a7ef-\
4153f6ba4485"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"off", ",", "vec", ",", "inout", ",", "pl"}], "}"}], "=", 
   RowBox[{"CentralAxes", "[", 
    RowBox[{"mask", ",", "vox"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"off", ",", "vec", ",", "inout", ",", "pl"}], "}"}], "=", 
   RowBox[{"CentralAxes", "[", 
    RowBox[{"maskR", ",", "vox"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.758353130065507*^9, 3.758353147954149*^9}, {
  3.7583550943091393`*^9, 3.758355096722599*^9}, {3.758443040536918*^9, 
  3.7584430641494007`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"4ae0be06-8a05-47af-8c0b-17138c61cb58"],

Cell["Calculate Wall distance map", "Text",
 CellChangeTimes->{{3.7584421911028123`*^9, 
  3.758442200666338*^9}},ExpressionUUID->"ee141871-d592-4801-b4c6-\
06c9322a3a60"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"wall", ",", "der", ",", "fit"}], "}"}], "=", 
   RowBox[{"CalculateWallMap", "[", 
    RowBox[{"maskR", ",", "vox", ",", 
     RowBox[{"ShowPlot", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6711700713787427`*^9, 3.6711700745297427`*^9}, {
   3.671170685798001*^9, 3.6711706882142425`*^9}, {3.6711711323666534`*^9, 
   3.671171133541771*^9}, {3.671171315428958*^9, 3.671171315683983*^9}, {
   3.671184389482274*^9, 3.6711844172556562`*^9}, {3.6797384566840677`*^9, 
   3.679738458062146*^9}, {3.679738548876341*^9, 3.679738549318366*^9}, {
   3.7583529454490724`*^9, 3.758352946378356*^9}, 3.758352988257947*^9, 
   3.7583531242259703`*^9, {3.7583533925323286`*^9, 3.7583533930065994`*^9}, {
   3.758353722052821*^9, 3.7583537247038784`*^9}, 3.758354258037384*^9, 
   3.758354777272771*^9, 3.758355318565279*^9, {3.7584526895705156`*^9, 
   3.7584526911680527`*^9}, {3.798870015193198*^9, 3.798870017479393*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"eef5b238-54fe-43d1-bd93-2cc99019cdde"],

Cell["Calculate the myocardial coordinate system.", "Text",
 CellChangeTimes->{{3.7584421911028123`*^9, 3.758442200666338*^9}, {
  3.758542044128895*^9, 
  3.7585420520169334`*^9}},ExpressionUUID->"86ae354a-5496-40d5-835c-\
bbdc239e0f78"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rad", ",", "nor", ",", "cir"}], "}"}], ",", "plots"}], "}"}], 
   "=", 
   RowBox[{"CardiacCoordinateSystem", "[", 
    RowBox[{"maskR", ",", "vox", ",", 
     RowBox[{"ShowPlot", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7585419984134264`*^9, 3.7585420150426145`*^9}, {
  3.798870030593651*^9, 3.79887003772896*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"c47fd3a1-5f7e-4d66-8267-f71f16f1cd07"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cardiac Segmentation", "Subsection",
 CellChangeTimes->{{3.7584525644687185`*^9, 
  3.758452569896508*^9}},ExpressionUUID->"ea78aaa4-62b6-43d1-8ebd-\
0d555a671dc5"],

Cell[CellGroupData[{

Cell["perform segmentation", "Subsubsection",
 CellChangeTimes->{{3.758452603945456*^9, 
  3.758452608436533*^9}},ExpressionUUID->"fe1a8b13-333a-4024-9b40-\
6c8541119d74"],

Cell["\<\
Segment the hart according to the AH17 model and provide the segments as \
masks and radial sampleling points\
\>", "Text",
 CellChangeTimes->{{3.75845099394211*^9, 
  3.7584510201006393`*^9}},ExpressionUUID->"f9338d84-3437-449b-8a9e-\
62f482b4cfcf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"segmask", ",", "segang", ",", 
     RowBox[{"{", 
      RowBox[{"points", ",", "slices"}], "}"}]}], "}"}], "=", 
   RowBox[{"CardiacSegment", "[", 
    RowBox[{"dat", ",", "mask", ",", "off"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584429249714117`*^9, 3.7584429280846834`*^9}, {
  3.7584431103117285`*^9, 3.7584431337012405`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"33509e0d-e0ac-4c7c-b9c9-867caa05b830"],

Cell["Plot The masks", "Text",
 CellChangeTimes->{{3.758451023845028*^9, 
  3.7584510285338435`*^9}},ExpressionUUID->"76d3418d-f144-42c4-8284-\
ff4c2b7979a6"],

Cell[BoxData[
 RowBox[{"PlotSegmentMask", "[", 
  RowBox[{"mask", ",", "segmask", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.758450904627673*^9, 3.7584509230557327`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"6eb068fe-9f84-4efd-b749-d180d41ea529"],

Cell["Plot the radial samples", "Text",
 CellChangeTimes->{{3.7584510309326878`*^9, 
  3.758451038916531*^9}},ExpressionUUID->"0cfab279-b4c7-44c9-9d88-\
d558f0a95c00"],

Cell[BoxData[
 RowBox[{"PlotSegments", "[", 
  RowBox[{"mask", ",", "dat", ",", "segang"}], "]"}]], "Input",
 CellChangeTimes->{{3.758450944853326*^9, 3.758450960033723*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"9a749ece-1497-44de-9d20-8276379966d7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Analyse data based on segmentation", "Subsubsection",
 CellChangeTimes->{{3.7584526136039176`*^9, 
  3.7584526254543796`*^9}},ExpressionUUID->"10f96f22-e10c-41bb-8f35-\
b9a1e773fe6a"],

Cell["Use the Radial samples to sample a dataset", "Text",
 CellChangeTimes->{{3.7584510452203364`*^9, 3.7584510649454217`*^9}, 
   3.7584525493282986`*^9},ExpressionUUID->"9b1bd386-1371-4f5e-8b89-\
df8892452f7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MeanStd", "[", 
    RowBox[{"GetMaskData", "[", 
     RowBox[{"dat", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
  "segmask"}]], "Input",
 CellChangeTimes->{{3.7584510677161164`*^9, 3.7584511118888845`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"68b4bbc1-c884-4771-a4a4-89c7c31471d7"],

Cell[BoxData[
 RowBox[{"Hist", "[", 
  RowBox[{"GetMaskData", "[", 
   RowBox[{"dat", ",", "mask"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.75845117163688*^9, 3.7584511860977283`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"9237ea30-acbb-44b6-ae7b-59a12af15f19"],

Cell[BoxData[
 RowBox[{"TableForm", "@", 
  RowBox[{"GetMaskMeans", "[", 
   RowBox[{"dat", ",", 
    RowBox[{"Transpose", "[", "segmask", "]"}], ",", "\"\<noise\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7584511158445263`*^9, 3.7584511463046584`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"aeacb816-877d-4070-923e-0cb7b292d179"],

Cell["Perform Radial sampling of data based on the segmentation", "Text",
 CellChangeTimes->{{3.758452144548445*^9, 
  3.758452161909641*^9}},ExpressionUUID->"5d1a0efe-d941-4939-ae1e-\
441bfbb8a97a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pts", ",", "radSamp"}], "}"}], "=", 
   RowBox[{"RadialSample", "[", 
    RowBox[{"mask", ",", "dat", ",", "segang"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758443213356582*^9, 3.758443259558839*^9}, {
  3.75845127304208*^9, 3.7584512994885883`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"50655e5f-6b23-440f-9239-f6decae57cbd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Visualize results", "Subsubsection",
 CellChangeTimes->{{3.7584526331563873`*^9, 
  3.758452643792627*^9}},ExpressionUUID->"0428555f-bf06-485e-bd86-\
110e5b03fd5d"],

Cell["\<\
Visualisation can be done using Busleyeplots or transmural profiles\
\>", "Text",
 CellChangeTimes->{{3.758452171971097*^9, 
  3.7584521947412176`*^9}},ExpressionUUID->"de8c27c7-f11b-40ba-bc10-\
c57fae6efe95"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"radSampF", "=", 
   RowBox[{"Flatten", "/@", "radSamp"}]}], ";"}], "\n", 
 RowBox[{"BullseyePlot", "[", 
  RowBox[{"radSampF", ",", 
   RowBox[{"BullPlotMethod", "\[Rule]", "\"\<Static\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.758452108915594*^9, 3.758452131439727*^9}, 
   3.7584521693298206`*^9, {3.758452245779707*^9, 3.758452248678297*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"a8fa823f-5049-4764-952f-4982177a5eb8"],

Cell[BoxData[
 RowBox[{"BullseyePlot", "[", 
  RowBox[{"radSampF", ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7584532873976264`*^9, 3.7584532914109397`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"2a2cc6eb-c726-4d33-8a51-fd9f5741739f"],

Cell["Make a trans mural plot of the data for segment 5", "Text",
 CellChangeTimes->{{3.758452358196032*^9, 3.758452382862898*^9}, {
  3.7584524245605936`*^9, 
  3.7584524246418853`*^9}},ExpressionUUID->"58fb01eb-5f6b-4f00-a0d7-\
e39e5bdc8042"],

Cell[BoxData[
 RowBox[{"TransmuralPlot", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"radSamp", "[", 
     RowBox[{"[", "5", "]"}], "]"}], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7584523162289815`*^9, 3.7584523486908674`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"e0072549-5fd7-4ee8-bfdd-74509f90111a"],

Cell["Make a trans mural plot of the wall distance map", "Text",
 CellChangeTimes->{{3.758452394069051*^9, 
  3.758452421469365*^9}},ExpressionUUID->"1b39c1fa-f998-4e08-a4f1-\
d548eb3441f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"wall", ",", "der"}], "}"}], "=", 
   RowBox[{"CalculateWallMap", "[", 
    RowBox[{"mask", ",", "vox", ",", 
     RowBox[{"ShowFit", "\[Rule]", "False"}], ",", 
     RowBox[{"MaskWallMap", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6711700713787427`*^9, 3.6711700745297427`*^9}, {
   3.671170685798001*^9, 3.6711706882142425`*^9}, {3.6711711323666534`*^9, 
   3.671171133541771*^9}, {3.671171315428958*^9, 3.671171315683983*^9}, {
   3.671184389482274*^9, 3.6711844172556562`*^9}, {3.6797384566840677`*^9, 
   3.679738458062146*^9}, {3.679738548876341*^9, 3.679738549318366*^9}, {
   3.7583529454490724`*^9, 3.758352946378356*^9}, 3.758352988257947*^9, 
   3.7583531242259703`*^9, {3.7583533925323286`*^9, 3.7583533930065994`*^9}, {
   3.758353722052821*^9, 3.7583537247038784`*^9}, 3.758354258037384*^9, 
   3.758354777272771*^9, 3.758355318565279*^9, {3.7584526895705156`*^9, 
   3.7584527190887866`*^9}, {3.7584539817336683`*^9, 3.758453985428482*^9}, {
   3.7584541340364633`*^9, 3.7584541548380938`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"ec281848-13c5-468f-8682-1fe31a677497"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pts", ",", "wallSamp"}], "}"}], "=", 
   RowBox[{"RadialSample", "[", 
    RowBox[{"mask", ",", 
     RowBox[{"100", "wall"}], ",", "segang"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584524090245485`*^9, 3.7584524132972326`*^9}, {
  3.7584524654917526`*^9, 3.758452494177825*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"352e5c6f-0915-4a3d-b3e0-c936c5c3b118"],

Cell[BoxData[
 RowBox[{"TransmuralPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"wallSamp", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", "1"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "100"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7584523162289815`*^9, 3.7584523486908674`*^9}, {
  3.7584524360667057`*^9, 3.7584524427690344`*^9}, {3.7584524880681143`*^9, 
  3.7584525053482847`*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"0b24b278-9787-4678-90fa-fb2efe7345ec"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1904, 1109},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"51f5dbed-bdd4-4eff-9933-ee2bccf2ca77"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 168, 3, 98, "Title",ExpressionUUID->"934d8265-4fcc-4427-9f34-640074773381"],
Cell[751, 27, 553, 10, 81, "Text",ExpressionUUID->"22b0e3d8-9903-4283-b556-9ad31d8e7f65"],
Cell[CellGroupData[{
Cell[1329, 41, 239, 4, 64, "Subchapter",ExpressionUUID->"4d401d3b-2658-4bc0-bbef-6cc2152ecc5c"],
Cell[1571, 47, 341, 7, 35, "Text",ExpressionUUID->"a102f725-94d2-43a9-822e-d1dd3b7c0c23"],
Cell[1915, 56, 573, 12, 50, "Input",ExpressionUUID->"cae7997b-5732-4630-8297-a72d2ca96db1"],
Cell[CellGroupData[{
Cell[2513, 72, 405, 8, 50, "Input",ExpressionUUID->"806bff7c-106b-4eb2-952c-cd89f993a8f1"],
Cell[2921, 82, 159524, 2676, 87, "Output",ExpressionUUID->"f08a84a5-427d-4661-9227-b98b342fe0f0"],
Cell[162448, 2760, 9551, 227, 423, "Output",ExpressionUUID->"86e8008f-b926-43e0-8291-0ac67d2ad18f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172036, 2992, 183, 3, 54, "Subsection",ExpressionUUID->"1037c5ba-e19a-4732-8360-f60e7a2fa01d"],
Cell[172222, 2997, 409, 8, 35, "Text",ExpressionUUID->"9def143d-308d-45ea-9146-337b684f48fb"],
Cell[172634, 3007, 531, 9, 29, "Input",ExpressionUUID->"66f0941d-b74d-4f23-a6d3-c5e28a3d33c5"],
Cell[173168, 3018, 517, 8, 29, "Input",ExpressionUUID->"2daef7a9-1b9d-41bf-a8ae-40d232f006a0"],
Cell[173688, 3028, 266, 5, 29, "Input",ExpressionUUID->"017dd998-8132-4761-a2ee-0fc908034fca"],
Cell[173957, 3035, 527, 14, 29, "Input",ExpressionUUID->"aab0b17b-4665-4b8a-a984-f94dd7cd5cc1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174521, 3054, 160, 3, 54, "Subsection",ExpressionUUID->"8ee5c0ae-81ad-4d98-953f-c7e16140406d"],
Cell[174684, 3059, 210, 4, 29, "Input",ExpressionUUID->"a66d2a05-f5eb-4f7c-8218-62ea88883b7a"],
Cell[174897, 3065, 293, 7, 35, "Text",ExpressionUUID->"0b15c18e-462f-410c-a373-4af09d51be09"],
Cell[175193, 3074, 25904, 429, 722, "Input",ExpressionUUID->"538c1a9a-c29d-462c-aafe-1d9d7b0e26f9"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[201146, 3509, 294, 4, 64, "Subchapter",ExpressionUUID->"fa1ebb06-be4c-4fd9-86a2-22990e083b10"],
Cell[CellGroupData[{
Cell[201465, 3517, 172, 3, 54, "Subsection",ExpressionUUID->"ef8f60c6-1123-44e0-aa4c-01d9fab680a3"],
Cell[201640, 3522, 503, 13, 50, "Input",ExpressionUUID->"1ba38701-07bb-494e-82ee-7d21f0bb7296"],
Cell[202146, 3537, 393, 8, 50, "Input",ExpressionUUID->"7d5996b5-b119-4a70-987f-a14d8037aa23"],
Cell[202542, 3547, 475, 11, 50, "Input",ExpressionUUID->"8df64434-479f-48f3-bbf6-1802ed564d7c"],
Cell[203020, 3560, 583, 15, 50, "Input",ExpressionUUID->"badbbd02-e57d-4ec4-810d-6622b65b0f90"],
Cell[203606, 3577, 746, 19, 50, "Input",ExpressionUUID->"81cf639d-6f31-468e-b872-cad9f6306326"],
Cell[204355, 3598, 647, 15, 50, "Input",ExpressionUUID->"c8c8f4f5-4916-4152-948c-043243f8ee7f"],
Cell[205005, 3615, 417, 9, 81, "Text",ExpressionUUID->"d94c84c5-f9c9-40aa-9e19-7f2d8597b49a"],
Cell[205425, 3626, 194, 4, 29, "Input",ExpressionUUID->"ec69b542-77af-4c0e-bf6a-9c11fe192c0f"],
Cell[205622, 3632, 191, 4, 29, "Input",ExpressionUUID->"fbd8dc75-cbe9-45b8-b0ca-9e88bdcb7310"],
Cell[205816, 3638, 184, 4, 29, "Input",ExpressionUUID->"b43b9775-acff-4fd1-995d-6f0beb3f15d3"]
}, Closed]],
Cell[CellGroupData[{
Cell[206037, 3647, 189, 3, 38, "Subsection",ExpressionUUID->"b78c9120-ccf2-40e5-87d7-a484213417b3"],
Cell[206229, 3652, 235, 6, 34, "Text",ExpressionUUID->"dc9dff42-f5b7-4251-8736-a0dca6b379bb"],
Cell[206467, 3660, 582, 14, 48, "Input",ExpressionUUID->"696f126b-efab-4a13-8aa9-b44de55e3f44"],
Cell[207052, 3676, 396, 8, 28, "Input",ExpressionUUID->"5a9a50a3-b161-48d9-a14d-cc00a14c8221"],
Cell[207451, 3686, 398, 7, 28, "Input",ExpressionUUID->"41ec57c1-ef10-4a83-b8a8-146c45bdf378"]
}, Closed]],
Cell[CellGroupData[{
Cell[207886, 3698, 166, 3, 38, "Subsection",ExpressionUUID->"0d830d7c-dc92-4a0f-96b0-5cb8ad6ed729"],
Cell[208055, 3703, 864, 19, 105, "Input",ExpressionUUID->"2c5f1eed-b1d2-413a-a711-e9e26a4cb615"],
Cell[208922, 3724, 911, 23, 124, "Input",ExpressionUUID->"0711c021-52b7-4374-b710-c62812e3419e"]
}, Closed]],
Cell[CellGroupData[{
Cell[209870, 3752, 158, 3, 38, "Subsection",ExpressionUUID->"d51e43d8-34ee-4df9-8bf3-5b69733ed3ff"],
Cell[CellGroupData[{
Cell[210053, 3759, 167, 3, 45, "Subsubsection",ExpressionUUID->"968fa70b-c4b4-4d48-a949-8da4355d6428"],
Cell[210223, 3764, 577, 13, 48, "Input",ExpressionUUID->"0ec03379-9273-43c8-969d-41d370813788"],
Cell[210803, 3779, 444, 10, 48, "Input",ExpressionUUID->"74538836-333a-4a62-b9e6-38ff5ee95d7f"],
Cell[211250, 3791, 238, 4, 28, "Input",ExpressionUUID->"5d2b3531-cdd4-413e-b108-ae67e2b9af5b"],
Cell[211491, 3797, 499, 12, 48, "Input",ExpressionUUID->"63dc3f77-e418-418a-bf38-bffe8d178bb3"],
Cell[211993, 3811, 238, 4, 28, "Input",ExpressionUUID->"13b3872f-1f90-4567-aefb-ea163cfd148c"]
}, Closed]],
Cell[CellGroupData[{
Cell[212268, 3820, 173, 3, 37, "Subsubsection",ExpressionUUID->"267579d6-9b73-4c4b-aa48-be3e08dfda04"],
Cell[212444, 3825, 357, 8, 28, "Input",ExpressionUUID->"9298008e-ebb6-4839-b787-3eb2650efb20"],
Cell[212804, 3835, 211, 3, 28, "Input",ExpressionUUID->"c002fff5-58c3-459d-bd3c-c4ccbb6ca90d"]
}, Closed]],
Cell[CellGroupData[{
Cell[213052, 3843, 166, 3, 37, "Subsubsection",ExpressionUUID->"9c3fe646-8c82-4fa5-ba13-4d6d8bf9eb94"],
Cell[213221, 3848, 461, 10, 48, "Input",ExpressionUUID->"8d1daacd-8970-4659-9835-8f732610f46c"],
Cell[213685, 3860, 244, 5, 28, "Input",ExpressionUUID->"30981062-8ace-4811-b1a0-840f0ffb8e73"]
}, Closed]],
Cell[CellGroupData[{
Cell[213966, 3870, 167, 3, 37, "Subsubsection",ExpressionUUID->"55749168-63df-4963-aab6-cb1fc8c970cf"],
Cell[214136, 3875, 796, 18, 105, "Input",ExpressionUUID->"95428a0b-7e40-4b51-92e8-5da74f819672"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[214981, 3899, 166, 3, 54, "Subsection",ExpressionUUID->"93607360-ed31-4145-8241-5b261eccc5b0"],
Cell[CellGroupData[{
Cell[215172, 3906, 171, 3, 45, "Subsubsection",ExpressionUUID->"4f8cb032-dea0-497b-bd1c-d723913ce783"],
Cell[215346, 3911, 317, 7, 70, "Input",ExpressionUUID->"3cd642da-fd22-4802-9288-f01565803535"],
Cell[215666, 3920, 252, 4, 70, "Input",ExpressionUUID->"203bb6e8-79b2-4927-b104-77c6b4bb166c"],
Cell[215921, 3926, 289, 6, 70, "Input",ExpressionUUID->"a26cc5d9-e803-45fa-b22e-fae71af4e8d4"],
Cell[216213, 3934, 216, 3, 70, "Input",ExpressionUUID->"3309429c-25c3-464f-a97a-6193bde41c61"],
Cell[216432, 3939, 477, 12, 70, "Input",ExpressionUUID->"c7b59436-5334-4cdf-8c43-2d2fe93b3917"]
}, Closed]],
Cell[CellGroupData[{
Cell[216946, 3956, 180, 3, 37, "Subsubsection",ExpressionUUID->"2e5b960f-ce39-4cd9-a390-ec4c724d0794"],
Cell[217129, 3961, 2119, 56, 70, "Input",ExpressionUUID->"ccc5fd89-681d-4742-9855-ddf4ecfe57a6"],
Cell[219251, 4019, 239, 4, 70, "Input",ExpressionUUID->"53fddc99-c4e8-45c0-a9f3-8bc732aba17d"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[219539, 4029, 228, 4, 54, "Subsection",ExpressionUUID->"6033b32e-4c89-4553-869f-3243e5607bf1"],
Cell[219770, 4035, 653, 18, 70, "Input",ExpressionUUID->"a0948096-3a17-480e-88aa-5f8f54122f9a"],
Cell[220426, 4055, 1151, 34, 70, "Input",ExpressionUUID->"414b81d5-a5f7-405e-88ec-356977cae10c"],
Cell[221580, 4091, 572, 11, 70, "Text",ExpressionUUID->"7f20e0cc-33ba-4b02-a0c9-60eb0f4f1498"],
Cell[222155, 4104, 237, 4, 70, "Input",ExpressionUUID->"33670142-c814-4498-b5e7-7e7f8a967c11"],
Cell[222395, 4110, 288, 6, 70, "Input",ExpressionUUID->"58d93156-a8c6-41f9-b9b1-fcef6a398386"],
Cell[222686, 4118, 1272, 34, 70, "Input",ExpressionUUID->"6b678fcd-e62e-4b59-b44a-6d3933285c04"],
Cell[223961, 4154, 406, 9, 70, "Input",ExpressionUUID->"e6b3fb20-ac33-4f43-b582-08fbcf2dfdcb"],
Cell[224370, 4165, 1306, 36, 70, "Input",ExpressionUUID->"86ed8633-ec47-4ba1-be57-e700c52982a5"],
Cell[225679, 4203, 219, 5, 70, "Text",ExpressionUUID->"80e50c85-aa4a-47c4-beb7-0309b49cd6c2"],
Cell[225901, 4210, 490, 13, 70, "Input",ExpressionUUID->"73c1be5e-ad36-4648-8909-3528e2e910da"],
Cell[226394, 4225, 360, 7, 70, "Input",ExpressionUUID->"fc9202f0-a708-46b9-8993-d99ef8b9d57b"],
Cell[226757, 4234, 366, 8, 70, "Input",ExpressionUUID->"f1990163-3f6a-4f58-af53-f8ca35b8f4a7"],
Cell[227126, 4244, 292, 6, 70, "Input",ExpressionUUID->"d92afaa3-6d6b-4204-9fe8-9f4f22d4295d"],
Cell[227421, 4252, 868, 22, 70, "Input",ExpressionUUID->"de6395af-73f2-4054-8b7c-bf1b424351e4"],
Cell[228292, 4276, 405, 9, 70, "Input",ExpressionUUID->"f164bc20-17db-485f-bab3-bd1f8fca5c29"],
Cell[228700, 4287, 350, 7, 70, "Input",ExpressionUUID->"f0370879-7fa9-4d95-9ac3-91e74e92672f"],
Cell[229053, 4296, 276, 5, 70, "Input",ExpressionUUID->"c7506f17-b6e6-45d7-bb3c-531b214b21e6"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[229378, 4307, 324, 5, 64, "Subchapter",ExpressionUUID->"2d81b315-c178-4a19-82de-edec401ad759"],
Cell[CellGroupData[{
Cell[229727, 4316, 161, 3, 54, "Subsection",ExpressionUUID->"6ac426ee-2cf2-4609-a70a-b7bbae6bed70"],
Cell[229891, 4321, 301, 7, 70, "Text",ExpressionUUID->"0d5ac3c1-0a5f-441b-82aa-56ceb05deba1"],
Cell[230195, 4330, 1242, 34, 70, "Input",ExpressionUUID->"17b788ed-dfdb-4bc8-8387-cc24a2843518"],
Cell[231440, 4366, 241, 4, 70, "Input",ExpressionUUID->"59e4d47e-c682-496c-8f5f-8a3d84d8ebfe"]
}, Closed]],
Cell[CellGroupData[{
Cell[231718, 4375, 167, 3, 38, "Subsection",ExpressionUUID->"f6a0af4d-c709-4e10-972b-30d8c0b63b74"],
Cell[231888, 4380, 179, 3, 70, "Text",ExpressionUUID->"f5dfccdd-d0a8-49d0-9956-18c3955c2e22"],
Cell[232070, 4385, 615, 15, 70, "Input",ExpressionUUID->"259e8c14-471b-4fd7-99a3-e05a12e7c44b"]
}, Closed]],
Cell[CellGroupData[{
Cell[232722, 4405, 157, 3, 38, "Subsection",ExpressionUUID->"8519decb-a647-4082-a417-8490e787bc1d"],
Cell[232882, 4410, 163, 3, 70, "Text",ExpressionUUID->"2542e184-2b55-431e-8712-57b4010b0208"],
Cell[233048, 4415, 631, 13, 70, "Input",ExpressionUUID->"dfd024d4-6cd0-4f3e-978b-924b02a9eace"],
Cell[233682, 4430, 176, 3, 70, "Text",ExpressionUUID->"8bd6ea94-2eed-481c-aad6-78ae01eb6ab7"],
Cell[233861, 4435, 849, 19, 70, "Input",ExpressionUUID->"fb343542-47c9-446d-80da-03fd3e2252ae"]
}, Closed]],
Cell[CellGroupData[{
Cell[234747, 4459, 176, 3, 38, "Subsection",ExpressionUUID->"a08bed25-3efe-40d5-bc4e-9f803924dddc"],
Cell[234926, 4464, 240, 4, 70, "Text",ExpressionUUID->"69abaf44-84b6-4abe-bd7d-0b63dd967e4e"],
Cell[235169, 4470, 455, 10, 70, "Input",ExpressionUUID->"7d4f3e83-d26e-4cd2-9549-83ece73a5532"],
Cell[235627, 4482, 355, 8, 70, "Input",ExpressionUUID->"eecbc129-2d09-4c25-91df-5406a1cd99e8"],
Cell[235985, 4492, 363, 8, 70, "Input",ExpressionUUID->"d0a3c222-4a31-4f3f-b352-e910a84f88bf"],
Cell[236351, 4502, 360, 8, 70, "Input",ExpressionUUID->"3687dac5-32c8-484e-8e0a-e79866596754"],
Cell[236714, 4512, 268, 6, 70, "Text",ExpressionUUID->"91fc0eea-f728-45cb-8c20-ef67f376c886"],
Cell[236985, 4520, 817, 22, 70, "Input",ExpressionUUID->"94169326-674a-4442-b858-2906e886a2b0"],
Cell[237805, 4544, 495, 12, 70, "Input",ExpressionUUID->"2b83ea3b-6e52-4222-9a3a-9c2ffa1e2c9f"],
Cell[238303, 4558, 363, 7, 70, "Input",ExpressionUUID->"3bdb8d5b-aba4-46e3-94d0-0ebf4e2145f5"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[238715, 4571, 290, 5, 64, "Subchapter",ExpressionUUID->"ff48cf42-cb85-4663-b23e-43657c60dfe7"],
Cell[CellGroupData[{
Cell[239030, 4580, 161, 3, 54, "Subsection",ExpressionUUID->"47e835ce-4699-4923-898e-db43e06f49d0"],
Cell[239194, 4585, 803, 22, 70, "Input",ExpressionUUID->"d9902e8c-2a9f-40e9-88a5-9c6eca85b9c9"]
}, Closed]],
Cell[CellGroupData[{
Cell[240034, 4612, 159, 3, 38, "Subsection",ExpressionUUID->"586003b9-59ba-4f2a-a670-aeb201812c92"],
Cell[CellGroupData[{
Cell[240218, 4619, 182, 3, 45, "Subsubsection",ExpressionUUID->"69a2c8a5-fb3b-4839-94de-bdb3a0a3b69c"],
Cell[240403, 4624, 186, 3, 70, "Text",ExpressionUUID->"04bdad1b-08c0-4975-a86c-fca0695bde0f"],
Cell[240592, 4629, 264, 5, 70, "Input",ExpressionUUID->"8607c804-68f1-4d3e-8467-339871a55b60"],
Cell[240859, 4636, 358, 7, 70, "Input",ExpressionUUID->"76a2f7e3-7d49-45ab-aaf7-cdffb72eccbf"],
Cell[241220, 4645, 237, 4, 70, "Input",ExpressionUUID->"a853d33f-3e4d-4a97-be23-2d351b6b6b09"],
Cell[241460, 4651, 328, 7, 70, "Text",ExpressionUUID->"e0643ea0-003f-48a0-b7b3-9ccba6e37a8e"],
Cell[241791, 4660, 266, 5, 70, "Input",ExpressionUUID->"302b44be-ef86-48c9-aa2c-564b391aa0b2"],
Cell[242060, 4667, 334, 7, 70, "Input",ExpressionUUID->"03e3091e-977d-4e2f-81d5-da8fb825aec4"],
Cell[242397, 4676, 501, 13, 70, "Input",ExpressionUUID->"b1b59af8-238e-45ed-aa75-edbfe25101fd"],
Cell[242901, 4691, 529, 11, 70, "Input",ExpressionUUID->"90b9f4a2-b104-45e2-93f3-8188b310c05e"],
Cell[243433, 4704, 408, 9, 70, "Text",ExpressionUUID->"b2a29537-e3dd-40af-9ab3-396f946f0c7f"],
Cell[243844, 4715, 446, 9, 70, "Input",ExpressionUUID->"ca643546-dc1d-430e-b21a-ecac262f9a1e"],
Cell[244293, 4726, 501, 10, 70, "Input",ExpressionUUID->"0ca068e9-45ab-4193-b700-ea079aa30009"],
Cell[244797, 4738, 529, 11, 70, "Input",ExpressionUUID->"3c45e684-0113-4b2f-9a58-889dba598670"],
Cell[245329, 4751, 160, 3, 70, "Text",ExpressionUUID->"cc0b2c2b-3f9b-46a3-812b-fdd16430c436"],
Cell[245492, 4756, 292, 6, 70, "Input",ExpressionUUID->"0653d5ab-e1f9-42eb-9a3c-efc992067962"],
Cell[245787, 4764, 239, 4, 70, "Input",ExpressionUUID->"06c51025-4365-4585-b0fb-f98b6c96c521"]
}, Closed]],
Cell[CellGroupData[{
Cell[246063, 4773, 236, 4, 37, "Subsubsection",ExpressionUUID->"ded5d62a-f398-4005-9427-e92efe288312"],
Cell[246302, 4779, 270, 6, 35, "Text",ExpressionUUID->"30dac8a6-273d-4495-981c-2a1d6d3a8f80"],
Cell[246575, 4787, 686, 16, 90, "Input",ExpressionUUID->"5d3cf964-b905-48d5-a57a-61d50ebef712"],
Cell[247264, 4805, 293, 5, 29, "Input",ExpressionUUID->"0a118751-0dac-4729-ad1e-d7f094a26af9"],
Cell[247560, 4812, 181, 3, 35, "Text",ExpressionUUID->"726f5912-6fe1-4cf0-b67e-2d661dfbc98b"],
Cell[247744, 4817, 401, 10, 29, "Input",ExpressionUUID->"6ffb097a-81f0-4f7b-994e-a5ecaff9ecde"],
Cell[248148, 4829, 211, 3, 29, "Input",ExpressionUUID->"793842ff-54de-40e7-8b1e-caad93d21916"],
Cell[248362, 4834, 213, 3, 29, "Input",ExpressionUUID->"5130ff98-956a-4b72-a8af-0af211b0903e"],
Cell[248578, 4839, 343, 6, 29, "Input",ExpressionUUID->"fe0f0767-29b1-46ab-89a9-7c9514129412"],
Cell[248924, 4847, 347, 7, 35, "Text",ExpressionUUID->"1f4758f5-443f-4df8-b208-0f642bb70f02"],
Cell[249274, 4856, 197, 4, 29, "Input",ExpressionUUID->"510825b1-6656-4549-a8ae-a1243cb118fb"],
Cell[249474, 4862, 450, 8, 29, "Input",ExpressionUUID->"4434b8fb-f66c-460e-a0c4-571c04a56121"],
Cell[249927, 4872, 353, 6, 29, "Input",ExpressionUUID->"9365ecdb-b734-4c5d-8503-bb51d35b6eac"],
Cell[250283, 4880, 292, 4, 35, "Text",ExpressionUUID->"460b4f2c-53bc-49cd-9398-41759cefa4a4"],
Cell[250578, 4886, 466, 11, 29, "Input",ExpressionUUID->"3e8ca21d-0805-49fc-aa4d-9912aeb2dfcd"],
Cell[251047, 4899, 508, 12, 50, "Input",ExpressionUUID->"b537de9b-c104-43d8-880b-c1a199590c8f"],
Cell[251558, 4913, 248, 4, 29, "Input",ExpressionUUID->"9f532b89-2b9a-45c6-a97a-44e8cda1cce1"],
Cell[251809, 4919, 265, 6, 35, "Text",ExpressionUUID->"1b611f18-649c-473d-992a-229c3cb8c4f4"],
Cell[252077, 4927, 603, 13, 50, "Input",ExpressionUUID->"abe1de54-7eda-49dd-816f-028249e80717"],
Cell[252683, 4942, 1055, 25, 50, "Input",ExpressionUUID->"524331ef-fe4b-4ceb-9bd0-466fdbff5ae8"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[253787, 4973, 173, 3, 54, "Subsection",ExpressionUUID->"cf83491c-53d6-4317-902a-83e581aa5dc7"],
Cell[253963, 4978, 555, 13, 70, "Input",ExpressionUUID->"295b97a0-e9dc-4121-923c-5eaf1358301e"],
Cell[254521, 4993, 806, 19, 70, "Input",ExpressionUUID->"f34b5322-4762-42a1-b96d-7c26a6f0c9fb"],
Cell[255330, 5014, 359, 7, 70, "Input",ExpressionUUID->"da20adbf-60c7-4030-adc2-fd83c41d3f1b"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[255738, 5027, 334, 8, 64, "Subchapter",ExpressionUUID->"7e315242-c9a0-48d7-a79c-e62367557aee"],
Cell[CellGroupData[{
Cell[256097, 5039, 161, 3, 54, "Subsection",ExpressionUUID->"932638bc-7c62-479b-bb0d-3cffa205baac"],
Cell[256261, 5044, 1553, 43, 170, "Input",ExpressionUUID->"fbf5ef71-e74a-4a87-867e-8a3346fab1f4"]
}, Closed]],
Cell[CellGroupData[{
Cell[257851, 5092, 173, 3, 38, "Subsection",ExpressionUUID->"5c27d6f6-8cde-4515-862a-aa9c9642bd78"],
Cell[258027, 5097, 163, 3, 35, "Text",ExpressionUUID->"4c5eacb3-63dd-4261-bae3-aa2546f96de9"],
Cell[258193, 5102, 1533, 35, 50, "Input",ExpressionUUID->"63000fed-904c-4a4f-b696-9368e0f79cb4"],
Cell[259729, 5139, 597, 11, 29, "Input",ExpressionUUID->"816e27ef-b777-4331-a0c7-f21e570a53c8"],
Cell[260329, 5152, 281, 6, 29, "Input",ExpressionUUID->"914da50d-8987-45c6-86c2-efa574454895"],
Cell[260613, 5160, 322, 7, 35, "Text",ExpressionUUID->"71e298ab-c4f6-4b0e-9225-05f491f97805"],
Cell[260938, 5169, 245, 5, 29, "Input",ExpressionUUID->"e2c62f91-87ae-4684-9c45-f35ac0d1d1e7"],
Cell[261186, 5176, 376, 8, 29, "Input",ExpressionUUID->"baed26dd-0455-4c7c-8a1b-0fa20555865e"],
Cell[261565, 5186, 238, 4, 29, "Input",ExpressionUUID->"d10f611a-3618-4a47-bf35-3dfcdb3b7e18"],
Cell[261806, 5192, 1751, 30, 29, "Input",ExpressionUUID->"1c36b922-6e1f-438c-8272-93926ea59256"],
Cell[263560, 5224, 247, 6, 35, "Text",ExpressionUUID->"9b6ebdf0-bddb-44b7-968e-d85858606ab3"],
Cell[263810, 5232, 221, 3, 29, "Input",ExpressionUUID->"1b339f6e-472b-4aad-8eef-0e5b926333fa"],
Cell[264034, 5237, 572, 13, 29, "Input",ExpressionUUID->"da3d4eea-df63-4b2e-b74e-059cacab7254"],
Cell[264609, 5252, 242, 5, 29, "Input",ExpressionUUID->"102974f4-2d9b-4cde-bfaf-358b8fb9ac16"],
Cell[264854, 5259, 278, 6, 35, "Text",ExpressionUUID->"619ccb59-1402-4b29-83d1-c92d637ab02a"],
Cell[265135, 5267, 767, 20, 50, "Input",ExpressionUUID->"8ceb4c98-d616-490c-8fb5-4843ba78006c"],
Cell[265905, 5289, 836, 23, 29, "Input",ExpressionUUID->"3696fe4f-f01d-45bd-92a4-16e14eb5f35f"],
Cell[266744, 5314, 363, 8, 29, "Input",ExpressionUUID->"09229319-c33b-4e4a-ba78-73bea25fef4c"]
}, Closed]],
Cell[CellGroupData[{
Cell[267144, 5327, 278, 4, 38, "Subsection",ExpressionUUID->"c10c058b-a500-4c2d-bffa-2955b14de21a"],
Cell[CellGroupData[{
Cell[267447, 5335, 170, 3, 45, "Subsubsection",ExpressionUUID->"adaf1997-c6af-46c4-ae60-0fb87f7483c2"],
Cell[267620, 5340, 290, 6, 35, "Text",ExpressionUUID->"8fc205d5-3384-40ca-a0e5-a8c9f829c920"],
Cell[267913, 5348, 720, 17, 29, "Input",ExpressionUUID->"646203ff-d303-4507-9da0-c6c6b2da4b18"],
Cell[268636, 5367, 176, 3, 35, "Text",ExpressionUUID->"869142fd-77a5-4044-bfa0-ffaeaff29d3f"],
Cell[268815, 5372, 1290, 33, 90, "Input",ExpressionUUID->"c5d26f17-e5d3-4460-99c6-c6d6d4fc11dd"]
}, Closed]],
Cell[CellGroupData[{
Cell[270142, 5410, 179, 3, 37, "Subsubsection",ExpressionUUID->"f38c2344-3618-4b65-86d0-b42b8689639d"],
Cell[270324, 5415, 245, 5, 35, "Text",ExpressionUUID->"8b20a75d-31f3-4056-ac74-f1127d0d96dd"],
Cell[270572, 5422, 1058, 23, 29, "Input",ExpressionUUID->"e8e00cae-5dc7-462d-8948-526b28aeb597"],
Cell[271633, 5447, 1343, 34, 90, "Input",ExpressionUUID->"a8ab54f5-bbbb-4ea9-a109-96d066fc16c2"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[273025, 5487, 182, 3, 54, "Subsection",ExpressionUUID->"52e9fa03-400d-4512-9bf9-1437a0e5fcb7"],
Cell[273210, 5492, 998, 22, 29, "Input",ExpressionUUID->"3efd9f8d-ac18-4503-896c-60556b22f764"],
Cell[274211, 5516, 275, 7, 29, "Input",ExpressionUUID->"0cbe21c8-5790-42e6-a0ba-1f030e3e5997"],
Cell[274489, 5525, 996, 22, 29, "Input",ExpressionUUID->"27a1cde0-d94a-47cf-abeb-3c946e78e8b6"],
Cell[275488, 5549, 379, 10, 29, "Input",ExpressionUUID->"d1be5a12-791a-4350-96bc-97a8b33f7dcb"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[275916, 5565, 176, 3, 64, "Subchapter",ExpressionUUID->"bd72d8f9-e5f9-4dc6-8f74-865e5a0d73d1"],
Cell[CellGroupData[{
Cell[276117, 5572, 275, 4, 54, "Subsection",ExpressionUUID->"a6da33c3-efdf-4208-ba9d-24feeed10a88"],
Cell[CellGroupData[{
Cell[276417, 5580, 222, 4, 45, "Subsubsection",ExpressionUUID->"2edddb44-1bfb-48ca-829f-4e01ababe642"],
Cell[276642, 5586, 3649, 105, 70, "Input",ExpressionUUID->"9b91eb61-00ab-48df-a447-fedb2fd2f5db"],
Cell[280294, 5693, 590, 13, 70, "Input",ExpressionUUID->"8d073112-10fc-4030-921c-ef26a3c0437e"]
}, Closed]],
Cell[CellGroupData[{
Cell[280921, 5711, 201, 3, 37, "Subsubsection",ExpressionUUID->"b587fa99-4fd2-4a9f-84c3-cef7608ce734"],
Cell[281125, 5716, 183, 5, 70, "Input",ExpressionUUID->"1d7b806a-dd41-45bf-9618-e62a5081374b"],
Cell[281311, 5723, 1510, 43, 70, "Input",ExpressionUUID->"7e46033f-85f1-4dc7-bd60-9ce5bc39fd40"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[282870, 5772, 181, 3, 54, "Subsection",ExpressionUUID->"7b0ca489-2d98-4b70-8d0f-822a0387c0f1"],
Cell[CellGroupData[{
Cell[283076, 5779, 164, 3, 45, "Subsubsection",ExpressionUUID->"177a1753-5f03-4991-89d8-98a1aa966a50"],
Cell[283243, 5784, 491, 9, 70, "Text",ExpressionUUID->"87f508a6-1540-4424-bb30-6ac782debcec"],
Cell[283737, 5795, 556, 14, 70, "Input",ExpressionUUID->"423e2d86-3a51-46b3-9197-72f7f0028581"],
Cell[284296, 5811, 674, 19, 70, "Input",ExpressionUUID->"58d81c30-8194-49d8-99f2-afe922769900"],
Cell[284973, 5832, 256, 5, 70, "Input",ExpressionUUID->"d5065ca8-34be-491d-8e7c-859fa128d3ef"],
Cell[285232, 5839, 180, 3, 70, "Text",ExpressionUUID->"5d8722a6-0f30-46da-9a66-70fc6e81a4e1"],
Cell[285415, 5844, 1088, 30, 70, "Input",ExpressionUUID->"cdcc633d-9298-474d-8926-467ed718c7df"]
}, Closed]],
Cell[CellGroupData[{
Cell[286540, 5879, 185, 3, 37, "Subsubsection",ExpressionUUID->"fad4d634-1ff8-466d-8264-61cf6051a1dc"],
Cell[286728, 5884, 214, 3, 70, "Text",ExpressionUUID->"c7901d06-820c-4d80-adf0-e69af1db8e84"],
Cell[286945, 5889, 1368, 39, 70, "Input",ExpressionUUID->"f00cc5d1-3776-4533-888e-d37a4fe114b1"],
Cell[288316, 5930, 618, 17, 70, "Input",ExpressionUUID->"0d87a2c4-dbb9-4b69-9cbd-5329e4c7140f"]
}, Closed]],
Cell[CellGroupData[{
Cell[288971, 5952, 190, 3, 37, "Subsubsection",ExpressionUUID->"1b109d2e-a32c-48ad-9a6b-09b964323db5"],
Cell[289164, 5957, 565, 12, 70, "Input",ExpressionUUID->"d7bdf8d5-6e6b-401a-9fb0-4bd3e02954af"],
Cell[289732, 5971, 571, 14, 70, "Input",ExpressionUUID->"bc8e7efa-dd51-4c32-b014-721652d5ace8"]
}, Closed]],
Cell[CellGroupData[{
Cell[290340, 5990, 208, 4, 37, "Subsubsection",ExpressionUUID->"202a85c6-aa77-469d-80b0-13a415d3aa61"],
Cell[290551, 5996, 222, 3, 70, "Text",ExpressionUUID->"e24414a3-74e8-46ce-b0b6-aa68e3bb6b37"],
Cell[290776, 6001, 309, 6, 70, "Input",ExpressionUUID->"61f94af4-5685-4721-b8e5-76cc0311a7c5"],
Cell[291088, 6009, 212, 5, 70, "Text",ExpressionUUID->"f029d1df-9364-4a0f-aa02-4b00dc60486b"],
Cell[291303, 6016, 1190, 27, 70, "Input",ExpressionUUID->"df9ae3da-52fc-492a-9b8d-9589c9e0af8a"],
Cell[292496, 6045, 634, 15, 70, "Input",ExpressionUUID->"3b55af4b-60ef-43ab-be1f-e829b9d3ed23"],
Cell[293133, 6062, 429, 10, 70, "Input",ExpressionUUID->"d640f839-5ffc-4132-865e-cae8836aa204"],
Cell[293565, 6074, 423, 10, 70, "Input",ExpressionUUID->"5f8b9cc7-a71a-4c83-b65d-69c317df4b2a"],
Cell[293991, 6086, 348, 8, 70, "Input",ExpressionUUID->"ef9d930e-46b1-4c08-ab9d-54b1b8bc8691"],
Cell[294342, 6096, 294, 6, 70, "Text",ExpressionUUID->"625f8eae-ed64-4f89-b2e8-8ef3060fd8cb"],
Cell[294639, 6104, 417, 11, 70, "Input",ExpressionUUID->"264346c4-6b3f-4ece-bceb-9414c6eb6281"],
Cell[295059, 6117, 419, 9, 70, "Input",ExpressionUUID->"894f94a1-23b7-4463-b2d5-abe725435936"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[295539, 6133, 413, 6, 64, "Subchapter",ExpressionUUID->"992e29c7-eb37-4be7-8ec9-9e6018497ff7"],
Cell[CellGroupData[{
Cell[295977, 6143, 224, 4, 54, "Subsection",ExpressionUUID->"6f5b2db9-e346-4bd8-a44c-8cca8c836fad"],
Cell[296204, 6149, 1173, 32, 70, "Input",ExpressionUUID->"ca9c1bf2-57fe-44ba-a162-d1be1d85a590"],
Cell[297380, 6183, 695, 18, 70, "Input",ExpressionUUID->"4c0239ee-d9ac-403c-a918-dd9d399cea36"],
Cell[298078, 6203, 2534, 62, 70, "Input",ExpressionUUID->"f1884fe1-586b-4852-b44e-8ac602f5e42f"],
Cell[300615, 6267, 2539, 62, 70, "Input",ExpressionUUID->"53fc9933-5872-4125-b0f8-f68f33bb3a1a"],
Cell[303157, 6331, 2640, 63, 70, "Input",ExpressionUUID->"75be3c89-2250-4c15-8fc1-95fc5153710d"],
Cell[305800, 6396, 236, 4, 70, "Input",ExpressionUUID->"ea6aef23-0e48-4bd6-8dc9-a82b13ee01d7"]
}, Closed]],
Cell[CellGroupData[{
Cell[306073, 6405, 231, 4, 38, "Subsection",ExpressionUUID->"33202e28-0fa0-4880-a579-60fd33dd0adb"],
Cell[306307, 6411, 1264, 35, 70, "Input",ExpressionUUID->"753b0a2a-9d05-49da-9bee-81c36f6f89af"],
Cell[307574, 6448, 1262, 35, 70, "Input",ExpressionUUID->"400f995e-d5ab-42fe-a587-30e34e83f443"],
Cell[308839, 6485, 1576, 44, 70, "Input",ExpressionUUID->"b43542ca-c929-4028-8aee-c7176c7cf527"]
}, Closed]],
Cell[CellGroupData[{
Cell[310452, 6534, 166, 3, 38, "Subsection",ExpressionUUID->"6c868790-2893-463e-a2d0-1a9a571113d7"],
Cell[310621, 6539, 2343, 67, 70, "Input",ExpressionUUID->"1ef20ff1-6d49-4deb-877d-7de44dfed40d"],
Cell[312967, 6608, 1801, 44, 70, "Input",ExpressionUUID->"e9c3029c-e293-4798-9790-fdf3c938956f"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[314817, 6658, 271, 4, 64, "Subchapter",ExpressionUUID->"b341beda-5ee8-44a9-9312-619b2c8f81f1"],
Cell[CellGroupData[{
Cell[315113, 6666, 163, 3, 54, "Subsection",ExpressionUUID->"b8cae968-01be-4d76-93c4-914725dacb60"],
Cell[315279, 6671, 423, 8, 70, "Text",ExpressionUUID->"838c8185-e694-4949-9dd0-0c59b961e8bf"],
Cell[315705, 6681, 690, 20, 70, "Input",ExpressionUUID->"b207c621-7de3-43fa-8bdf-ef8e64f0d8bd"],
Cell[316398, 6703, 813, 20, 70, "Input",ExpressionUUID->"6a0e43c3-6e49-4acf-a0d5-faa81d3c50fd"]
}, Closed]],
Cell[CellGroupData[{
Cell[317248, 6728, 173, 3, 38, "Subsection",ExpressionUUID->"e4d814b7-307b-44b1-8176-77d613190d5c"],
Cell[317424, 6733, 222, 4, 70, "Text",ExpressionUUID->"08e92c98-8105-4c77-848e-fff3f471f75e"],
Cell[317649, 6739, 803, 22, 70, "Input",ExpressionUUID->"b1483bf9-66dd-4581-84a9-c843d760fb15"],
Cell[318455, 6763, 606, 16, 70, "Input",ExpressionUUID->"e6d0f667-bae9-4dd4-a3f7-1cb0f0305255"],
Cell[319064, 6781, 261, 6, 70, "Text",ExpressionUUID->"84309912-9796-472d-8aa5-a93ea74bc056"],
Cell[319328, 6789, 205, 4, 70, "Input",ExpressionUUID->"c631e283-9e8c-41c3-82cb-807c278b0f53"],
Cell[319536, 6795, 2261, 60, 70, "Input",ExpressionUUID->"83924ee4-b18d-4de6-b618-a5e212f482da"],
Cell[321800, 6857, 764, 19, 70, "Input",ExpressionUUID->"d3e7e3d0-876a-4f04-a706-ec1533d2392e"]
}, Closed]],
Cell[CellGroupData[{
Cell[322601, 6881, 176, 3, 38, "Subsection",ExpressionUUID->"a32b7405-2d28-4efa-ad38-9fc2d3fe6ff7"],
Cell[322780, 6886, 192, 3, 70, "Text",ExpressionUUID->"07ba9190-658c-49b3-addf-eafc175f6ae3"],
Cell[322975, 6891, 958, 24, 70, "Input",ExpressionUUID->"2b8f0007-7a5b-43a9-8a6e-74ff32e52a1c"],
Cell[323936, 6917, 247, 6, 70, "Text",ExpressionUUID->"691708d6-126e-4d41-be2c-d857f4226500"],
Cell[324186, 6925, 478, 13, 70, "Input",ExpressionUUID->"4b0a9093-cbed-430e-a3b8-9877643a7ed4"],
Cell[324667, 6940, 254, 6, 70, "Text",ExpressionUUID->"fd6e9fa0-b5a6-4e96-bc4d-c468cb86b649"],
Cell[324924, 6948, 692, 18, 70, "Input",ExpressionUUID->"8de819ca-705a-4220-8130-c192af8d549b"],
Cell[325619, 6968, 470, 11, 70, "Input",ExpressionUUID->"47a0659c-4df1-4f1b-9d7b-b96779ba5cb1"],
Cell[326092, 6981, 173, 3, 70, "Text",ExpressionUUID->"3ef473e1-450e-4731-ae4d-89c5b79bd2a1"],
Cell[326268, 6986, 257, 5, 70, "Print",ExpressionUUID->"fac8500f-e172-4333-a9f7-7e02973e79b9"],
Cell[326528, 6993, 404, 11, 70, "Input",ExpressionUUID->"3e9a97a0-dd2f-4ec4-bfe3-85b303b130d6"],
Cell[326935, 7006, 475, 12, 70, "Input",ExpressionUUID->"6a2dbfc3-df24-43c6-a38b-c46b51dc77c7"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[327459, 7024, 357, 5, 64, "Subchapter",ExpressionUUID->"206c273f-0ccf-4695-9121-5be90826dd71"],
Cell[CellGroupData[{
Cell[327841, 7033, 173, 3, 54, "Subsection",ExpressionUUID->"8445ef95-5973-4648-871d-e56f6b632789"],
Cell[328017, 7038, 918, 23, 70, "Input",ExpressionUUID->"57234781-617a-4162-9879-35e308aaf866"],
Cell[328938, 7063, 952, 28, 70, "Input",ExpressionUUID->"24da691e-d6de-410f-b0ef-1d2de61863d9"],
Cell[329893, 7093, 658, 19, 70, "Input",ExpressionUUID->"8984a19f-eabf-4e62-97e2-98267e2bcc61"],
Cell[330554, 7114, 394, 9, 70, "Text",ExpressionUUID->"054abc16-56b6-40bf-a212-835aa4516f1a"],
Cell[330951, 7125, 3320, 90, 70, "Input",ExpressionUUID->"ace4a269-d905-4882-89d8-90bd356cd7f9"]
}, Closed]],
Cell[CellGroupData[{
Cell[334308, 7220, 178, 3, 38, "Subsection",ExpressionUUID->"d12758da-d1d5-43a6-8aaa-503db8464fff"],
Cell[334489, 7225, 618, 15, 70, "Input",ExpressionUUID->"552a216f-db51-4a52-837c-8826af038d2c"],
Cell[335110, 7242, 625, 15, 70, "Input",ExpressionUUID->"75ab4e15-7874-4e05-accb-830a5a8437a0"],
Cell[335738, 7259, 676, 16, 70, "Input",ExpressionUUID->"e5f441ab-6c4e-4b17-a787-cc5a724424cb"]
}, Closed]],
Cell[CellGroupData[{
Cell[336451, 7280, 166, 3, 38, "Subsection",ExpressionUUID->"3661d520-8d0a-475a-b073-957f7c24d670"],
Cell[336620, 7285, 2357, 66, 70, "Input",ExpressionUUID->"2df86a65-6a91-4969-a35f-485561eeaf98"],
Cell[338980, 7353, 1470, 34, 70, "Input",ExpressionUUID->"c373eede-fb5d-4af4-906d-3ef381ffe28c"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[340499, 7393, 237, 4, 64, "Subchapter",ExpressionUUID->"47034db1-d0d6-4b23-af6e-0f6546045b3b"],
Cell[CellGroupData[{
Cell[340761, 7401, 178, 3, 54, "Subsection",ExpressionUUID->"25adc37f-e4d2-4d9f-a5ed-8612c20d46c3"],
Cell[340942, 7406, 199, 3, 34, "Text",ExpressionUUID->"ea42799b-6877-4b38-b569-13addb9d2db3"],
Cell[341144, 7411, 1148, 34, 105, "Input",ExpressionUUID->"27dca582-2b36-49e0-88a2-e3bb99bd2d01"],
Cell[342295, 7447, 245, 5, 28, "Input",ExpressionUUID->"9d2e7d89-461c-48fc-92b8-0015aa0d0da2"],
Cell[342543, 7454, 366, 8, 28, "Input",ExpressionUUID->"512a6259-5ab7-4fd1-b670-1393be8510df"],
Cell[342912, 7464, 178, 3, 70, "Text",ExpressionUUID->"06fed56e-cf72-4eab-877f-8a2fa48264d1"],
Cell[343093, 7469, 221, 4, 70, "Input",ExpressionUUID->"505f5e4d-61b2-45a6-8a8a-10a30bdf2cee"]
}, Closed]],
Cell[CellGroupData[{
Cell[343351, 7478, 165, 3, 38, "Subsection",ExpressionUUID->"37567aef-8b97-425f-abdf-d82ae053b962"],
Cell[343519, 7483, 1206, 30, 90, "Input",ExpressionUUID->"b6a6e3c8-61e2-4f74-8ee2-1ecd45f55cfc"]
}, Closed]],
Cell[CellGroupData[{
Cell[344762, 7518, 372, 6, 38, "Subsection",ExpressionUUID->"29712ec0-7f9d-4363-bd69-fedc89b926de"],
Cell[CellGroupData[{
Cell[345159, 7528, 164, 3, 45, "Subsubsection",ExpressionUUID->"7b6f1d42-3372-4eae-9f3b-52b01fd6c20a"],
Cell[345326, 7533, 290, 6, 35, "Text",ExpressionUUID->"27abfcd5-f584-46cd-8df8-6aa1f69b339e"],
Cell[345619, 7541, 1080, 28, 110, "Input",ExpressionUUID->"e685e2ff-8cec-433d-90f3-cd1e4ba107a4"],
Cell[346702, 7571, 242, 4, 29, "Input",ExpressionUUID->"2c219bff-98ca-4149-8f73-f5d4c18d1d6f"],
Cell[346947, 7577, 267, 5, 29, "Input",ExpressionUUID->"58a620c5-fd10-4d1a-b298-19131a1f4f75"],
Cell[347217, 7584, 623, 15, 50, "Input",ExpressionUUID->"82cbf336-e0f4-43db-94e4-46d687594afa"],
Cell[347843, 7601, 333, 5, 29, "Input",ExpressionUUID->"e78c9670-4878-485f-9214-babcab9aa322"]
}, Closed]],
Cell[CellGroupData[{
Cell[348213, 7611, 169, 3, 37, "Subsubsection",ExpressionUUID->"75236b9f-93a9-4123-9f0b-e0d6063ca27a"],
Cell[348385, 7616, 265, 6, 35, "Text",ExpressionUUID->"8f267ee5-face-4d96-81f2-eb7a65fb2c80"],
Cell[348653, 7624, 722, 15, 29, "Input",ExpressionUUID->"b25ec0c8-9dee-4355-8b9d-d5d64b8430a5"],
Cell[349378, 7641, 681, 17, 29, "Input",ExpressionUUID->"2421eea9-a6e2-44b3-aab6-fe2b35f370c9"],
Cell[350062, 7660, 218, 5, 35, "Text",ExpressionUUID->"645118b4-3efb-4e87-b82b-7000552f32c3"],
Cell[350283, 7667, 484, 13, 29, "Input",ExpressionUUID->"3d0989cb-3f8b-44de-811e-bb762ce4f8ac"],
Cell[350770, 7682, 327, 7, 29, "Input",ExpressionUUID->"cb791753-16a4-485a-856b-2d0dfaadcfaf"]
}, Closed]],
Cell[CellGroupData[{
Cell[351134, 7694, 185, 3, 37, "Subsubsection",ExpressionUUID->"d4ebefef-2c40-4afa-86e2-01e82ef7e608"],
Cell[351322, 7699, 229, 4, 35, "Text",ExpressionUUID->"fcfdba04-a6f9-409b-bf78-69c9d9a513ea"],
Cell[351554, 7705, 846, 18, 29, "Input",ExpressionUUID->"bd7f1df1-29c6-4ca4-a54c-3c906bd69bd4"],
Cell[352403, 7725, 298, 6, 29, "Input",ExpressionUUID->"a91ec2ea-8cf7-45a9-9683-d4520d9dcf90"],
Cell[352704, 7733, 188, 3, 35, "Text",ExpressionUUID->"2c663dae-ce55-4c0e-9ead-798d28b2441d"],
Cell[352895, 7738, 588, 14, 29, "Input",ExpressionUUID->"9b20175a-57c0-4449-83ec-169ccd6f1d3d"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[353532, 7758, 164, 3, 54, "Subsection",ExpressionUUID->"194fc7a6-9250-4380-ab91-b6f48a0893c5"],
Cell[CellGroupData[{
Cell[353721, 7765, 200, 3, 45, "Subsubsection",ExpressionUUID->"c83a9054-dd74-47d7-ad95-3b9d6619e603"],
Cell[353924, 7770, 235, 6, 70, "Text",ExpressionUUID->"c0285daf-d6f8-45d3-b7b0-a5175ce9af64"],
Cell[354162, 7778, 776, 21, 70, "Input",ExpressionUUID->"2c24046e-db0b-4e2d-93ce-548abb04f40d"],
Cell[354941, 7801, 194, 3, 70, "Text",ExpressionUUID->"ee6a7083-6d3f-4950-8cbe-77fbc5364897"],
Cell[355138, 7806, 1213, 28, 70, "Input",ExpressionUUID->"fea884d6-0f69-4111-9d39-fa9e2a661e4d"]
}, Closed]],
Cell[CellGroupData[{
Cell[356388, 7839, 241, 4, 37, "Subsubsection",ExpressionUUID->"37c42ac9-91fe-46e0-b5f0-8a8055e0e5be"],
Cell[356632, 7845, 219, 5, 34, "Text",ExpressionUUID->"0f42b6f0-0ac9-4f04-a3fa-eb1d2d31934f"],
Cell[356854, 7852, 864, 22, 48, "Input",ExpressionUUID->"9b64546e-04bc-4e97-994c-1aede4a4f620"],
Cell[357721, 7876, 456, 12, 28, "Input",ExpressionUUID->"18361a8d-0015-46b1-91d8-24b5e8b80e9a"],
Cell[358180, 7890, 449, 11, 28, "Input",ExpressionUUID->"7a02e95a-55d3-4dcf-811f-6f7a57c0aed4"],
Cell[358632, 7903, 454, 12, 28, "Input",ExpressionUUID->"c8cd8936-aaa0-4ffd-bcc6-64ae1a6de48c"]
}, Closed]],
Cell[CellGroupData[{
Cell[359123, 7920, 195, 3, 37, "Subsubsection",ExpressionUUID->"e507394d-7fce-45ce-bab9-205bc132c31e"],
Cell[359321, 7925, 263, 6, 70, "Text",ExpressionUUID->"f1339e48-5568-4181-9103-13343d87b5ba"],
Cell[359587, 7933, 684, 14, 70, "Input",ExpressionUUID->"01726389-dcb2-4df4-a42f-14741a4d3969"],
Cell[360274, 7949, 446, 9, 70, "Input",ExpressionUUID->"377f4aec-7083-4a3a-92f1-91ca05e12f9b"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[360769, 7964, 214, 4, 54, "Subsection",ExpressionUUID->"46cb5c22-df36-42f1-8278-128db9e6546d"],
Cell[CellGroupData[{
Cell[361008, 7972, 168, 3, 45, "Subsubsection",ExpressionUUID->"46110b45-9f52-4171-ae7f-cc9053aa8a39"],
Cell[361179, 7977, 242, 4, 29, "Input",ExpressionUUID->"4cc308f1-c626-492a-91a8-f47d2cfafa5c"],
Cell[361424, 7983, 180, 3, 35, "Text",ExpressionUUID->"9b1f7978-adca-4e60-bbe3-3c5f3c0ab3f1"],
Cell[361607, 7988, 809, 14, 29, "Input",ExpressionUUID->"c4046150-0e85-4051-a718-7bc3b4410eb8"],
Cell[362419, 8004, 186, 3, 35, "Text",ExpressionUUID->"c1085988-fab4-4e7a-b40f-1be293ded423"],
Cell[362608, 8009, 496, 11, 70, "Input",ExpressionUUID->"61179b73-6cfe-420a-8029-ad2d32a322e9"],
Cell[363107, 8022, 185, 3, 35, "Text",ExpressionUUID->"be4e95c3-60da-4f88-9331-306f45cd1c4e"],
Cell[363295, 8027, 867, 22, 50, "Input",ExpressionUUID->"81b68c3e-6296-44bd-95a1-16e20540b96c"],
Cell[364165, 8051, 659, 18, 29, "Input",ExpressionUUID->"5feffc29-319a-4d91-98df-d76aafbbbd23"],
Cell[364827, 8071, 350, 8, 29, "Input",ExpressionUUID->"8b0730ee-7362-439c-a55d-7b48c7668c7d"],
Cell[365180, 8081, 470, 11, 29, "Input",ExpressionUUID->"9a36fc92-d1e1-461a-affd-7a4634929124"],
Cell[365653, 8094, 402, 10, 29, "Input",ExpressionUUID->"c10b5f5f-1c4e-46fc-8457-7ae8c5de5e55"],
Cell[366058, 8106, 400, 10, 29, "Input",ExpressionUUID->"53def0d8-f168-477c-b7cb-c8fe6942331d"],
Cell[366461, 8118, 343, 7, 35, "Text",ExpressionUUID->"b7b2a8a2-13df-4751-8d89-c4d73b0ea43f"],
Cell[366807, 8127, 1406, 35, 50, "Input",ExpressionUUID->"0e3b5a12-1999-4716-a93f-1cb468138eef"],
Cell[368216, 8164, 301, 6, 29, "Input",ExpressionUUID->"9219a9f5-b371-4dfb-9bc4-f5c419d321ba"],
Cell[368520, 8172, 270, 6, 35, "Text",ExpressionUUID->"db2d0a1f-9d4a-4bf6-94d9-6893ddbeb429"],
Cell[368793, 8180, 671, 17, 29, "Input",ExpressionUUID->"81d0d641-85ea-42a6-9641-aa770949ecd2"],
Cell[369467, 8199, 340, 6, 29, "Input",ExpressionUUID->"28bec43e-e76d-4463-9d29-c32ba0fd6212"]
}, Closed]],
Cell[CellGroupData[{
Cell[369844, 8210, 283, 4, 37, "Subsubsection",ExpressionUUID->"5df7f489-c3af-447f-892b-2d741b7472b9"],
Cell[370130, 8216, 306, 7, 35, "Text",ExpressionUUID->"827dae19-915f-47c7-88e0-29476a68b6eb"],
Cell[370439, 8225, 408, 7, 29, "Input",ExpressionUUID->"6288443b-53ef-46c2-adb6-5fd242877ecd"],
Cell[370850, 8234, 557, 15, 29, "Input",ExpressionUUID->"7d283bc0-0b1c-4f90-843a-7e94e6175fe9"],
Cell[371410, 8251, 192, 3, 35, "Text",ExpressionUUID->"c7e1f636-4a65-44ba-97f5-3c532c2ec232"],
Cell[371605, 8256, 746, 20, 70, "Input",ExpressionUUID->"016438a3-9162-4cbf-bae2-0cd4f7115cfa"],
Cell[372354, 8278, 240, 6, 35, "Text",ExpressionUUID->"811ccd9c-c131-4267-85e8-406bc2e46d47"],
Cell[372597, 8286, 898, 21, 29, "Input",ExpressionUUID->"a7a27062-ebb2-4ed3-a1d1-3025b602e14b"]
}, Closed]],
Cell[CellGroupData[{
Cell[373532, 8312, 229, 4, 37, "Subsubsection",ExpressionUUID->"e037ed65-c2cd-4cc5-8065-ba7af72e972b"],
Cell[373764, 8318, 277, 6, 70, "Text",ExpressionUUID->"da9608bd-9f5a-4fa4-b8a1-f1650dab7c2a"],
Cell[374044, 8326, 325, 7, 70, "Input",ExpressionUUID->"3fe6c7c2-00b5-4d1e-b4f8-750688380984"],
Cell[374372, 8335, 215, 3, 70, "Input",ExpressionUUID->"d05c621c-17a6-4dab-b5a8-744183e72ded"],
Cell[374590, 8340, 227, 5, 70, "Text",ExpressionUUID->"c2e709da-971c-4de4-a9f5-34d1b012c9b1"],
Cell[374820, 8347, 656, 17, 70, "Input",ExpressionUUID->"cfeacfe6-ee62-43ac-999d-2a12cb57a737"],
Cell[375479, 8366, 377, 8, 70, "Input",ExpressionUUID->"ecc0c585-9da4-4f6a-a6fe-b989e06865e6"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[375917, 8381, 317, 5, 64, "Subchapter",ExpressionUUID->"1751ae4d-03af-43ab-814a-5f1f74188c44"],
Cell[CellGroupData[{
Cell[376259, 8390, 175, 3, 54, "Subsection",ExpressionUUID->"d31f39f7-0271-44c7-bb22-4483ca591ade"],
Cell[376437, 8395, 189, 3, 70, "Text",ExpressionUUID->"10ef7ece-7769-4d88-bcb0-24ae840e2ae7"],
Cell[376629, 8400, 1648, 49, 70, "Input",ExpressionUUID->"5bf5b320-1c49-437a-99de-8917ff7c9d0c"],
Cell[378280, 8451, 231, 4, 70, "Text",ExpressionUUID->"924a6c5c-f5e2-49c7-9aec-d99cba543428"],
Cell[378514, 8457, 1790, 56, 70, "Input",ExpressionUUID->"ac329d16-f122-4398-9d78-bd98c3eb7a70"],
Cell[380307, 8515, 225, 6, 70, "Text",ExpressionUUID->"1460edd8-ebc9-4085-89c9-9648c5994b0c"],
Cell[380535, 8523, 928, 24, 70, "Input",ExpressionUUID->"8ef48365-f337-4591-929a-e3834a62a6b4"],
Cell[381466, 8549, 152, 3, 70, "Text",ExpressionUUID->"a46f428a-dc95-4a9c-94ee-db51bba31c07"],
Cell[381621, 8554, 638, 15, 70, "Input",ExpressionUUID->"4c01170b-1dc6-4a6f-94bb-326f8fac8dcb"],
Cell[382262, 8571, 283, 4, 70, "Text",ExpressionUUID->"26edf3b3-8ad9-461c-86ea-f42fcabaaf29"],
Cell[382548, 8577, 618, 15, 70, "Input",ExpressionUUID->"dc246c71-2d8c-4755-93db-3ddef0094fa6"],
Cell[383169, 8594, 325, 6, 70, "Text",ExpressionUUID->"2870d320-5902-4ad9-9183-18b8640c365a"],
Cell[383497, 8602, 1369, 32, 70, "Input",ExpressionUUID->"bc673003-00c7-4136-ab12-9df2d7f84eeb"]
}, Closed]],
Cell[CellGroupData[{
Cell[384903, 8639, 235, 4, 38, "Subsection",ExpressionUUID->"09dc6daf-59ee-4840-bd77-0dfd2bff5562"],
Cell[385141, 8645, 920, 21, 70, "Input",ExpressionUUID->"936e9f89-0d66-473b-9277-3d000d5d55d5"],
Cell[386064, 8668, 223, 5, 70, "Text",ExpressionUUID->"8fa6be86-0e1e-4c2d-92fd-815afc33504c"],
Cell[386290, 8675, 631, 15, 70, "Input",ExpressionUUID->"16a20155-a9d0-46dd-9004-3126334dafa9"],
Cell[386924, 8692, 631, 15, 70, "Input",ExpressionUUID->"d9be655b-99c1-4a49-92e9-1066227e6a3d"]
}, Closed]],
Cell[CellGroupData[{
Cell[387592, 8712, 166, 3, 38, "Subsection",ExpressionUUID->"f1a32196-e07f-40de-9d22-2a3e291b7dda"],
Cell[387761, 8717, 246, 4, 70, "Text",ExpressionUUID->"ca482818-c0ff-4fd6-a65d-7ccf593d5fbc"],
Cell[388010, 8723, 1831, 49, 70, "Input",ExpressionUUID->"e1644f4b-cc91-419f-a202-938b3f310269"],
Cell[389844, 8774, 294, 4, 70, "Text",ExpressionUUID->"eb75b5be-106f-402c-87c8-a260f27e02a9"],
Cell[390141, 8780, 2010, 52, 70, "Input",ExpressionUUID->"73bedda0-2b21-40b2-b6f2-ac649cc09720"],
Cell[392154, 8834, 1471, 33, 70, "Input",ExpressionUUID->"e72fb9d0-91ec-427c-bffa-63847b71c7e9"],
Cell[393628, 8869, 6699, 148, 70, "Input",ExpressionUUID->"659a2995-7727-4d66-9c45-aaeb505470d5"],
Cell[400330, 9019, 1241, 31, 70, "Input",ExpressionUUID->"7039e879-900b-4789-b0f3-47a256fa0bbf"],
Cell[401574, 9052, 1521, 33, 70, "Input",ExpressionUUID->"e4f0b636-a1bc-40f5-a4ba-1f9a6c814878"],
Cell[403098, 9087, 1294, 32, 70, "Input",ExpressionUUID->"9ea6aef0-d1d8-4b93-aa04-3764b091c42d"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[404441, 9125, 349, 5, 64, "Subchapter",ExpressionUUID->"bc90db84-1b9a-464f-bfcb-7bfcdc17cc16"],
Cell[CellGroupData[{
Cell[404815, 9134, 165, 3, 54, "Subsection",ExpressionUUID->"01c3231d-098c-4ccb-98c5-ca29c556a67d"],
Cell[404983, 9139, 1511, 31, 70, "Input",ExpressionUUID->"3d03fde1-41a5-4faa-a08e-3aa8eeca546a"]
}, Closed]],
Cell[CellGroupData[{
Cell[406531, 9175, 185, 3, 38, "Subsection",ExpressionUUID->"7b2df312-5a60-4afc-9c09-a780d1b79f27"],
Cell[406719, 9180, 192, 3, 35, "Text",ExpressionUUID->"5f0b1bca-e3d5-41ed-9a70-a694208969b4"],
Cell[406914, 9185, 391, 9, 29, "Input",ExpressionUUID->"d2775a6c-75c0-463c-becb-f6bfa512909f"],
Cell[407308, 9196, 190, 3, 35, "Text",ExpressionUUID->"dcc0e6b5-0a89-49d9-90d4-a98753f46dde"],
Cell[407501, 9201, 414, 10, 29, "Input",ExpressionUUID->"9dfec1b0-002d-4e9b-8152-5110df278580"]
}, Closed]],
Cell[CellGroupData[{
Cell[407952, 9216, 193, 3, 38, "Subsection",ExpressionUUID->"d662ecba-578b-4489-8e5f-fa36d3871aa7"],
Cell[408148, 9221, 250, 4, 35, "Text",ExpressionUUID->"3a89b8c7-8566-4bd6-af14-e74989a4dc81"],
Cell[408401, 9227, 602, 15, 50, "Input",ExpressionUUID->"e94f71ad-35d3-45b1-b3f9-da7a4a305fbf"],
Cell[409006, 9244, 221, 5, 35, "Text",ExpressionUUID->"416dd865-07cf-4983-831e-47ee4c74ed0e"],
Cell[409230, 9251, 393, 9, 29, "Input",ExpressionUUID->"d1993912-fbeb-4d5c-9270-ec462e67e431"],
Cell[409626, 9262, 181, 3, 35, "Text",ExpressionUUID->"0e98120e-f12a-4c08-9535-de77cbef1e91"],
Cell[409810, 9267, 1034, 28, 110, "Input",ExpressionUUID->"9b120239-90bf-4ad0-aecf-298d967ccc6f"],
Cell[410847, 9297, 532, 14, 29, "Input",ExpressionUUID->"563e0d28-bc72-4f64-8c7f-3ab5a3ead7ec"],
Cell[411382, 9313, 214, 4, 35, "Text",ExpressionUUID->"29a9ffcf-a4f5-4810-b77b-7ca390550ef8"],
Cell[CellGroupData[{
Cell[411621, 9321, 1375, 27, 110, "Input",ExpressionUUID->"14c90507-55f9-4bf4-9cda-701078118cf0"],
Cell[CellGroupData[{
Cell[413021, 9352, 475, 11, 23, "Print",ExpressionUUID->"50fda0b2-6e40-47c8-b451-dee93fc2e326"],
Cell[413499, 9365, 517, 11, 23, "Print",ExpressionUUID->"43fafa60-a85c-489e-9355-402ca81e6e32"],
Cell[414019, 9378, 584, 14, 23, "Print",ExpressionUUID->"207e8f99-99e1-4e78-b058-6d961dbf207a"]
}, Open  ]]
}, Open  ]],
Cell[414630, 9396, 236, 4, 35, "Text",ExpressionUUID->"8e9aaa2a-5ea2-4fb3-8ba8-9490bfc44b9a"],
Cell[414869, 9402, 256, 6, 29, "Input",ExpressionUUID->"7e65216a-8696-4aec-85f5-9495fc545906"],
Cell[415128, 9410, 234, 4, 35, "Text",ExpressionUUID->"fb00c8d7-543c-4112-9c5f-e61d4d89b341"],
Cell[415365, 9416, 4010, 110, 350, "Input",ExpressionUUID->"c5930088-4b53-4012-b8d5-cb10c07967b8"],
Cell[419378, 9528, 128, 3, 29, "Input",ExpressionUUID->"6f82067b-6501-4af8-bd80-c99ad86e215c"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[419555, 9537, 199, 3, 64, "Subchapter",ExpressionUUID->"3b817272-df1a-4e68-aaea-c22d9c35e327"],
Cell[CellGroupData[{
Cell[419779, 9544, 210, 4, 54, "Subsection",ExpressionUUID->"16e4c173-1b98-4694-a73e-a9458b44e628"],
Cell[CellGroupData[{
Cell[420014, 9552, 178, 3, 45, "Subsubsection",ExpressionUUID->"2d7a5585-863f-40ad-b02f-be363d7913a3"],
Cell[420195, 9557, 214, 5, 35, "Text",ExpressionUUID->"a933a9a3-528b-4c0e-a038-17f710e1fe43"],
Cell[420412, 9564, 948, 26, 70, "Input",ExpressionUUID->"07aa0cbd-4fe8-4a6b-9db7-30e546e930eb"]
}, Closed]],
Cell[CellGroupData[{
Cell[421397, 9595, 170, 3, 37, "Subsubsection",ExpressionUUID->"26074711-b967-4b74-9ac1-52cb8c789745"],
Cell[421570, 9600, 1569, 46, 90, "Input",ExpressionUUID->"1d338fd5-7504-4d71-a854-b193d2d7194f"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[423188, 9652, 229, 4, 54, "Subsection",ExpressionUUID->"2cfca995-51c1-4930-93bd-525f0bdfb9d5"],
Cell[423420, 9658, 3858, 86, 210, "Input",ExpressionUUID->"b250ee77-119c-4a6c-ae60-654c651ae432"]
}, Closed]],
Cell[CellGroupData[{
Cell[427315, 9749, 249, 4, 38, "Subsection",ExpressionUUID->"bdc44691-f744-4c66-a1dd-7438bdd242a3"],
Cell[CellGroupData[{
Cell[427589, 9757, 167, 3, 45, "Subsubsection",ExpressionUUID->"59807f79-d229-49e5-b637-790a17413076"],
Cell[427759, 9762, 4058, 87, 190, "Input",ExpressionUUID->"869625c4-c640-4b6d-963c-5879d140481b"]
}, Closed]],
Cell[CellGroupData[{
Cell[431854, 9854, 259, 4, 37, "Subsubsection",ExpressionUUID->"dab93187-a908-4ba7-ae93-e35b0b7d7535"],
Cell[432116, 9860, 2750, 71, 210, "Input",ExpressionUUID->"7e2a2150-d80c-4034-83d6-d9565cf12a88"]
}, Closed]],
Cell[CellGroupData[{
Cell[434903, 9936, 160, 3, 37, "Subsubsection",ExpressionUUID->"11b0bc08-716e-4837-a55b-d3c98505048d"],
Cell[435066, 9941, 3273, 83, 210, "Input",ExpressionUUID->"d097a75f-b5e4-4687-abe5-6b28aa73ed5f"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[438388, 10030, 176, 3, 54, "Subsection",ExpressionUUID->"6705b400-369d-4acb-94b1-826717b38934"],
Cell[438567, 10035, 7772, 137, 230, "Input",ExpressionUUID->"3edd32fa-7110-4380-a1ac-e91a7e073cb0"],
Cell[446342, 10174, 2885, 66, 110, "Input",ExpressionUUID->"1aef8f21-e40a-49dc-bf08-ddabcbdf3501"],
Cell[449230, 10242, 583, 14, 29, "Input",ExpressionUUID->"04a56dc3-b7cd-4cbf-ac36-5103d5b1f965"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[449862, 10262, 267, 4, 64, "Subchapter",ExpressionUUID->"b6662280-803b-4ab0-8481-332a70f0e978"],
Cell[CellGroupData[{
Cell[450154, 10270, 172, 3, 54, "Subsection",ExpressionUUID->"6a10872d-dcba-422d-a092-ff6bf02d5699"],
Cell[450329, 10275, 546, 13, 28, "Input",ExpressionUUID->"22f5062f-e958-45c9-8d1c-7514a2cedd75"],
Cell[450878, 10290, 346, 8, 28, "Input",ExpressionUUID->"da2e39d9-15b9-45d3-b9f6-8a42e2783620"],
Cell[451227, 10300, 953, 22, 67, "Input",ExpressionUUID->"84325218-4520-4673-b3ba-afbcc56e439e"],
Cell[452183, 10324, 768, 15, 28, "Input",ExpressionUUID->"4f50d823-b631-4620-97d5-9d9b11e937c4"],
Cell[452954, 10341, 483, 11, 28, "Input",ExpressionUUID->"44816932-b5e2-4726-bf22-347533cdb0c9"]
}, Closed]],
Cell[CellGroupData[{
Cell[453474, 10357, 173, 3, 38, "Subsection",ExpressionUUID->"6cd6b54a-4e4f-4aea-a7ef-4153f6ba4485"],
Cell[453650, 10362, 679, 16, 48, "Input",ExpressionUUID->"4ae0be06-8a05-47af-8c0b-17138c61cb58"],
Cell[454332, 10380, 171, 3, 34, "Text",ExpressionUUID->"ee141871-d592-4801-b4c6-06c9322a3a60"],
Cell[454506, 10385, 1083, 18, 28, "Input",ExpressionUUID->"eef5b238-54fe-43d1-bd93-2cc99019cdde"],
Cell[455592, 10405, 238, 4, 34, "Text",ExpressionUUID->"86ae354a-5496-40d5-835c-bbdc239e0f78"],
Cell[455833, 10411, 524, 13, 28, "Input",ExpressionUUID->"c47fd3a1-5f7e-4d66-8267-f71f16f1cd07"]
}, Closed]],
Cell[CellGroupData[{
Cell[456394, 10429, 170, 3, 38, "Subsection",ExpressionUUID->"ea78aaa4-62b6-43d1-8ebd-0d555a671dc5"],
Cell[CellGroupData[{
Cell[456589, 10436, 171, 3, 45, "Subsubsection",ExpressionUUID->"fe1a8b13-333a-4024-9b40-6c8541119d74"],
Cell[456763, 10441, 260, 6, 70, "Text",ExpressionUUID->"f9338d84-3437-449b-8a9e-62f482b4cfcf"],
Cell[457026, 10449, 486, 11, 70, "Input",ExpressionUUID->"33509e0d-e0ac-4c7c-b9c9-867caa05b830"],
Cell[457515, 10462, 158, 3, 70, "Text",ExpressionUUID->"76d3418d-f144-42c4-8284-ff4c2b7979a6"],
Cell[457676, 10467, 259, 4, 70, "Input",ExpressionUUID->"6eb068fe-9f84-4efd-b749-d180d41ea529"],
Cell[457938, 10473, 167, 3, 70, "Text",ExpressionUUID->"0cfab279-b4c7-44c9-9d88-d558f0a95c00"],
Cell[458108, 10478, 253, 4, 70, "Input",ExpressionUUID->"9a749ece-1497-44de-9d20-8276379966d7"]
}, Closed]],
Cell[CellGroupData[{
Cell[458398, 10487, 189, 3, 37, "Subsubsection",ExpressionUUID->"10f96f22-e10c-41bb-8f35-b9a1e773fe6a"],
Cell[458590, 10492, 213, 3, 70, "Text",ExpressionUUID->"9b1bd386-1371-4f5e-8b89-df8892452f7f"],
Cell[458806, 10497, 329, 8, 70, "Input",ExpressionUUID->"68b4bbc1-c884-4771-a4a4-89c7c31471d7"],
Cell[459138, 10507, 270, 5, 70, "Input",ExpressionUUID->"9237ea30-acbb-44b6-ae7b-59a12af15f19"],
Cell[459411, 10514, 341, 7, 70, "Input",ExpressionUUID->"aeacb816-877d-4070-923e-0cb7b292d179"],
Cell[459755, 10523, 199, 3, 70, "Text",ExpressionUUID->"5d1a0efe-d941-4939-ae1e-441bfbb8a97a"],
Cell[459957, 10528, 404, 9, 70, "Input",ExpressionUUID->"50655e5f-6b23-440f-9239-f6decae57cbd"]
}, Closed]],
Cell[CellGroupData[{
Cell[460398, 10542, 170, 3, 37, "Subsubsection",ExpressionUUID->"0428555f-bf06-485e-bd86-110e5b03fd5d"],
Cell[460571, 10547, 219, 5, 70, "Text",ExpressionUUID->"de8c27c7-f11b-40ba-bc10-c57fae6efe95"],
Cell[460793, 10554, 517, 10, 70, "Input",ExpressionUUID->"a8fa823f-5049-4764-952f-4982177a5eb8"],
Cell[461313, 10566, 288, 6, 70, "Input",ExpressionUUID->"2a2cc6eb-c726-4d33-8a51-fd9f5741739f"],
Cell[461604, 10574, 244, 4, 70, "Text",ExpressionUUID->"58fb01eb-5f6b-4f00-a0d7-e39e5bdc8042"],
Cell[461851, 10580, 336, 7, 70, "Input",ExpressionUUID->"e0072549-5fd7-4ee8-bfdd-74509f90111a"],
Cell[462190, 10589, 190, 3, 70, "Text",ExpressionUUID->"1b39c1fa-f998-4e08-a4f1-d548eb3441f4"],
Cell[462383, 10594, 1185, 21, 70, "Input",ExpressionUUID->"ec281848-13c5-468f-8682-1fe31a677497"],
Cell[463571, 10617, 438, 11, 70, "Input",ExpressionUUID->"352e5c6f-0915-4a3d-b3e0-c936c5c3b118"],
Cell[464012, 10630, 565, 14, 70, "Input",ExpressionUUID->"0b24b278-9787-4678-90fa-fb2efe7345ec"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

