(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1216487,      24421]
NotebookOptionsPosition[   1140752,      23136]
NotebookOutlinePosition[   1155645,      23504]
CellTagsIndexPosition[   1153315,      23415]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["QMRITools Demonstration", "Title",
 CellChangeTimes->{{3.7548942958959026`*^9, 3.754894302342204*^9}},
 CellTags->"c:1",ExpressionUUID->"934d8265-4fcc-4427-9f34-640074773381"],

Cell["\<\
In this demo notebook some functionality of the QMRI toolbox is demonstrated.
Not all functionality is covered, some functions are very specialized for \
experiments only run in our lab. 
Furthermore some functionality is still under development and therefore will \
also be excluded from the demos.
If you need any extra information about one of the function please feel free \
to contact me at m.froeling@gmail.com\
\>", "Text",
 CellChangeTimes->{{3.7548942642000513`*^9, 3.7548942928369303`*^9}, {
  3.7548943313614855`*^9, 3.7548943407731633`*^9}, {3.75843311938348*^9, 
  3.7584332200049214`*^9}, {3.8380934605959826`*^9, 
  3.838093484743886*^9}},ExpressionUUID->"22b0e3d8-9903-4283-b556-\
9ad31d8e7f65"],

Cell[CellGroupData[{

Cell["Initialization", "Chapter",
 CellChangeTimes->{{3.7548943063775883`*^9, 3.754894325780166*^9}, {
   3.757848451841284*^9, 3.757848453039485*^9}, 3.7983499996870766`*^9, {
   3.8380961207242875`*^9, 
   3.8380961249989786`*^9}},ExpressionUUID->"4d401d3b-2658-4bc0-bbef-\
6cc2152ecc5c"],

Cell[CellGroupData[{

Cell["Loading the toolbox definitions", "Subsection",
 CellChangeTimes->{{3.7548980189899817`*^9, 3.7548980262380056`*^9}, {
  3.838093292882322*^9, 3.838093299909398*^9}},
 CellTags->"c:2",ExpressionUUID->"d9089451-56b6-4385-8261-4b613f418e39"],

Cell["\<\
Load the toolbox and specify the directory of the demo data folder. It \
assumes the demo data folder is in the same folder as the demo.nb\
\>", "Text",
 CellChangeTimes->{{3.7548943517375546`*^9, 3.754894370341078*^9}, {
  3.758433278150164*^9, 
  3.7584333047881756`*^9}},ExpressionUUID->"a102f725-94d2-43a9-822e-\
d1dd3b7c0c23"],

Cell[BoxData[{
 RowBox[{"<<", "QMRIToolsDev`"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<DemoData\>\""}], 
     "}"}], "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6907975416819487`*^9, 3.6907975437981606`*^9}, 
   3.7066051241018443`*^9, {3.7548942442159195`*^9, 3.754894244741446*^9}, {
   3.7578490603381467`*^9, 3.7578490607001114`*^9}, {3.8673868759011*^9, 
   3.8673868780919075`*^9}, 3.8722309910071054`*^9, {3.872231273744875*^9, 
   3.872231274288929*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"cae7997b-5732-4630-8297-a72d2ca96db1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PacletFind", "[", "\"\<QMRITools\>\"", "]"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"11531ecd-a5a4-442f-a5d1-0084ab6853c1"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["PacletObject",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1: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
vVNU4BwpQTiiSHJhT5JHOVPcyCLxoqbHH6G5GoivMCR1vRmSqo1IbDFHNKnf
GZnqMPW+QLhxFU6RUrANkaRiSWi8BHoGBwV+eG3/TecNz6a061meLh+7syJr
V+5H6RNuzC4L7snnxNzKaz5PZkV4I+APT2dO0OefryjPJiamYOlggOJGJcz+
oRTdS/FIrzGj8qf53xWhazYKJQ+cUNTmQPIoPVh63MAugvFX5cOLZMfH/wE7
9d1oS7yBEhJDivxPoDvrNuGFErrz5NESd4V6b70u4gza4q+gmnECSUEH0Vuq
ii9a9EjOfQEHP311bq6Uwwe2QOqmKZR057B3hxkqS5tE7Me1FffMYmJicPr0
abHv9f7722C6/yPEbzmAx5fO4u7eT6H51o+w7/0tr8WWL5Ot2z/Gbf3bsAk6
jJgSfRI33BFTaYR0wo+SFhsE5aiTfEub5MymCMxSRkW3L7KarKFjcwkf7Xjn
pftzbMOxER3Ps3wfLsDfnAC7cyJ2Fvod7tpZwdq5uVX45fFjbdzzZeYl868q
k5NTJIYHoaDWAFmtPhj6OgGNfX4oIbnqGIkfnM8Y1vd4Q9P8FHbsfe+NnN2h
Hf8JG+VPCT+O4PtBH3xJavLm2MsYJDnBF+3WGCK5b0v0GZQFHkaayzXCl+sI
tT302u5/TiIOlpaJpB6jx1ihcM79dd3L8p0fomEP4cq//79/E16sJQeOfQIZ
rf2kbtdBDakrUypNSJ2iT9Uk4QVaYJL8KzRXE3r2Vza8N8dW/NzllTA4RxOa
7+bHHXoexJun+ME5K+q8+PvMrMWJmRV8mRHRF1nDu175+p719aKRxOZykofW
9vihsceN4gcn5+TkUhx+eIerv9Qur/rzoj08DA/id9+l4bsuR4yVa+ILUpuz
Sb3x9QN7FJC6JMtlG5pZt9EYcRH7Pv3ha8PL1g9OwsmrEpNTM5iaGCN12ZSI
rTcTN1bKoR/+AB27f4o9//76Xv9meKJje5nU3gZIJnEjJEeNetZVSPIFTr2x
fe/7G96TY6vX4bdf4P8JN2aWZygdgveZGQr3In1eS+F/ZoaH/RmKT/x13D6X
LxwdamyWpzcr3Ce9pA76VndQ/EiH1OAhaBxKxL0Bb+rZVUadKcmnrm+KDxvl
ypVL+5AdqozhUhI7WszxXYc5atO04OkgiVrmYdyPO4XqsH2v5bXQ9wj0KKBs
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
vrhI9g+7qEwMj3Xz+OMpvhtn5EVwISq73nwD7mS/KFGSQ4LcZlQpyqNOfgvi
Tx2Hk2sgzDNiydlKF1rXDST2d3JyMjw8PJCRkUHP8WWOnyuUXZbDxxkO53MK
G28sb7NcNMbqjwl8z+F1/pqMc9ZlnF0P+hk0PkbHRjG6Ys1GV+ZHxwTpqIg+
KXNtjHLq2fKoaF9OfnRU+NmSrtflKxdgaGQIJycn+jNf1PtneXl5KCoqIuvo
DktbCyRFhKMiPQ8m+kbYqrRdYlw+DZs6EUHQCZ5FXdOAsO9EhPXTs+LqRcbi
tmUTGgmXVyjLoX6rFLmXHIbumTBcsPSFpro6VM+pS+zvpKQkBAYGoqWl5Zln
hLX+PRUjz+DyVWNY1P/jK2NUWGjMLI+OjlKC55ax59Mbey4bYxKv16UrV6Fv
oA9bWzukp6cjMjISJ0+ehJqaGi5euoLDhw5CR/sazp9f/f/kSvInzo6Tdxr6
e4YEcx3jzU10viEhq8fVyxoLhZHqbdLIWLcLcYduwdXDGurXb+Pm5dvQUDd7
of3D388PHp6eL238T5tLSEgI35/cmKLzDM8K6sb4OmNc/4vGJIMlMTFLsDHC
w8cI0zYyws+PMELn+fUjgvoR0bgeEa4XTRmdFSmxPTIieBYlkq7XnduqMDIy
QkhwCKKjo7F//36oqqrCydkJrq6ucHN1w10t8Z9VfRl/ojaDgwOF5rUSGyG/
2Fg8N21CL7mv+6tp4G5uPEKcdXDnvC40VfUk9je1N/v6+mLfvn0vffyrzYOP
kVcvyyOU0PHJxP0Ii4URfsrmBSLQE/QVYGOEjX2ujVFWh2N7VNBftF3S9dLS
1iEYcCX3xkiyR5ynzyxeXl6Ij48n561wBBGu3rZ12ytbS/HrGcznGB63ML4i
6aFDh37RsYTuegse52/imr0zwsIJV1y4Cw01HYn9Td3Pqb35Vc5B3DwojLA+
5HEsh3+5XL+Cp0eYtRDmYyEOE+wDFDaWR0Tjf5iRFbjgyfAzyry60TX3FyeS
rpeTnT1CQsNxh6zZwQMHYWhoSPsyJycHMTEx9N7yqtdS3HoGBwevmCNV9/cY
i/EJGdgcvw5b9zDcuK4OG2NXif1taWEBRSWlX3weFK+siBvuWYTlef5Zh8vt
nPMKWx4V5mxGf3lkeHh5eHgYK2SEzY9w8sO82CYphR+2bkRIn5Pn67J1I7Tw
8CfQZzFJ6zAi6XqlhrjDP8ALFy5ehra2NpwcnZCckoLi4mIYGxu/knPMWsYl
hJHhldj4pceiduE4LHStYaTrghi/SIn9Td3tfqk5iD6b9ecwE48jI8Mcjh8W
cDwTfwJ+HqZ1WZ5mY5KNUQ7mKGww+Bji4GOIUx5aiZ2nyvPqixdJ1yshJgiO
NobQuHMD1lZW8PT2oc/I1OtYO3fulGgtRWNL0r4U57Hzk/Rc9bLGIisrBycT
c5hoWyE7PVlif28id5rnHYu4OUjSl/WnMAeLysgzYo3Fldh+BBtDy9T3E6i4
HhoaZoTkic4QFetDPKHrh3ntw8M8HX4bB1M8W8OCOrqdwczQsEBnSHg8tP6Q
wIak6+Xj7gw9cv+2MNFHpL8XoqJjUFhYTN9JXtY6vogdivOCg4J+FWO5fPkG
7C2skJVbIrG/X0a/F5kDGztDIrE0JIqDoadhZFWhsEHjY3URYIFbZvODbPwz
Kd0+yMsPPtXukAj+hOsl9XuYtzPUDQxh4eCI2LAglOVlo7Sk7LlfX1nLWkpi
i+K85907XtVYpMkeEuTphtKKmv/f4oPH2xz+Zcv8eibGhHiY0zbM5fgV56Dl
wUGCj8FBDBIZGhrkxSddHhLkqXq6zEupNjr2hVKeDbbfIKM3NMjYZG0z+lSZ
34ep55VfbP9Izkok2LCGtb09AkJDUFmRj8aG6hdaA2VFFdxTN4anWzRUL56H
8ob1L43/n7cvha2gwCDah9RnnyQ5p3H1XV0ckJ+b+6vBhzg7q+kdOniIx92D
bEyJxJkI567K04OrthF8DC4LYnsQLFZYvAwOPl2EdJj4FrLFxcEgt31IpG5I
yK6kfs+rrICZjTnMbawQGBWF/OIC+Hh5SGxv5/Y9iAlKRLhfEoI9k+BoawNj
K1vIyiv84jF18OBBvl9ZDqN8e4jUS2rzxMlTiI2N+UXm8rS+kgiPJxj+Hhri
cy3rFz6vDwowI4hNtp7tOyTYI/h8T/AxMLhM9xlgYnNgYCUOBth2MW1iZIAR
XnlAYHutMiA5Pto6O2Hq5ABDW2sEhkcgjdzN977A2cre1AYZUQnITChFmE8q
bK0cYWplgSPHn+91m5eBD+pzHOL8RdVLapO6X4t+LuRVzWWtdp4lFE+wvhh6
nrji8PYa+9H4GKAxwYtjOs/IgKjwY52nPzDA4IDtNzjI1+PrD4q0MSKoH2Bs
MCljV9L1erQ0i4SMFNw10IUXOX9ExcdLvnfs2IHclHxkZRUgP6cKkT7pcLB2
h6WVGQwMDLBZSuqF4up59Om9g10nLk8xa3DwBfYQNze3vws+1mpXHC5EffBM
Dl4zRwvZpbCxPNi/Egv9jPDLrE4/le8Xahvg6PL0Bkl5cEUbr3+/AD986WdE
8AxJ1+vh0jxyyqtwWU0Vjt6eiEmQHB825A6TmVmApOhcJMbkIDIwDkHeAbCy
soaxiTFOnzz9i+GDiguBvzhcw/jyRfaQ533/m6srJyf3UjEi7hmiIuyLATHx
9CIi5Nvl/oF+SnhxT1I69un476djnVdm45zXNsDV6+fUsfjoF7YzwOCpn7HB
0+XVs3jj93lBfExMjGLpw8e4onYHeuZmiEuU/L2vurpaJKZnIzwoGrGhkXD3
9IG3tw9sbWxgYWGBe9r3fjF8cNdhgJvn+FxS26dOnZK479lzF14JPlZ7nhBG
+hm+FuV0rm/YstAe0C+ScrhbWGeZ+H1ZNNZfiQwMPJe+pOvVXF2Gzz77AF4h
4bippQlXb8nv5uXlpfAPCICPryeiIwPh7OwMOwcn2NnZkj3ECjr3tH5hfAhz
ikAGXshnBw4ckLivuYUVtm/f/soxIvpcGiNkbfgczPItG2cDwn7i1/cL8CLq
zwEO9/M4vX+5j4uPPtbffegjIqjrE6Skrq+PKlM6/bTw2vsgZKePbRPJi0gf
R59v/wXWOjMjAQMTI6iuLoWGlhr9uV1JbeUV5sPH24ucz93h5+cDFxdnGiP2
dvY0PvR0JP/enWT46BPjQ0Hd3+N8pW9giIuXV35X4FX9cZ9B3UfYeOnjnkFE
YnnFWWctHM2Lx2US65RgLULH+Rp1X0QorEm6XuExocgoKEZhaRnMnWyha6Qv
sa2EpAx4e3rC08MTbu4eND7c3d3p75NaWFrASF/yz70+rz7PNyv9z10TSW1T
3/+TGB96BrCyt4OGvvaK+f0S560Adg/h+IHH3Qx/8+v7eXUsrzN1/Ww9bYPj
W1q3n4ePXirfy2/rJfneXo4ule/tXRnLnLpekfbeVeO/l2NzpT6bSrpeTl7e
CIqJQXBkLPyCA3GV3EMkxkd8KgKJDU8vTxob1Os8lNhQ9w9zcxjo6v7C+BD1
P2cdeiX3GYV5SfsamZghJjoMaWmx0DZa+fnPV4ET0T3kFXL1MsHBMhXbwsKL
dxonVDyLtLN46WVjnNXnt7NtvTQeejkpbbuPTfs4+r2CZ5JU0vVyI7EcHBkC
37BgxCYnwdFD8tcuLcytERMTDTdXJ/r7ulQcUecrK0tLmJqZ4dz5878YPgL8
A/jrwfqN5TAqDQjwl9i2g4O9xH3tHB2RlRmPwvwcJObm4K6eLhSUlVfFycvC
ihB39ArHNS+OmBgV5Wwm/tg+veK4XLAfUNhg8NGDlTgRIz1sKtDv4daLtbXS
ds8znifpenm6O8M/PAxBkeEIiIlEaLzk7w3v3L0bkbGxcHK0JzHkQPYQVxon
5uYW8Pf1wS7S/kvhg7pDC/OPMI8dOPgid2wLifveuHkDW1VUnoqHZ4kkf9z+
rE96uD4R4dsVPmN4XsDXvcw+zO1H8NHTs9xDYr2HxDcvFeR72XIvIz3cVKDf
y62n+/YK+vbwsCOw3cNgQ1S3l2+HSiXmwqAghBFcxBEJiAlDVGo8FBXlJbZn
rGtAsOEKa2tLODo6EXGEiakZ/b2gF8GGJP38/Px4fuoVXiM/P8n3Dur9C30D
45cyl5cla/kTxocw1/b0CDi4h+Vyhs95PmOx1CuIY8YGn7d58bjczcfHr0sk
3j/CwxGTHIuoxDgEJ8QjNiMNGjoaEtvbvUMFzm4+0NPXg62tDbl7WMPP3/+l
fR74efpRewjXRywHvcjrs7du34a9veSv8a11Xi8bI1xdlmeF+X01vu8V1HE5
v7d3hW9pfHRT+Ojm1Xf3gJTBK3ejm6/Pa+/uJmk309YtsNXN9qX7cPqytuh+
Ah2+LSG7TH9GT1Jf2bo6w8XHDfbe5C7t7QzvYH84ez/f/7cQtamybSt934iL
iyWxZP/c8Shq70X6Us+m9pFuet/we+GxOLu4IdzX64Xx8bx9qLGLG79k+HgW
33aLKYvWiRWCj+5lXlwKhB/L3Uz8MnEraO/mY4Hfj6/Hre/h6/Z0Cz+jm8Hi
Sju8VFJfqWqp47q6OtTV70BNSw3XKblxGes3bnzpHCnpHvAifP+yx0Ktb2pU
yAuPZy1/r2oeAn4WiW8+H7Px2SPM3Xz+7uHweQ+f+7sZfHR1kT5dbIx2oYuk
XSQV5Nkyq9clSLu5KU+6unj9ROtX2Ofb6GL6CexL6itTckdwcrSEs7sLDGyd
oEmwcfroPijv3PNK1vN57dC86ev3qxgL9bs8jY2NiA6V/PXdX8M8hLi3SzTe
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
NJCTEUiDIpWB/n43fRxwixXp3Nwx84SxRz33pO0e9d7NrPxwxLpHu9u9e9jg
vXzuNnZDBpqgF8gM3Ul4djLPpzSxoqCb/akKyquWoR3bR3OPH9XabeTnHuG5
efPZvW0TZQVZ9LSruHV5lH/+8R1+/t4t3rgyxolTA9Rr25gY1HF2ogNza4Wo
P8poqCqholjwQ54u9owCCvLSKRR7h6X+kAlNtdQl3nu2Euy3hY+uJmJuWcVL
V5R8NhDJaEMQmtZG6xrazDGvadf3wmbQw71B11iD0/wG3cYedMaQ2/PtHO0Q
+WlhbQ7xBYcZr57HFeMuRsZ86FZE0ZK2ktDDm8mMjyJHxHBOguBJ8hEyctKs
v2+ZmxmHqjSHamU25nYlY4NGXn/9Fl9+9i7/8atPeffNm3QZtbQLXZFlJYr8
U299xzZzGUOX88irXUl5224qzD6kqJ8luqSEnQUv4y32jjJNGsX7lnE+ZR7Z
8iL6HXwe8KAJ0zGVaIgUQ4dWD0rHcOLp0iCnVjn8JLru1Hxbfxs/JM/pd573
u479kvfod/j147mfZ7vX/em+dfXlFMp3oimYz2DAPBbFVrOy6ji7AlooKlqN
ZmIXlQL77MrFvPMrGZqGXJ75p/kkxoZQ21TJDVFL/uKjV3j/9kVuXTvD2RGD
9eez+kd7GO8We0dtMd3tlSK/KqE0P5OSvFQUuWmiJs2ksDiFvKwI62eeRdmh
7PHxISFVxg+vp/Da0b38+pKKk0Z/0hPm020ouq+53g8OD8Nq5a3ojekY6w5y
ZdSfE1270aif5NLNJka04RzwXyIwixW1RzL5CaFiHxH8SEtCliDq9IwYUX9k
UlOeh15bxvBwNzdeuc6Xv/yQf/3F+7z56jm0rVrxjHxyCzOdz2ztzqFp0If8
Oi+KGreSkbuJNLkXmV0VHNJOsMSnXORc6dw2hvJS9iJ0bWV31dN76qyb3V2X
7tMmRbxPOuK9X8S+5e+9WDjQ7+RGv5MrVh8HX/r7rT79ds7Y+GL367eZ7dzW
7hxfMo47F/vdxumpzCYnM4DdOTH01S8jurqdrXU32LfbgEzwo9y0ioq2nRSp
V9N2LJjf/3qMlPWL8dm5lfJqOWM9Wt64fIyP37zCnZfPcay3jdHeZjp69Wjq
S2mtyKWrvUrkWEoUeXEU5aQjVxSIGiZD5NDpQjtF7ZFh+Z5ABMH7vfnVp+V8
8moEv3i7UOxHEZSm/h15fk8x2F3hiv3+ARd2Th1x3XPNWTL3aX6Otv5p40j5
5VybARfG0/XK8cykfSrOVC7k49MHKMjaxcnT6RhaNnK+fD5DqmL8vX1JiNtL
YW4qxbnxZIrcqlRYUWo4BWL+dYpM1MoCtLVy8S56rl69wueff84vfvEJt65O
0CVyq3xZCo0N1dZndjXU0HU0EoXIQ2s6AqgVe0er+TDxNYc4kJrL5vBG1vjm
U58ew5+u+Ir8bQe9NUn31o5+dwwGPMz3bn1mYNjvjtOAZExJXE4KbCet+Pbb
uNDvZgP09Tti+z5soM/tus/OO6nNfJbLTF0GFGVVZEdtJ1utoP7dq4Q0tLGv
+gbxiaIWrF6ComWdqO/80YwHUd22gSF9LsFBXgSsX05tYYaoJ5u4dKyPj+5c
4a1bp0UNWMd4n5aRASOV5SW0qGV0t5WjqZMLfsRTXppHlTJf7AlxlMozyUwN
Jjs9jPT0ZA7uX8fV4U0Mta3is/eKONXnTZ7PXzMau5zO2hL7HO064MRgjvOd
Bdu74TPDd2DAo39PTy/7IrK4pXyOqyNBIpd8AWNzAEUyL47pl/Hb23nUyELw
D/SlXin2jNwU0jMSKJdnkCs4kiNqdMueWiPyou6WMsa6dbz5yhV+JfKrn378
BufPDKNvrSK3RGbDwKSntSiK+OoUsioW0dIfTO/JSEpblpHRnkh8cQvPBetZ
uknBq8oYLil24rM+EHXoGobM7bPOeXr7XPwGPFy7zgfc1sqxD/TbdV/iO9nX
J/jRZ1nfPsQ5/XazXNt8+qzW12c3y7XVp88ZF1a/Podfv3s/q9nHdePM9Pm5
OFVdGEJUUQo9cQu5Y4qi++g4qyJy8W24QcQRNaWVS1F3bKW9N4i+i6GU1i4h
/XAlhSoZBza9QEF8GENdzbx8cYxbZ0ZELTJh/VndfsGZsX4Dbc3VtDSV0Kup
oqE8l4qCZAyinlSJXCItIZ7cDMv3kw+Tmx6Fv/9eUqOf5+LgDrTlSzk2uAlN
0bP4BAXTXHyE2435mAwat/fvt2Plea4OXOyY9bl8+pz+fR76SLGbdt+yXn3S
tbBddxs1JNapaQudx/mjPhwf2MNAzmoGK9YyMryX//pSiTzgRXbt2Y1alU2W
2EMKRE5Vq8gV9UQkBekRgh+pNIn92NSm4txYB+/dOMnkx7f4ROjOUVHLNVeX
IJfnWt+xXdtBub6cXPlm9EfD6TubSHH9OjLUuyk3p6MYb2Z37RiVsiyOttZS
lh2MPmQJVUWx9PV0e+Z/n4e2r2hSrO9hgh99k/32uO+zx7gNXzsXnNywr4GE
I1Z/57X7GA4+9fc5eDedY32u+JC0W967sTiQ5kN/x0sxj3OqP4+36n3YmyZn
S90bHNhWTr78RapNG2npDqDzeAiKVlGvm1v5+KXTpB5YR3z0YUxi3U53azg7
bLTWIqdF/TFi+Ryxo17kFwqRN6swNZVZ84cysX90ifUvUciITBK1R0IURXlR
Iu8IZ/+uVYyZNnP7XCjtlUvozH2EHYcOs1NWw0nVi1yv9cbQpnTFp9tc7esh
xa/fHTMnPhLOuPB1aZX7mjr44eKak4+OPuK6u6+F04LPFQGP8MZoANdGgxmu
XkN5shca5QvwH00Mlh7E28dL5JUyZKKGKM+IRC3ySws3SnNiaRJ5qF5oiaFO
wfVT3bxz6xyffPAu166eY8CsEbVMLrXV5dZn1ypKmTgbQlW3qBuHwmnsDURe
v0asTzgyrahxRvrZXnGRWpOZ105Vc/30QU5lLqY9fpv154od+uqcm0Rr3fSm
T6IxDnyn68U0PZFqTF/fTH644l2yBnZ+9EljV2q90uteD21zMI/+vR59e+3W
oY1H5vMMo2GP0inW6mxbNb7NfWwoukpwaASNxmW09ASibNrE4JlEbnxUwOuf
NfPFlYsiN4glJDiIXrWKowMdXDk7xKWjXQybm8Qe3shAdzudBrWozwvRtSip
VQl+iLyiVl1GaVEuqUmxIreKQp4bQ1jIIWTZaxjrWotJvZbGsudpjn6KMO/t
DGtDeadzp9DOzXSLfNDx/lbseyXzvl+85mT99ue51tWpTXafdvM4uv5xWpO+
T0n0fF6eCBKxHUFd1RKRe27i1DF/fn6rhHdPm/EO9hf7RbzQiXQKU6IoyY+j
WPCkODuJttoievSVDBhrOXt0jNu37/DenTe5cqJX4NlAa60MTXMjjXUakuOi
qOzdRppyOcq2XZiORaAdO0Bmro+4TqVkuJ3ViWUoSiKpO2ni1EAxlzOep93v
O+gMbRJNlWjxNJ2VXvdL5u3Kf6R+/c7x+qXjTcuJpOP0u+M42dfbO9nb24vF
LGtpO7esa6/Vep1HV/w62nv7JP36+py+lvi33etz93GM2zfzOVbO2M/LKlXk
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
986eN3xduDq48cD97THurmGWNis3hHU5uTG7df234IfFnlrwrfvu87DW46uu
pSds/7u9p9RSYu/v744einT/2/jfxHwelBsWs9a+Pd0uzbJypcfGGQs3umz8
sPyeXleXjQdddr50dYmjaLPdm50f0uu7xeZc8LpfLs32Hp6u7zbm/bbPdu9e
751g50iXXXMeFj/uhcNcsb6f58ylzzeF693e8V7PnH1P6JkUcW/hiI0HXV1O
LjiPXTbeWOxB1uNB/Gb7uh8+eXre3ca73/a5vvP0fha9supOt017vg5+3O35
XyfWXwc/HuY7zta3y74HOHhhWx/b/mHhh4sHd7dvih9z0YK/JH5M79tt3Ze7
7Pvz3XF92Px40He+X/8/B64P2s+aN83YG6ycmezsFCbaxJEuhz0AP6Rtnvzm
0m963wfB8n517GGu41zvdUow7rwLrvf6+qo4zHWMufb5c+P6oGPeZU+Y7Ors
nLT8Dciurk7rWnVajp2ebO78cLTNxWcuNtd5P+gYD2Md72fMri4XpgL/h86P
B+HG3XwedJ7fJK73O39pu2MtLLFv44FjbSz7h40fc7Fvkh+zff1/gR9zxfVe
X1+FH/eD1YO+018WPySa5dojJs0WfpjFucU6zbjObWa2mtl67+vmx1y+5jrn
tFLlXwg/7o3rXGwu/Wbz2bH0+/8/PzzbpNlsnrTFv40Hlp/7NJsdnOh0Xs9l
/5C2Tz+/H7zuZ+6z3Wu/JJuT35+FH3YNcmjPn5sf9/J70Hf6i+GHeRovzGaH
dtn4YeGAkxtm632zB/uqcf6gc3sQLPXGufH5z8KPzvvH9WHzYy7v7PB50Hf6
i+FH57SYd63PpLnDzg9zB45jhzh2dIjzDjPSe39J/Dh2PmHOY3zT/Oh4AN1x
rc/99Vv82N/M6ne3uT4sHL5JXOc65vT7nvYCBz86LNbh4oDj3PK3580OjnR8
c/y413hzxarnrP9Xfq+vlx8WHbLhPNc+1n5O3ZpbP0XownviMNvX/fb7OmL5
Qce8n3d17QO2WO9waZHgRofFmIt9U3oy13ndbbyGAb//tvxwccM8d37YfW26
ZbO59BtvkfP0o9956LH+IH2+blwfNI7MjrWQrovZivGkycoPEx2mDkxW/E0u
Tphc7aavmR/3iuHZ+s3WXtUXxvcffeSu4/+51vFBdOdB9apZEUWiz5o5x7sn
v6/S55vE9V7rPCdszW4YT4r4Fxyxc8LCBQcfBDcs7Y5zy71nnvlq/8v6m7J5
T3+bMu1Wdu746r+Xdz+xY7Gnnrw7Rk8//YwV4w4Hrh33xtXSp8OuUZZ1sGmW
iafv1e8H/4NzOc9y0ryFhPiFc3r/6ZYcG/UA+P/DQ1/ThxF7s62lI85dvDA5
9olJsUaTVi7MYhY/x3lsbOxDn/fXYXsOzaepeyspKl9eWLzia8F0NguPuHs8
xcbG2fG0a5E4j7sHrhbcbfwwWfd0k/38XusRnbKZH91JZajXB33V86RFLuCx
J/96TvOY/9TjRAb4MmzWkJOdM6c+jwtdikz0xu/wg/3++V0xiLv7XB90T7GY
qUMa5277g50fxln54TCjhCNPP+3OZcu1pf1h3nPYo/Pm8Td//4xb2/ef+Da+
QfN54um/c2uf99S3OBi5iKyKdTR3ChttYF9SFd57d/PkMzP/N/0T835AfEQQ
C6Zp02xfUp+//Z/unws9/eQ/kRzwLcqUsrvOdTZ8bX2emVufDrvNsh7feewH
7PJaxxnTHiZ0O2guXc2Vq9EMmbxRBzyC+sAaVj32jx7xnvfoo4Tv96VTV4tZ
XcqgQW393xBFpWW88OKLHvv8YN7fEhD+IrKGDcgb9tA1qiQkbjXfn+fOxQWL
FuGbX8xffevx2ePgmZm4xdkxuFuc3M/X9PEdNYUTWxfWVn5YY98oOGK08cBo
tN+3ttm4Y3QcBZcsZvU1Ss4t7UaT08fJKUebvb+jn+1of5bzGSbMRh0ddckc
LvHmau0mSlorCayvYvXSOkIKOqnQ7EDVuhxl41aK6jZRa/Qht2IV9eZ9tPUf
EuuziUL1RgrrXkSjTyOlZJzknGLGRkd4483XGD591vp5t6GlnOaSHHq19QwP
zp7Le8L0se/+LTERR4gO8MZoWIQ+dQmD8p10VzxBfnaUbc5Gd21xw8TkmrML
L6P9ntHe3yjxtbU7cDO54epYLyO5cTHo6hZwTsRoVmIoaYdWUxO3jTe7A7lw
Jgtt5VpOHHwRtMV8mLqb21GruaMK49DubUSHHKa0uARNvZzGklx0LY2YaxU0
1Ddy/uW3ePuDD3jtzdt0jI3hvSeUg2E+aI/up67bD3nTVnJrV5Ffu4G8mo2U
te+lpTfa+n+jTr2q5P/mdd58txP1+RsU6bvYtK+eCHkSHeUb0bU3YzAakGq0
0eQWo5I2owRP0wyuPAg/XPpjlLyD8zgpMJ90xLkTf6Pt3BX/Rmebyc4Doz3m
jZJ7RqNJEvfGaWZyG9ONIyZ3/9GyZJLz4omP2UtweBLLlVqWhtWyzLtKrMVe
Go2bKar1Qm3cS7V2J7LajWRVbqC8bSeq5q2U1G9C2b6a1PQd7NsYRFZmLmdf
Ossb77zGiYvnrL87aapSoVMX09/TxtCQcc57scWCg5+kNGs9dSVxTCjmU5S8
kOaygxiTn6BEHe+KdwkWLv2ZiZkLRwkWEn1y0yEJTiYn5jZ/VUkk5dVbKc6L
ICz9MEmZfiiqsxg/m89nF4MxZy3npfJdfKoI5G3Bm/MiDxor2EpG8D6Rv0RT
oyhG01BJhaoIk74JU30pKlUlN954nc8mv+TNH/8Mw+AA6728ORzsh+nEYcr0
m8Sa7KRGF0Z+tRfpZUtRajbTcSIS7UgYZ1+uYPSlFEZvabjy8R9p1bzD0qAB
Eg8eoDd1Le269mnzmq6ZkpiVxJ/l3FN+OVdeOPYOR7xL18ah60bL3uHghycz
zdL+Vc1097Er6/rJjs6gJHoR2xLzWCQ3svJQNT57sqgbCqFe502aajF1HX4Y
RkJo7NpPTrXgSNkKK18qNbvE/rGWap0fpaU+FETHM370Mq+88wkXL10Uc++k
o02NsVFBf1czI33tzr8ddy9LDHyG/rxVqIof4+T4ZnpLQ0nyXkH4IX/qLTpa
mDYt/j2bp/v36uPkmwQ/aR9VWjiluRsoUsRRr9zGxbznOD+WR2tfKNcan2M0
dAEv7VvBtcjVvBqzkbfCN3BFtZuk6ADyLb9rXlVMVU0TJUoFA6YquhqV1JeX
cu72HT779W/58Ge/FPu1idUL1xPhtZP6Hn8KW1ZSIPbrqvYwMivXkF21Gt1Y
KE19B1B37EPdu4vTr8XTXtnL6NiXxLd34h/fgGL1JhqzfDFpW93m4NKDaXrq
1GV3vf4qNbGlr1teJHm2fb+W8MNg3ecsR6PBKM6l62Jvt18bjI77030NrnaJ
v9UM09faft9g72Nw+esN4v2StlIX9SKr5JUsyWhidUwN67Y2UNq2l6q2JWJN
NlHWso1qoz9lYt+QiVzLmm/p91DauAV5qxfNxoM0NkWTkhKJvuMYt975lLM3
XqFzyPK/iBvoqC+jr7uesb42osIO3hPPopznyAxcTm5EJGcvpjPet4dBYzyt
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
3g/14laWDx37nyI/eAdlWl965E9Tl/gsN8ZW0iviIyAmh8q87ehbMr/yvD1r
1exW1VjPvgP7GU57nH85FcqPP1Nxqi6Eic7dGEpfwJi9kFHFej4q2sf1yE28
mevHR/HbuRm0kMJ9L5ISE0qzKh+VohRlSQ6leVmUy2W061sZP3OJNz/6lBOX
zhOZlMm6jdv50fs9/ORf+ilq2kOtKYDy1kAmrmdx9YMyGrsPUK7xof9Cstg/
gsUxReTBL1KnqyIyZYT4Q17o5EfQ6zQetfL+bXYNN8zwMczSPivmEn7orG06
t/s657lO6qNzv+d+Lkxnv9bdrY9kTJ3D13Zt+d5Mz2AHalUSTQHPkJZdyPzo
o+zNChX1uYGk3H6Kq3ORVa9C2bxW1BvrrZ/vFtdtsB7LWrdY65KChsUM9Bh4
5fh5QoN2o1K3cEPkCn1DIwwc62NQL/KJ5CTU5dk060ReocwjPz1FaN1+hvZ+
j9/LgvhjRzHHtz7JyMbH6Az2YSBjC221C0U+tYywjCihhYG8d2k/lTl7ORK8
gfamPA842ualmzF3ybnO870Z2E4f095PKeppXVcZo0dj+NPv1Nxq9qa56nm6
EsW7Wr5HdyGEdzsjOZ60js+z/Lm8ZxEXDz1DY/x64uMikKvqKCxUinFykCVl
kJ+pEHmblqHTl3jtzjuMHT2Gz4EIkgP3CX7UcfmTUhp7gtCNRJFb4cWlt0v4
2R/70IyEM3olg7OvFdMm+DH2Ugqnb+UxfOoM4XvK0BX4M1p2aBaMXPHjds8Z
H7oZOLrF2ywY3RvHmWZ/xqROp5u0vo/O0qazv5v9aGlzXtv6ONbDdm7z0zv8
dJK5Ocdz54bOMUfn2I740NnHsI2pNQ1R3VZPU/RCYtZksi3UxHZVIWuT64WO
NZOhTBV7+3JKGtZSrdmJWu+NvN72PRCLFdZ6kS34M3HiMMODMnz3BQlONXP8
7AX6J05jHh2gr1NDTWYyNSK2qmqqKRFHhcgxdvvtwrzzUaiL578MBdxJ9sW4
/tt0hG7leKEfbSXzONGzhe6uQ0Sn7qctbQ3G/OU0KJ6kuT7fOkedY94SPPU6
6TzdMXRi4NQT6RpIMXStlc4eNxbflsJYFGN6OrrTGNWso9vghaZmKZriRehS
n+N23m4u9h7gaq7ItZL8eSVlCx/rfKkUnI5MSKFYUU11eS6qigzk+WnIimTU
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
nuGuSxZu/M4an45109jiVaOxxaxm2npqLPemj6txxbjGsX4aD/cd8TE9Rqbf
l8ZBextJSYlEBe9lfngjT3uryFA0oTkTS3rRs5QK/TaNhaEbOkT38SO09Own
r2qVde8oVK8nu2olZy8EUlteQl6BnnMvXaVV34Wipo7KJh1tnT20tJZTmZdK
Q3kB1ZUywsJ34pcYhqZkL6PbH6FnzQ/o3/Ikx3Y+z5mY+XTE7qY8LQ5l+SYU
OU/T17KGrobVol5aTlOjB35IMXGbu8YNV8c9J4ZS3ZiGi9RqBK+zN/owpgpi
aHAjV04EcXXYjxbFQo4HreR46loujQbwYaovP80/yO+TtqFPPEBNRy55KYHE
iblUifqrSFZISW4cRZU1qPX99A32c+2V69z5+GdUNTQRFbGZ1Lw1pKpWiNxp
PZnl66x7SJjIpworA2nvTxJ51Q5yFf4ciHmO0MSnMEwcJMI0SniinP6iQ/Z1
nqmHHnV1FqzuqR0PSYcs3BDx/6l49h8EH/4gxrQeNZajVvsHW7vjqHFrs/pr
JfesfvZrrWUsx32t7dzRxzG2RuM021iO8e3voHX4av5QWZ3+n97PxHPwUMbU
0uz6qcTWiqk648GpXOWKqbKmPVOdE1FTPSdiptQ6n6niuk1TqtYdU/K6LVOF
1ZumShu9pgbPpkzVtZZOFRRWTo2eOj9VZ9BPKWvrp+q1xqkGbduUWl0yVVWS
O9VQXTKlKM6bOnxk/1Rrjf9UZ33ElNZn4VT36kenhve+OHUzeO3Uazm7plKS
kqca4w9M9eTPmyqVPTU13rFn6saJSIb0S/4frab1f2s1Uuxsc9BqpXjZjjZM
Zs7ZiZkEDwduDuw0znXQ/qG+pviPpkwvXjmey+efFE999n7pVGvTyqmT4wem
rqX6Tp0L3zh1vGD91KsJ26d+35A59X+Zs6Zu1UVOnRlTTSVnhE8lRsdOVdQV
TFVW5E5VFKRPFckKplp0pqnuobGpSzdfmnrl3Y+nSqvrp8J2+E6lZ/lOyZrX
TInaYqqo1mdK8GEqU7F1qklbNCWv3zsVl79kSjN0ZKpKGzilNm+bMtQfnVpz
8MRUeKq/5XcH/uRaY61zrrY52TGxx4HDz4GZMz7sWGgdMaOR+kn93Z/huNZI
Yt2jj9a1NsI+/X8BSrVjhg==
                "], {{0, 200.}, {200., 0}}, {0, 255}, ColorFunction -> 
                RGBColor, ImageResolution -> {72, 72}], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                MetaInformation -> <|
                 "XMP" -> <|
                   "XMPBasicSchema" -> <|
                    "CreatorTool" -> "Adobe Photoshop 21.1 (Windows)", 
                    "CreateDate" -> 
                    DateObject[{2018, 3, 30, 10, 0, 54.}, "Instant", 
                    "Gregorian", 2.], "ModifyDate" -> 
                    DateObject[{2020, 5, 12, 10, 7, 54.}, "Instant", 
                    "Gregorian", 2.], "MetadataDate" -> 
                    DateObject[{2020, 5, 12, 10, 7, 54.}, "Instant", 
                    "Gregorian", 2.]|>, 
                    "DublinCoreSchema" -> <|"Format" -> "image/png"|>, 
                    "PhotoshopSchema" -> <|
                    "ColorMode" -> 3, "ICCProfile" -> "sRGB IEC61966-2.1", 
                    "TextLayers[1]" -> <|
                    "PhotoshopSchema" -> <|"LayerName" -> "Layer 2"|>|>, 
                    "TextLayers[2]" -> <|
                    "PhotoshopSchema" -> <|
                    "LayerName" -> "QMRI Tools  Martijn Froeling", 
                    "LayerText" -> "QMRI Tools  Martijn Froeling"|>|>|>, 
                    "XMPMediaManagementSchema" -> <|
                    "InstanceID" -> 
                    "xmp.iid:73db1039-c23c-8a4b-bc22-0e890bdc5189", 
                    "DocumentID" -> 
                    "adobe:docid:photoshop:1b53660c-ce9f-b540-9f3f-\
0421ddc9c8b5", "OriginalDocumentID" -> 
                    "xmp.did:78517765-d5ae-1049-a795-83be95336798", 
                    "History[1]" -> <|
                    "Event" -> <|
                    "Action" -> "created", "InstanceID" -> 
                    "xmp.iid:78517765-d5ae-1049-a795-83be95336798", "When" -> 
                    DateObject[{2018, 3, 30, 10, 0, 54.}, "Instant", 
                    "Gregorian", 2.], "SoftwareAgent" -> 
                    "Adobe Photoshop 21.1 (Windows)"|>|>, 
                    "History[2]" -> <|
                    "Event" -> <|
                    "Action" -> "converted", "Parameters" -> 
                    "from image/png to application/vnd.adobe.photoshop"|>|>, 
                    "History[3]" -> <|
                    "Event" -> <|
                    "Action" -> "saved", "InstanceID" -> 
                    "xmp.iid:b2cb8151-47fe-d44d-b13e-2e095099bf79", "When" -> 
                    DateObject[{2020, 5, 12, 9, 34, 14.}, "Instant", 
                    "Gregorian", 2.], "SoftwareAgent" -> 
                    "Adobe Photoshop 21.1 (Windows)", "Changed" -> "/"|>|>, 
                    "History[4]" -> <|
                    "Event" -> <|
                    "Action" -> "saved", "InstanceID" -> 
                    "xmp.iid:5b614a8c-a0ec-9343-8276-1c7e613508a5", "When" -> 
                    DateObject[{2020, 5, 12, 10, 7, 54.}, "Instant", 
                    "Gregorian", 2.], "SoftwareAgent" -> 
                    "Adobe Photoshop 21.1 (Windows)", "Changed" -> "/"|>|>, 
                    "History[5]" -> <|
                    "Event" -> <|
                    "Action" -> "converted", "Parameters" -> 
                    "from application/vnd.adobe.photoshop to image/png"|>|>, 
                    "History[6]" -> <|
                    "Event" -> <|
                    "Action" -> "derived", "Parameters" -> 
                    "converted from application/vnd.adobe.photoshop to \
image/png"|>|>, "History[7]" -> <|
                    "Event" -> <|
                    "Action" -> "saved", "InstanceID" -> 
                    "xmp.iid:73db1039-c23c-8a4b-bc22-0e890bdc5189", "When" -> 
                    DateObject[{2020, 5, 12, 10, 7, 54.}, "Instant", 
                    "Gregorian", 2.], "SoftwareAgent" -> 
                    "Adobe Photoshop 21.1 (Windows)", "Changed" -> "/"|>|>, 
                    "DerivedFrom" -> <|
                    "Reference" -> <|
                    "InstanceID" -> 
                    "xmp.iid:5b614a8c-a0ec-9343-8276-1c7e613508a5", 
                    "DocumentID" -> 
                    "xmp.did:78517765-d5ae-1049-a795-83be95336798", 
                    "OriginalDocumentID" -> 
                    "xmp.did:78517765-d5ae-1049-a795-83be95336798"|>|>|>|>|>],
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
              ImageSizeRaw -> {200., 200.}, 
              PlotRange -> {{0, 200.}, {0, 200.}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"QMRITools\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"2.9.5\"", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1: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
vVNU4BwpQTiiSHJhT5JHOVPcyCLxoqbHH6G5GoivMCR1vRmSqo1IbDFHNKnf
GZnqMPW+QLhxFU6RUrANkaRiSWi8BHoGBwV+eG3/TecNz6a061meLh+7syJr
V+5H6RNuzC4L7snnxNzKaz5PZkV4I+APT2dO0OefryjPJiamYOlggOJGJcz+
oRTdS/FIrzGj8qf53xWhazYKJQ+cUNTmQPIoPVh63MAugvFX5cOLZMfH/wE7
9d1oS7yBEhJDivxPoDvrNuGFErrz5NESd4V6b70u4gza4q+gmnECSUEH0Vuq
ii9a9EjOfQEHP311bq6Uwwe2QOqmKZR057B3hxkqS5tE7Me1FffMYmJicPr0
abHv9f7722C6/yPEbzmAx5fO4u7eT6H51o+w7/0tr8WWL5Ot2z/Gbf3bsAk6
jJgSfRI33BFTaYR0wo+SFhsE5aiTfEub5MymCMxSRkW3L7KarKFjcwkf7Xjn
pftzbMOxER3Ps3wfLsDfnAC7cyJ2Fvod7tpZwdq5uVX45fFjbdzzZeYl868q
k5NTJIYHoaDWAFmtPhj6OgGNfX4oIbnqGIkfnM8Y1vd4Q9P8FHbsfe+NnN2h
Hf8JG+VPCT+O4PtBH3xJavLm2MsYJDnBF+3WGCK5b0v0GZQFHkaayzXCl+sI
tT302u5/TiIOlpaJpB6jx1ihcM79dd3L8p0fomEP4cq//79/E16sJQeOfQIZ
rf2kbtdBDakrUypNSJ2iT9Uk4QVaYJL8KzRXE3r2Vza8N8dW/NzllTA4RxOa
7+bHHXoexJun+ME5K+q8+PvMrMWJmRV8mRHRF1nDu175+p719aKRxOZykofW
9vihsceN4gcn5+TkUhx+eIerv9Qur/rzoj08DA/id9+l4bsuR4yVa+ILUpuz
Sb3x9QN7FJC6JMtlG5pZt9EYcRH7Pv3ha8PL1g9OwsmrEpNTM5iaGCN12ZSI
rTcTN1bKoR/+AB27f4o9//76Xv9meKJje5nU3gZIJnEjJEeNetZVSPIFTr2x
fe/7G96TY6vX4bdf4P8JN2aWZygdgveZGQr3In1eS+F/ZoaH/RmKT/x13D6X
LxwdamyWpzcr3Ce9pA76VndQ/EiH1OAhaBxKxL0Bb+rZVUadKcmnrm+KDxvl
ypVL+5AdqozhUhI7WszxXYc5atO04OkgiVrmYdyPO4XqsH2v5bXQ9wj0KKBs
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
vrhI9g+7qEwMj3Xz+OMpvhtn5EVwISq73nwD7mS/KFGSQ4LcZlQpyqNOfgvi
Tx2Hk2sgzDNiydlKF1rXDST2d3JyMjw8PJCRkUHP8WWOnyuUXZbDxxkO53MK
G28sb7NcNMbqjwl8z+F1/pqMc9ZlnF0P+hk0PkbHRjG6Ys1GV+ZHxwTpqIg+
KXNtjHLq2fKoaF9OfnRU+NmSrtflKxdgaGQIJycn+jNf1PtneXl5KCoqIuvo
DktbCyRFhKMiPQ8m+kbYqrRdYlw+DZs6EUHQCZ5FXdOAsO9EhPXTs+LqRcbi
tmUTGgmXVyjLoX6rFLmXHIbumTBcsPSFpro6VM+pS+zvpKQkBAYGoqWl5Zln
hLX+PRUjz+DyVWNY1P/jK2NUWGjMLI+OjlKC55ax59Mbey4bYxKv16UrV6Fv
oA9bWzukp6cjMjISJ0+ehJqaGi5euoLDhw5CR/sazp9f/f/kSvInzo6Tdxr6
e4YEcx3jzU10viEhq8fVyxoLhZHqbdLIWLcLcYduwdXDGurXb+Pm5dvQUDd7
of3D388PHp6eL238T5tLSEgI35/cmKLzDM8K6sb4OmNc/4vGJIMlMTFLsDHC
w8cI0zYyws+PMELn+fUjgvoR0bgeEa4XTRmdFSmxPTIieBYlkq7XnduqMDIy
QkhwCKKjo7F//36oqqrCydkJrq6ucHN1w10t8Z9VfRl/ojaDgwOF5rUSGyG/
2Fg8N21CL7mv+6tp4G5uPEKcdXDnvC40VfUk9je1N/v6+mLfvn0vffyrzYOP
kVcvyyOU0PHJxP0Ii4URfsrmBSLQE/QVYGOEjX2ujVFWh2N7VNBftF3S9dLS
1iEYcCX3xkiyR5ynzyxeXl6Ij48n561wBBGu3rZ12ytbS/HrGcznGB63ML4i
6aFDh37RsYTuegse52/imr0zwsIJV1y4Cw01HYn9Td3Pqb35Vc5B3DwojLA+
5HEsh3+5XL+Cp0eYtRDmYyEOE+wDFDaWR0Tjf5iRFbjgyfAzyry60TX3FyeS
rpeTnT1CQsNxh6zZwQMHYWhoSPsyJycHMTEx9N7yqtdS3HoGBwevmCNV9/cY
i/EJGdgcvw5b9zDcuK4OG2NXif1taWEBRSWlX3weFK+siBvuWYTlef5Zh8vt
nPMKWx4V5mxGf3lkeHh5eHgYK2SEzY9w8sO82CYphR+2bkRIn5Pn67J1I7Tw
8CfQZzFJ6zAi6XqlhrjDP8ALFy5ehra2NpwcnZCckoLi4mIYGxu/knPMWsYl
hJHhldj4pceiduE4LHStYaTrghi/SIn9Td3tfqk5iD6b9ecwE48jI8Mcjh8W
cDwTfwJ+HqZ1WZ5mY5KNUQ7mKGww+Bji4GOIUx5aiZ2nyvPqixdJ1yshJgiO
NobQuHMD1lZW8PT2oc/I1OtYO3fulGgtRWNL0r4U57Hzk/Rc9bLGIisrBycT
c5hoWyE7PVlif28id5rnHYu4OUjSl/WnMAeLysgzYo3Fldh+BBtDy9T3E6i4
HhoaZoTkic4QFetDPKHrh3ntw8M8HX4bB1M8W8OCOrqdwczQsEBnSHg8tP6Q
wIak6+Xj7gw9cv+2MNFHpL8XoqJjUFhYTN9JXtY6vogdivOCg4J+FWO5fPkG
7C2skJVbIrG/X0a/F5kDGztDIrE0JIqDoadhZFWhsEHjY3URYIFbZvODbPwz
Kd0+yMsPPtXukAj+hOsl9XuYtzPUDQxh4eCI2LAglOVlo7Sk7LlfX1nLWkpi
i+K85907XtVYpMkeEuTphtKKmv/f4oPH2xz+Zcv8eibGhHiY0zbM5fgV56Dl
wUGCj8FBDBIZGhrkxSddHhLkqXq6zEupNjr2hVKeDbbfIKM3NMjYZG0z+lSZ
34ep55VfbP9Izkok2LCGtb09AkJDUFmRj8aG6hdaA2VFFdxTN4anWzRUL56H
8ob1L43/n7cvha2gwCDah9RnnyQ5p3H1XV0ckJ+b+6vBhzg7q+kdOniIx92D
bEyJxJkI567K04OrthF8DC4LYnsQLFZYvAwOPl2EdJj4FrLFxcEgt31IpG5I
yK6kfs+rrICZjTnMbawQGBWF/OIC+Hh5SGxv5/Y9iAlKRLhfEoI9k+BoawNj
K1vIyiv84jF18OBBvl9ZDqN8e4jUS2rzxMlTiI2N+UXm8rS+kgiPJxj+Hhri
cy3rFz6vDwowI4hNtp7tOyTYI/h8T/AxMLhM9xlgYnNgYCUOBth2MW1iZIAR
XnlAYHutMiA5Pto6O2Hq5ABDW2sEhkcgjdzN977A2cre1AYZUQnITChFmE8q
bK0cYWplgSPHn+91m5eBD+pzHOL8RdVLapO6X4t+LuRVzWWtdp4lFE+wvhh6
nrji8PYa+9H4GKAxwYtjOs/IgKjwY52nPzDA4IDtNzjI1+PrD4q0MSKoH2Bs
MCljV9L1erQ0i4SMFNw10IUXOX9ExcdLvnfs2IHclHxkZRUgP6cKkT7pcLB2
h6WVGQwMDLBZSuqF4up59Om9g10nLk8xa3DwBfYQNze3vws+1mpXHC5EffBM
Dl4zRwvZpbCxPNi/Egv9jPDLrE4/le8Xahvg6PL0Bkl5cEUbr3+/AD986WdE
8AxJ1+vh0jxyyqtwWU0Vjt6eiEmQHB825A6TmVmApOhcJMbkIDIwDkHeAbCy
soaxiTFOnzz9i+GDiguBvzhcw/jyRfaQ533/m6srJyf3UjEi7hmiIuyLATHx
9CIi5Nvl/oF+SnhxT1I69un476djnVdm45zXNsDV6+fUsfjoF7YzwOCpn7HB
0+XVs3jj93lBfExMjGLpw8e4onYHeuZmiEuU/L2vurpaJKZnIzwoGrGhkXD3
9IG3tw9sbWxgYWGBe9r3fjF8cNdhgJvn+FxS26dOnZK479lzF14JPlZ7nhBG
+hm+FuV0rm/YstAe0C+ScrhbWGeZ+H1ZNNZfiQwMPJe+pOvVXF2Gzz77AF4h
4bippQlXb8nv5uXlpfAPCICPryeiIwPh7OwMOwcn2NnZkj3ECjr3tH5hfAhz
ikAGXshnBw4ckLivuYUVtm/f/soxIvpcGiNkbfgczPItG2cDwn7i1/cL8CLq
zwEO9/M4vX+5j4uPPtbffegjIqjrE6Skrq+PKlM6/bTw2vsgZKePbRPJi0gf
R59v/wXWOjMjAQMTI6iuLoWGlhr9uV1JbeUV5sPH24ucz93h5+cDFxdnGiP2
dvY0PvR0JP/enWT46BPjQ0Hd3+N8pW9giIuXV35X4FX9cZ9B3UfYeOnjnkFE
YnnFWWctHM2Lx2US65RgLULH+Rp1X0QorEm6XuExocgoKEZhaRnMnWyha6Qv
sa2EpAx4e3rC08MTbu4eND7c3d3p75NaWFrASF/yz70+rz7PNyv9z10TSW1T
3/+TGB96BrCyt4OGvvaK+f0S560Adg/h+IHH3Qx/8+v7eXUsrzN1/Ww9bYPj
W1q3n4ePXirfy2/rJfneXo4ule/tXRnLnLpekfbeVeO/l2NzpT6bSrpeTl7e
CIqJQXBkLPyCA3GV3EMkxkd8KgKJDU8vTxob1Os8lNhQ9w9zcxjo6v7C+BD1
P2cdeiX3GYV5SfsamZghJjoMaWmx0DZa+fnPV4ET0T3kFXL1MsHBMhXbwsKL
dxonVDyLtLN46WVjnNXnt7NtvTQeejkpbbuPTfs4+r2CZ5JU0vVyI7EcHBkC
37BgxCYnwdFD8tcuLcytERMTDTdXJ/r7ulQcUecrK0tLmJqZ4dz5878YPgL8
A/jrwfqN5TAqDQjwl9i2g4O9xH3tHB2RlRmPwvwcJObm4K6eLhSUlVfFycvC
ihB39ArHNS+OmBgV5Wwm/tg+veK4XLAfUNhg8NGDlTgRIz1sKtDv4daLtbXS
ds8znifpenm6O8M/PAxBkeEIiIlEaLzk7w3v3L0bkbGxcHK0JzHkQPYQVxon
5uYW8Pf1wS7S/kvhg7pDC/OPMI8dOPgid2wLifveuHkDW1VUnoqHZ4kkf9z+
rE96uD4R4dsVPmN4XsDXvcw+zO1H8NHTs9xDYr2HxDcvFeR72XIvIz3cVKDf
y62n+/YK+vbwsCOw3cNgQ1S3l2+HSiXmwqAghBFcxBEJiAlDVGo8FBXlJbZn
rGtAsOEKa2tLODo6EXGEiakZ/b2gF8GGJP38/Px4fuoVXiM/P8n3Dur9C30D
45cyl5cla/kTxocw1/b0CDi4h+Vyhs95PmOx1CuIY8YGn7d58bjczcfHr0sk
3j/CwxGTHIuoxDgEJ8QjNiMNGjoaEtvbvUMFzm4+0NPXg62tDbl7WMPP3/+l
fR74efpRewjXRywHvcjrs7du34a9veSv8a11Xi8bI1xdlmeF+X01vu8V1HE5
v7d3hW9pfHRT+Ojm1Xf3gJTBK3ejm6/Pa+/uJmk309YtsNXN9qX7cPqytuh+
Ah2+LSG7TH9GT1Jf2bo6w8XHDfbe5C7t7QzvYH84ez/f/7cQtamybSt934iL
iyWxZP/c8Shq70X6Us+m9pFuet/we+GxOLu4IdzX64Xx8bx9qLGLG79k+HgW
33aLKYvWiRWCj+5lXlwKhB/L3Uz8MnEraO/mY4Hfj6/Hre/h6/Z0Cz+jm8Hi
Sju8VFJfqWqp47q6OtTV70BNSw3XKblxGes3bnzpHCnpHvAifP+yx0Ktb2pU
yAuPZy1/r2oeAn4WiW8+H7Px2SPM3Xz+7uHweQ+f+7sZfHR1kT5dbIx2oYuk
XSQV5Nkyq9clSLu5KU+6unj9ROtX2Ofb6GL6CexL6itTckdwcrSEs7sLDGyd
oEmwcfroPijv3PNK1vN57dC86ev3qxgL9bs8jY2NiA6V/PXdX8M8hLi3SzTe
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
NJCTEUiDIpWB/n43fRxwixXp3Nwx84SxRz33pO0e9d7NrPxwxLpHu9u9e9jg
vXzuNnZDBpqgF8gM3Ul4djLPpzSxoqCb/akKyquWoR3bR3OPH9XabeTnHuG5
efPZvW0TZQVZ9LSruHV5lH/+8R1+/t4t3rgyxolTA9Rr25gY1HF2ogNza4Wo
P8poqCqholjwQ54u9owCCvLSKRR7h6X+kAlNtdQl3nu2Euy3hY+uJmJuWcVL
V5R8NhDJaEMQmtZG6xrazDGvadf3wmbQw71B11iD0/wG3cYedMaQ2/PtHO0Q
+WlhbQ7xBYcZr57HFeMuRsZ86FZE0ZK2ktDDm8mMjyJHxHBOguBJ8hEyctKs
v2+ZmxmHqjSHamU25nYlY4NGXn/9Fl9+9i7/8atPeffNm3QZtbQLXZFlJYr8
U299xzZzGUOX88irXUl5224qzD6kqJ8luqSEnQUv4y32jjJNGsX7lnE+ZR7Z
8iL6HXwe8KAJ0zGVaIgUQ4dWD0rHcOLp0iCnVjn8JLru1Hxbfxs/JM/pd573
u479kvfod/j147mfZ7vX/em+dfXlFMp3oimYz2DAPBbFVrOy6ji7AlooKlqN
ZmIXlQL77MrFvPMrGZqGXJ75p/kkxoZQ21TJDVFL/uKjV3j/9kVuXTvD2RGD
9eez+kd7GO8We0dtMd3tlSK/KqE0P5OSvFQUuWmiJs2ksDiFvKwI62eeRdmh
7PHxISFVxg+vp/Da0b38+pKKk0Z/0hPm020ouq+53g8OD8Nq5a3ojekY6w5y
ZdSfE1270aif5NLNJka04RzwXyIwixW1RzL5CaFiHxH8SEtCliDq9IwYUX9k
UlOeh15bxvBwNzdeuc6Xv/yQf/3F+7z56jm0rVrxjHxyCzOdz2ztzqFp0If8
Oi+KGreSkbuJNLkXmV0VHNJOsMSnXORc6dw2hvJS9iJ0bWV31dN76qyb3V2X
7tMmRbxPOuK9X8S+5e+9WDjQ7+RGv5MrVh8HX/r7rT79ds7Y+GL367eZ7dzW
7hxfMo47F/vdxumpzCYnM4DdOTH01S8jurqdrXU32LfbgEzwo9y0ioq2nRSp
V9N2LJjf/3qMlPWL8dm5lfJqOWM9Wt64fIyP37zCnZfPcay3jdHeZjp69Wjq
S2mtyKWrvUrkWEoUeXEU5aQjVxSIGiZD5NDpQjtF7ZFh+Z5ABMH7vfnVp+V8
8moEv3i7UOxHEZSm/h15fk8x2F3hiv3+ARd2Th1x3XPNWTL3aX6Otv5p40j5
5VybARfG0/XK8cykfSrOVC7k49MHKMjaxcnT6RhaNnK+fD5DqmL8vX1JiNtL
YW4qxbnxZIrcqlRYUWo4BWL+dYpM1MoCtLVy8S56rl69wueff84vfvEJt65O
0CVyq3xZCo0N1dZndjXU0HU0EoXIQ2s6AqgVe0er+TDxNYc4kJrL5vBG1vjm
U58ew5+u+Ir8bQe9NUn31o5+dwwGPMz3bn1mYNjvjtOAZExJXE4KbCet+Pbb
uNDvZgP09Tti+z5soM/tus/OO6nNfJbLTF0GFGVVZEdtJ1utoP7dq4Q0tLGv
+gbxiaIWrF6ComWdqO/80YwHUd22gSF9LsFBXgSsX05tYYaoJ5u4dKyPj+5c
4a1bp0UNWMd4n5aRASOV5SW0qGV0t5WjqZMLfsRTXppHlTJf7AlxlMozyUwN
Jjs9jPT0ZA7uX8fV4U0Mta3is/eKONXnTZ7PXzMau5zO2hL7HO064MRgjvOd
Bdu74TPDd2DAo39PTy/7IrK4pXyOqyNBIpd8AWNzAEUyL47pl/Hb23nUyELw
D/SlXin2jNwU0jMSKJdnkCs4kiNqdMueWiPyou6WMsa6dbz5yhV+JfKrn378
BufPDKNvrSK3RGbDwKSntSiK+OoUsioW0dIfTO/JSEpblpHRnkh8cQvPBetZ
uknBq8oYLil24rM+EHXoGobM7bPOeXr7XPwGPFy7zgfc1sqxD/TbdV/iO9nX
J/jRZ1nfPsQ5/XazXNt8+qzW12c3y7XVp88ZF1a/Podfv3s/q9nHdePM9Pm5
OFVdGEJUUQo9cQu5Y4qi++g4qyJy8W24QcQRNaWVS1F3bKW9N4i+i6GU1i4h
/XAlhSoZBza9QEF8GENdzbx8cYxbZ0ZELTJh/VndfsGZsX4Dbc3VtDSV0Kup
oqE8l4qCZAyinlSJXCItIZ7cDMv3kw+Tmx6Fv/9eUqOf5+LgDrTlSzk2uAlN
0bP4BAXTXHyE2435mAwat/fvt2Plea4OXOyY9bl8+pz+fR76SLGbdt+yXn3S
tbBddxs1JNapaQudx/mjPhwf2MNAzmoGK9YyMryX//pSiTzgRXbt2Y1alU2W
2EMKRE5Vq8gV9UQkBekRgh+pNIn92NSm4txYB+/dOMnkx7f4ROjOUVHLNVeX
IJfnWt+xXdtBub6cXPlm9EfD6TubSHH9OjLUuyk3p6MYb2Z37RiVsiyOttZS
lh2MPmQJVUWx9PV0e+Z/n4e2r2hSrO9hgh99k/32uO+zx7gNXzsXnNywr4GE
I1Z/57X7GA4+9fc5eDedY32u+JC0W967sTiQ5kN/x0sxj3OqP4+36n3YmyZn
S90bHNhWTr78RapNG2npDqDzeAiKVlGvm1v5+KXTpB5YR3z0YUxi3U53azg7
bLTWIqdF/TFi+Ryxo17kFwqRN6swNZVZ84cysX90ifUvUciITBK1R0IURXlR
Iu8IZ/+uVYyZNnP7XCjtlUvozH2EHYcOs1NWw0nVi1yv9cbQpnTFp9tc7esh
xa/fHTMnPhLOuPB1aZX7mjr44eKak4+OPuK6u6+F04LPFQGP8MZoANdGgxmu
XkN5shca5QvwH00Mlh7E28dL5JUyZKKGKM+IRC3ySws3SnNiaRJ5qF5oiaFO
wfVT3bxz6xyffPAu166eY8CsEbVMLrXV5dZn1ypKmTgbQlW3qBuHwmnsDURe
v0asTzgyrahxRvrZXnGRWpOZ105Vc/30QU5lLqY9fpv154od+uqcm0Rr3fSm
T6IxDnyn68U0PZFqTF/fTH644l2yBnZ+9EljV2q90uteD21zMI/+vR59e+3W
oY1H5vMMo2GP0inW6mxbNb7NfWwoukpwaASNxmW09ASibNrE4JlEbnxUwOuf
NfPFlYsiN4glJDiIXrWKowMdXDk7xKWjXQybm8Qe3shAdzudBrWozwvRtSip
VQl+iLyiVl1GaVEuqUmxIreKQp4bQ1jIIWTZaxjrWotJvZbGsudpjn6KMO/t
DGtDeadzp9DOzXSLfNDx/lbseyXzvl+85mT99ue51tWpTXafdvM4uv5xWpO+
T0n0fF6eCBKxHUFd1RKRe27i1DF/fn6rhHdPm/EO9hf7RbzQiXQKU6IoyY+j
WPCkODuJttoievSVDBhrOXt0jNu37/DenTe5cqJX4NlAa60MTXMjjXUakuOi
qOzdRppyOcq2XZiORaAdO0Bmro+4TqVkuJ3ViWUoSiKpO2ni1EAxlzOep93v
O+gMbRJNlWjxNJ2VXvdL5u3Kf6R+/c7x+qXjTcuJpOP0u+M42dfbO9nb24vF
LGtpO7esa6/Vep1HV/w62nv7JP36+py+lvi33etz93GM2zfzOVbO2M/LKlXk
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
986eN3xduDq48cD97THurmGWNis3hHU5uTG7df234IfFnlrwrfvu87DW46uu
pSds/7u9p9RSYu/v744einT/2/jfxHwelBsWs9a+Pd0uzbJypcfGGQs3umz8
sPyeXleXjQdddr50dYmjaLPdm50f0uu7xeZc8LpfLs32Hp6u7zbm/bbPdu9e
751g50iXXXMeFj/uhcNcsb6f58ylzzeF693e8V7PnH1P6JkUcW/hiI0HXV1O
LjiPXTbeWOxB1uNB/Gb7uh8+eXre3ca73/a5vvP0fha9supOt017vg5+3O35
XyfWXwc/HuY7zta3y74HOHhhWx/b/mHhh4sHd7dvih9z0YK/JH5M79tt3Ze7
7Pvz3XF92Px40He+X/8/B64P2s+aN83YG6ycmezsFCbaxJEuhz0AP6Rtnvzm
0m963wfB8n517GGu41zvdUow7rwLrvf6+qo4zHWMufb5c+P6oGPeZU+Y7Ors
nLT8Dciurk7rWnVajp2ebO78cLTNxWcuNtd5P+gYD2Md72fMri4XpgL/h86P
B+HG3XwedJ7fJK73O39pu2MtLLFv44FjbSz7h40fc7Fvkh+zff1/gR9zxfVe
X1+FH/eD1YO+018WPySa5dojJs0WfpjFucU6zbjObWa2mtl67+vmx1y+5jrn
tFLlXwg/7o3rXGwu/Wbz2bH0+/8/PzzbpNlsnrTFv40Hlp/7NJsdnOh0Xs9l
/5C2Tz+/H7zuZ+6z3Wu/JJuT35+FH3YNcmjPn5sf9/J70Hf6i+GHeRovzGaH
dtn4YeGAkxtm632zB/uqcf6gc3sQLPXGufH5z8KPzvvH9WHzYy7v7PB50Hf6
i+FH57SYd63PpLnDzg9zB45jhzh2dIjzDjPSe39J/Dh2PmHOY3zT/Oh4AN1x
rc/99Vv82N/M6ne3uT4sHL5JXOc65vT7nvYCBz86LNbh4oDj3PK3580OjnR8
c/y413hzxarnrP9Xfq+vlx8WHbLhPNc+1n5O3ZpbP0XownviMNvX/fb7OmL5
Qce8n3d17QO2WO9waZHgRofFmIt9U3oy13ndbbyGAb//tvxwccM8d37YfW26
ZbO59BtvkfP0o9956LH+IH2+blwfNI7MjrWQrovZivGkycoPEx2mDkxW/E0u
Tphc7aavmR/3iuHZ+s3WXtUXxvcffeSu4/+51vFBdOdB9apZEUWiz5o5x7sn
v6/S55vE9V7rPCdszW4YT4r4Fxyxc8LCBQcfBDcs7Y5zy71nnvlq/8v6m7J5
T3+bMu1Wdu746r+Xdz+xY7Gnnrw7Rk8//YwV4w4Hrh33xtXSp8OuUZZ1sGmW
iafv1e8H/4NzOc9y0ryFhPiFc3r/6ZYcG/UA+P/DQ1/ThxF7s62lI85dvDA5
9olJsUaTVi7MYhY/x3lsbOxDn/fXYXsOzaepeyspKl9eWLzia8F0NguPuHs8
xcbG2fG0a5E4j7sHrhbcbfwwWfd0k/38XusRnbKZH91JZajXB33V86RFLuCx
J/96TvOY/9TjRAb4MmzWkJOdM6c+jwtdikz0xu/wg/3++V0xiLv7XB90T7GY
qUMa5277g50fxln54TCjhCNPP+3OZcu1pf1h3nPYo/Pm8Td//4xb2/ef+Da+
QfN54um/c2uf99S3OBi5iKyKdTR3ChttYF9SFd57d/PkMzP/N/0T835AfEQQ
C6Zp02xfUp+//Z/unws9/eQ/kRzwLcqUsrvOdTZ8bX2emVufDrvNsh7feewH
7PJaxxnTHiZ0O2guXc2Vq9EMmbxRBzyC+sAaVj32jx7xnvfoo4Tv96VTV4tZ
XcqgQW393xBFpWW88OKLHvv8YN7fEhD+IrKGDcgb9tA1qiQkbjXfn+fOxQWL
FuGbX8xffevx2ePgmZm4xdkxuFuc3M/X9PEdNYUTWxfWVn5YY98oOGK08cBo
tN+3ttm4Y3QcBZcsZvU1Ss4t7UaT08fJKUebvb+jn+1of5bzGSbMRh0ddckc
LvHmau0mSlorCayvYvXSOkIKOqnQ7EDVuhxl41aK6jZRa/Qht2IV9eZ9tPUf
EuuziUL1RgrrXkSjTyOlZJzknGLGRkd4483XGD591vp5t6GlnOaSHHq19QwP
zp7Le8L0se/+LTERR4gO8MZoWIQ+dQmD8p10VzxBfnaUbc5Gd21xw8TkmrML
L6P9ntHe3yjxtbU7cDO54epYLyO5cTHo6hZwTsRoVmIoaYdWUxO3jTe7A7lw
Jgtt5VpOHHwRtMV8mLqb21GruaMK49DubUSHHKa0uARNvZzGklx0LY2YaxU0
1Ddy/uW3ePuDD3jtzdt0jI3hvSeUg2E+aI/up67bD3nTVnJrV5Ffu4G8mo2U
te+lpTfa+n+jTr2q5P/mdd58txP1+RsU6bvYtK+eCHkSHeUb0bU3YzAakGq0
0eQWo5I2owRP0wyuPAg/XPpjlLyD8zgpMJ90xLkTf6Pt3BX/Rmebyc4Doz3m
jZJ7RqNJEvfGaWZyG9ONIyZ3/9GyZJLz4omP2UtweBLLlVqWhtWyzLtKrMVe
Go2bKar1Qm3cS7V2J7LajWRVbqC8bSeq5q2U1G9C2b6a1PQd7NsYRFZmLmdf
Ossb77zGiYvnrL87aapSoVMX09/TxtCQcc57scWCg5+kNGs9dSVxTCjmU5S8
kOaygxiTn6BEHe+KdwkWLv2ZiZkLRwkWEn1y0yEJTiYn5jZ/VUkk5dVbKc6L
ICz9MEmZfiiqsxg/m89nF4MxZy3npfJdfKoI5G3Bm/MiDxor2EpG8D6Rv0RT
oyhG01BJhaoIk74JU30pKlUlN954nc8mv+TNH/8Mw+AA6728ORzsh+nEYcr0
m8Sa7KRGF0Z+tRfpZUtRajbTcSIS7UgYZ1+uYPSlFEZvabjy8R9p1bzD0qAB
Eg8eoDd1Le269mnzmq6ZkpiVxJ/l3FN+OVdeOPYOR7xL18ah60bL3uHghycz
zdL+Vc1097Er6/rJjs6gJHoR2xLzWCQ3svJQNT57sqgbCqFe502aajF1HX4Y
RkJo7NpPTrXgSNkKK18qNbvE/rGWap0fpaU+FETHM370Mq+88wkXL10Uc++k
o02NsVFBf1czI33tzr8ddy9LDHyG/rxVqIof4+T4ZnpLQ0nyXkH4IX/qLTpa
mDYt/j2bp/v36uPkmwQ/aR9VWjiluRsoUsRRr9zGxbznOD+WR2tfKNcan2M0
dAEv7VvBtcjVvBqzkbfCN3BFtZuk6ADyLb9rXlVMVU0TJUoFA6YquhqV1JeX
cu72HT779W/58Ge/FPu1idUL1xPhtZP6Hn8KW1ZSIPbrqvYwMivXkF21Gt1Y
KE19B1B37EPdu4vTr8XTXtnL6NiXxLd34h/fgGL1JhqzfDFpW93m4NKDaXrq
1GV3vf4qNbGlr1teJHm2fb+W8MNg3ecsR6PBKM6l62Jvt18bjI77030NrnaJ
v9UM09faft9g72Nw+esN4v2StlIX9SKr5JUsyWhidUwN67Y2UNq2l6q2JWJN
NlHWso1qoz9lYt+QiVzLmm/p91DauAV5qxfNxoM0NkWTkhKJvuMYt975lLM3
XqFzyPK/iBvoqC+jr7uesb42osIO3hPPopznyAxcTm5EJGcvpjPet4dBYzyt
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
3g/14laWDx37nyI/eAdlWl965E9Tl/gsN8ZW0iviIyAmh8q87ehbMr/yvD1r
1exW1VjPvgP7GU57nH85FcqPP1Nxqi6Eic7dGEpfwJi9kFHFej4q2sf1yE28
mevHR/HbuRm0kMJ9L5ISE0qzKh+VohRlSQ6leVmUy2W061sZP3OJNz/6lBOX
zhOZlMm6jdv50fs9/ORf+ilq2kOtKYDy1kAmrmdx9YMyGrsPUK7xof9Cstg/
gsUxReTBL1KnqyIyZYT4Q17o5EfQ6zQetfL+bXYNN8zwMczSPivmEn7orG06
t/s657lO6qNzv+d+Lkxnv9bdrY9kTJ3D13Zt+d5Mz2AHalUSTQHPkJZdyPzo
o+zNChX1uYGk3H6Kq3ORVa9C2bxW1BvrrZ/vFtdtsB7LWrdY65KChsUM9Bh4
5fh5QoN2o1K3cEPkCn1DIwwc62NQL/KJ5CTU5dk060ReocwjPz1FaN1+hvZ+
j9/LgvhjRzHHtz7JyMbH6Az2YSBjC221C0U+tYywjCihhYG8d2k/lTl7ORK8
gfamPA842ualmzF3ybnO870Z2E4f095PKeppXVcZo0dj+NPv1Nxq9qa56nm6
EsW7Wr5HdyGEdzsjOZ60js+z/Lm8ZxEXDz1DY/x64uMikKvqKCxUinFykCVl
kJ+pEHmblqHTl3jtzjuMHT2Gz4EIkgP3CX7UcfmTUhp7gtCNRJFb4cWlt0v4
2R/70IyEM3olg7OvFdMm+DH2Ugqnb+UxfOoM4XvK0BX4M1p2aBaMXPHjds8Z
H7oZOLrF2ywY3RvHmWZ/xqROp5u0vo/O0qazv5v9aGlzXtv6ONbDdm7z0zv8
dJK5Ocdz54bOMUfn2I740NnHsI2pNQ1R3VZPU/RCYtZksi3UxHZVIWuT64WO
NZOhTBV7+3JKGtZSrdmJWu+NvN72PRCLFdZ6kS34M3HiMMODMnz3BQlONXP8
7AX6J05jHh2gr1NDTWYyNSK2qmqqKRFHhcgxdvvtwrzzUaiL578MBdxJ9sW4
/tt0hG7leKEfbSXzONGzhe6uQ0Sn7qctbQ3G/OU0KJ6kuT7fOkedY94SPPU6
6TzdMXRi4NQT6RpIMXStlc4eNxbflsJYFGN6OrrTGNWso9vghaZmKZriRehS
n+N23m4u9h7gaq7ItZL8eSVlCx/rfKkUnI5MSKFYUU11eS6qigzk+WnIimTU
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
nuGuSxZu/M4an45109jiVaOxxaxm2npqLPemj6txxbjGsX4aD/cd8TE9Rqbf
l8ZBextJSYlEBe9lfngjT3uryFA0oTkTS3rRs5QK/TaNhaEbOkT38SO09Own
r2qVde8oVK8nu2olZy8EUlteQl6BnnMvXaVV34Wipo7KJh1tnT20tJZTmZdK
Q3kB1ZUywsJ34pcYhqZkL6PbH6FnzQ/o3/Ikx3Y+z5mY+XTE7qY8LQ5l+SYU
OU/T17KGrobVol5aTlOjB35IMXGbu8YNV8c9J4ZS3ZiGi9RqBK+zN/owpgpi
aHAjV04EcXXYjxbFQo4HreR46loujQbwYaovP80/yO+TtqFPPEBNRy55KYHE
iblUifqrSFZISW4cRZU1qPX99A32c+2V69z5+GdUNTQRFbGZ1Lw1pKpWiNxp
PZnl66x7SJjIpworA2nvTxJ51Q5yFf4ciHmO0MSnMEwcJMI0SniinP6iQ/Z1
nqmHHnV1FqzuqR0PSYcs3BDx/6l49h8EH/4gxrQeNZajVvsHW7vjqHFrs/pr
JfesfvZrrWUsx32t7dzRxzG2RuM021iO8e3voHX4av5QWZ3+n97PxHPwUMbU
0uz6qcTWiqk648GpXOWKqbKmPVOdE1FTPSdiptQ6n6niuk1TqtYdU/K6LVOF
1ZumShu9pgbPpkzVtZZOFRRWTo2eOj9VZ9BPKWvrp+q1xqkGbduUWl0yVVWS
O9VQXTKlKM6bOnxk/1Rrjf9UZ33ElNZn4VT36kenhve+OHUzeO3Uazm7plKS
kqca4w9M9eTPmyqVPTU13rFn6saJSIb0S/4frab1f2s1Uuxsc9BqpXjZjjZM
Zs7ZiZkEDwduDuw0znXQ/qG+pviPpkwvXjmey+efFE999n7pVGvTyqmT4wem
rqX6Tp0L3zh1vGD91KsJ26d+35A59X+Zs6Zu1UVOnRlTTSVnhE8lRsdOVdQV
TFVW5E5VFKRPFckKplp0pqnuobGpSzdfmnrl3Y+nSqvrp8J2+E6lZ/lOyZrX
TInaYqqo1mdK8GEqU7F1qklbNCWv3zsVl79kSjN0ZKpKGzilNm+bMtQfnVpz
8MRUeKq/5XcH/uRaY61zrrY52TGxx4HDz4GZMz7sWGgdMaOR+kn93Z/huNZI
Yt2jj9a1NsI+/X8BSrVjhg==
                "], {{0, 200.}, {200., 0}}, {0, 255}, ColorFunction -> 
                RGBColor, ImageResolution -> {72, 72}], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                MetaInformation -> <|
                 "XMP" -> <|
                   "XMPBasicSchema" -> <|
                    "CreatorTool" -> "Adobe Photoshop 21.1 (Windows)", 
                    "CreateDate" -> 
                    DateObject[{2018, 3, 30, 10, 0, 54.}, "Instant", 
                    "Gregorian", 2.], "ModifyDate" -> 
                    DateObject[{2020, 5, 12, 10, 7, 54.}, "Instant", 
                    "Gregorian", 2.], "MetadataDate" -> 
                    DateObject[{2020, 5, 12, 10, 7, 54.}, "Instant", 
                    "Gregorian", 2.]|>, 
                    "DublinCoreSchema" -> <|"Format" -> "image/png"|>, 
                    "PhotoshopSchema" -> <|
                    "ColorMode" -> 3, "ICCProfile" -> "sRGB IEC61966-2.1", 
                    "TextLayers[1]" -> <|
                    "PhotoshopSchema" -> <|"LayerName" -> "Layer 2"|>|>, 
                    "TextLayers[2]" -> <|
                    "PhotoshopSchema" -> <|
                    "LayerName" -> "QMRI Tools  Martijn Froeling", 
                    "LayerText" -> "QMRI Tools  Martijn Froeling"|>|>|>, 
                    "XMPMediaManagementSchema" -> <|
                    "InstanceID" -> 
                    "xmp.iid:73db1039-c23c-8a4b-bc22-0e890bdc5189", 
                    "DocumentID" -> 
                    "adobe:docid:photoshop:1b53660c-ce9f-b540-9f3f-\
0421ddc9c8b5", "OriginalDocumentID" -> 
                    "xmp.did:78517765-d5ae-1049-a795-83be95336798", 
                    "History[1]" -> <|
                    "Event" -> <|
                    "Action" -> "created", "InstanceID" -> 
                    "xmp.iid:78517765-d5ae-1049-a795-83be95336798", "When" -> 
                    DateObject[{2018, 3, 30, 10, 0, 54.}, "Instant", 
                    "Gregorian", 2.], "SoftwareAgent" -> 
                    "Adobe Photoshop 21.1 (Windows)"|>|>, 
                    "History[2]" -> <|
                    "Event" -> <|
                    "Action" -> "converted", "Parameters" -> 
                    "from image/png to application/vnd.adobe.photoshop"|>|>, 
                    "History[3]" -> <|
                    "Event" -> <|
                    "Action" -> "saved", "InstanceID" -> 
                    "xmp.iid:b2cb8151-47fe-d44d-b13e-2e095099bf79", "When" -> 
                    DateObject[{2020, 5, 12, 9, 34, 14.}, "Instant", 
                    "Gregorian", 2.], "SoftwareAgent" -> 
                    "Adobe Photoshop 21.1 (Windows)", "Changed" -> "/"|>|>, 
                    "History[4]" -> <|
                    "Event" -> <|
                    "Action" -> "saved", "InstanceID" -> 
                    "xmp.iid:5b614a8c-a0ec-9343-8276-1c7e613508a5", "When" -> 
                    DateObject[{2020, 5, 12, 10, 7, 54.}, "Instant", 
                    "Gregorian", 2.], "SoftwareAgent" -> 
                    "Adobe Photoshop 21.1 (Windows)", "Changed" -> "/"|>|>, 
                    "History[5]" -> <|
                    "Event" -> <|
                    "Action" -> "converted", "Parameters" -> 
                    "from application/vnd.adobe.photoshop to image/png"|>|>, 
                    "History[6]" -> <|
                    "Event" -> <|
                    "Action" -> "derived", "Parameters" -> 
                    "converted from application/vnd.adobe.photoshop to \
image/png"|>|>, "History[7]" -> <|
                    "Event" -> <|
                    "Action" -> "saved", "InstanceID" -> 
                    "xmp.iid:73db1039-c23c-8a4b-bc22-0e890bdc5189", "When" -> 
                    DateObject[{2020, 5, 12, 10, 7, 54.}, "Instant", 
                    "Gregorian", 2.], "SoftwareAgent" -> 
                    "Adobe Photoshop 21.1 (Windows)", "Changed" -> "/"|>|>, 
                    "DerivedFrom" -> <|
                    "Reference" -> <|
                    "InstanceID" -> 
                    "xmp.iid:5b614a8c-a0ec-9343-8276-1c7e613508a5", 
                    "DocumentID" -> 
                    "xmp.did:78517765-d5ae-1049-a795-83be95336798", 
                    "OriginalDocumentID" -> 
                    "xmp.did:78517765-d5ae-1049-a795-83be95336798"|>|>|>|>|>],
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
              ImageSizeRaw -> {200., 200.}, 
              PlotRange -> {{0, 200.}, {0, 200.}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"QMRITools\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"2.9.5\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                  "\"C:\\\\Users\\\\mfroelin\\\\AppData\\\\Roaming\\\\\
Mathematica\\\\Paclets\\\\Repository\\\\QMRITools-2.9.5\"", 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TagBox["\"Toolbox for Quantitative MRI.\"", Short], 
                   "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   PacletObject[<|
    "Name" -> "QMRITools", "Version" -> "2.9.5", "WolframVersion" -> "13.1+", 
     "SystemID" -> All, "Description" -> "Toolbox for Quantitative MRI.", 
     "Creator" -> "Martijn Froeling <m.froeling@gmail.com>", "Support" -> 
     "https://github.com/mfroeling/QMRITools", "Icon" -> "Resources/icon.png",
      "URL" -> "https://www.qmritools.com", 
     "Extensions" -> {{
       "Kernel", "Root" -> "Kernel", "Context" -> "QMRITools`"}, {
       "Documentation", "Language" -> "English", "MainPage" -> 
        "Guides/QMRITools"}, {
       "Resource", "Root" -> "Resources", 
        "Resources" -> {{"Logo", "icon.png"}}}, {
       "Resource", "Root" -> "Resources", 
        "Resources" -> {{"Functions", "All-Functions.nb"}}}, {
       "Asset", "Root" -> "Applications/Windows-x86-64", "SystemID" -> 
        "Windows-x86-64", "Assets" -> {{"Elastix", "elastix.exe"}}}, {
       "Asset", "Root" -> "Applications/MacOSX-x86-64", "SystemID" -> 
        "MacOSX-x86-64", "Assets" -> {{"Elastix", "bin/elastix"}}}, {
       "Asset", "Root" -> "Applications/Linux-x86-64", "SystemID" -> 
        "Linux-x86-64", "Assets" -> {{"Elastix", "bin/elastix"}}}, {
       "Asset", "Root" -> "Applications/Windows-x86-64", "SystemID" -> 
        "Windows-x86-64", "Assets" -> {{"Transformix", "transformix.exe"}}}, {
       "Asset", "Root" -> "Applications/MacOSX-x86-64", "SystemID" -> 
        "MacOSX-x86-64", "Assets" -> {{"Transformix", "bin/transformix"}}}, {
       "Asset", "Root" -> "Applications/Linux-x86-64", "SystemID" -> 
        "Linux-x86-64", "Assets" -> {{"Transformix", "bin/transformix"}}}, {
       "Asset", "Root" -> "Applications/Windows-x86-64", "SystemID" -> 
        "Windows-x86-64", "Assets" -> {{"ElastixLib", "ANNlib-5.0.dll"}}}, {
       "Asset", "Root" -> "Applications/MacOSX-x86-64", "SystemID" -> 
        "MacOSX-x86-64", 
        "Assets" -> {{"ElastixLib", "lib/libANNlib-4.9.1.dylib"}}}, {
       "Asset", "Root" -> "Applications/Linux-x86-64", "SystemID" -> 
        "Linux-x86-64", 
        "Assets" -> {{"ElastixLib", "lib/libANNlib-4.9.so"}}}, {
       "Asset", "Root" -> "Applications/Windows-x86-64", "SystemID" -> 
        "Windows-x86-64", "Assets" -> {{"DcmToNii", "dcm2niix.exe"}}}, {
       "Asset", "Root" -> "Applications/Windows-x86-64", "SystemID" -> 
        "Windows-x86-64", 
        "Assets" -> {{"DcmToNii-21", "dcm2niix-20210317.exe"}}}, {
       "Asset", "Root" -> "Applications/Windows-x86-64", "SystemID" -> 
        "Windows-x86-64", 
        "Assets" -> {{"DcmToNii-20", "dcm2niix-20201102.exe"}}}, {
       "Asset", "Root" -> "Applications/Windows-x86-64", "SystemID" -> 
        "Windows-x86-64", 
        "Assets" -> {{"DcmToNii-19", "dcm2niix-20190902.exe"}}}, {
       "Asset", "Root" -> "Applications/Windows-x86-64", "SystemID" -> 
        "Windows-x86-64", 
        "Assets" -> {{"DcmToNii-17", "dcm2niix-20171204.exe"}}}, {
       "Asset", "Root" -> "Applications/MacOSX-x86-64", "SystemID" -> 
        "MacOSX-x86-64", "Assets" -> {{"DcmToNii", "bin/dcm2niix"}}}, {
       "Asset", "Root" -> "Applications/Linux-x86-64", "SystemID" -> 
        "Linux-x86-64", "Assets" -> {{"DcmToNii", "bin/dcm2niix"}}}}, 
     "Location" -> 
     "C:\\Users\\mfroelin\\AppData\\Roaming\\Mathematica\\Paclets\\Repository\
\\QMRITools-2.9.5"|>],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{{3.872231020441296*^9, 3.8722310452005196`*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"19e14949-1f4e-4ce6-b5a4-261d5e771f29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pack", "=", 
   RowBox[{"First", "[", 
    RowBox[{"PacletFind", "[", "\"\<QMRITools\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Information", "@", "pack"}]}], "Input",
 CellChangeTimes->{{3.7983489419994574`*^9, 3.7983489542227497`*^9}, {
   3.7983498620226765`*^9, 3.798349880765444*^9}, 3.852953866315629*^9, {
   3.8684316300594335`*^9, 3.868431631192344*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"806bff7c-106b-4eb2-952c-cd89f993a8f1"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    TagBox[GridBox[{
       {
        ItemBox[
         PaneBox[
          StyleBox["\<\" Paclet\"\>", "InformationTitleText",
           StripOnInput->False],
          FrameMargins->{{4, 0}, {-1, 1}}],
         BaseStyle->"InformationTitleBackground",
         StripOnInput->False]},
       {
        PaneBox[GridBox[{
           {
            
            DynamicModuleBox[{System`InformationDump`open$$ = {
             False, False, False, False, False, False, False, False, False, 
              False, False, False, False, False}}, 
             StyleBox[GridBox[{
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Name\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Name", "Tooltip"]& ], "\<\"QMRITools\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Version\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Version\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Version", "Tooltip"]& ], "\<\"2.9.5\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Wolfram Version\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"WolframVersion\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, "WolframVersion", 
                   "Tooltip"]& ], "\<\"13.1+\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Qualifier\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Qualifier\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Qualifier", "Tooltip"]& ], "\<\"\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" System ID\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"SystemID\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "SystemID", "Tooltip"]& ], "All"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Description\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Description\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, "Description", 
                   "Tooltip"]& ], "\<\"Toolbox for Quantitative MRI.\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Creator\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Creator\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, "Creator", 
                   "Tooltip"]& ], "\<\"Martijn Froeling \
<m.froeling@gmail.com>\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" URL\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"URL\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, "URL", 
                   "Tooltip"]& ], "\<\"https://www.qmritools.com\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Context\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Context\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Context", "Tooltip"]& ], 
                 RowBox[{"{", "\<\"QMRITools`\"\>", "}"}]},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Loading\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Loading\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Loading", "Tooltip"]& ], "Manual"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Auto Updating\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"AutoUpdating\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "AutoUpdating", "Tooltip"]& ], "False"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Enabled\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Enabled\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Enabled", "Tooltip"]& ], "True"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Location\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Location\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, "Location", 
                   "Tooltip"]& ], \
"\<\"C:\\\\Users\\\\mfroelin\\\\AppData\\\\Roaming\\\\Mathematica\\\\Paclets\\\
\\Repository\\\\QMRITools-2.9.5\"\>"}
               },
               AutoDelete->False,
               GridBoxAlignment->{"Columns" -> {Right, Left}},
               GridBoxDividers->None,
               GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.8]}, 
                   Offset[0.2]}}], "DialogStyle",
              StripOnInput->False],
             DynamicModuleValues:>{}]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[3.6]}, 
              Offset[0.2]}}],
         FrameMargins->6]}
      },
      DefaultBaseStyle->"Column",
      FrameStyle->Directive[
        GrayLevel[0.8], 
        Thickness[Tiny]],
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxDividers->{
       "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Paclet", "Name" -> "QMRITools", "Version" -> "2.9.5", 
    "WolframVersion" -> "13.1+", "Qualifier" -> "", "SystemID" -> All, 
    "Description" -> "Toolbox for Quantitative MRI.", "Creator" -> 
    "Martijn Froeling <m.froeling@gmail.com>", "URL" -> 
    "https://www.qmritools.com", "Context" -> {"QMRITools`"}, "Loading" -> 
    Manual, "AutoUpdating" -> False, "Enabled" -> True, "Location" -> 
    "C:\\Users\\mfroelin\\AppData\\Roaming\\Mathematica\\Paclets\\Repository\\\
QMRITools-2.9.5"|>, True]]], "Output",
 CellChangeTimes->{3.8722309961469336`*^9, 3.872231049212818*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"b443a540-3dce-450c-9c61-7991121238f4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verbose loading", "Subsection",
 CellChangeTimes->{{3.7548980189899817`*^9, 3.7548980262380056`*^9}, {
  3.838093292882322*^9, 3.838093313840153*^9}},
 CellTags->"c:3",ExpressionUUID->"39e70345-88c4-43ed-a9b1-cbbbf33d0989"],

Cell["\<\
If the private parameter verbose is set to True the initialization of the \
toolbox is done printing all the steps done by the init.m file.\
\>", "Text",
 CellChangeTimes->{{3.7548943517375546`*^9, 3.754894370341078*^9}, {
  3.758433278150164*^9, 3.7584333047881756`*^9}, {3.8380933393328323`*^9, 
  3.8380933821649847`*^9}},ExpressionUUID->"d87aed66-5047-4dad-9433-\
3a26fa35e172"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"QMRITools`$Verbose", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "QMRITools`"}]}], "Input",ExpressionUUID->"a558d44a-819d-4c6d-\
8542-a3c82d017a78"]
}, Closed]],

Cell[CellGroupData[{

Cell["List all Packages and toolboxes", "Subsection",
 CellChangeTimes->{{3.7548980189899817`*^9, 3.7548980262380056`*^9}},
 CellTags->"c:4",ExpressionUUID->"1037c5ba-e19a-4732-8360-f60e7a2fa01d"],

Cell["\<\
List of all the QMRITool packages and functions that are loaded. For more \
information about the functions open the \
\[OpenCurlyDoubleQuote]All-Functions.nb\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.7548944148778186`*^9, 3.754894435542356*^9}, {
   3.758433347012531*^9, 3.7584333792364187`*^9}, 
   3.758456464343998*^9},ExpressionUUID->"9def143d-308d-45ea-9146-\
337b684f48fb"],

Cell[BoxData[
 RowBox[{"Column", "@", 
  RowBox[{"QMRIToolsPackages", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.6905384062405696`*^9, 3.690538415376483*^9}, {
   3.7205166672714324`*^9, 3.7205166714124327`*^9}, 3.7519491491125264`*^9, {
   3.7519502607371855`*^9, 3.75195026609664*^9}, {3.7541410126212564`*^9, 
   3.7541410154539833`*^9}, {3.7546767448038144`*^9, 
   3.7546767457753997`*^9}, {3.7584343247944927`*^9, 3.7584343283449416`*^9}},
 CellLabel->
  "In[428]:=",ExpressionUUID->"66f0941d-b74d-4f23-a6d3-c5e28a3d33c5"],

Cell[BoxData[
 RowBox[{"QMRIToolsFunctions", "[", "25", "]"}]], "Input",
 CellChangeTimes->{{3.75195384157756*^9, 3.7519538451427054`*^9}, {
  3.751953883350589*^9, 3.751953894726776*^9}, {3.751954298264811*^9, 
  3.75195431300511*^9}, {3.7541411531669445`*^9, 3.7541411772612*^9}, {
  3.7546318724060435`*^9, 3.754631887081112*^9}, {3.754631931343922*^9, 
  3.7546319316547194`*^9}, {3.7548944382622967`*^9, 3.7548944389976683`*^9}},
 CellLabel->
  "In[429]:=",ExpressionUUID->"2daef7a9-1b9d-41bf-a8ae-40d232f006a0"],

Cell[BoxData[
 RowBox[{"CompilebleFunctions", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7548979688171806`*^9, 3.754897973478301*^9}, {
  3.768799206937463*^9, 3.76879921041768*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"017dd998-8132-4761-a2ee-0fc908034fca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NotebookOpen", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"PacletFind", "[", "\"\<QMRITools\>\"", "]"}], "]"}], "[", 
       "\"\<Location\>\"", "]"}], ",", "\"\<All-Functions.nb\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8374908586072235`*^9, 3.8374909507656727`*^9}, 
   3.837491232736039*^9},
 CellLabel->
  "In[452]:=",ExpressionUUID->"aab0b17b-4665-4b8a-a984-f94dd7cd5cc1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Memory Usage", "Subsection",
 CellChangeTimes->{{3.754898004573657*^9, 3.754898010080146*^9}},
 CellTags->"c:5",ExpressionUUID->"8ee5c0ae-81ad-4d98-953f-c7e16140406d"],

Cell["\<\
MemoryUsage gives a visual overview of all datasets in memory.\
\>", "Text",
 CellChangeTimes->{
  3.7548980027240057`*^9, {3.754898034906535*^9, 3.754898050783702*^9}, {
   3.7968832190760508`*^9, 3.7968832206492825`*^9}, {3.8380934022277136`*^9, 
   3.8380934050957375`*^9}},ExpressionUUID->"0f188b1d-4afc-4876-b969-\
fb73e86a3aa4"],

Cell[BoxData[
 RowBox[{"MemoryUsage", "[", "]"}]], "Input",
 CellChangeTimes->{{3.754897976850383*^9, 3.7548979821966505`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a66d2a05-f5eb-4f7c-8218-62ea88883b7a"],

Cell["\<\
Imaging datasets can become large so it can be good to clear them from memory \
if needed.\
\>", "Text",
 CellChangeTimes->{
  3.7548980027240057`*^9, {3.754898034906535*^9, 3.754898050783702*^9}, {
   3.7968832190760508`*^9, 3.7968832206492825`*^9}, {3.8380934022277136`*^9, 
   3.838093436790033*^9}},ExpressionUUID->"0b15c18e-462f-410c-a373-\
4af09d51be09"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
SpufqzrU9bnuVXVvPt1/nKnqXZrWs7+jBzNItDjMGCTNSa/9KVyTeWFUA+6U
nH/OwonKXxlvylz+cW9p327iFsom8n90ZtFSCLOtGUP1D81/nke0o6930s/P
W6YQ3RRRlBHrbK0/OSvnBcfxd3tEfTVosv77j5B/bM6uZn+37e41J9g3dZC0
HXn+aFXmSG2oEbIV3prYjHMWi6NuMxTGxpuT3JmYvOG0LZRt5N85S8g/XObt
xkj3n+44fxC+3Sxr6XrpTBF1ysjZF87Q8eA4C/fPy0j/nSiZf3CtXmvdf5b8
pw4SeaD9+VlWi5Rakfdp7jmLRc38Y+MtOpd/+t3IfxdsJX9zx9wPjiAxiM3r
t5pUA3iLLMqUcdWfknIq8vdPJuv1K8gif++SM03+I7dOfjDHr7Zz5B8/Z7HE
5K/HOTaX3Y2wNZvJv3u+6Mvf3kir87q/z39//PX/YMr46v9JCI5cuPGmsiJ/
P/PPsezTLeio+35mDZIhUTcEVzanjPw6nGWfWecsFn3NPxbnYC7bkfO8JB5i
Bu+fX81hUfk7K6bmTtE+DdbntXuz+R4zy6A/xXW2npQoiLJzgyNy97j8Y2dc
7W1PvU4tDjMGiSpqtSY14HKzunw9fM7CiT3w1cabMpedh+hk/nsht/xhX9zT
s/c13/QHgLVB/gfncU+z/4qv+QNABpD/4Xk8HtmOAoC9gPwBAA4I8gcAOCDI
HwDggGSW/wkAoGQWEe8eIPMHADggyB8A4IAgfwCAA4L8AaB0vnKxdUeXBPkD
QOnUWv679UH+AAC7AvkngPwBoHSQfwLIHwBKB/kngPwBoHSQfwLIHwDSaf9M
y+Z/nQX5J1Ca/MVfBNq6Katg+uf+4aQe7y9DTfyjeOGfk939n0ObF4dZJ507
ciL1Ki2UZee2ME8t6UT/IuVU+a/7B7w0+X9/fvQR/fj8brbcLv1PyP+nPPk/
ede/BGf/Lq/359s7wr8rW1VjoXjOWv/v78bOuQ/mxWH6SSeEa5C7/LOEYQvF
37SNx3svtczk5T9HnFf+rfgvN/vx84b8ffLL/16dr/cwn7F/+VT+VdRTsLHf
szthLYs6rbW/pDoxFFFN7PxvjI/H4Yn4Q+96KjoQrtFjB+qVLRSCVu4x8tSy
GlqrIrfh4ibG/KVlhxVa7Mq/Ub81vwX5O2whf+dvPbcDwWY4uth9Bby//N0e
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
l2NJ73B/o7WMZ9HhOpr52CU5avw3qeVFJsu/605QOK/89QTfyF9cBW4Xt6ws
498nIP+XiMm/GbtV97/zoeUfcdHASu5giNpbbpk8V3f3yeleV9YGnBzrcp0+
VNXA6oTS38FaYid0zuzl5Kaozej9+G9Ty4tMl79thDOw9pT5i0fBNtW3qX9w
gUD+i8jfDkyZ7zQDo7q2KUwzD+QgOZb84y6Kzmh/h+OBH2edTXmuudPwjjlZ
i4VdNRy+FrpJ9MCa2fgJBx7EmFgPxz9XLS8zV/7BMes0q2femn+4324xtw3I
f2n5O0+JzLCxt7LiCZj7mGjFgbMfvCdj8irpbRQllSeV2n24nuDvU/5qHOJd
/vEWgsQgUso5xaJ3PyMnVL8UZ7O3UKO3O08tS+A2JfhGTuq01d5XXqeB/ts+
bRoff9snWNIxe5qrAPJfS/4AAMuivOcv13bC9/zl3uYi0X9unvEif+QPAGXA
b/gmgPwBoHSQfwLIHwBKB/kngPwBoHSQfwLIHwBKB/kngPwBoHSQfwLIHwBK
B/kngPwBoHS+crF1R5cE+QMAHBDkDwBwQJA/AMABQf4AAAcE+QMAHBDkDwBw
QJA/AJQOr3omgPwBoHS++CWv+SB/ACgd5J8A8geA0kH+CSB/ACgd5J8A8geA
0kH+CSB/AEjncT2fTtV941Yg/wSQ/464VyfJ+fpotrazyzA0zWTJ7uDIOXeP
6YptsNa7lJPOFVWkXqWFsuzcFuapJZ26Tr2yqfKvB+KKlwhN/t+fH31EPz6/
my23S/8T8v9B/rvFzpXotJt2+NjGPVJ3uWto3WSl80kdaSxVVS+FwPlSwhY2
F1q7P7miPLXMJGkUSvLKvxX/5WY/ft6Qv09u+d+rc1Wd25zlWtlMVuandoi4
OW8pSesSyKmWMu20Y16evlug6k3pSTOA5J2SdkyzUVPQ6LED9coWCkEr9xh5
almNyIjSbkfFtH0e4t19rtFiV/6N+q35LcjfIb/8T90cbAaGMqLUUV5MyroQ
Tn9nLXf08ywsWGYM3VbHe2eLqv00oyoShaFjR+o1x8g6nrmNf648taxDPHXw
uhMrmDHzj7lfyt+uCXUl633Bho/LxbmBQP4v4Y5/O1Cc5ODg8o/fzIs7/hH8
5ZKMCwTL0TQ6JhJteywTFp2PjqRJWXRQr2xhO5jvZkP0IrR+LWswWf5dH4PC
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
    "], {{0, 709}, {511, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{511, 709},
  PlotRange->{{0, 511}, {0, 709}}]], "Input",ExpressionUUID->"538c1a9a-c29d-\
462c-aafe-1d9d7b0e26f9"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Data manipulation and visualisation", "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7548957249234715`*^9, 3.7548957340260887`*^9}, 
   3.754896730602828*^9},ExpressionUUID->"fa1ebb06-be4c-4fd9-86a2-\
22990e083b10"],

Cell[CellGroupData[{

Cell["Importing Data", "Subsection",
 CellChangeTimes->{{3.838093824664033*^9, 3.8380938305380044`*^9}},
 CellTags->"c:6",ExpressionUUID->"1e0a6fa4-16c6-4324-b877-be71023bb362"],

Cell["\<\
QMRITools mostly uses the nii file format for importing and exporting data\
\>", "Text",
 CellChangeTimes->{{3.8380938400888624`*^9, 
  3.838093863994013*^9}},ExpressionUUID->"efd8d2f7-3c25-48fa-8a75-\
1436a1fefc61"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"simple", " ", "3", "D", " ", "dataset"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data", ",", "vox"}], "}"}], "=", 
    RowBox[{"ImportNii", "[", "\"\<twoLegs.nii\>\"", "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.7548957374891505`*^9, 3.754895753834767*^9}, {
  3.7549964692498875`*^9, 3.7549964755607624`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"1ba38701-07bb-494e-82ee-7d21f0bb7296"],

Cell["To convert Dcm to nii format used DcmToNii", "Text",
 CellChangeTimes->{{3.8380938768734818`*^9, 
  3.8380938801996226`*^9}},ExpressionUUID->"61e99b7e-eee7-40e2-bb66-\
b5dfceb70997"],

Cell[BoxData[
 RowBox[{"DcmToNii", "[", "]"}]], "Input",
 CellChangeTimes->{{3.758440329175229*^9, 
  3.7584403314135933`*^9}},ExpressionUUID->"b43b9775-acff-4fd1-995d-\
6f0beb3f15d3"],

Cell["\<\
All Nii files in a folders can be compressed or uncompressed using \
\"CompressNiiFiles\" and \"ExtractNiiFiles\".
The nii import function is blind to the .gz extension.  \
\>", "Text",
 CellChangeTimes->{{3.758439698486055*^9, 3.7584397588478365`*^9}, {
  3.758440313504073*^9, 3.7584403278589478`*^9}, {3.838093875892956*^9, 
  3.838093886820865*^9}},ExpressionUUID->"d94c84c5-f9c9-40aa-9e19-\
7f2d8597b49a"],

Cell[BoxData[
 RowBox[{"CompressNiiFiles", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7584403338440795`*^9, 
  3.7584403404572797`*^9}},ExpressionUUID->"ec69b542-77af-4c0e-bf6a-\
9c11fe192c0f"],

Cell[BoxData[
 RowBox[{"ExtractNiiFiles", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7584403422927895`*^9, 
  3.758440345373513*^9}},ExpressionUUID->"fbd8dc75-cbe9-45b8-b0ca-\
9e88bdcb7310"]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting data Data", "Subsection",
 CellChangeTimes->{{3.7549994514814043`*^9, 3.7549994633790565`*^9}, {
  3.838093819509627*^9, 3.8380938213969173`*^9}},
 CellTags->"c:7",ExpressionUUID->"ef8f60c6-1123-44e0-aa4c-01d9fab680a3"],

Cell["\<\
QMRITools contains various function for displaying multi dimensional data .\
\>", "Text",
 CellChangeTimes->{{3.8380935488436594`*^9, 
  3.8380935764205422`*^9}},ExpressionUUID->"f051523a-5e41-48b6-80af-\
3536deff8048"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"plot", " ", "the", " ", "data"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"PlotData", "[", 
   RowBox[{"data", ",", "vox"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.75489575524968*^9, 3.7548957584863043`*^9}, {
  3.754995988097462*^9, 3.754995993429183*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"7d5996b5-b119-4a70-987f-a14d8037aa23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "plot", " ", "the", " ", "data", " ", "with", " ", "predefined", " ", 
    "range", " ", "and", " ", "color", " ", "function"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"PlotData", "[", 
   RowBox[{"data", ",", "vox", ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{"10", ",", "90"}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8380936249173255`*^9, 3.8380936465080476`*^9}, {
  3.8380936796240845`*^9, 3.8380936949027395`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"b4b1c6b9-f877-461e-a79b-2b02af76c0f4"],

Cell["\<\
Using GridData a mosaic of the slices can be generated, to minimize \
background AutoCropData can be used.\
\>", "Text",
 CellChangeTimes->{{3.8380935488436594`*^9, 3.8380935764205422`*^9}, {
  3.838093712996046*^9, 
  3.838093755029067*^9}},ExpressionUUID->"f189dc01-e90e-463b-b0e9-\
f84b0047f19b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "plot", " ", "the", " ", "data", " ", "as", " ", "a", " ", "grid"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"PlotData", "[", 
   RowBox[{"GridData", "[", 
    RowBox[{"data", ",", "5"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7548978782380743`*^9, 3.7548979239802003`*^9}, {
  3.7968834573206654`*^9, 3.796883506106614*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"8df64434-479f-48f3-bbf6-1802ed564d7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "plot", " ", "every", " ", "third", " ", "slice", " ", "of", " ", "the", 
    " ", "the", " ", "data", " ", "as", " ", "a", " ", "grid"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"PlotData", "[", 
   RowBox[{"GridData", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{";;", ";;", "3"}], "]"}], "]"}], ",", "3"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.796883522563427*^9, 3.7968835410341206`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"badbbd02-e57d-4ec4-810d-6622b65b0f90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "plot", " ", "every", " ", "third", " ", "slice", " ", "of", " ", "the", 
     " ", "the", " ", "data", " ", "as", " ", "a", " ", "grid"}], ",", " ", 
    RowBox[{"with", " ", "auto", " ", "cropping"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"PlotData", "[", 
   RowBox[{"GridData", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"First", "[", 
       RowBox[{"AutoCropData", "[", "data", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", ";;", "3"}], "]"}], "]"}], ",", "3"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.796883550169964*^9, 3.796883555922459*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"81cf639d-6f31-468e-b872-cad9f6306326"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"3", "D", " ", "data", " ", "viewer"}], ",", " ", 
    RowBox[{"Still", " ", "work", " ", "in", " ", "progress"}], ",", " ", 
    RowBox[{"currently", " ", "broken"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"PlotData3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"AutoCropData", "[", "data", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "vox"}], "]"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.755579992373293*^9, 3.7555799968214226`*^9}, {
  3.7555800831520844`*^9, 3.7555800968222437`*^9}, {3.755582133406342*^9, 
  3.7555821460149403`*^9}, {3.838093792055047*^9, 3.838093798472372*^9}, {
  3.865652313716716*^9, 
  3.865652330574695*^9}},ExpressionUUID->"c8c8f4f5-4916-4152-948c-\
043243f8ee7f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Automatically find cross section images", "Subsection",
 CellChangeTimes->{{3.754900085790572*^9, 3.7549001005289216`*^9}},
 CellTags->"c:8",ExpressionUUID->"b78c9120-ccf2-40e5-87d7-a484213417b3"],

Cell["\<\
GetSlicsPosition automatically finds the slices with the highest signal \
intensity in all three orientations
By also providing the voxel size the pos is in mm else it will be in voxel \
position.\
\>", "Text",
 CellChangeTimes->{{3.7549970681669893`*^9, 3.754997097646651*^9}, {
  3.838094343592039*^9, 
  3.8380943847283025`*^9}},ExpressionUUID->"dc9dff42-f5b7-4251-8736-\
a0dca6b379bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "get", " ", "the", " ", "positions", " ", "and", " ", "the", " ", "data", 
    " ", "on", " ", "those", " ", "positions"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pos", "=", 
     RowBox[{"GetSlicePositions", "[", 
      RowBox[{"data", ",", 
       RowBox[{"MakeCheckPlot", "\[Rule]", "True"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pdat", "=", 
     RowBox[{"GetSliceData", "[", 
      RowBox[{"data", ",", "pos"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7549001402595067`*^9, 3.7549001450991135`*^9}, {
  3.754900182877452*^9, 3.75490019767517*^9}, {3.7549971051334467`*^9, 
  3.75499710529536*^9}, {3.83809438877864*^9, 3.838094405178377*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"696f126b-efab-4a13-8aa9-b44de55e3f44"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQEf7B8Wz/x9N+KzPVTAodLJeGZQyXcon8NB89zi
y/crYHwBh6Qpdzv3VMP4Ig4p4isNhWJhfAmHsg/CYiscYXwZh4shn6bxCcD4
Cg6mlYKB6ce+QflKDoydEdInwmF8FYe3Z8Iffrn1FcpXc5Aq0p56rgnG13Bo
mMH+4IAHjK/lEPC25UO0Eoyv43AuvmFG4fcvUL6eg9qB7RfXHIDxDRwucPze
Pm0qjG/oMHtZm71xJ4xv5MD0wLdmUweMb+yw/PP2SrdeGN/EoT3r0SLNShjf
1OHCrA1BZpEwvpnDRAHrvy8UYHxzhyfTI2zmPIGFr4XDxe8xi/P7YXxLB1j4
AwCTNnpB
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Large], 
          RGBColor[1, 0, 0]], 
         PointBox[{{4., 1.4677091012356631`}, {4., 
          1.4677091012356631`}}]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Large], 
          RGBColor[0, 1, 0]], 
         PointBox[{{4., 1.4677091012356631`}, {4., 
          1.4677091012356631`}}]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Large], 
          RGBColor[0, 0, 1]], 
         PointBox[{{12.5, 1.338452587770242}, {12.5, 
          1.338452587770242}}]}}}, {{}, {}}}}, {
    Axes -> True, ImageSize -> 200, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 1.1948342394753324`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 25.}, {1.1948342394753324`, 1.4677091012356631`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxd1H9M1HUcx/GPuRhtGcSsAWPIBWlzWCpERIgvFUnyhLvjjvspd17iiNXs
h4YuGF/mlGb2A90Iq+UxpGC1wd1WhhF+/8Cw4Y9YuiYUuxYnUURWmNmvVeP9
bfH6brfbY6977rN9v3dnCu60Vd+klAr98/r3fe66ulbNvzCf8eRE8mJyMjmN
nEG+i5xFXkq+h7ycnE2+l7ySvIq8mpxDziXfT84jP0DOJz9ILiA/RC4kryEX
kdeSMd8aWa2jnazW005WG2gnq2LayWoj7WRVQjtZPUw7WW2inaxKaSerR2gn
q820k5WZdjP2xAXN7Ufj5Xe4Ba82ryprChbMWduCwcanUZPmk70MpXWtp1ps
z8hehr6sFU3dxQdkL8cR59D0zPNtspcjsr2mOVbXLbsFr3106430zz6YMyz4
Pf1y5rvDp+XzFrQ/tjcl/btP56xbsGnRNkv8sc+lt2Jp1fI7Yhnj0ltR1JlU
3zbxlfRWJCW6F16qmpDeik8Ot96WPnxFehvyUhNjzQempLdhQf/o142Raelt
OJrurTp0i/wv6Tbs2PrXjO/9H6WvQO1Awzuvb/5Z+gpYRz2RhPCs9BXoXVRr
vW/4mvQVKFpz9VzJvl+ktyPy68j+4JgYdqzY0LXz5KRYs2OswVzf2y/W7djh
7zuevNvoHRhYWPBcZ47RO5AbHk8LLTZ6B7rCy14ZyTB6B/x5fxaarUZfiYMv
ljtqW42+Ev5Iy2R1zOgrcW7gzQXfrrwufSUaTlfZq58QKyfOjKVYit8Qw4k/
TLMjcX1izYnBF7qevPCe0Tth+v5L0xf7jN6Fm4eQtutOo3dhKqlEb3nKON+F
G7GPC/M7jfvnwvX9rolTZ+T+KjcSOuJ6TKPG/Xej0FPfsTryk/Ru3N5a2pua
Lc9Ld6Ptgqku59kZ6T1o6u9enz9pPH8PjvnjfY0pMek9uNg5FT7eHpXeg29O
bEwd++Gy9F6oyfMnd+VelN6Lng8PDg3sOS+9F4eveMLjlwal9+Ltu8/2xGXJ
91358Nt09jprzVvS+zBrOrtk2ZKXpffhpczka6G9j0vvw6GE3ScyO+T3qLZC
/f8CWSPrZFVFPVkj62Tlp56skXWyCsx3BhnkAFkjh8g6OUpW2+h8MsgBskYO
kXVylKyCdD4Z5ABZI4fIOjlKVo/S+WSQA2SNHCLr5ChZbf/PfwNoNHdZ
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Large], 
          RGBColor[1, 0, 0]], 
         PointBox[{{93., 1.48267251980917}, {93., 
          1.48267251980917}}]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Large], 
          RGBColor[0, 1, 0]], 
         PointBox[{{93., 1.48267251980917}, {93., 
          1.48267251980917}}]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Large], 
          RGBColor[0, 0, 1]], 
         PointBox[{{80., 0.741336259904585}, {80., 
          0.741336259904585}}]}}}, {{}, {}}}}, {
    Axes -> True, ImageSize -> 200, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 160.}, {0, 1.48267251980917}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxd1AlQVHUcB/ANbERl0PLi0jSJJPFOXLn2CwIix3IvCyzwgEwxHUOFgBVd
IXWQVALEUFNENAcVb4lCeJoihggMpw7mZim2iojEpWjH8Ps3+X8zOzuf+c73
f7z3f29q9Br/ZXoSiST/n9+//0PXM5nkzQtv0oDzGM7jOBtzNuc8hfP7nC04
W3KezvkjztacZ3Gew3ku53mc53P+mPMCzjacF2LlAeUL+5JZdJ+luPK89Ni5
4mDyIiQbLbw859Basi26svdWGphsIdth7TnF8ndKssj2qPvsQeej1n1kB6hr
f1reF3+Y7IhEpexy96cnyTIcUHefXzOjlAzY6w7tG5lZOWQNsMHYzcZhWgPl
Tsi7OMcuSnqXciecvbXwg2n6v1PujB9zPIZPNPmDcmfIgyte2qg7KF+M2jOO
3YMaOleaxbC8KJPJW7sod0GWvpFrXv1zyl1QYT69PTOxm3JXjLQOiJY1kjWu
yDGq6mrsYLkbHny5eYdHE8vdoK3pT9hUwPIlePfazVF98Sxfgk5t2YU7y1ju
jk7nrpapq1nujgmpr33Gp7B8KWJkbRlxmSxfCllaV1L1EZZ74HWARXnKzyz3
wIKVNdtjjP6k3BO74nTLB1eQNZ5YW9Cr3d/Mci+4GHyFtpgeyr1Q5/BK7W7U
S7k3qtq17sYiWeMNx/7JiePlfZTLMVDuNbN9B1kjh4VhScezLSz3QbH1oN06
f5b7wP+RSZPvMJb7IvbVvplFxTQ+fFHbYF9r4MPm80XCilQHk9u0PvGfvOqp
s7sLWeKHa2OfvHc0ivYDP1RMLBwz2M+epx88jwXNkvbR8xf9cNascNwF8Qn1
/XG6/lRI53cPqe+POl30vIN2Wur7w9T0kmGG2Eh9f4SrrAzbVNepHwAr055m
lFykfgB2tqUnu2QUUD8ATVVeGeoPt1M/AM5JKbKa40nUD8Tzs/uba0anUT8Q
7q2eb+mqsqkfiPkFHiNULTSeGIgNvbMLI+POUD8Itxou2RxJq6B+EF7G532d
MKqa+kFYZVT3cNTWJuoH4Y4wvNQp9B71FcgboZOkD9D7BAUGfliqFz9aR30F
7I/Vj1MLT6mvQNyJ3UFoZd/pYMTe3jPQNYzuN4Ix3lyy8f4ddv+DceICfqvI
pvMpBmPvXWWquRs7f0qUjL7+2KSbPT8lWlzHmtw9yM6jEveVN51uONJ5EJXI
rXxcOKGKnc8QRJ6e3OYspfOEEDxLndliEcvOWwiK9eszG2eTxRCY/mJmuyiZ
9UNhqyibmMrOP0KRNONp0T0pe19CoSePyhPkbP2hMCvTO3D1Ku1PEoYXZeu1
prvY/sNQu8ogy30b238Y4ioOZ1WzXAyD9crdf31byvoqhM/d+ijRksaHCsHZ
/RuybrD3WYX1Nobx6s9pPaIKm9NvrJ+kY/cvHANbcjfvNGXrD8fV1cONC/vY
+sOxK9fkyss01g+H3Z7j3i/K2fcjAvk3a1B0nK0/AmV5lad2+9H3UROB5r0u
LhZendSPwNsnynsU0sfUj0ROR2JR6Dr2/kSivFVWr3D8lfqRqEkxuN8rbaV+
JA4ZbwzMab9FfQG5J2VjyiZdGfIUAcIXSzbJZ5+n8QQYitKgWNXRIQsCCuu7
s05f+4bGF+Bq++D7Xrf0IecLmHdvW49lXALNJ8Cxqtpqo37EkLUCLnmPaEia
bk/zR0FhlXy41MyQ5o+C5P8XOAucNZzzOYuctZwl0W96CmdwFjhrOOdzFjlr
OUtiuPk5g7PAWcM5n7PIWctZ8sl//hvkq2Jk
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Large], 
          RGBColor[1, 0, 0]], 
         PointBox[{{60., 1.4721442956469544`}, {101., 1.463169899500084}, {
          116., 1.318983560755781}}]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Large], 
          RGBColor[0, 1, 0]], 
         PointBox[{{60., 1.4721442956469544`}, {101., 
          1.463169899500084}}]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Large], 
          RGBColor[0, 0, 1]], 
         PointBox[{{80., 0.7360721478234772}, {80., 
          0.7360721478234772}}]}}}, {{}, {}}}}, {
    Axes -> True, ImageSize -> 200, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 160.}, {0, 1.4721442956469544`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.8656523416392546`*^9, 3.8656523487757373`*^9}, 
   3.8662556175914507`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"c8595e3b-1c54-4fb4-a178-be69b55183bc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"make", " ", "images", " ", "of", " ", "the", " ", "data"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Grid", "[", 
   RowBox[{"MakeSliceImages", "[", 
    RowBox[{"pdat", ",", "vox", ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
     RowBox[{"ImageLegend", "\[Rule]", "True"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.754900330522708*^9, 3.754900358891019*^9}, {
  3.838094407481036*^9, 3.8380944188749914`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"41ec57c1-ef10-4a83-b8a8-146c45bdf378"]
}, Closed]],

Cell[CellGroupData[{

Cell["Rescaling Data", "Subsection",
 CellChangeTimes->{{3.7548972317539077`*^9, 3.7548972416276026`*^9}},
 CellTags->"c:9",ExpressionUUID->"0d830d7c-dc92-4a0f-96b0-5cb8ad6ed729"],

Cell["Datasets can be rescaled to different resolutions.", "Text",
 CellChangeTimes->{{3.838094508589285*^9, 
  3.838094526792285*^9}},ExpressionUUID->"aef90da1-5cda-43d0-ba41-\
fc9641543c86"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"to", " ", "specific", " ", "dimensions"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataReD", "=", 
     RowBox[{"RescaleData", "[", 
      RowBox[{"data", ",", 
       RowBox[{"{", 
        RowBox[{"50", ",", "100", ",", "100"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "data", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "dataReD", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7548972474095426`*^9, 3.754897282795484*^9}, {
  3.7548973385554056`*^9, 3.7548973428257017`*^9}, {3.75491362838943*^9, 
  3.75491362884214*^9}, {3.754996052863373*^9, 3.754996054764976*^9}, {
  3.754996104164212*^9, 3.7549961231872067`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"2c5f1eed-b1d2-413a-a711-e9e26a4cb615"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"to", " ", "specific", " ", "voxel", " ", "Size"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"voxNew", "=", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2", ",", "2"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataRe", "=", 
     RowBox[{"RescaleData", "[", 
      RowBox[{"data", ",", 
       RowBox[{"{", 
        RowBox[{"vox", ",", "voxNew"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "data", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "dataRe", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7548972474095426`*^9, 3.754897349049699*^9}, {
  3.7549136307567587`*^9, 3.754913632740061*^9}, {3.7549960717341003`*^9, 
  3.754996116028576*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"0711c021-52b7-4374-b710-c62812e3419e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Data Operations", "Subsection",
 CellChangeTimes->{{3.7584552323003864`*^9, 3.7584552380227914`*^9}},
 CellTags->"c:20",ExpressionUUID->"f6a0af4d-c709-4e10-972b-30d8c0b63b74"],

Cell[CellGroupData[{

Cell["Rotate data Dimensions", "Subsubsection",
 CellChangeTimes->{{3.869797265894533*^9, 
  3.8697972759044476`*^9}},ExpressionUUID->"014127e0-d730-46e1-bfe9-\
a6f749fdb158"],

Cell["Rotate the dimensions left or right", "Text",
 CellChangeTimes->{{3.758455269368188*^9, 
  3.7584552810795007`*^9}},ExpressionUUID->"f5dfccdd-d0a8-49d0-9956-\
18c3955c2e22"],

Cell[BoxData[
 RowBox[{"Dimensions", "/@", 
  RowBox[{"{", 
   RowBox[{"data", ",", 
    RowBox[{"RotateDimensionsLeft", "@", "data"}], ",", 
    RowBox[{"RotateDimensionsRight", "@", "data"}], ",", 
    RowBox[{"RotateDimensionsLeft", "[", 
     RowBox[{"data", ",", "2"}], "]"}], ",", 
    RowBox[{"ReverseDimensions", "@", "data"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.869797227848858*^9, 3.8697972575666513`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"0cc0a0a1-1e6b-4975-916e-86206f067c29"]
}, Closed]],

Cell[CellGroupData[{

Cell["Remove singleton dimensions from data", "Subsubsection",
 CellChangeTimes->{{3.86979827665543*^9, 
  3.8697983089167886`*^9}},ExpressionUUID->"23fea064-6b37-41fa-9165-\
a2081fe0b5aa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataS", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "#", "}"}], "&"}], "/@", "data"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "@", "dataS"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "@", 
  RowBox[{"Squeeze", "@", "dataS"}]}]}], "Input",
 CellChangeTimes->{{3.8697983187784405`*^9, 3.869798335429855*^9}, {
  3.8697983828224196`*^9, 3.8697984181658196`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"e25e9312-5f35-40c7-bfca-fe72bc85ed2c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Data array to vector", "Subsubsection",
 CellChangeTimes->{{3.86979731093499*^9, 
  3.869797319271755*^9}},ExpressionUUID->"143d21bd-6321-4173-ad93-\
05a606106c8b"],

Cell["Convert non zero values to data vector", "Text",
 CellChangeTimes->{{3.869797322859672*^9, 
  3.869797334975584*^9}},ExpressionUUID->"3134327b-eef2-428f-94bf-\
02a86341a4d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vec", ",", 
     RowBox[{"{", 
      RowBox[{"dim", ",", " ", "coor"}], "}"}]}], "}"}], "=", 
   RowBox[{"DataToVector", "[", "data", "]"}]}], ";"}], "\n", 
 RowBox[{"Dimensions", "/@", 
  RowBox[{"{", 
   RowBox[{"data", ",", "vec"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.869797377628072*^9, 3.869797407999939*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"87060ca1-4ed9-453e-b81b-530b00a81a85"],

Cell["Convert vector back to array", "Text",
 CellChangeTimes->{{3.8697975448768067`*^9, 
  3.8697975541074796`*^9}},ExpressionUUID->"dad8cf23-94a8-4b2e-8483-\
0afd4b43de7d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{"VectorToData", "[", 
    RowBox[{"vec", ",", 
     RowBox[{"{", 
      RowBox[{"dim", ",", "coor"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"data", "===", "data2"}]}], "Input",
 CellChangeTimes->{{3.8697974110407486`*^9, 3.8697974252457933`*^9}, 
   3.869797526313775*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"645596ea-f203-4c73-8ef1-2d912a79b250"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cropping", "Subsection",
 CellChangeTimes->{{3.754895767888637*^9, 3.7548957752315803`*^9}},
 CellTags->"c:10",ExpressionUUID->"d51e43d8-34ee-4df9-8bf3-5b69733ed3ff"],

Cell[CellGroupData[{

Cell["Automatic crop", "Subsubsection",
 CellChangeTimes->{{3.7548959281933174`*^9, 3.754895939466611*^9}},
 CellTags->"c:11",ExpressionUUID->"968fa70b-c4b4-4d48-a949-8da4355d6428"],

Cell["\<\
To automatically remove the background from images FindCrop or AutoCropData \
can be used .\
\>", "Text",
 CellChangeTimes->{{3.8380945593184867`*^9, 
  3.838094580045287*^9}},ExpressionUUID->"8247c756-42fb-4cde-ab32-\
71f7738c8599"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "corp", " ", "finds", " ", "the", " ", "crop", " ", "values", 
    " ", "to", " ", "remove", " ", "zero", " ", "background"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"crop", "=", 
   RowBox[{"FindCrop", "[", "data", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7548957772353544`*^9, 3.75489578023491*^9}, {
   3.7548958558205953`*^9, 3.754895858171589*^9}, {3.796883647542039*^9, 
   3.796883665395658*^9}, 3.838094547726042*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"0ec03379-9273-43c8-969d-41d370813788"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"apply", " ", "thecropping"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dataCrop", "=", 
    RowBox[{"ApplyCrop", "[", 
     RowBox[{"data", ",", "crop"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.754895864337891*^9, 3.754895874794386*^9}, {
  3.79688366999612*^9, 3.7968836752993383`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"74538836-333a-4a62-b9e6-38ff5ee95d7f"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataCrop", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548958768655567`*^9, 3.7548958814837*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"5d2b3531-cdd4-413e-b108-ae67e2b9af5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"do", " ", "this", " ", "in", " ", "one", " ", "go"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dataCrop", ",", "crop"}], "}"}], "=", 
    RowBox[{"AutoCropData", "[", "data", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7584345511696253`*^9, 3.758434577431771*^9}, {
  3.796883683501377*^9, 3.79688368861938*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"63dc3f77-e418-418a-bf38-bffe8d178bb3"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataCrop", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548958768655567`*^9, 3.7548958814837*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"13b3872f-1f90-4567-aefb-ea163cfd148c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Apply To Rescaled Data", "Subsubsection",
 CellChangeTimes->{{3.754996141489622*^9, 3.754996149022614*^9}},
 CellTags->"c:12",ExpressionUUID->"267579d6-9b73-4c4b-aa48-be3e08dfda04"],

Cell["\<\
When the crop dimensions were defined on a dataset with different voxel size \
this can still be used .\
\>", "Text",
 CellChangeTimes->{{3.838094605246358*^9, 
  3.838094638305482*^9}},ExpressionUUID->"8a76c358-d64d-4f4b-b485-\
c80d35efd628"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataCR", "=", 
   RowBox[{"ApplyCrop", "[", 
    RowBox[{"dataRe", ",", "crop", ",", 
     RowBox[{"{", 
      RowBox[{"vox", ",", "voxNew"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754996151823556*^9, 3.754996180449548*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"9298008e-ebb6-4839-b787-3eb2650efb20"],

Cell[BoxData[
 RowBox[{"PlotData", "[", "dataCR", "]"}]], "Input",
 CellChangeTimes->{{3.754996181470619*^9, 3.754996185551729*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"c002fff5-58c3-459d-bd3c-c4ccbb6ca90d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Manual crop", "Subsubsection",
 CellChangeTimes->{{3.7548959281933174`*^9, 3.7548959469545145`*^9}},
 CellTags->"c:13",ExpressionUUID->"9c3fe646-8c82-4fa5-ba13-4d6d8bf9eb94"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "manually", " ", "find", " ", "the", " ", "crop", " ", "dimensions", " ", 
    "with", " ", "a", " ", "interactive", " ", "viewer"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dataCropM", ",", "crop"}], "}"}], "=", 
     RowBox[{"CropData", "[", 
      RowBox[{"data", ",", "vox"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "dataCropM", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.754895886578994*^9, 3.754895900203232*^9}, {
  3.754898147470261*^9, 3.7548981511626015`*^9}, {3.8380946571775484`*^9, 
  3.838094674859564*^9}, {3.865652470936756*^9, 3.865652476637435*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"8d1daacd-8970-4659-9835-8f732610f46c"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataCropM", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548959110895987`*^9, 3.754895916314752*^9}, 
   3.865652479510805*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"30981062-8ace-4811-b1a0-840f0ffb8e73"]
}, Closed]],

Cell[CellGroupData[{

Cell["Reverse the Crop", "Subsubsection",
 CellChangeTimes->{{3.796883884010044*^9, 3.796883892212609*^9}},
 CellTags->"c:14",ExpressionUUID->"55749168-63df-4963-aab6-cb1fc8c970cf"],

Cell["\<\
When the data was cropped the original dimensions can be restored.\
\>", "Text",
 CellChangeTimes->{{3.8380947033420153`*^9, 
  3.838094727736802*^9}},ExpressionUUID->"a314f89f-489d-428a-b3e4-\
44c58b98ad36"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "reverse", " ", "the", " ", "crop", " ", "to", " ", "the", " ", "original",
     " ", "dimensions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dim", "=", 
    RowBox[{"Dimensions", "[", "data", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataRev", "=", 
     RowBox[{"ReverseCrop", "[", 
      RowBox[{"dataCrop", ",", "dim", ",", "crop"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "dataRev", "]"}], "\[IndentingNewLine]", 
   RowBox[{"dataRev", "\[Equal]", "data"}]}]}]], "Input",
 CellChangeTimes->{{3.7548980821477985`*^9, 3.754898209277037*^9}, {
  3.754996203266838*^9, 3.7549962378253393`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"95428a0b-7e40-4b51-92e8-5da74f819672"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Splitting Data", "Subsection",
 CellChangeTimes->{{3.7548959535708256`*^9, 3.7548959678359003`*^9}},
 CellTags->"c:15",ExpressionUUID->"93607360-ed31-4145-8241-5b261eccc5b0"],

Cell[CellGroupData[{

Cell["Split and Stitch", "Subsubsection",
 CellChangeTimes->{{3.7548966988321905`*^9, 3.7548967050227375`*^9}},
 CellTags->"c:16",ExpressionUUID->"4f8cb032-dea0-497b-bd1c-d723913ce783"],

Cell["\<\
Often muscle data is scanned bilaterally however it is better to analyze both \
legs separately.\
\>", "Text",
 CellChangeTimes->{{3.8380947434773197`*^9, 
  3.838094773385198*^9}},ExpressionUUID->"d945c358-7984-4b6f-99a0-\
004c192287e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "automatically", " ", "split", " ", "the", " ", "data", " ", "into", " ", 
    "left", " ", "and", " ", "right"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"left", ",", "right", ",", "cut"}], "}"}], "=", 
     RowBox[{"CutData", "[", 
      RowBox[{"data", ",", "True"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "cut"}]}]], "Input",
 CellChangeTimes->{{3.75489597096496*^9, 3.754895981690065*^9}, {
  3.8380950996819115`*^9, 3.838095132956664*^9}, {3.838095175643786*^9, 
  3.838095176500496*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"3cd642da-fd22-4802-9288-f01565803535"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"left", ",", "right", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548959833550625`*^9, 3.7548959917719293`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"203bb6e8-79b2-4927-b104-77c6b4bb166c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"join", " ", "the", " ", "data", " ", "back", " ", "together"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataStich", "=", 
     RowBox[{"StichData", "[", 
      RowBox[{"left", ",", "right"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"data", "==", "dataStich"}]}]}]], "Input",
 CellChangeTimes->{{3.754896002692444*^9, 3.754896037290599*^9}, {
  3.8380951350838985`*^9, 3.8380951654685345`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"a26cc5d9-e803-45fa-b22e-fae71af4e8d4"],

Cell[BoxData[
 RowBox[{"PlotData", "[", "dataStich", "]"}]], "Input",
 CellChangeTimes->{{3.754896038898155*^9, 3.7548960516428165`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"3309429c-25c3-464f-a97a-6193bde41c61"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"cut", " ", "with", " ", "known", " ", "value"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"left", ",", "right", ",", "cut"}], "}"}], "=", 
    RowBox[{"CutData", "[", 
     RowBox[{"data", ",", "80"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7549962901804953`*^9, 3.754996316284766*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"c7b59436-5334-4cdf-8c43-2d2fe93b3917"]
}, Closed]],

Cell[CellGroupData[{

Cell["Example make both legs left", "Subsubsection",
 CellChangeTimes->{{3.7548960915332003`*^9, 3.754896117086524*^9}},
 CellTags->"c:17",ExpressionUUID->"2e5b960f-ce39-4cd9-a390-ec4c724d0794"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Split", " ", "in", " ", "Left", " ", "and", " ", "right", " ", "leg"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"left", ",", "right", ",", "cut"}], "}"}], "=", 
     RowBox[{"CutData", "[", "data", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "crop", " ", "to", " ", "minimal", " ", "Space", " ", "and", " ", "flip", 
     " ", "right", " ", "leg"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"leftC", ",", "rightC"}], "}"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"AutoCropData", "[", "#", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"left", ",", "right"}], "}"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rightC", "=", 
     RowBox[{"Reverse", "[", 
      RowBox[{"rightC", ",", 
       RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataC", "=", 
     RowBox[{"{", 
      RowBox[{"leftC", ",", "rightC"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "find", " ", "maximal", " ", "common", " ", "dimensions", " ", "and", " ",
      "make", " ", "into", " ", "one", " ", "dataset", " ", "of", " ", "same",
      " ", "dimensions"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"dimMax", "=", 
     RowBox[{"FindMaxDimensions", "[", "dataC", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dataP", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PadToDimensions", "[", 
         RowBox[{"#", ",", "dimMax"}], "]"}], "&"}], "/@", "dataC"}], "]"}]}],
     ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7548961301895275`*^9, 3.7548961547482977`*^9}, {
  3.7548962451826963`*^9, 3.754896265258726*^9}, {3.7548964883490496`*^9, 
  3.7548964898496*^9}, {3.7548965238705263`*^9, 3.7548965522816167`*^9}, {
  3.754896607389285*^9, 3.754896665362072*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"ccc5fd89-681d-4742-9855-ddf4ecfe57a6"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataP", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548965964969034`*^9, 3.7548965998974333`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"53fddc99-c4e8-45c0-a9f3-8bc732aba17d"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Joining multiple stacks", "Subsection",
 CellChangeTimes->{{3.7548959535708256`*^9, 3.7548959678359003`*^9}, {
  3.7555791021749706`*^9, 3.7555791092126975`*^9}},
 CellTags->"c:18",ExpressionUUID->"6033b32e-4c89-4553-869f-3243e5607bf1"],

Cell[CellGroupData[{

Cell["Import", "Subsubsection",
 CellChangeTimes->{{3.8697984915957127`*^9, 
  3.8697984952241735`*^9}},ExpressionUUID->"ea8bc95a-8f0e-4b12-99a0-\
56426ab51ec4"],

Cell["\<\
Data can be acquired in multiple stacks  as in the example below\
\>", "Text",
 CellChangeTimes->{{3.838095214205922*^9, 
  3.838095237563869*^9}},ExpressionUUID->"31deae2e-9563-4b77-8989-\
bf812ff3c948"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dataJ", ",", "voxJ"}], "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ImportNii", "/@", 
     RowBox[{"FileNames", "[", 
      RowBox[{"\"\<Join*.nii.gz\>\"", ",", "\"\<\>\""}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"overlap", "=", "5"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "slice", " ", "overlap", " ", "between", " ", 
    "stacks"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.755579130003971*^9, 3.755579220092123*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"a0948096-3a17-480e-88aa-5f8f54122f9a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"all", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ArrayPad", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "]"}], "&"}], "/@", 
      "dataJ"}], ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MakeSliceImages", "[", 
   RowBox[{
    RowBox[{"GetSliceData", "[", 
     RowBox[{"all", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "140", "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"voxJ", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7584383745606956`*^9, 3.758438458513606*^9}, 
   3.758439203171208*^9, {3.8380952666888227`*^9, 3.8380952747166986`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"414b81d5-a5f7-405e-88ec-356977cae10c"],

Cell["\<\
With JoinSets multiple stacks which have overlapping slices can be joined \
into one set. 
If There is motion between the stacks this can be resolved using the option \
MotionCorrectSets which uses rigid registration of the overlap to align the \
sets.
Using JoinSetSplit the data can be split into a left and right side. \
\>", "Text",
 CellChangeTimes->{{3.75557935543929*^9, 3.7555794024582915`*^9}, {
  3.7555796023296337`*^9, 3.755579633544137*^9}, {3.758439242175694*^9, 
  3.7584392453430185`*^9}},ExpressionUUID->"7f20e0cc-33ba-4b02-a0c9-\
60eb0f4f1498"],

Cell[BoxData[
 RowBox[{"Column", "@", 
  RowBox[{"Options", "@", "JoinSets"}]}]], "Input",
 CellChangeTimes->{{3.7555792952002583`*^9, 3.755579301563833*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"33670142-c814-4498-b5e7-7e7f8a967c11"]
}, Closed]],

Cell[CellGroupData[{

Cell["Joining multiple data sets", "Subsubsection",
 CellChangeTimes->{{3.869798500953581*^9, 
  3.869798519141139*^9}},ExpressionUUID->"3ace22ec-97f7-4ba5-933b-\
08968226a40f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "joining", " ", "the", " ", "sets", " ", "with", " ", "data", " ", 
    "normalization"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"joined", "=", 
     RowBox[{"JoinSets", "[", 
      RowBox[{"dataJ", ",", "overlap"}], "]"}]}], ";"}], "\n", 
   RowBox[{"Row", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MakeSliceImages", "[", 
        RowBox[{
         RowBox[{"GetSliceData", "[", 
          RowBox[{"all", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "}"}], ",", 
             RowBox[{"{", "140", "}"}], ",", 
             RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"voxJ", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"MakeSliceImages", "[", 
        RowBox[{
         RowBox[{"GetSliceData", "[", 
          RowBox[{"joined", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "}"}], ",", 
             RowBox[{"{", "140", "}"}], ",", 
             RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"voxJ", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.755579226890072*^9, 3.755579254219699*^9}, {
   3.838095369260709*^9, 3.8380953843003683`*^9}, 
   3.8697984774952874`*^9},ExpressionUUID->"58d93156-a8c6-41f9-b9b1-\
fcef6a398386"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "joining", " ", "the", " ", "sets", " ", "with", " ", "data", " ", 
    "normalization", " ", "and", " ", "motion", " ", "correction"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"joinedC", "=", 
    RowBox[{"JoinSets", "[", 
     RowBox[{"dataJ", ",", "overlap", ",", 
      RowBox[{"MotionCorrectSets", "\[Rule]", "True"}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.755579226890072*^9, 3.755579254219699*^9}, {
  3.7555794661552687`*^9, 3.7555794729238205`*^9}, {3.8380953912286263`*^9, 
  3.838095396492039*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"e6b3fb20-ac33-4f43-b582-08fbcf2dfdcb"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"Flatten", "@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MakeSliceImages", "[", 
      RowBox[{
       RowBox[{"GetSliceData", "[", 
        RowBox[{"all", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "140", "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"voxJ", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"MakeSliceImages", "[", 
      RowBox[{
       RowBox[{"GetSliceData", "[", 
        RowBox[{"joined", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "140", "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"voxJ", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"MakeSliceImages", "[", 
      RowBox[{
       RowBox[{"GetSliceData", "[", 
        RowBox[{"joinedC", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "140", "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"voxJ", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.838095409004749*^9, 3.865652704122125*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"e09870e4-80d3-45a8-9a7b-26fea92ecc83"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"joined", ",", "joinedC", ",", 
   RowBox[{"voxJ", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7555792715562243`*^9, 3.755579290655113*^9}, {
  3.7555796934206696`*^9, 3.755579695114016*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"fc9202f0-a708-46b9-8993-d99ef8b9d57b"],

Cell["\<\
Using MotionCorrectSets->True is similar to using CorrectjoinSetMotion\
\>", "Text",
 CellChangeTimes->{{3.758439253411528*^9, 
  3.75843928223833*^9}},ExpressionUUID->"80e50c85-aa4a-47c4-beb7-\
0309b49cd6c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"joinedC2", "=", 
   RowBox[{"JoinSets", "[", 
    RowBox[{
     RowBox[{"CorrectJoinSetMotion", "[", 
      RowBox[{"dataJ", ",", 
       RowBox[{"voxJ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "overlap"}], "]"}], ",", 
     "overlap"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584392837338314`*^9, 3.7584393160317907`*^9}, {
  3.7584394021774907`*^9, 3.758439402366995*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"73c1be5e-ad36-4648-8909-3528e2e910da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"display", " ", "the", " ", "data", " ", "with", " ", "PlotData"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"vis1", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ArrayPad", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"-", "10"}]}], "]"}], "&"}], "/@", "dataJ"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vis2", "=", 
     RowBox[{"ArrayPad", "[", 
      RowBox[{"joined", ",", 
       RowBox[{"{", 
        RowBox[{"22", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"PlotData", "[", 
    RowBox[{"vis1", ",", "vis2", ",", 
     RowBox[{"voxJ", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "500"}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7555847214767513`*^9, 3.755584805729162*^9}, {
  3.7555848588179345`*^9, 3.7555848721598897`*^9}, {3.7555849881995764`*^9, 
  3.7555849909446087`*^9}, {3.7555850278273573`*^9, 3.755585109091962*^9}, {
  3.8380956083756275`*^9, 3.8380956219324436`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"de6395af-73f2-4054-8b7c-bf1b424351e4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Splitting joined data", "Subsubsection",
 CellChangeTimes->{{3.8697985111137614`*^9, 
  3.8697985213680754`*^9}},ExpressionUUID->"3d38093a-d085-4139-a1ba-\
086e58ea732c"],

Cell["\<\
After joining datasets they can also be split back into seperate stacks\
\>", "Text",
 CellChangeTimes->{{3.838095626240649*^9, 
  3.838095646834546*^9}},ExpressionUUID->"cf35c9c2-e6f8-484d-8070-\
2365047438e9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"split", "=", 
   RowBox[{"SplitSets", "[", 
    RowBox[{"joined", ",", "7", ",", "5"}], "]"}]}], ";"}], "\n", 
 RowBox[{"Dimensions", "/@", 
  RowBox[{"{", 
   RowBox[{"dataJ", ",", "joined", ",", "split"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.7584347326051683`*^9, 3.7584347494823847`*^9}, {
   3.7584348910358076`*^9, 3.7584349309490457`*^9}, 3.8380956504328575`*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"f0370879-7fa9-4d95-9ac3-91e74e92672f"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["General functions", "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7548957249234715`*^9, 3.7548957340260887`*^9}, 
   3.754896730602828*^9, {3.7584543478729453`*^9, 
   3.7584543507405863`*^9}},ExpressionUUID->"2d81b315-c178-4a19-82de-\
edec401ad759"],

Cell[CellGroupData[{

Cell["Define Data", "Subsection",
 CellChangeTimes->{{3.7584547733856807`*^9, 3.758454776199445*^9}},
 CellTags->"c:19",ExpressionUUID->"6ac426ee-2cf2-4609-a70a-b7bbae6bed70"],

Cell["\<\
Noise1 contains no zero values with mean 50 and standard deviation 10, noise \
2 has 10 zero columns\
\>", "Text",
 CellChangeTimes->{{3.7584547806476603`*^9, 3.758454816483077*^9}, {
  3.7584549997473*^9, 
  3.7584550122754955`*^9}},ExpressionUUID->"0d5ac3c1-0a5f-441b-82aa-\
56ceb05deba1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"noise1", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"50", ",", "10"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "60", ",", "70"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noise2", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"50", ",", "10"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "60", ",", "70"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noise2", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", "10"}]}], "]"}], "]"}], "=", 
   RowBox[{"0", 
    RowBox[{"noise2", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"1", ";;", "10"}]}], "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7584543728903065`*^9, 3.758454486434905*^9}, {
  3.758454557252824*^9, 3.7584545583231735`*^9}, {3.7584549043087444`*^9, 
  3.758455017443534*^9}, {3.758455049828519*^9, 3.7584550572053843`*^9}, {
  3.758455224724218*^9, 3.7584552291557035`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"17b788ed-dfdb-4bc8-8387-cc24a2843518"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"noise1", ",", "noise2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7584550187961307`*^9, 3.758455024372986*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"59e4d47e-c682-496c-8f5f-8a3d84d8ebfe"]
}, Closed]],

Cell[CellGroupData[{

Cell["Filters", "Subsection",
 CellChangeTimes->{{3.7584543604570937`*^9, 3.758454367958213*^9}},
 CellTags->"c:21",ExpressionUUID->"8519decb-a647-4082-a417-8490e787bc1d"],

Cell["Laplacian Filtering", "Text",
 CellChangeTimes->{{3.758454729816031*^9, 
  3.7584547691720047`*^9}},ExpressionUUID->"2542e184-2b55-431e-8712-\
57b4010b0208"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fil1", "=", 
   RowBox[{"LapFilter", "[", 
    RowBox[{"noise2", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotData", "[", 
  RowBox[{"noise2", ",", "fil1", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"30", ",", "70"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.758454439402272*^9, 3.7584544485292573`*^9}, {
   3.758454493268995*^9, 3.758454510579565*^9}, {3.758454681539337*^9, 
   3.758454714835467*^9}, {3.7584549450761485`*^9, 3.758454945155693*^9}, 
   3.7688022351743865`*^9, {3.8656530606201243`*^9, 3.86565306818793*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"dfd024d4-6cd0-4f3e-978b-924b02a9eace"],

Cell["Find the local StandardDeviation", "Text",
 CellChangeTimes->{{3.758454729816031*^9, 
  3.7584547394974756`*^9}},ExpressionUUID->"8bd6ea94-2eed-481c-aad6-\
78ae01eb6ab7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fil2", "=", 
   RowBox[{"StdFilter", "[", 
    RowBox[{"noise2", ",", "5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotData", "[", 
  RowBox[{"noise2", ",", "fil2", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"30", ",", "70"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "15"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.758454512714678*^9, 3.7584545251230903`*^9}, {
   3.758454564263178*^9, 3.7584545732690616`*^9}, {3.7584546833811293`*^9, 
   3.758454693523153*^9}, {3.7584547270448294`*^9, 3.7584547479382086`*^9}, 
   3.7584548250450144`*^9, {3.758454948325635*^9, 3.7584549483722744`*^9}, 
   3.7688022340229635`*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"fb343542-47c9-446d-80da-03fd3e2252ae"]
}, Closed]],

Cell[CellGroupData[{

Cell["Operation ignoring zeros", "Subsection",
 CellChangeTimes->{{3.7584548402024508`*^9, 3.7584548490643578`*^9}},
 CellTags->"c:22",ExpressionUUID->"a08bed25-3efe-40d5-bc4e-9f803924dddc"],

Cell["Calculate statistics while ignoring zero values", "Text",
 CellChangeTimes->{{3.758455088824503*^9, 3.758455107620838*^9}, {
  3.7584552965942955`*^9, 
  3.758455298258358*^9}},ExpressionUUID->"69abaf44-84b6-4abe-bd7d-\
0b63dd967e4e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MeanNoZero", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}], ",", 
   RowBox[{"Mean", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7584548714341726`*^9, 3.758454888596833*^9}, {
  3.758455067525513*^9, 3.7584550866285696`*^9}, {3.7584551399090753`*^9, 
  3.7584551399879603`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"7d4f3e83-d26e-4cd2-9549-83ece73a5532"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MedianNoZero", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}], ",", 
   RowBox[{"Median", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.758455301330388*^9, 3.7584553080034685`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"eecbc129-2d09-4c25-91df-5406a1cd99e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MADNoZero", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}], ",", 
   RowBox[{"MedianDeviation", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7584551448745203`*^9, 3.7584551679240603`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"d0a3c222-4a31-4f3f-b352-e910a84f88bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"RMSNoZero", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}], ",", 
   RowBox[{"RootMeanSquare", "@", 
    RowBox[{"Flatten", "@", "noise2"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7584551750798836`*^9, 3.758455195990754*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"3687dac5-32c8-484e-8e0a-e79866596754"],

Cell["\<\
Mathematical operators ignoring zero values and keeping them zero.\
\>", "Text",
 CellChangeTimes->{{3.7584553267017984`*^9, 3.7584553393192234`*^9}, {
  3.758455420257972*^9, 
  3.75845542611469*^9}},ExpressionUUID->"91fc0eea-f728-45cb-8c20-\
ef67f376c886"],

Cell[BoxData[
 RowBox[{"Grid", "@", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Exp", "[", "0.", "]"}], ",", 
      RowBox[{"ExpNoZero", "[", "0.", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Log", "[", "0.", "]"}], ",", 
      RowBox[{"LogNoZero", "[", "0.", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "0."}], ",", 
      RowBox[{"DevideNoZero", "[", 
       RowBox[{"1", ",", "0"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.7584553933658457`*^9, 3.758455463921315*^9}, {
  3.7688023080278807`*^9, 3.768802315654275*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"94169326-674a-4442-b858-2906e886a2b0"],

Cell[BoxData[{
 RowBox[{"Quiet", "@", 
  RowBox[{"AllTrue", "[", 
   RowBox[{
    RowBox[{"noise1", "/", "noise2"}], ",", "NumericQ", ",", "3"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"AllTrue", "[", 
  RowBox[{
   RowBox[{"DevideNoZero", "[", 
    RowBox[{"noise1", ",", "noise2"}], "]"}], ",", "NumericQ", ",", "3"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.758455473676674*^9, 3.7584556912035503`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"2b83ea3b-6e52-4222-9a3a-9c2ffa1e2c9f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"noised", "=", 
   RowBox[{"DevideNoZero", "[", 
    RowBox[{"noise1", ",", "noise2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotData", "[", "noised", "]"}]}], "Input",
 CellChangeTimes->{{3.7584555218231277`*^9, 3.758455541096366*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"3bdb8d5b-aba4-46e3-94d0-0ebf4e2145f5"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Masking", "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7548957249234715`*^9, 3.7548957340260887`*^9}, {
   3.754896730602828*^9, 
   3.7548967366514826`*^9}},ExpressionUUID->"ff48cf42-cb85-4663-b23e-\
43657c60dfe7"],

Cell[CellGroupData[{

Cell["Import Data", "Subsection",
 CellChangeTimes->{{3.7549995580790825`*^9, 3.754999562037315*^9}},
 CellTags->"c:23",ExpressionUUID->"47e835ce-4699-4923-898e-db43e06f49d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "simple", " ", "3", "D", " ", "dataset", " ", "with", " ", 
    "segmentations"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "vox"}], "}"}], "=", 
     RowBox[{"ImportNii", "[", "\"\<twoLegs.nii\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"labels", ",", "vox"}], "}"}], "=", 
     RowBox[{"ImportNii", "[", "\"\<labels.nii\>\"", "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7548957374891505`*^9, 3.754895753834767*^9}, {
  3.7548968059006653`*^9, 3.7548968188103466`*^9}, {3.754996484117587*^9, 
  3.754996490273179*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"d9902e8c-2a9f-40e9-88a5-9c6eca85b9c9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Create Mask", "Subsection",
 CellChangeTimes->{{3.754896948255337*^9, 3.754896952256016*^9}},
 CellTags->"c:24",ExpressionUUID->"586003b9-59ba-4f2a-a670-aeb201812c92"],

Cell[CellGroupData[{

Cell["Automated and threshold masking", "Subsubsection",
 CellChangeTimes->{{3.754897629379714*^9, 3.754897646170933*^9}},
 CellTags->"c:25",ExpressionUUID->"69a2c8a5-fb3b-4839-94de-bdb3a0a3b69c"],

Cell["\<\
Automated Binarization.
Normalize the data to the mean of the data such that the mean data within an \
automated mask will be 100.\
\>", "Text",
 CellChangeTimes->{{3.758435238643988*^9, 3.7584352479102488`*^9}, {
  3.8697986770927615`*^9, 3.86979868226071*^9}, {3.869799058629578*^9, 
  3.8697990601018744`*^9}},ExpressionUUID->"6450432f-96f9-42ed-9572-\
f7f4702bc1a4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataN", "=", 
   RowBox[{"NormalizeData", "[", "data", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mask", "=", 
    RowBox[{"Mask", "[", "dataN", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MeanNoZero", "@", 
    RowBox[{"GetMaskData", "[", 
     RowBox[{"data", ",", "mask"}], "]"}]}], ",", 
   RowBox[{"MeanNoZero", "@", 
    RowBox[{"GetMaskData", "[", 
     RowBox[{"dataN", ",", "mask"}], "]"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.75489694083027*^9, 3.7548969455958157`*^9}, 
   3.7584352520748158`*^9, {3.7655240259208345`*^9, 3.7655240309784946`*^9}, 
   3.7655240858064466`*^9, {3.869799064409197*^9, 
   3.869799069095584*^9}},ExpressionUUID->"76a2f7e3-7d49-45ab-aaf7-\
cdffb72eccbf"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", "mask"}], "]"}]], "Input",
 CellChangeTimes->{{3.754896956287656*^9, 3.7548969633718243`*^9}, {
   3.8697986255098953`*^9, 3.869798629733222*^9}, 
   3.8697988961339803`*^9},ExpressionUUID->"a853d33f-3e4d-4a97-be23-\
2d351b6b6b09"],

Cell["Various ways of defining manual mask thresholds", "Text",
 CellChangeTimes->{{3.758435238643988*^9, 3.7584352479102488`*^9}, {
  3.8697986770927615`*^9, 3.86979868226071*^9}, {3.869799036901597*^9, 
  3.869799043173254*^9}, {3.869799074757931*^9, 3.8697990795275335`*^9}, {
  3.8697991560715437`*^9, 
  3.869799165590991*^9}},ExpressionUUID->"6119300d-5d55-4ad9-bd65-\
06c5d7b92c0c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"masks", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Mask", "[", "dataN", "]"}], ",", 
     RowBox[{"Mask", "[", 
      RowBox[{"dataN", ",", "15"}], "]"}], ",", 
     RowBox[{"Mask", "[", 
      RowBox[{"dataN", ",", 
       RowBox[{"{", 
        RowBox[{"15", ",", "60"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotData", "[", 
  RowBox[{"GridData", "[", 
   RowBox[{"masks", ",", "3"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.869799016650691*^9, 3.869799017141406*^9}, {
  3.869799082246857*^9, 
  3.8697991710626884`*^9}},ExpressionUUID->"2647c4b3-f621-4519-96f4-\
10b1e7b67da7"],

Cell["Automatic generation of mask based on several datasets", "Text",
 CellChangeTimes->{{3.869799173595949*^9, 3.869799185577343*^9}, {
  3.8697992494527197`*^9, 
  3.8697992955111356`*^9}},ExpressionUUID->"846c20fb-e5ad-4363-923d-\
91a579a1bd20"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maskC", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data", ",", "15"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dataN", ",", "15"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dataN", ",", 
        RowBox[{"{", 
         RowBox[{"15", ",", "80"}], "}"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotData", "[", "maskC", "]"}]}], "Input",
 CellChangeTimes->{{3.8697992097469544`*^9, 3.86979924661549*^9}, {
  3.8697992803287163`*^9, 3.8697993083606043`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"a338063b-2315-4387-8406-f2705350e3af"]
}, Closed]],

Cell[CellGroupData[{

Cell["Mask smoothing", "Subsubsection",
 CellChangeTimes->{{3.754897629379714*^9, 3.754897646170933*^9}, {
  3.869799200358733*^9, 3.86979920528703*^9}},
 CellTags->"c:25",ExpressionUUID->"1dec97a9-0a89-48cc-a6cf-b9fd05136c2b"],

Cell["\<\
Clean up the mask. By default it will only find one mask component, but you \
can force the method to find more components.\
\>", "Text",
 CellChangeTimes->{{3.7584350855989523`*^9, 3.758435118937801*^9}, {
  3.7688023861994405`*^9, 
  3.7688024410295568`*^9}},ExpressionUUID->"e0643ea0-003f-48a0-b7b3-\
9ccba6e37a8e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cleanMask1", "=", 
   RowBox[{"SmoothMask", "[", "mask", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584350950829754`*^9, 3.7584350951481504`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"302b44be-ef86-48c9-aa2c-564b391aa0b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cleanMask2", "=", 
   RowBox[{"SmoothMask", "[", 
    RowBox[{"mask", ",", 
     RowBox[{"MaskComponents", "\[Rule]", "2"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758435097834414*^9, 3.7584351036756153`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"03e3091e-977d-4e2f-81d5-da8fb825aec4"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PlotContour", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"AutoCropData", "[", "#", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "vox"}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"mask", ",", "cleanMask1", ",", "cleanMask2"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.758439549186763*^9, 3.7584396152002277`*^9}, 
   3.865653520139935*^9, 3.8656544312829676`*^9},
 CellLabel->"In[49]:=",ExpressionUUID->"b1b59af8-238e-45ed-aa75-edbfe25101fd"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"cleanMask1", ",", "cleanMask2"}], "}"}]}], ",", "vox"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7548968195865602`*^9, 3.75489682314767*^9}, {
   3.7548969267494087`*^9, 3.7548969272596483`*^9}, {3.754897123440123*^9, 
   3.7548971322361813`*^9}, {3.758435066268244*^9, 3.758435068234647*^9}, 
   3.7584351323951216`*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"90b9f4a2-b104-45e2-93f3-8188b310c05e"],

Cell["\<\
Create mask based on threshold, smooth the mask, close holes larger then two, \
maintain two separate masks.
Default the algorithm finds only one mask but it is possible to maintain two \
separate masks.\
\>", "Text",
 CellChangeTimes->{{3.7548970239521685`*^9, 3.7548970593877783`*^9}, {
  3.7549965137525163`*^9, 
  3.754996538270686*^9}},ExpressionUUID->"b2a29537-e3dd-40af-9ab3-\
396f946f0c7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cleanMask1", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"data", ",", "15", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskClosing", "\[Rule]", "2"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7548969762405014`*^9, 3.754897019614797*^9}, {
  3.7548970656280413`*^9, 3.7548971136952505`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"ca643546-dc1d-430e-b21a-ecac262f9a1e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cleanMask2", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"data", ",", "15", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskClosing", "\[Rule]", "2"}], ",", 
     RowBox[{"MaskComponents", "\[Rule]", "2"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7548969762405014`*^9, 3.754897019614797*^9}, {
  3.7548971000115485`*^9, 3.7548971153576403`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"0ca068e9-45ab-4193-b700-ea079aa30009"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"cleanMask1", ",", "cleanMask2"}], "}"}]}], ",", "vox"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7548968195865602`*^9, 3.75489682314767*^9}, {
   3.7548969267494087`*^9, 3.7548969272596483`*^9}, {3.754897123440123*^9, 
   3.7548971322361813`*^9}, {3.758435066268244*^9, 3.758435068234647*^9}, 
   3.7584351453578053`*^9},
 CellLabel->"In[53]:=",ExpressionUUID->"3c45e684-0113-4b2f-9a58-889dba598670"],

Cell["Apply the mask", "Text",
 CellChangeTimes->{{3.7548984571554413`*^9, 
  3.7548984608932505`*^9}},ExpressionUUID->"cc0b2c2b-3f9b-46a3-812b-\
fdd16430c436"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataMask", "=", 
   RowBox[{"MaskData", "[", 
    RowBox[{"data", ",", "cleanMask2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754898464052139*^9, 3.754898476810136*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"0653d5ab-e1f9-42eb-9a3c-efc992067962"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", "dataMask"}], "]"}]], "Input",
 CellChangeTimes->{{3.754898478482792*^9, 3.754898483306509*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"06c51025-4365-4585-b0fb-f98b6c96c521"]
}, Closed]],

Cell[CellGroupData[{

Cell["Manual segmentation processing", "Subsubsection",
 CellChangeTimes->{{3.7548971432028255`*^9, 3.7548971624585037`*^9}, {
  3.754997254313919*^9, 3.7549972630274973`*^9}},
 CellTags->"c:26",ExpressionUUID->"ded5d62a-f398-4005-9427-e92efe288312"],

Cell["\<\
Separate a segmentation with multiple labels into individual masks.\
\>", "Text",
 CellChangeTimes->{{3.754897188163585*^9, 3.7548971975499716`*^9}, {
  3.7549966745269656`*^9, 3.754996682995769*^9}, {3.838096490889537*^9, 
  3.838096498993658*^9}},ExpressionUUID->"30dac8a6-273d-4495-981c-\
2a1d6d3a8f80"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"seg", ",", "lab"}], "}"}], "=", 
   RowBox[{"SplitSegmentations", "[", "labels", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"lab", " ", 
  RowBox[{"(*", 
   RowBox[{"the", " ", "label", " ", "numbers"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "labels", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "seg", "]"}]}], "Input",
 CellChangeTimes->{{3.754897200405677*^9, 3.7548972097258873`*^9}, {
  3.7548973800581846`*^9, 3.754897407083606*^9}, {3.7549966939951077`*^9, 
  3.754996707304601*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"5d3cf964-b905-48d5-a57a-61d50ebef712"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"labels", ",", "seg"}], "]"}]], "Input",
 CellChangeTimes->{{3.7655242470091815`*^9, 3.7655242496937475`*^9}, {
  3.7688025721037664`*^9, 3.7688025757831926`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"0a118751-0dac-4729-ad1e-d7f094a26af9"],

Cell["\<\
Smooth the segmentations labels should be separate volumes and can be joined \
after smoothing\
\>", "Text",
 CellChangeTimes->{{3.7548974138922253`*^9, 3.7548974270718637`*^9}, {
  3.7549967229077616`*^9, 3.754996739591938*^9}, {3.754997287286001*^9, 
  3.7549972904431376`*^9}},ExpressionUUID->"1f4758f5-443f-4df8-b208-\
0f642bb70f02"],

Cell[BoxData[
 RowBox[{
  RowBox[{"labelsS", "=", 
   RowBox[{"MergeSegmentations", "[", 
    RowBox[{
     RowBox[{"SmoothSegmentation", "[", "seg", "]"}], ",", "lab"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.754897429058359*^9, 3.7548974455303636`*^9}, {
   3.7548975010185823`*^9, 3.754897551866062*^9}, {3.7549967217767105`*^9, 
   3.7549967425199823`*^9}, 3.7655242451792927`*^9, 3.7655243573762045`*^9, 
   3.8697995360472155`*^9},
 CellLabel->"In[73]:=",ExpressionUUID->"4434b8fb-f66c-460e-a0c4-571c04a56121"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"labels", ",", "labelsS", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548974476027365`*^9, 3.75489744853773*^9}, {
  3.7548975206376605`*^9, 3.754897520693297*^9}, {3.754897554553789*^9, 
  3.754897560410267*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"9365ecdb-b734-4c5d-8503-bb51d35b6eac"],

Cell["If segmentations have overlaps they can be removed.", "Text",
 CellChangeTimes->{{3.754900015110106*^9, 3.7549000280632486`*^9}, {
  3.7549968084521008`*^9, 3.75499681990247*^9}, {3.7584353282033224`*^9, 
  3.75843534207345*^9}},ExpressionUUID->"460b4f2c-53bc-49cd-9398-\
41759cefa4a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"segDil", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SparseArray", "@", 
       RowBox[{"Dilation", "[", 
        RowBox[{
         RowBox[{"Normal", "@", "#"}], ",", "1"}], "]"}]}], "&"}], "/@", 
     RowBox[{"Transpose", "[", "seg", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584353606845264`*^9, 3.7584353853861103`*^9}, {
  3.7584354600899343`*^9, 3.7584354650010266`*^9}, {3.8662562758072357`*^9, 
  3.866256283220315*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"3e8ca21d-0805-49fc-aa4d-9912aeb2dfcd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"labelsD", "=", 
   RowBox[{"MergeSegmentations", "[", 
    RowBox[{"segDil", ",", "lab"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labelsDCor", "=", 
   RowBox[{"MergeSegmentations", "[", 
    RowBox[{
     RowBox[{"RemoveMaskOverlaps", "[", "segDil", "]"}], ",", "lab"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7584353954389086`*^9, 3.758435424235038*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"b537de9b-c104-43d8-880b-c1a199590c8f"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"labelsD", ",", "labelsDCor"}], "]"}]], "Input",
 CellChangeTimes->{{3.7584354343956237`*^9, 3.7584354431801386`*^9}, {
  3.866256291050557*^9, 3.866256292446912*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"9f532b89-2b9a-45c6-a97a-44e8cda1cce1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Splitting segmentation in slice direction", "Subsubsection",
 CellChangeTimes->{{3.8380966560585556`*^9, 
  3.8380966657189484`*^9}},ExpressionUUID->"344c9d85-ee70-472b-9f36-\
9f65fe863cee"],

Cell["\<\
Split a Segmentation in 5 equal parts along the slice direction\
\>", "Text",
 CellChangeTimes->{{3.754900015110106*^9, 3.7549000280632486`*^9}, {
  3.7549968084521008`*^9, 
  3.75499681990247*^9}},ExpressionUUID->"1b611f18-649c-473d-992a-\
229c3cb8c4f4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"segSplit", "=", 
   RowBox[{"SegmentMask", "[", 
    RowBox[{
     RowBox[{"segS", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "5"}], "]"}], "]"}], ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "segSplit", "]"}]}], "Input",
 CellChangeTimes->{{3.7549000341808167`*^9, 3.754900077803177*^9}, {
  3.7549968320547333`*^9, 3.754996849848937*^9}, {3.7549969480467005`*^9, 
  3.7549969627801375`*^9}, {3.7549973916421013`*^9, 3.75499739634338*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"abe1de54-7eda-49dd-816f-028249e80717"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"segPlot", "=", 
   RowBox[{"MergeSegmentations", "[", 
    RowBox[{
     RowBox[{"Transpose", "@", "segSplit"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"Flatten", "@", 
   RowBox[{"MakeSliceImages", "[", 
    RowBox[{
     RowBox[{"GetSliceData", "[", 
      RowBox[{"segPlot", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "90", "}"}], ",", 
         RowBox[{"{", "57", "}"}]}], "}"}]}], "]"}], ",", "vox", ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
     RowBox[{"ImageLegend", "\[Rule]", "True"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7549968586522613`*^9, 3.7549969027831244`*^9}, {
   3.7549971148782835`*^9, 3.754997193776729*^9}, 3.7549972305497293`*^9, {
   3.754997362242589*^9, 3.754997385157033*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"524331ef-fe4b-4ceb-9bd0-466fdbff5ae8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Extract Data from Masks", "Subsubsection",
 CellChangeTimes->{{3.8380965531986046`*^9, 
  3.838096558772481*^9}},ExpressionUUID->"0a29fdea-136b-424d-b4e5-\
29e30a513b70"],

Cell["Use masks to get mean value from data", "Text",
 CellChangeTimes->{{3.758437757266612*^9, 
  3.7584377887212005`*^9}},ExpressionUUID->"726f5912-6fe1-4cf0-b67e-\
2d661dfbc98b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"segData", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"GetMaskData", "[", 
      RowBox[{"data", ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"Transpose", "[", "seg", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584378127358265`*^9, 3.75843783967611*^9}, 
   3.758438200481134*^9},
 CellLabel->"In[83]:=",ExpressionUUID->"6ffb097a-81f0-4f7b-994e-a5ecaff9ecde"],

Cell[BoxData[
 RowBox[{"MeanStd", "/@", "segData"}]], "Input",
 CellChangeTimes->{{3.7584378427039266`*^9, 3.7584378485084696`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"793842ff-54de-40e7-8b1e-caad93d21916"],

Cell[BoxData[
 RowBox[{"MeanRange", "/@", "segData"}]], "Input",
 CellChangeTimes->{{3.7584378626683087`*^9, 3.7584378662372503`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"5130ff98-956a-4b72-a8af-0af211b0903e"],

Cell[BoxData[
 RowBox[{"TableForm", "@", 
  RowBox[{"GetMaskMeans", "[", 
   RowBox[{"data", ",", "seg", ",", "\"\<lab\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7584378015039597`*^9, 3.758437806384256*^9}, {
  3.7584381420497675`*^9, 3.758438189647224*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"fe0f0767-29b1-46ab-89a9-7c9514129412"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rescaling Segmentations", "Subsection",
 CellChangeTimes->{{3.7548982710095882`*^9, 3.754898277261891*^9}},
 CellTags->"c:27",ExpressionUUID->"cf83491c-53d6-4317-902a-83e581aa5dc7"],

Cell[BoxData[{
 RowBox[{"Dimensions", "[", "labels", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labelsRescale", "=", 
   RowBox[{"RescaleSegmentation", "[", 
    RowBox[{"labels", ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "100", ",", "100"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "labelsRescale", "]"}]}], "Input",
 CellChangeTimes->{{3.7548983134739094`*^9, 3.7548983442978315`*^9}, 
   3.7548984151164074`*^9},
 CellLabel->"In[87]:=",ExpressionUUID->"295b97a0-e9dc-4121-923c-5eaf1358301e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"data", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskComponents", "\[Rule]", "2"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Dimensions", "[", "mask", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maskRescale", "=", 
   RowBox[{"RescaleSegmentation", "[", 
    RowBox[{"mask", ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "100", ",", "100"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "maskRescale", "]"}]}], "Input",
 CellChangeTimes->{{3.7548984416639953`*^9, 3.754898450361798*^9}, 
   3.75489851302268*^9, {3.765524412418682*^9, 3.7655244329762945`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"f34b5322-4762-42a1-b96d-7c26a6f0c9fb"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Registration using ",
 StyleBox["Elastix",
  IgnoreSpellCheck->True]
}], "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7550018766471777`*^9, 3.75500188405846*^9}, 
   3.7554985306225977`*^9},ExpressionUUID->"7e315242-c9a0-48d7-a79c-\
e62367557aee"],

Cell[CellGroupData[{

Cell["Import Data", "Subsection",
 CellChangeTimes->{{3.755001887184451*^9, 3.7550018903509445`*^9}},
 CellTags->"c:28",ExpressionUUID->"932638bc-7c62-479b-bb0d-3cffa205baac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"data", ",", "vox"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<twoLegs.nii\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"water", ",", "voxW"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<water.nii.gz\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fat", ",", "voxF"}], "}"}], "=", 
    RowBox[{"ImportNii", "[", "\"\<fat.nii.gz\>\"", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maskw", "=", 
   RowBox[{"Dilation", "[", 
    RowBox[{
     RowBox[{"Mask", "[", "water", "]"}], ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maskd", "=", 
    RowBox[{"Dilation", "[", 
     RowBox[{
      RowBox[{"Mask", "[", "data", "]"}], ",", "5"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataS", "=", 
   RowBox[{"First", "@", 
    RowBox[{"AutoCropData", "[", 
     RowBox[{"First", "@", 
      RowBox[{"CutData", "[", "data", "]"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7550019174395823`*^9, 3.7550019801348104`*^9}, {
   3.7554970050231967`*^9, 3.755497020462471*^9}, {3.755497070579788*^9, 
   3.755497089024849*^9}, 3.755497197154114*^9, {3.755498244863391*^9, 
   3.75549825377567*^9}, {3.7554983679412785`*^9, 3.7554983689980946`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"fbf5ef71-e74a-4a87-867e-8a3346fab1f4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Affine Transformation", "Subsection",
 CellChangeTimes->{{3.7554969356157484`*^9, 3.7554969409560246`*^9}},
 CellTags->"c:29",ExpressionUUID->"5c27d6f6-8cde-4515-862a-aa9c9642bd78"],

Cell["Transform a dataset", "Text",
 CellChangeTimes->{{3.7550025866078415`*^9, 
  3.755002593789109*^9}},ExpressionUUID->"4c5eacb3-63dd-4261-bae3-\
aa2546f96de9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rot", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "10", ",", 
     RowBox[{"-", "5"}]}], "}"}]}], ";", 
  RowBox[{"trans", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "10", ",", 
     RowBox[{"-", "5"}]}], "}"}]}], ";", 
  RowBox[{"scale", "=", 
   RowBox[{"{", 
    RowBox[{"1.05", ",", "1.10", ",", "0.95"}], "}"}]}], ";", 
  RowBox[{"scew", "=", 
   RowBox[{"{", 
    RowBox[{"0.0", ",", "0.0", ",", "0.00"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"rot", ",", "trans", ",", "scale", ",", "scew"}], "}"}], "]"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{
  3.7554935427180634`*^9, {3.7554936688766527`*^9, 3.7554936711797667`*^9}, {
   3.755493857645252*^9, 3.755493860590698*^9}, {3.755493921859911*^9, 
   3.755493924898139*^9}, {3.7554940882691007`*^9, 3.7554941002690487`*^9}, {
   3.755494147293077*^9, 3.755494151323444*^9}, {3.7554949317268133`*^9, 
   3.7554949574041276`*^9}, {3.7554950103346453`*^9, 
   3.7554950121565256`*^9}, {3.7554950576477118`*^9, 3.755495098843875*^9}, {
   3.755495251868786*^9, 3.755495259885165*^9}, {3.7554953240931206`*^9, 
   3.755495329594754*^9}, {3.7554961133439054`*^9, 3.75549613987008*^9}, 
   3.7554961714243813`*^9, {3.7554962575032167`*^9, 3.755496258845815*^9}, {
   3.7554965736785517`*^9, 3.755496576428899*^9}, {3.7554966608794184`*^9, 
   3.7554966685258923`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"63000fed-904c-4a4f-b696-9368e0f79cb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataT", "=", 
   RowBox[{"DataTransformation", "[", 
    RowBox[{"dataS", ",", "vox", ",", "w", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7550036180647516`*^9, 3.7550036920620947`*^9}, {
   3.755004077409649*^9, 3.7550041133533134`*^9}, 3.7554934700311456`*^9, {
   3.755493502350135*^9, 3.7554935405656757`*^9}, 3.7554972023038435`*^9, {
   3.755497234848613*^9, 3.7554972378395543`*^9}, 3.7584358146511583`*^9, 
   3.8697999487938356`*^9},
 CellLabel->"In[74]:=",ExpressionUUID->"816e27ef-b777-4331-a0c7-f21e570a53c8"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataS", ",", "dataT", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7550022340223675`*^9, 3.755002252298395*^9}, 
   3.755497204974934*^9},
 CellLabel->"In[75]:=",ExpressionUUID->"914da50d-8987-45c6-86c2-efa574454895"],

Cell["\<\
Register data using default parameters, however use affineDTI to ensure \
output of scale skew, rot and trans as transform instead of the translation \
rotation matrix.\
\>", "Text",
 CellChangeTimes->{{3.7550037015844655`*^9, 
  3.7550037516765904`*^9}},ExpressionUUID->"71e298ab-c4f6-4b0e-9225-\
05f491f97805"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataS", ",", "dataT"}], "]"}]], "Input",
 CellChangeTimes->{{3.8293709626311665`*^9, 3.8293709667513037`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"e2c62f91-87ae-4684-9c45-f35ac0d1d1e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"dataS", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.829371978096118*^9, 3.829371984168358*^9}, {
  3.8293720731967287`*^9, 3.8293720789962473`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"baed26dd-0455-4c7c-8a1b-0fa20555865e"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataS", ",", "mask"}], "]"}]], "Input",
 CellChangeTimes->{{3.8293719850380554`*^9, 3.829371988762413*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"d10f611a-3618-4a47-bf35-3dfcdb3b7e18"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Column", "@", 
  RowBox[{"Options", "@", "RegisterData"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataR", "=", 
   RowBox[{"RegisterData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dataS", ",", "mask", ",", "vox"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"dataT", ",", "vox"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"DeleteTempDirectory", "\[Rule]", "False"}], ",", 
     RowBox[{"Iterations", "\[Rule]", "500"}], ",", 
     RowBox[{"MethodReg", "\[Rule]", "\"\<affineDTI\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"NumberSamples", "\[Rule]", "5000"}], ",", 
     RowBox[{"Resolutions", "\[Rule]", "2"}], ",", 
     RowBox[{"InterpolationOrderReg", "->", "3"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7550023988649707`*^9, 3.7550024494733624`*^9}, {
   3.755002535812727*^9, 3.7550025408794737`*^9}, 3.755002634724679*^9, {
   3.7550028984936285`*^9, 3.7550029092135963`*^9}, {3.755003190934188*^9, 
   3.755003197011985*^9}, {3.755003506953833*^9, 3.7550035156619873`*^9}, {
   3.7554937732977695`*^9, 3.755493773625546*^9}, {3.755496822865201*^9, 
   3.755496823631248*^9}, {3.7554968777917175`*^9, 3.755496889230296*^9}, 
   3.755496966880742*^9, 3.755497213807523*^9, {3.7603537926945276`*^9, 
   3.760353801002678*^9}, {3.760355225228295*^9, 3.7603552278192377`*^9}, {
   3.760780271039136*^9, 3.7607802711243715`*^9}, {3.7655245882755346`*^9, 
   3.765524588542246*^9}, {3.8293708829913855`*^9, 3.8293708896093583`*^9}, {
   3.829371005930195*^9, 3.8293710354471645`*^9}, {3.829371381563196*^9, 
   3.8293713991315727`*^9}, {3.829372083629218*^9, 3.829372085121773*^9}, {
   3.829372781996848*^9, 3.829372790824048*^9}, {3.8293737010096006`*^9, 
   3.829373712264394*^9}, {3.8293737593508773`*^9, 3.829373767227377*^9}, {
   3.85278852809365*^9, 3.8527885284128313`*^9}, 3.852789380961635*^9, {
   3.852789472927762*^9, 3.8527894870072913`*^9}, {3.852954012009218*^9, 
   3.8529540403929787`*^9}, 3.852954426448773*^9, {3.869799851625532*^9, 
   3.869799865704875*^9}, {3.869799903049756*^9, 3.869799944297468*^9}, {
   3.8722165229193544`*^9, 3.872216547304657*^9}, {3.872216597223484*^9, 
   3.872216600918256*^9}, {3.872216656599367*^9, 3.8722166605507793`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"1c36b922-6e1f-438c-8272-93926ea59256"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"Iterations", "\[Rule]", "250"}]},
    {
     RowBox[{"Resolutions", "\[Rule]", "1"}]},
    {
     RowBox[{"HistogramBins", "\[Rule]", "64"}]},
    {
     RowBox[{"NumberSamples", "\[Rule]", "4000"}]},
    {
     RowBox[{"InterpolationOrderReg", "\[Rule]", "3"}]},
    {
     RowBox[{"BsplineSpacing", "\[Rule]", "30"}]},
    {
     RowBox[{"BsplineDirections", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]},
    {
     RowBox[{"AffineDirections", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]},
    {
     RowBox[{"MethodReg", "\[Rule]", "\<\"affine\"\>"}]},
    {
     RowBox[{"OutputImage", "\[Rule]", "True"}]},
    {
     RowBox[{"TempDirectory", "\[Rule]", "\<\"Default\"\>"}]},
    {
     RowBox[{"DeleteTempDirectory", "\[Rule]", "True"}]},
    {
     RowBox[{"PrintTempDirectory", "\[Rule]", "True"}]},
    {
     RowBox[{"OutputTransformation", "\[Rule]", "False"}]},
    {
     RowBox[{"UseGPU", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"False", ",", "Automatic"}], "}"}]}]},
    {
     RowBox[{"PCAComponents", "\[Rule]", "3"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.8721578089622593`*^9, 3.872216487046891*^9, {3.8722165342903748`*^9, 
   3.8722165477631483`*^9}, 3.8722166023916597`*^9, 3.8722242643145227`*^9, 
   3.87222851122698*^9, 3.872229654222861*^9, 3.8722321443688745`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"91b3804e-00a3-4f43-a637-29d56f933084"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataS", ",", "dataR"}], "]"}]], "Input",
 CellChangeTimes->{{3.8293719850380554`*^9, 3.829371988762413*^9}, {
  3.852789434414312*^9, 3.8527894507843666`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"d025626d-5335-4f65-a1ec-307255980dc0"],

Cell["\<\
The last output can be used to transform the data according to the last \
registration results.\
\>", "Text",
 CellChangeTimes->{{3.758435601020697*^9, 
  3.7584356338497334`*^9}},ExpressionUUID->"9b6ebdf0-bddb-44b7-968e-\
d85858606ab3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataR2", "=", 
   RowBox[{"TransformData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dataT", ",", "vox"}], "}"}], ",", 
     RowBox[{"DeleteTempDirectory", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7584356534685717`*^9, 3.7584356945386114`*^9}, {
   3.7584357315818825`*^9, 3.7584357400423775`*^9}, {3.829373848909996*^9, 
   3.8293738543219557`*^9}, 3.85295383438649*^9},
 CellLabel->"In[79]:=",ExpressionUUID->"da3d4eea-df63-4b2e-b74e-059cacab7254"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataR", ",", "dataR2"}], "]"}]], "Input",
 CellChangeTimes->{{3.758435696450838*^9, 3.758435703242414*^9}, 
   3.85278851247703*^9, {3.8527894128633156`*^9, 3.8527894133929195`*^9}, {
   3.852789456942636*^9, 3.8527894581915154`*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"102974f4-2d9b-4cde-bfaf-358b8fb9ac16"],

Cell["\<\
Compare the input transformation to the output transformation of elastix.\
\>", "Text",
 CellChangeTimes->{{3.755003769101974*^9, 3.7550037929279623`*^9}, {
  3.7554952677230234`*^9, 
  3.7554952698980217`*^9}},ExpressionUUID->"619ccb59-1402-4b29-83d1-\
c92d637ab02a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"inpTran", "=", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{"rot", ",", "trans", ",", "scale", ",", "scew"}], "}"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasTran", "=", 
   RowBox[{"First", "@", 
    RowBox[{"ReadTransformParameters", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"$TemporaryDirectory", ",", "\"\<QMRIToolsReg\>\""}], "}"}], 
      "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasTran", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{"elasTran", ",", "3"}], "]"}], ",", "0.01"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TableForm", "[", 
      RowBox[{"#", ",", 
       RowBox[{"TableHeadings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<rot\>\"", ",", "\"\<trans\>\"", ",", "\"\<scale\>\"", ",", 
            "\"\<skew\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<z\>\"", ",", "\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}],
          "}"}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"inpTran", ",", "elasTran"}], "}"}]}], ",", "\"\<     \>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7550038191867886`*^9, 3.7550038270044966`*^9}, {
   3.755496835679539*^9, 3.7554968567675114`*^9}, {3.866256411380365*^9, 
   3.866256429882374*^9}, 3.86979988428321*^9, {3.872216565010192*^9, 
   3.8722165765664234`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"8ceb4c98-d616-490c-8fb5-4843ba78006c"],

Cell[BoxData[
 TemplateBox[{"     ", "\"     \"", 
   TagBox[
    TagBox[
     GridBox[{{
        StyleBox["\[Null]", ShowStringCharacters -> False], 
        TagBox["\"z\"", HoldForm], 
        TagBox["\"x\"", HoldForm], 
        TagBox["\"y\"", HoldForm]}, {
        TagBox["\"rot\"", HoldForm], "5.`", "10.`", 
        RowBox[{"-", "5.`"}]}, {
        TagBox["\"trans\"", HoldForm], "5.`", "10.`", 
        RowBox[{"-", "5.`"}]}, {
        TagBox["\"scale\"", HoldForm], "1.05`", "1.1`", "0.95`"}, {
        TagBox["\"skew\"", HoldForm], "0.`", "0.`", "0.`"}}, RowSpacings -> 1,
       ColumnSpacings -> 3, RowAlignments -> Baseline, ColumnAlignments -> 
      Left, GridBoxDividers -> {
       "Columns" -> {False, True, {False}, False}, 
        "Rows" -> {False, True, {False}, False}}, ColumnAlignments -> Left], {
     OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"rot", "trans", "scale", "skew"}, {
        "z", "x", "y"}}]]], 
   TagBox[
    TagBox[
     GridBox[{{
        StyleBox["\[Null]", ShowStringCharacters -> False], 
        TagBox["\"z\"", HoldForm], 
        TagBox["\"x\"", HoldForm], 
        TagBox["\"y\"", HoldForm]}, {
        TagBox["\"rot\"", HoldForm], "4.11`", "9.75`", 
        RowBox[{"-", "5.13`"}]}, {
        TagBox["\"trans\"", HoldForm], "5.09`", "10.01`", 
        RowBox[{"-", "5.0200000000000005`"}]}, {
        TagBox["\"scale\"", HoldForm], "1.04`", "1.1`", 
        "0.9500000000000001`"}, {
        TagBox["\"skew\"", HoldForm], "0.`", "0.`", "0.`"}}, RowSpacings -> 1,
       ColumnSpacings -> 3, RowAlignments -> Baseline, ColumnAlignments -> 
      Left, GridBoxDividers -> {
       "Columns" -> {False, True, {False}, False}, 
        "Rows" -> {False, True, {False}, False}}, ColumnAlignments -> Left], {
     OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"rot", "trans", "scale", "skew"}, {
        "z", "x", "y"}}]]]},
  "RowWithSeparators"]], "Output",
 CellChangeTimes->{
  3.872157823974864*^9, {3.872216470701011*^9, 3.8722164970568166`*^9}, 
   3.872216578891817*^9, 3.8722166234910483`*^9, 3.872224294604169*^9, 
   3.872229707939844*^9, 3.8722321560853424`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"b571bc39-3187-4676-862f-4693e2ed9c3d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"dataS", "-", "dataT"}], ",", 
   RowBox[{"dataS", "-", "dataR"}], ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.75500313369658*^9, 3.7550031501992936`*^9}, {
  3.7655245717982025`*^9, 3.7655245734715223`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"09229319-c33b-4e4a-ba78-73bea25fef4c"]
}, Closed]],

Cell[CellGroupData[{

Cell["B-spline Registration of two legs", "Subsection",
 CellChangeTimes->{{3.7554969738975*^9, 3.7554969829936905`*^9}, {
  3.755497119471081*^9, 3.755497119982411*^9}, {3.755497161169385*^9, 
  3.7554971633752675`*^9}},
 CellTags->"c:30",ExpressionUUID->"c10c058b-a500-4c2d-bffa-2955b14de21a"],

Cell[CellGroupData[{

Cell["Full Registration", "Subsubsection",
 CellChangeTimes->{{3.7554980649307795`*^9, 3.755498069987264*^9}},
 CellTags->"c:31",ExpressionUUID->"adaf1997-c6af-46c4-ae60-0fb87f7483c2"],

Cell["\<\
First Perform Rigid registration to align and upscale data, then use b-spline \
to correct non rigid deformations\
\>", "Text",
 CellChangeTimes->{{3.755497446401965*^9, 3.7554974866711407`*^9}, 
   3.7554975985448885`*^9},ExpressionUUID->"8fc205d5-3384-40ca-a0e5-\
a8c9f829c920"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataB", "=", 
   RowBox[{"RegisterDataSplit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"water", ",", "maskw", ",", "voxW"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"data", ",", "maskd", ",", "vox"}], "}"}], ",", 
     RowBox[{"Iterations", "\[Rule]", "250"}], ",", 
     RowBox[{"MethodReg", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<rigid\>\"", ",", "\"\<bspline\>\""}], "}"}]}], ",", 
     RowBox[{"DeleteTempDirectory", "->", "False"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.755497124088678*^9, 3.7554971281453304`*^9}, {
   3.7554973375502577`*^9, 3.755497361022441*^9}, {3.75549739332679*^9, 
   3.755497424319078*^9}, {3.87221669446961*^9, 3.872216700408497*^9}, {
   3.872216869002389*^9, 3.8722168691111083`*^9}, 3.872219882769683*^9, {
   3.8722199473109827`*^9, 3.872219949405891*^9}, {3.872219996959099*^9, 
   3.872219999278121*^9}, {3.8722204450628185`*^9, 3.872220447407545*^9}, {
   3.8722205926911926`*^9, 3.8722206094166203`*^9}, {3.872220788770976*^9, 
   3.872220793705757*^9}, 3.8722208426629705`*^9, {3.8722211285221596`*^9, 
   3.8722211408876643`*^9}, 3.8722223818485374`*^9, {3.8722224614689674`*^9, 
   3.8722224640642295`*^9}, {3.8722226790710564`*^9, 3.8722226835133867`*^9}, 
   3.8722227644598336`*^9, {3.872223016473913*^9, 3.8722230192533293`*^9}, {
   3.8722243186362233`*^9, 3.8722243448444877`*^9}, 3.872224386211377*^9, 
   3.872224485678355*^9, {3.8722245400931253`*^9, 3.872224542440977*^9}, {
   3.8722247668584595`*^9, 3.872224787689891*^9}, {3.872224846413643*^9, 
   3.8722248963860965`*^9}, {3.872224940938634*^9, 3.872224943529937*^9}, {
   3.872225142299182*^9, 3.8722251431145535`*^9}, {3.8722252029110107`*^9, 
   3.8722252054507537`*^9}, {3.8722252666712017`*^9, 
   3.8722252686988564`*^9}, {3.8722253007800446`*^9, 
   3.8722253563003087`*^9}, {3.872225408226734*^9, 3.8722254122512407`*^9}, {
   3.872225609809693*^9, 3.8722256111798143`*^9}, {3.8722272400383945`*^9, 
   3.8722272422561784`*^9}, {3.8722280469241858`*^9, 3.872228052434186*^9}, {
   3.8722285359934926`*^9, 3.8722285507555933`*^9}, 3.8722297201844077`*^9, {
   3.872230121488655*^9, 3.8722301387397203`*^9}, {3.872232032307021*^9, 
   3.872232039025941*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"646203ff-d303-4507-9da0-c6c6b2da4b18"],

Cell["Show the result using FlipView", "Text",
 CellChangeTimes->{{3.7554979330790215`*^9, 
  3.7554979449646964`*^9}},ExpressionUUID->"869142fd-77a5-4044-bfa0-\
ffaeaff29d3f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pos", "=", 
   RowBox[{"GetSlicePositions", "[", 
    RowBox[{"dataB", ",", 
     RowBox[{"MakeCheckPlot", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datIm", "=", 
   RowBox[{"Grid", "@", 
    RowBox[{"MakeSliceImages", "[", 
     RowBox[{
      RowBox[{"GetSliceData", "[", 
       RowBox[{"dataB", ",", "pos"}], "]"}], ",", "voxW", ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"watIm", "=", 
   RowBox[{"Grid", "@", 
    RowBox[{"MakeSliceImages", "[", 
     RowBox[{
      RowBox[{"GetSliceData", "[", 
       RowBox[{"water", ",", "pos"}], "]"}], ",", "voxW", ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"FlipView", "[", 
  RowBox[{"{", 
   RowBox[{"datIm", ",", "watIm"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7549001402595067`*^9, 3.7549001450991135`*^9}, {
  3.754900182877452*^9, 3.75490019767517*^9}, {3.7549971051334467`*^9, 
  3.75499710529536*^9}, {3.755497779940259*^9, 3.7554978936477385`*^9}, {
  3.755497951667218*^9, 3.755497959091016*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"c5d26f17-e5d3-4460-99c6-c6d6d4fc11dd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Constrained in one direction", "Subsubsection",
 CellChangeTimes->{{3.755498072434825*^9, 3.755498082354246*^9}},
 CellTags->"c:32",ExpressionUUID->"f38c2344-3618-4b65-86d0-b42b8689639d"],

Cell["\<\
Constrain the b-spline to one direction, e.g. the EPI phase encoding\
\>", "Text",
 CellChangeTimes->{{3.755497446401965*^9, 3.7554975197909365`*^9}, 
   3.7554980513906684`*^9},ExpressionUUID->"8b20a75d-31f3-4056-ac74-\
f1127d0d96dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataB2", "=", 
   RowBox[{"RegisterDataSplit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"water", ",", "maskw", ",", "voxW"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"data", ",", "maskd", ",", "vox"}], "}"}], ",", 
     RowBox[{"Iterations", "\[Rule]", "250"}], ",", 
     RowBox[{"NumberSamples", "\[Rule]", "4000"}], ",", " ", 
     RowBox[{"MethodReg", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<rigid\>\"", ",", "\"\<bspline\>\""}], "}"}]}], ",", 
     RowBox[{"BsplineDirections", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ",", 
     RowBox[{"BsplineSpacing", "\[Rule]", "25"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.755497124088678*^9, 3.7554971281453304`*^9}, {
   3.7554973375502577`*^9, 3.755497361022441*^9}, {3.75549739332679*^9, 
   3.755497424319078*^9}, {3.755497990528892*^9, 3.755498016273543*^9}, {
   3.755498142259413*^9, 3.755498169600134*^9}, 3.872229824870083*^9, 
   3.8722300768785048`*^9, {3.8722322122919135`*^9, 3.872232219810931*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"e8e00cae-5dc7-462d-8948-526b28aeb597"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pos", "=", 
   RowBox[{"GetSlicePositions", "[", 
    RowBox[{"dataB2", ",", 
     RowBox[{"MakeCheckPlot", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datIm", "=", 
   RowBox[{"Grid", "@", 
    RowBox[{"MakeSliceImages", "[", 
     RowBox[{
      RowBox[{"GetSliceData", "[", 
       RowBox[{"dataB2", ",", "pos"}], "]"}], ",", "voxW", ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"watIm", "=", 
   RowBox[{"Grid", "@", 
    RowBox[{"MakeSliceImages", "[", 
     RowBox[{
      RowBox[{"GetSliceData", "[", 
       RowBox[{"water", ",", "pos"}], "]"}], ",", "voxW", ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"FlipView", "[", 
  RowBox[{"{", 
   RowBox[{"datIm", ",", "watIm"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7549001402595067`*^9, 3.7549001450991135`*^9}, {
  3.754900182877452*^9, 3.75490019767517*^9}, {3.7549971051334467`*^9, 
  3.75499710529536*^9}, {3.755497779940259*^9, 3.7554978936477385`*^9}, {
  3.755497951667218*^9, 3.755497959091016*^9}, {3.7554980024647155`*^9, 
  3.755498007583373*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"a8ab54f5-bbbb-4ea9-a109-96d066fc16c2"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Register And Apply to other Data", "Subsection",
 CellChangeTimes->{{3.7554982597977324`*^9, 3.755498271396658*^9}},
 CellTags->"c:33",ExpressionUUID->"52e9fa03-400d-4512-9bf9-1437a0e5fcb7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"watR", ",", "fatR"}], "}"}], "=", 
   RowBox[{"RegisterDataTransform", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "maskd", ",", "vox"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"water", ",", "maskw", ",", "voxW"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"fat", ",", "voxF"}], "}"}], ",", 
     RowBox[{"MethodReg", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<rigid\>\"", ",", "\"\<affine\>\""}], "}"}]}], ",", 
     RowBox[{"Iterations", "\[Rule]", "250"}], ",", " ", 
     RowBox[{"DeleteTempDirectory", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.755498275094519*^9, 3.755498319890134*^9}, {
   3.7554983831047416`*^9, 3.7554983952150755`*^9}, {3.7554984445763817`*^9, 
   3.7554984498083334`*^9}, 3.7584361136142426`*^9, {3.760357623138256*^9, 
   3.760357626463493*^9}, {3.82937395602829*^9, 3.829373959843869*^9}, 
   3.8293739979094467`*^9, 3.872229864063113*^9, 3.8722300396128407`*^9, {
   3.8722311241609077`*^9, 3.872231164672542*^9}, {3.8722316421957455`*^9, 
   3.872231643473422*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"3efd9f8d-ac18-4503-896c-60556b22f764"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"watR", ",", "fatR"}], "}"}], "]"}], ",", "vox"}], 
  "]"}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"0cbe21c8-5790-42e6-a0ba-1f030e3e5997"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"watRS", ",", "fatRS"}], "}"}], "=", 
   RowBox[{"RegisterDataTransformSplit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "maskd", ",", "vox"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"water", ",", "maskw", ",", "voxW"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"fat", ",", "voxF"}], "}"}], ",", 
     RowBox[{"MethodReg", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<rigid\>\"", ",", "\"\<affine\>\""}], "}"}]}], ",", 
     RowBox[{"Iterations", "\[Rule]", "200"}], ",", 
     RowBox[{"DeleteTempDirectory", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.755498275094519*^9, 3.755498319890134*^9}, {
   3.7554983831047416`*^9, 3.7554983952150755`*^9}, {3.7554984445763817`*^9, 
   3.7554984498083334`*^9}, {3.758436068173047*^9, 3.758436069372244*^9}, {
   3.7685395567423387`*^9, 3.768539567048854*^9}, {3.768539629002274*^9, 
   3.768539629076474*^9}, 3.8722298845318136`*^9, {3.8722300376810756`*^9, 
   3.8722300435541697`*^9}, {3.872231083935706*^9, 3.8722311149918404`*^9}, {
   3.872231190896412*^9, 3.8722312058565283`*^9}, {3.872231251745761*^9, 
   3.8722312532648125`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"27a1cde0-d94a-47cf-abeb-3c946e78e8b6"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"watRS", ",", "fatRS"}], "}"}], "]"}], ",", "vox"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7554984005698614`*^9, 3.7554984135662374`*^9}, {
  3.7584360760791397`*^9, 3.758436077389354*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"d1be5a12-791a-4350-96bc-97a8b33f7dcb"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dixon and Phase unwrapping", "Chapter",
 CellChangeTimes->{{3.7548951014856977`*^9, 
  3.754895112634607*^9}},ExpressionUUID->"bd72d8f9-e5f9-4dc6-8f74-\
865e5a0d73d1"],

Cell[CellGroupData[{

Cell["Simulated phase unwrapping", "Subsection",
 CellChangeTimes->{{3.7548951197254925`*^9, 3.754895134108882*^9}, {
  3.7548952739283686`*^9, 3.754895275862955*^9}, {3.758467755337638*^9, 
  3.7584677709681816`*^9}},
 CellTags->"c:34",ExpressionUUID->"a6da33c3-efdf-4208-ba9d-24feeed10a88"],

Cell[CellGroupData[{

Cell["Simulate some Data", "Subsubsection",
 CellChangeTimes->{{3.7548989462240496`*^9, 3.754898949663735*^9}, {
  3.754998398991782*^9, 3.7549984023582215`*^9}},
 CellTags->"c:35",ExpressionUUID->"2edddb44-1bfb-48ca-829f-4e01ababe642"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xdat", "=", 
    RowBox[{"ydat", "=", "200"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"Create", " ", "some", " ", "gradients"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gradients", "=", 
    RowBox[{"RotateDimensionsRight", "@", 
     RowBox[{"N", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "+", "j"}], ")"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"10", " ", 
             RowBox[{"Sqrt", "[", "i", "]"}]}], " ", "+", 
            RowBox[{"10", " ", 
             RowBox[{"Sqrt", "[", "j", "]"}]}]}], ")"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"i", "-", 
               RowBox[{".5", "xdat"}]}], "]"}], "1.2"], "+", 
            RowBox[{"4", " ", 
             RowBox[{"Sqrt", "[", "j", "]"}]}]}], ")"}], " ", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"2", "Pi", " ", 
              RowBox[{"(", 
               RowBox[{"i", "/", "60"}], ")"}]}], "]"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", "Pi", " ", 
              RowBox[{"(", 
               RowBox[{"j", "/", "60"}], ")"}]}], "]"}]}], ")"}]}], 
         "\[IndentingNewLine]", "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "xdat"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", "ydat"}], "}"}]}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"normalize", " ", "and", " ", "add", " ", "some", " ", "noise"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noise", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", 
       RowBox[{"1", "/", "120"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "xdat", ",", "ydat"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gradients", "=", 
    RowBox[{"noise", "+", 
     RowBox[{"Rescale", "/@", "gradients"}], "-", "0.5"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "numer", " ", "of", " ", "wraps", " ", "over", " ", "the", " ", 
    "gradient"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"un", "=", 
    RowBox[{"2", "Pi", " ", 
     RowBox[{"{", 
      RowBox[{"12", ",", "12", ",", "10", ",", "8"}], "}"}], " ", 
     "gradients"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"wrap", " ", "the", " ", "data"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"im", " ", "=", " ", 
    RowBox[{"Mod", "[", 
     RowBox[{"un", ",", 
      RowBox[{"2", "Pi"}]}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"add", " ", "noise", " ", "patch"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"nx", ",", "ny"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Round", "[", 
      RowBox[{"xdat", "/", "5"}], "]"}], ",", 
     RowBox[{"Round", "[", 
      RowBox[{"ydat", "/", "5"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noiseP", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"nx", ",", "nx"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"un", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"dat", "=", "#"}], ";", 
       RowBox[{
        RowBox[{"dat", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"xdat", "/", "4"}], "-", 
               RowBox[{"nx", "/", "2"}]}], "]"}], "+", "1"}], ";;", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"xdat", "/", "4"}], "+", 
              RowBox[{"nx", "/", "2"}]}], "]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"ydat", "/", "2"}], "-", 
               RowBox[{"ny", "/", "2"}]}], "]"}], "+", "1"}], ";;", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"ydat", "/", "2"}], "+", 
              RowBox[{"ny", "/", "2"}]}], "]"}]}]}], "]"}], "]"}], "=", 
        "noiseP"}], ";", "dat"}], ")"}], "&"}], "/@", "un"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"im", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"dat", "=", "#"}], ";", 
        RowBox[{
         RowBox[{"dat", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Floor", "[", 
               RowBox[{
                RowBox[{"xdat", "/", "4"}], "-", 
                RowBox[{"nx", "/", "2"}]}], "]"}], "+", "1"}], ";;", 
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"xdat", "/", "4"}], "+", 
               RowBox[{"nx", "/", "2"}]}], "]"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Floor", "[", 
               RowBox[{
                RowBox[{"ydat", "/", "2"}], "-", 
                RowBox[{"ny", "/", "2"}]}], "]"}], "+", "1"}], ";;", 
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"ydat", "/", "2"}], "+", 
               RowBox[{"ny", "/", "2"}]}], "]"}]}]}], "]"}], "]"}], "=", 
         "noiseP"}], ";", "dat"}], ")"}], "&"}], "/@", "im"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Show", " ", "The", " ", "wrapped", " ", "data"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{"Rescale", "[", "#", "]"}], ",", 
       RowBox[{"ImageSize", "->", "200"}]}], "]"}], "&"}], "/@", "im"}], ",", 
   "\"\<  \>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.7549976917055855`*^9, 3.754997793597664*^9}, 
   3.754997849787154*^9, {3.754997938490676*^9, 3.754997938950401*^9}, {
   3.7549980726370535`*^9, 3.754998097766305*^9}, {3.754998131589113*^9, 
   3.7549983965618825`*^9}, {3.7549984543741026`*^9, 3.754998533495485*^9}, {
   3.7549985780393105`*^9, 3.7549985926172285`*^9}, {3.838174388198349*^9, 
   3.8381743940437126`*^9}, {3.8381745406697016`*^9, 3.838174577095389*^9}, {
   3.8381746130892396`*^9, 3.8381746197737265`*^9}, {3.838178778035986*^9, 
   3.8381787788578444`*^9}, {3.8381789935782537`*^9, 3.838179006574831*^9}, {
   3.8381837971981435`*^9, 3.8381838047034616`*^9}, {3.838184022751316*^9, 
   3.838184038269132*^9}, {3.838184287250022*^9, 3.8381843496876726`*^9}, {
   3.8381843805066805`*^9, 3.8381843807160788`*^9}, {3.838184912524763*^9, 
   3.8381849819711103`*^9}, {3.8381850447887993`*^9, 3.838185048396658*^9}, {
   3.8381850985623817`*^9, 3.8381850989417725`*^9}, {3.838192032900813*^9, 
   3.838192082915861*^9}, {3.838192948741992*^9, 3.838192949666714*^9}, {
   3.8381939622176485`*^9, 3.8381939638303227`*^9}, {3.8381948041475215`*^9, 
   3.838194807674503*^9}, {3.8381966611219883`*^9, 3.838196699520776*^9}, {
   3.838196789414157*^9, 3.838196792414489*^9}, {3.838196974339326*^9, 
   3.8381969798520346`*^9}, 3.838197255925785*^9, {3.838199508273942*^9, 
   3.8381995184641314`*^9}, {3.838259840827737*^9, 3.838259841207488*^9}, {
   3.8382598723289404`*^9, 3.8382598734329863`*^9}, {3.8382599378355794`*^9, 
   3.8382599380450196`*^9}, {3.838260017961311*^9, 3.8382600510647807`*^9}, {
   3.8382607101713276`*^9, 3.8382607243967657`*^9}, {3.8382607996153345`*^9, 
   3.8382608010354548`*^9}, {3.8382608419304447`*^9, 
   3.8382608581737227`*^9}, {3.8382654481265264`*^9, 
   3.8382654517009554`*^9}, {3.838265546182499*^9, 3.838265661483443*^9}, {
   3.8454648016376963`*^9, 3.845464860181296*^9}, {3.869800278229045*^9, 
   3.8698002845386515`*^9}, {3.869801102029804*^9, 3.8698011024931216`*^9}, {
   3.8698020551999235`*^9, 3.8698020556308627`*^9}, {3.869802243153267*^9, 
   3.8698022485921893`*^9}, {3.8702456807297745`*^9, 
   3.8702456810518627`*^9}, {3.8702457158191805`*^9, 
   3.8702458282990046`*^9}, {3.8702458631027913`*^9, 
   3.8702458651613626`*^9}, {3.8702458975145597`*^9, 3.870246112479963*^9}, {
   3.8702461433871565`*^9, 3.8702461723954663`*^9}, {3.870498654619564*^9, 
   3.8704986551453*^9}, {3.8704986983972373`*^9, 3.870498699607258*^9}, 
   3.8705008172793703`*^9, 3.8705009334699163`*^9},
 CellLabel->
  "In[200]:=",ExpressionUUID->"d0d98fe3-f920-45fd-9b74-f8e903adc023"]
}, Closed]],

Cell[CellGroupData[{

Cell["Unwrap simulated Data", "Subsubsection",
 CellChangeTimes->{{3.7548952024977303`*^9, 3.7548952076400723`*^9}, 
   3.7548952687600183`*^9},
 CellTags->"c:36",ExpressionUUID->"67a583ec-d68b-4d8e-ae56-a358819f36f5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"unw", "=", 
    RowBox[{"Unwrap", "/@", "im"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Show", " ", "the", " ", "results"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{"Rescale", "[", "#", "]"}], ",", 
       RowBox[{"ImageSize", "->", "150"}]}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"im", ",", "un", ",", "unw"}], "}"}], ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.754899510078083*^9, 3.7548996092769794`*^9}, {
   3.754899730076022*^9, 3.754899740058651*^9}, 3.754899897935336*^9, {
   3.754998598008664*^9, 3.7549986049417105`*^9}, {3.8381743922322664`*^9, 
   3.8381744011926975`*^9}, {3.838178816245762*^9, 3.8381788248191767`*^9}, {
   3.838178912388085*^9, 3.8381789697572384`*^9}, 3.8381851098202114`*^9, {
   3.8382599897038817`*^9, 3.8382599901556745`*^9}, 3.838260021961645*^9, {
   3.83826006063422*^9, 3.8382600622807846`*^9}, {3.8643694782884088`*^9, 
   3.864369486801217*^9}, {3.8643696174249043`*^9, 3.8643696496006036`*^9}, 
   3.864369683504691*^9, {3.8698012907978845`*^9, 3.8698013013093643`*^9}, 
   3.8698020292468395`*^9, 3.8698020684415193`*^9, {3.8702332143524523`*^9, 
   3.870233214577508*^9}, {3.870233471168436*^9, 3.870233471488714*^9}, {
   3.870235631272992*^9, 3.8702356495618887`*^9}, {3.8710979299686604`*^9, 
   3.8710979535848503`*^9}},ExpressionUUID->"d423f709-b17a-4168-aefa-\
f5fb52bd609f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dixon data", "Subsection",
 CellChangeTimes->{{3.754895417479931*^9, 3.754895434517124*^9}, 
   3.754997531203142*^9},
 CellTags->"c:37",ExpressionUUID->"7b0ca489-2d98-4b70-8d0f-822a0387c0f1"],

Cell[CellGroupData[{

Cell["Import Data", "Subsubsection",
 CellChangeTimes->{{3.754997533020477*^9, 3.7549975367605343`*^9}},
 CellTags->"c:38",ExpressionUUID->"177a1753-5f03-4991-89d8-98a1aa966a50"],

Cell["\<\
Very specific case of dixon data converted from a phipils MRI scanner with \
magnitude, phase, real, imaginary, fat, water and B0 which was converted from \
dcm to Nii using DcmToNii.
You only need the real and imaginary data to perform the reconstructions. \
\>", "Text",
 CellChangeTimes->{{3.7548954792598314`*^9, 3.7548955300130854`*^9}, 
   3.7549026270064087`*^9, {3.7549986310072975`*^9, 
   3.7549986675954037`*^9}},ExpressionUUID->"87f508a6-1540-4424-bb30-\
6ac782debcec"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dix", ",", " ", "B0", ",", 
     RowBox[{"{", 
      RowBox[{"real", ",", "imag", ",", "mag", ",", "phase"}], "}"}], ",", 
     "dixvox"}], "}"}], "=", 
   RowBox[{"ImportNiiDix", "[", "\"\<Dixondata.nii\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.754895436716581*^9, 3.754895475639389*^9}, {
  3.7548955587023845`*^9, 3.7548956000566998`*^9}, {3.7548956465255575`*^9, 
  3.754895647049635*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"423e2d86-3a51-46b3-9197-72f7f0028581"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"nEcho", ",", "echo"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0.76"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"echos", "=", 
    RowBox[{
     RowBox[{"Range", "[", "nEcho", "]"}], 
     RowBox[{"echo", "/", "1000"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"in", " ", "seconds"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7549009826085634`*^9, 3.7549010174370785`*^9}, {
  3.7549013021727595`*^9, 3.75490131146694*^9}, {3.754902432765706*^9, 
  3.7549024396770434`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"58d81c30-8194-49d8-99f2-afe922769900"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"real", ",", "imag", ",", "dixvox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548955873392324`*^9, 3.754895602809918*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"d5065ca8-34be-491d-8e7c-859fa128d3ef"],

Cell["Mask the background for better fitting", "Text",
 CellChangeTimes->{{3.754998713229601*^9, 
  3.754998728766362*^9}},ExpressionUUID->"5d8722a6-0f30-46da-9a66-\
70fc6e81a4e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"meanMag", "=", 
   RowBox[{"NormalizeData", "[", 
    RowBox[{"Mean", "@", 
     RowBox[{"Transpose", "@", "mag"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mask", "=", 
    RowBox[{"Mask", "[", 
     RowBox[{"meanMag", ",", "5", ",", 
      RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
      RowBox[{"MaskComponents", "\[Rule]", "2"}], ",", 
      RowBox[{"MaskClosing", "\[Rule]", "2"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"real", ",", "imag", ",", "mag", ",", "phase"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"MaskData", "[", 
      RowBox[{"#", ",", "mask"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"real", ",", "imag", ",", "mag", ",", "phase"}], "}"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.754901597258956*^9, 3.754901597375744*^9}, {
  3.754998684206936*^9, 3.7549987122940793`*^9}, {3.754998827495366*^9, 
  3.7549988310379753`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"cdcc633d-9298-474d-8926-467ed718c7df"]
}, Closed]],

Cell[CellGroupData[{

Cell["Create a B0Map from phase data", "Subsubsection",
 CellChangeTimes->{{3.7549011981743827`*^9, 3.7549012066710663`*^9}},
 CellTags->"c:39",ExpressionUUID->"fad4d634-1ff8-466d-8264-61cf6051a1dc"],

Cell["Uses UnwrapSplit to unwrap both legs separately", "Text",
 CellChangeTimes->{{3.7584362210925174`*^9, 3.758436244684272*^9}, 
   3.768806763579346*^9},ExpressionUUID->"c7901d06-820c-4d80-adf0-\
e69af1db8e84"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"B0Map", "=", 
   RowBox[{"mask", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"phase", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "4"}], "]"}], "]"}], "-", 
      RowBox[{"phase", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B0MapU", "=", 
     RowBox[{"UnwrapSplit", "[", 
      RowBox[{"B0Map", ",", "mag", ",", 
       RowBox[{"UnwrapDimension", "\[Rule]", "\"\<3D\>\""}]}], "]"}]}], ";"}],
    "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "convert", " ", "the", " ", "B0map", " ", "to", " ", "Hz", " ", "for", " ",
     "dixon", " ", "reconstruction"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"hz", "=", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{"2", "Pi", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"echos", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "-", 
       RowBox[{"echos", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0Hz", "=", 
   RowBox[{"hz", " ", "B0MapU"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549010337577896`*^9, 3.7549010764325085`*^9}, {
   3.7549011783346214`*^9, 3.7549012406207705`*^9}, {3.7549016324444876`*^9, 
   3.7549016325870314`*^9}, {3.7549987461412563`*^9, 
   3.7549987618038483`*^9}, {3.8648824243162003`*^9, 
   3.8648824310672626`*^9}, {3.870500177706973*^9, 3.870500181318342*^9}, 
   3.87050031116284*^9, {3.870500370731724*^9, 3.8705003723879967`*^9}, {
   3.8717046589633093`*^9, 3.8717046653804235`*^9}, {3.8720491150955963`*^9, 
   3.8720491161347275`*^9}},ExpressionUUID->"f00cc5d1-3776-4533-888e-\
d37a4fe114b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8.2459218`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.8705003818377542`*^9, 3.870500400334279*^9}, 
   3.8705005140508175`*^9, 3.8705005690985203`*^9, 3.870501631145836*^9, 
   3.8717046770101995`*^9, 3.8720491158902245`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"e73b77e8-feae-4bac-b7a0-574ab653978c"],

Cell[BoxData["69.8047996017085`"], "Output",
 CellChangeTimes->{{3.8705003818377542`*^9, 3.870500400334279*^9}, 
   3.8705005140508175`*^9, 3.8705005690985203`*^9, 3.870501631145836*^9, 
   3.8717046770101995`*^9, 3.8720491159136724`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"7688f73e-6f44-4217-87b4-3b8bee104dd3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"B0Map", ",", "B0MapU"}], "]"}]], "Input",
 CellChangeTimes->{{3.869801243105795*^9, 3.8698012559807434`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"43524089-a0eb-4e17-8202-245f84006519"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"B0Map", ",", "B0Hz", ",", "dixvox", ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "100"}], ",", "100"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.754901161022546*^9, 3.754901171131878*^9}, {
  3.754901417212268*^9, 3.754901418059086*^9}, {3.7549987770718904`*^9, 
  3.7549988046390266`*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"0d87a2c4-dbb9-4b69-9cbd-5329e4c7140f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculate a T2 star map from the echos", "Subsubsection",
 CellChangeTimes->{{3.75490125599796*^9, 3.7549012670385733`*^9}, 
   3.8643710021186867`*^9},
 CellTags->"c:40",ExpressionUUID->"1b109d2e-a32c-48ad-9a6b-09b964323db5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"s0", ",", "T2star"}], "}"}], "=", 
   RowBox[{"T2Fit", "[", 
    RowBox[{"mag", ",", "echos"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754901290700407*^9, 3.754901324588889*^9}, {
   3.7549013810507326`*^9, 3.754901394283003*^9}, {3.7549016467968245`*^9, 
   3.754901652796183*^9}, {3.7549021603045063`*^9, 3.754902160892595*^9}, {
   3.7549022127335978`*^9, 3.7549022158522654`*^9}, 3.7549024289920497`*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"d7bdf8d5-6e6b-401a-9fb0-4bd3e02954af"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"s0", ",", "T2star", ",", "dixvox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.05"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549013968454103`*^9, 3.7549014130665936`*^9}, {
  3.754901466908824*^9, 3.75490147737572*^9}, {3.7549021722049284`*^9, 
  3.754902181595815*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"bc8e7efa-dd51-4c32-b014-721652d5ace8"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"MedFilter", "[", "B0Hz", "]"}], ",", 
   RowBox[{"MedFilter", "[", "T2star", "]"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.05"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.870502100901606*^9, 3.8705021468787317`*^9}, {
  3.8705021904318857`*^9, 3.8705022570715513`*^9}},
 CellLabel->
  "In[372]:=",ExpressionUUID->"346bed12-bfcb-401c-8796-fa1043ebaeac"]
}, Closed]],

Cell[CellGroupData[{

Cell["Perform iDeal reconstruction with initial B0 and T2star", \
"Subsubsection",
 CellChangeTimes->{{3.754901503069392*^9, 3.754901520094133*^9}},
 CellTags->"c:41",ExpressionUUID->"202a85c6-aa77-469d-80b0-13a415d3aa61"],

Cell["The reconstruction uses a 8 peak fat spectrum by default.", "Text",
 CellChangeTimes->{{3.754901708095419*^9, 3.754901724207772*^9}, 
   3.754998889567275*^9},ExpressionUUID->"e24414a3-74e8-46ce-b0b6-\
aa68e3bb6b37"],

Cell[BoxData[
 RowBox[{"Column", "@", 
  RowBox[{"Options", "[", "DixonReconstruct", "]"}]}]], "Input",
 CellChangeTimes->{{3.7549017008317294`*^9, 3.7549017047021294`*^9}, {
  3.7549988929307747`*^9, 3.7549988959752254`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"61f94af4-5685-4721-b8e5-76cc0311a7c5"],

Cell["\<\
The Dixon reconstruction uses IDEAL with B0 and T2* correction\
\>", "Text",
 CellChangeTimes->{{3.758436296048541*^9, 
  3.758436325020463*^9}},ExpressionUUID->"f029d1df-9364-4a0f-aa02-\
4b00dc60486b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"perform", " ", "the", " ", "IDEAL", " ", "dixon", " ", "fit"}], 
    ",", " ", 
    RowBox[{"B0map", " ", "in", " ", "Hz"}], ",", " ", 
    RowBox[{"T2star", " ", "in", " ", "s"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fraction", ",", "watfat", ",", "iopImages", ",", 
       RowBox[{"{", 
        RowBox[{"B0fit", ",", "t2St", ",", "r2St", ",", "phiIn"}], "}"}], ",",
        "itt", ",", "resDix"}], "}"}], "=", 
     RowBox[{"DixonReconstruct", "[", 
      RowBox[{
      "real", ",", "imag", ",", "echos", ",", "B0Hz", ",", "T2star", ",", 
       RowBox[{"DixonFilterInput", "->", "True"}], ",", 
       RowBox[{"DixonFilterOutput", "->", "True"}]}], "]"}]}], ";"}], "//", 
   "AbsoluteTiming"}]}]], "Input",
 CellChangeTimes->{{3.754901525562724*^9, 3.754901528603548*^9}, {
   3.754901978846877*^9, 3.754901984012291*^9}, {3.754902191998588*^9, 
   3.7549022027641563`*^9}, {3.7549023148142376`*^9, 
   3.7549023278657026`*^9}, {3.7549024464298067`*^9, 3.75490245145186*^9}, {
   3.7549026391006436`*^9, 3.754902642427657*^9}, {3.8454563498936973`*^9, 
   3.845456351074998*^9}, {3.8454565797954454`*^9, 3.8454565842970324`*^9}, {
   3.8454571311744847`*^9, 3.84545713170008*^9}, {3.8455426950108657`*^9, 
   3.8455427092933044`*^9}, 3.845542950667134*^9, {3.8455440336745834`*^9, 
   3.8455440453955183`*^9}, {3.8455562094580517`*^9, 3.845556220340623*^9}, 
   3.845556431137073*^9, 3.845556768733327*^9, {3.864294069644165*^9, 
   3.8642940701528053`*^9}, {3.8643552919447947`*^9, 
   3.8643552960406337`*^9}, {3.8702645630279818`*^9, 
   3.8702645721844387`*^9}, {3.8705023101761103`*^9, 3.870502311608819*^9}, 
   3.871704790932722*^9, {3.871707106349574*^9, 3.871707106732213*^9}, {
   3.8720499744913244`*^9, 3.8720499770508103`*^9}, {3.8720500107959733`*^9, 
   3.8720500151156054`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"df9ae3da-52fc-492a-9b8d-9589c9e0af8a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"45.9595914`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.8705023588886414`*^9, 3.8717048254881587`*^9, 
  3.871704976831852*^9, 3.8717063300474577`*^9, 3.871706450748181*^9, 
  3.8717071482359343`*^9, 3.8717073081412764`*^9, 3.872049154557988*^9, 
  3.8720492561898685`*^9, 3.872049409019103*^9, 3.8720494794366093`*^9, 
  3.872049656742861*^9, 3.8720497215604725`*^9, 3.8720498350510516`*^9, 
  3.8720500072711005`*^9, 3.8720500611505413`*^9, 3.8720501862946653`*^9, 
  3.872050459230945*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"5eb3a8e6-5a64-494f-93fd-265358dd1a69"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PlotData", "[", "itt", "]"}]], "Input",
 CellChangeTimes->{{3.845543842608681*^9, 3.8455438452663965`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"b57474ca-c936-4652-9fd6-663016d6a0c8"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"1000", "t2St"}], ",", " ", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"0", ",", "50"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.864883596269615*^9, 3.8648836129451323`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"6b4cf163-3775-42de-9877-12d6df906e42"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"B0fit", ",", "t2St", ",", "dixvox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.05"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549019554403896`*^9, 3.7549019595644007`*^9}, {
  3.7549020857896004`*^9, 3.754902087723256*^9}, {3.754902383757766*^9, 
  3.754902394123337*^9}, {3.7549024747014837`*^9, 3.7549024767484083`*^9}, {
  3.848397084395108*^9, 3.8483970914168377`*^9}, {3.8702643675548544`*^9, 
  3.8702643773703065`*^9}, {3.870264526933181*^9, 3.8702645285483046`*^9}, {
  3.8702659282860928`*^9, 3.8702659286498613`*^9}, {3.8702667719345255`*^9, 
  3.8702667724731183`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"3b55af4b-60ef-43ab-be1f-e829b9d3ed23"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"B0fit", ",", "B0Hz"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t2St", ",", "T2star"}], "}"}], ",", "dixvox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.05"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549019554403896`*^9, 3.7549019595644007`*^9}, {
  3.7549020857896004`*^9, 3.754902087723256*^9}, {3.754902383757766*^9, 
  3.754902394123337*^9}, {3.7549024747014837`*^9, 3.7549024767484083`*^9}, {
  3.848397084395108*^9, 3.8483970914168377`*^9}, {3.8702643675548544`*^9, 
  3.8702643773703065`*^9}, {3.870264526933181*^9, 3.8702645285483046`*^9}, {
  3.8702659282860928`*^9, 3.8702659286498613`*^9}, {3.8702667719345255`*^9, 
  3.8702667724731183`*^9}, {3.8705023271829543`*^9, 3.870502343632017*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"1bb71494-5ac8-49d8-92ef-45d8ca18d99e"],

Cell[BoxData[
 RowBox[{"PlotData", "@", "iopImages"}]], "Input",
 CellChangeTimes->{{3.870502517673102*^9, 3.870502521399897*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"5d51a2d1-42ce-414b-9912-b705c804ab94"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"iopImages", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"iopImages", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", "dixvox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549016899492655`*^9, 3.7549016978680615`*^9}, {
  3.7549028011392927`*^9, 3.7549028300607553`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"d640f839-5ffc-4132-865e-cae8836aa204"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"watfat", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"watfat", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", "dixvox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549016899492655`*^9, 3.7549016978680615`*^9}, {
  3.7549028011392927`*^9, 3.7549028266850023`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"5f8b9cc7-a71a-4c83-b65d-69c317df4b2a"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"phiIn", ",", "dixvox"}], "]"}]], "Input",
 CellChangeTimes->{{3.861858913497285*^9, 3.8618589489790473`*^9}, {
  3.864353776467146*^9, 3.86435378785854*^9}, {3.864379179396075*^9, 
  3.864379182961542*^9}, {3.8717072043182216`*^9, 3.871707204460683*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"db9ffc7c-3d10-42ae-b9b5-62c501a3cb07"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"fraction", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"fraction", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", "dixvox", ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.02"}], ",", "1.02"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549015332953105`*^9, 3.7549015571315794`*^9}, {
   3.8454567635733995`*^9, 3.8454567659240227`*^9}, {3.8483971516112094`*^9, 
   3.8483971572520304`*^9}, {3.861858903898447*^9, 3.8618589098006306`*^9}, 
   3.8643560936612787`*^9, {3.8643566819818406`*^9, 3.864356689119606*^9}, {
   3.8648832983993216`*^9, 3.8648833265157194`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"8b5b27ec-0057-4a86-964e-d0783ae008fb"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", "fraction"}], ",", "dixvox", ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.01"}], ",", "1.01"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549015332953105`*^9, 3.7549015571315794`*^9}, {
   3.8454567635733995`*^9, 3.8454567659240227`*^9}, {3.8483971516112094`*^9, 
   3.8483971572520304`*^9}, {3.861858903898447*^9, 3.8618589098006306`*^9}, 
   3.8643560936612787`*^9, {3.8643566819818406`*^9, 3.864356689119606*^9}},
 CellLabel->
  "In[377]:=",ExpressionUUID->"ef9d930e-46b1-4c08-ab9d-54b1b8bc8691"],

Cell["\<\
Internally DixonReconstruct estimates the fat fraction from the complex water \
and fat images however it can also be done using the magnitude\
\>", "Text",
 CellChangeTimes->{{3.758436330990307*^9, 
  3.7584363600954485`*^9}},ExpressionUUID->"625f8eae-ed64-4f89-b2e8-\
8ef3060fd8cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fractionM", "=", 
   RowBox[{"DixonToPercent", "[", 
    RowBox[{
     RowBox[{"watfat", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"watfat", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758436363630905*^9, 3.758436392588728*^9}},
 CellLabel->
  "In[1528]:=",ExpressionUUID->"264346c4-6b3f-4ece-bceb-9414c6eb6281"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", "fraction"}], ",", 
   RowBox[{"Transpose", "@", "fractionM"}], ",", "dixvox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.0"}], ",", "1.0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549015332953105`*^9, 3.7549015571315794`*^9}, {
  3.7584364908952923`*^9, 3.7584364927021093`*^9}, {3.845456808979616*^9, 
  3.845456817848179*^9}, {3.84839739903436*^9, 3.848397401994776*^9}, {
  3.8618588964538517`*^9, 3.8618589023871408`*^9}},
 CellLabel->
  "In[1529]:=",ExpressionUUID->"894f94a1-23b7-4463-b2d5-abe725435936"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulate Dixon Data and fit testing", "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7554985560315247`*^9, 3.755498559150863*^9}, {
   3.758348438387064*^9, 3.75834843870792*^9}, {3.758433092886845*^9, 
   3.758433096742123*^9}, {3.7584677846255093`*^9, 
   3.7584677903386955`*^9}},ExpressionUUID->"992e29c7-eb37-4be7-8ec9-\
9e6018497ff7"],

Cell[CellGroupData[{

Cell["Simulate the Dixon signal", "Subsection",
 CellChangeTimes->{{3.7583490562055683`*^9, 3.758349062121837*^9}, {
  3.758470058569296*^9, 3.758470059263226*^9}},
 CellTags->"c:42",ExpressionUUID->"6f5b2db9-e346-4bd8-a44c-8cca8c836fad"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fDix", ",", "sDix", ",", "nEcho"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"2.55", ",", "0.76", ",", "4"}], "}"}]}], ";"}]], "Input",Expressi\
onUUID->"85354d95-4da5-435b-a9a0-c401d639ef3f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fDix", ",", "sDix", ",", "nEcho"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"1.4", ",", "0.9", ",", "10"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"echos", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"fDix", " ", "+", " ", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", 
         RowBox[{"nEcho", "-", "1"}]}], "]"}], "sDix"}]}], ")"}], "/", 
    "1000."}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"snri", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0i", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2stari", "=", 
   RowBox[{"20", "/", "1000."}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fri", "=", ".3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"size", "=", "50"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7584671757058945`*^9, 3.7584672119603086`*^9}, 
   3.758467333286623*^9, {3.758467940853444*^9, 3.7584679409315567`*^9}, {
   3.7584681309643965`*^9, 3.758468190755753*^9}, {3.75846826763535*^9, 
   3.7584682804636946`*^9}, {3.845462733916752*^9, 3.845462734201635*^9}, 
   3.8703158071712713`*^9, {3.8720619600252895`*^9, 3.872061978504692*^9}},
 CellLabel->
  "In[281]:=",ExpressionUUID->"ca9c1bf2-57fe-44ba-a162-d1be1d85a590"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"frs", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "1", ",", ".1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"snrs", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"5", ",", "50", ",", "5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0s", "=", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"-", "100"}], ",", "100", ",", "10"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7584678184581175`*^9, 3.758467825496066*^9}, {
  3.758468081991387*^9, 3.7584681157660894`*^9}, {3.758468230479967*^9, 
  3.758468230993506*^9}, {3.845457733671528*^9, 3.8454577375298414`*^9}, {
  3.845462405196141*^9, 3.8454624079781528`*^9}},
 CellLabel->
  "In[288]:=",ExpressionUUID->"4c0239ee-d9ac-403c-a918-dd9d399cea36"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"realF", ",", "imagF"}], "}"}], "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"real", ",", "imag"}], "}"}], "=", 
        RowBox[{"SimulateDixonSignal", "[", 
         RowBox[{"echos", ",", "fr", ",", "B0i", ",", "T2stari"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"realM", "=", 
        RowBox[{"RotateDimensionsRight", "[", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"real", ",", 
           RowBox[{"{", 
            RowBox[{"size", ",", "size"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"imagM", "=", 
        RowBox[{"RotateDimensionsRight", "[", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"imag", ",", 
           RowBox[{"{", 
            RowBox[{"size", ",", "size"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"realN", "=", 
        RowBox[{"realM", "+", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "snri"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"nEcho", ",", "size", ",", "size"}], "}"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"imagN", "=", 
        RowBox[{"imagM", "+", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "snri"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"nEcho", ",", "size", ",", "size"}], "}"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"realN", ",", "imagN"}], "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"fr", ",", "frs"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758466519299549*^9, 3.758466533241519*^9}, {
   3.7584667308462963`*^9, 3.7584667585138855`*^9}, {3.75846692142552*^9, 
   3.7584669273582945`*^9}, 3.758467253788074*^9, {3.7584672882083406`*^9, 
   3.758467358363638*^9}, {3.75846812003065*^9, 3.758468139996991*^9}, {
   3.758468177586877*^9, 3.758468182008848*^9}, {3.758468225153759*^9, 
   3.758468320828058*^9}, {3.869802677089772*^9, 3.869802690891579*^9}},
 CellLabel->
  "In[291]:=",ExpressionUUID->"f1884fe1-586b-4852-b44e-8ac602f5e42f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"realS", ",", "imagS"}], "}"}], "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"real", ",", "imag"}], "}"}], "=", 
        RowBox[{"SimulateDixonSignal", "[", 
         RowBox[{"echos", ",", "fri", ",", "B0i", ",", "T2stari"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"realM", "=", 
        RowBox[{"RotateDimensionsRight", "[", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"real", ",", 
           RowBox[{"{", 
            RowBox[{"size", ",", "size"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"imagM", "=", 
        RowBox[{"RotateDimensionsRight", "[", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"imag", ",", 
           RowBox[{"{", 
            RowBox[{"size", ",", "size"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"realN", "=", 
        RowBox[{"realM", "+", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "snr"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"nEcho", ",", "size", ",", "size"}], "}"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"imagN", "=", 
        RowBox[{"imagM", "+", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "snr"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"nEcho", ",", "size", ",", "size"}], "}"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"realN", ",", "imagN"}], "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"snr", ",", "snrs"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758466519299549*^9, 3.758466533241519*^9}, {
   3.7584667308462963`*^9, 3.7584667585138855`*^9}, {3.75846692142552*^9, 
   3.7584669273582945`*^9}, 3.758467253788074*^9, {3.7584672882083406`*^9, 
   3.758467358363638*^9}, {3.75846812003065*^9, 3.758468139996991*^9}, {
   3.758468177586877*^9, 3.7584682188132477`*^9}, {3.758468292265744*^9, 
   3.7584682995314426`*^9}, {3.8698026865702825`*^9, 3.8698026939038916`*^9}},
 CellLabel->
  "In[292]:=",ExpressionUUID->"53fc9933-5872-4125-b0f8-f68f33bb3a1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"realB", ",", "imagB"}], "}"}], "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"real", ",", "imag"}], "}"}], "=", 
        RowBox[{"SimulateDixonSignal", "[", 
         RowBox[{"echos", ",", "fri", ",", "B0", ",", "T2stari"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"realM", "=", 
        RowBox[{"RotateDimensionsRight", "[", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"real", ",", 
           RowBox[{"{", 
            RowBox[{"size", ",", "size"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"imagM", "=", 
        RowBox[{"RotateDimensionsRight", "[", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"imag", ",", 
           RowBox[{"{", 
            RowBox[{"size", ",", "size"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"realN", "=", 
        RowBox[{"realM", "+", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "snri"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"nEcho", ",", "size", ",", "size"}], "}"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"imagN", "=", 
        RowBox[{"imagM", "+", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "snri"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"nEcho", ",", "size", ",", "size"}], "}"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"realN", ",", "imagN"}], "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"B0", ",", "B0s"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758466519299549*^9, 3.758466533241519*^9}, {
   3.7584667308462963`*^9, 3.7584667585138855`*^9}, {3.75846692142552*^9, 
   3.7584669273582945`*^9}, 3.758467253788074*^9, {3.7584672882083406`*^9, 
   3.758467358363638*^9}, {3.75846812003065*^9, 3.758468139996991*^9}, {
   3.758468177586877*^9, 3.758468262882839*^9}, {3.7584683010011992`*^9, 
   3.7584683079738092`*^9}, {3.7584683776609764`*^9, 
   3.7584683796218987`*^9}, {3.758468552311184*^9, 3.7584685530545883`*^9}, {
   3.869802688198004*^9, 3.8698026979621983`*^9}},
 CellLabel->
  "In[293]:=",ExpressionUUID->"75be3c89-2250-4c15-8fc1-95fc5153710d"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"realB", ",", "imagB"}], "]"}]], "Input",
 CellChangeTimes->{{3.75846961932992*^9, 3.758469625453643*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"ea6aef23-0e48-4bd6-8dc9-a82b13ee01d7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fit the simulated Dixon signal", "Subsection",
 CellChangeTimes->{{3.758349069323036*^9, 3.7583490793226967`*^9}, {
  3.7584700639547195`*^9, 3.758470064704809*^9}},
 CellTags->"c:43",ExpressionUUID->"33202e28-0fa0-4880-a579-60fd33dd0adb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dim", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Dimensions", "[", "realF", "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0F", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"B0i", ",", "5"}], "]"}], ",", "dim"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2starF", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"T2stari", ",", 
       RowBox[{"5", "/", "1000."}]}], "]"}], ",", "dim"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "frF", ",", "watfat", ",", "iop", ",", "fit", ",", "itt", ",", "res"}], 
    "}"}], "=", 
   RowBox[{"DixonReconstruct", "[", 
    RowBox[{
    "realF", ",", "imagF", ",", "echos", ",", "B0F", ",", "T2starF", ",", 
     RowBox[{"DixonFilterInput", "->", "False"}], ",", 
     RowBox[{"DixonFilterOutput", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.758467394348463*^9, 3.758467455297535*^9}, {
   3.7584675625496063`*^9, 3.758467583969634*^9}, {3.758468346560258*^9, 
   3.7584684084834604`*^9}, {3.7584687683687506`*^9, 3.758468770816373*^9}, {
   3.845554981495365*^9, 3.8455549842334213`*^9}, {3.8720621279287624`*^9, 
   3.872062130281828*^9}, {3.87206216132452*^9, 3.872062178713269*^9}, {
   3.8720622683459163`*^9, 3.8720622687450333`*^9}, 3.872062307200717*^9},
 CellLabel->
  "In[363]:=",ExpressionUUID->"753b0a2a-9d05-49da-9bee-81c36f6f89af"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dim", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Dimensions", "[", "realS", "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0S", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"B0i", ",", "5"}], "]"}], ",", "dim"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2starS", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"T2stari", ",", 
       RowBox[{"5", "/", "1000."}]}], "]"}], ",", "dim"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "frS", ",", "watfat", ",", "iop", ",", "fit", ",", "itt", ",", "res"}], 
    "}"}], "=", 
   RowBox[{"DixonReconstruct", "[", 
    RowBox[{"realS", ",", "imagS", ",", "echos", ",", "B0S", ",", 
     RowBox[{"DixonFilterInput", "->", "False"}], ",", 
     RowBox[{"DixonFilterOutput", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.758467394348463*^9, 3.758467455297535*^9}, {
   3.7584675625496063`*^9, 3.758467583969634*^9}, {3.758468346560258*^9, 
   3.758468436183395*^9}, {3.7584687768387537`*^9, 3.758468779833809*^9}, 
   3.8455549897014832`*^9, {3.872062139514825*^9, 3.8720621421851807`*^9}, {
   3.87206218341926*^9, 3.872062188633341*^9}, 3.872062272040361*^9, {
   3.8720623081205034`*^9, 3.872062309231097*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"400f995e-d5ab-42fe-a587-30e34e83f443"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dim", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Dimensions", "[", "realB", "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0B", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"B0", ",", "5"}], "]"}], ",", 
       RowBox[{"dim", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;"}], "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"B0", ",", "B0s"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2starB", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"T2stari", ",", 
       RowBox[{"5", "/", "1000."}]}], "]"}], ",", "dim"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "frB", ",", "watfat", ",", "iop", ",", "fit", ",", "itt", ",", "res"}], 
    "}"}], "=", 
   RowBox[{"DixonReconstruct", "[", 
    RowBox[{"realB", ",", "imagB", ",", "echos", ",", "B0B", ",", 
     RowBox[{"DixonFilterInput", "->", "False"}], ",", 
     RowBox[{"DixonFilterOutput", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.758467394348463*^9, 3.758467455297535*^9}, {
   3.7584675625496063`*^9, 3.758467583969634*^9}, {3.758468346560258*^9, 
   3.758468436183395*^9}, {3.7584685365832167`*^9, 3.7584685751552095`*^9}, {
   3.7584686090232754`*^9, 3.7584686365387163`*^9}, {3.7584687862576866`*^9, 
   3.75846881556581*^9}, 3.845554991942664*^9, {3.872062143130743*^9, 
   3.872062143928913*^9}, {3.872062186915022*^9, 3.8720621906645856`*^9}, 
   3.8720622728405247`*^9, {3.872062309998908*^9, 3.872062310712747*^9}},
 CellLabel->
  "In[359]:=",ExpressionUUID->"b43542ca-c929-4028-8aee-c7176c7cf527"]
}, Closed]],

Cell[CellGroupData[{

Cell["Evaluate the fits", "Subsection",
 CellChangeTimes->{{3.7583490835356913`*^9, 3.75834908874759*^9}},
 CellTags->"c:44",ExpressionUUID->"6c868790-2893-463e-a2d0-1a9a571113d7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"frF", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<fat frac.\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<Imposed frac. = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"frs", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "frs", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"frS", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", ".5"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<fat frac.\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<SNR = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"snrs", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "snrs", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"frB", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", ".5"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<fat frac.\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<B0 = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"B0s", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], "<>", "\"\< Hz\>\""}]}]}], "]"}],
      "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"5", ",", 
      RowBox[{"Length", "[", "B0s", "]"}], ",", "8"}], "]"}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.7584691146759214`*^9, 3.7584692172196293`*^9}},
 CellLabel->
  "In[371]:=",ExpressionUUID->"1ef20ff1-6d49-4deb-877d-7de44dfed40d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.476], 
          GrayLevel[1]]], 
        GrayLevel[0]], {{}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.476], 
            GrayLevel[1]]], 
          GrayLevel[0]], {{{
            
            RectangleBox[{0., 0}, {0.03333333333333333, 1.1510500807754442`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.03333333333333333, 0}, {0.06666666666666667, 
             4.6284329563812605`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.06666666666666667, 0}, {0.1, 8.832794830371567}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.1, 0}, {0.13333333333333333`, 9.317447495961227}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.13333333333333333`, 0}, {0.16666666666666666`, 
             4.8222940226171245`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.16666666666666666`, 0}, {0.2, 
             1.1752827140549273`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2, 0}, {0.23333333333333334`, 
             0.07269789983844911}, "RoundingRadius" -> 
             0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwVVnc8lu8XNlL2qqzILiEpM97nOU8IWWUlhW9GZEWSlGSEFKKMyExIJHvP
7GS8vNNIdpKdVaGf3z/387k+57rvc53rOfcQtfMwuUFHQ0Mzujf8/6t3Y7a/
6Yc5+lG5eKmHMgb7NAU8v/ErQufX7fslR8dBIT0xpZRfC0jR7wpiHcdBv4dS
kspvBsahyhmXf4+DhcNm/Ut+B/DImVM6ITMJX0890Yzi94ZX5Zlu1s3TEJfO
1yR57S7oNMkmGQnMgB5HHq4hxQeWExTanO7MQMVit9KS8H2gkTyrJHTiOzwv
4JYyPvYIPCb93ScyZyHj8MWwZ/whMGMXP6I78BP8el61Xq4JAT1dq9+M6Dxc
Dh2jE78WCpSUl2Sh/HlgXb8dUJsSBkmnCQzGTxfAlxjnOy/8FJ7eeOYhc3kJ
jGOHXIyOPYdAzmEi++sVkNUXfy/Q8RzeJDSlqg+vACO92/cZp2gwCPelSAmt
wn/Vu8WNZjHgR/9o88LbVTh8IkbuSsILsGpx+/Ol6hcEMZYef8ofB/L9jiHL
TBsgrfMivMQzDvLuKk2Y22zAQKjHj+GOOPiEKYeVl26ABL1svpxPPFhfm3jj
bLsJ7TtZcsSBBODV8xLo7dwC1l8JSsKRSWAlNvm4vvMvlJ++m6A7mQQLU5KI
58ltsPE03byt9hpaKH3FZ2K3oXCBo7p19jUoSOac+2m7Ayaz4TiX8ynwte+G
sy7rP0j8+kCzfDcNzrfhF5v0aLFzgpZZo+bpcO6b6YmBUFps7qoKA2NBOjz6
+EPG6xMtdnT+vn3ByQz4ZiSb8J8aHebhrCxJM5IBrr83+DfO0GPcDoW52aqZ
UJj3dFgOGLArlm8Kl1eywKteYsa8hQlbGjZjzhTIBo8Y/1wZFmYszIbxhqlm
NtQaXxB9YMqMldp7CFTEZcOTDm3BgGlmjP0WEuqnkgMXJ+do+DlYsbbgwav7
/d/BlPBG1K977NiZD1z7BRnzwHbqevyfbi6M5V+Qlc7RQhDL4dPTdebFEp0t
bGS1CyGTyU/vZwIvJkGUvc51qxA+CAnsS27lxdD3FPvh+kJo5i6YPSLCh1W/
TyivlCsCo7Xe10EUPmzBdL5Ov7cIrtS3ZzdrC2Dmua++3GErAZ5V+TvvhISw
FOtgA0fREriaAsev6glhE9zuPVeUSkD5GEJc8BHCPPw1+hDrEkgu4tko7hPC
nposDBwoKIE3C8u0wQFHsfptjaFkg1IQFSA9HScLY5LGi7MtEWVwao7pbYWs
KCYQoKPm9KYMbl44jZw6J4pxFmREMFeWgaC4aug9c1HsD6OpnPFEGfxo/cx+
x18UwzdV3hlVLQff/Sqdv7tEsbZFzrYgo3I44iwVRfgqitUIuvBIOpRDv8L8
lveyKJbtK1jtGl0OjB6LFObDYtgD+aDdrelymMIHPHe6JoZ52AxdTPlbDtSh
4mv2bmKYQ6TCG+CqADH1JWFhfzHs4uy0ZhiuAmJ2KqkDqWKYRIbe04OxFWCZ
dCGOa0QM4+99O1SRWwEMPQzxv+bEMPbtbZmrDRVAfzbU5vlvMey3RWFvxo8K
2D2oNjV3WBzr5Th0SA6rhHk/rxApfXGsBXG/0W9eCVkqTI+rLcSxKtf2Cm/X
StA1cu/YthfH3nb4WtYmVIJXc9+RV37iWOJ6f57Nh0pYlPEsng8Tx56Ly2zT
NldCAKKbuPJCHPMN+Jqmu1AJ726xRO5/J465Fygv/6Srgttht9UPF4tjdsPR
56L5qsAv+UQQvkYcM1TRmCJpVoFQCxHV6xHHNG4kK923rIKqdFvfA2RxTDV2
LUzQowr6LyZ8uTUqjokt5Zywf10Fedx3PM4uimO8QjR++4uq4EDQZmbyujjG
qm/Z/b6tCg7pbZdnb4tjmzksHsvLVXDhgYFnIZMENk90aIrdXw217qVCHzkk
sAm6Bi4VwWoInF6sMDksgXXbeJb561RDwv2inxHCElhz5GcGUetqUGK2KxGW
kMAqa8QsWr2qoYXLstZCSgL7MOuX6xReDbI80rkKshJYJg/pN3NaNYSs6QuX
npLAXmnJ6X8srQbPe+LdpDMSWKTXkxTjz9WgFcj+X7KSBBacMbawNloNP5tu
RdGrSmD3es9C4lo1UPeVcbGrSWDscuXTnxlrgLjD8C9DXQLLipKP/CtYA6kT
yNI4TgJTW8g/c/J0DeyznynHIxJYv8HxQZvzNRBJfCDtjkpgNz9kBsRY1kDc
jJtU5R7eZTl6rNm9Bq4xSEd/3MNxrkndv4Jq4LiriIbpHpb5cuiOZEINPBlt
kcreW69ZOobfIq8GtgVfymXt5bvyjKUpvKEGhFd4NC/t6Vn8EeZYM1AD6b+W
LN+flcBCL9Cxzc/UgO5Gn0uhigQm+N6/VOhvDdziC75tt1dvCeNvy4sctcAT
Mu/evOeH7k1vmiDxWjAkcDv07fn1rWMpp0SlFmiE+Kye7vnpc9zVcEq/FlZy
MbvlPb9Zn8z8Ony9FjT0foXtk9zze8b2tY53LbBfrxltE5HAzmp/xe6H1wLZ
TytYUVACw2df+Z6XUgsXChyeX+KVwBwZiFEjRbXAd4dbQoBbAott7RqCwVrg
YMwNqdgvgUlLaAfdXqgF5P6pnKc0EljT40/H39LWgblE0C7zH3FsQaPKe790
HaQNisjxz4tjOp+y2Xse1MF/OzrOLt3i2KiIaPnu8zqYCRHdV9EijnkHplyT
f1sHzXh0vXiv399AbG7slzrozp9RrtvbH3/rAzWuCtYD1+mSNIlH4thLoe3Z
CPl60KyTUt7xEsek/O9F12vVQ53CB82nTuKYOe7WiIh7PUhYX3tdf1EcK6y5
5vO9vh6sp5j+ZgmKY9oCFEH+gXrQS0mZP8Yhjo3cN2nRm6mHlvedTtdpxTGm
sxc4P7I3QGWs04XtKTHMvlI5z/u/Brge6JIxmyuG8ZZxjdLSNsLsdliBpIQY
ZhX512yKpxE8nxRkL3CKYZkO01/aZRth1DNW2n1HFJM9XF0dcaUR/PVpvySQ
RDENn+vxh4sa4WCoV0tRsCimnGKRE3eqCbKKjW0X8CKYrU2Ode5oE+Q+JTqw
RRzFQvSOJCX9aIJ3Kzbk5stHsRzlGOKztSao4DDolxc7is2zP9B3Z/4EIr0/
3bEqIcyn0fDsGeVPsFPwvNx7XBCLFFk/VBf1CULopPVvSB/BKiY0u/twzUA1
JnS0vePFyLpBK1E6zZB/Z+PDDU9ebONjA4+BSTOwxHTRsp7lxVT8ztp2OjXD
i3ZLL+8uHqzq4KmNppfNUKVzMWdx4TBWrSUgUjLbDH0HLxF0zx7C6nKW78TF
tYDzidPr/y1yYiOsckkm6S1gQSZLP6rlxLa9XBs481rAMVbbdjicE0NghjGq
sQXCaKKOXJHgxBoow6mhcy3gYxhss13HjjUydnT4YK0gvBT8ereJBWt2ST1i
Od8KbK4y42Wa+7HSH66uNhut8Mrfsu70JgOWdVOt1p6mDR4lnRo0yGfAQh0p
V28daoOCIKOb1w8zYLp2XK8f49qg4erfMNYVeqzPMpTvY2QbJNcjX4jttFgT
1fRmaUIbHI4OfeIeQosVWYhVVWW0gdvnD0p5GrTYS/NGi5ayNuhmSQ/l+ESD
XTb+nUAdaQM02r6MK+IfjOi6H6Y/2Q7DMo0b4kN/oadD/QajSjtIKrrFVDr/
hQZt5nK2c+3gtVFyN/LPH0jXemfGZ94OnIM0ThvCf8AOG4896d8OPsE0fQX3
t2BWxZz7Sk87rEoPNSU6rcNghbidNaUdGHPOvKhgXocupdViu/F2cB1uE6It
XIN8hWhj9/V2OKZc0nn47y+4depzTLBQBxyvjVljfbMK68cQjgL3Dqj6fkwo
TmwZ0AmNjme+HdCsNPuyIXMJwlJ1A24+7oA/lPVyPN0S8BwyWxJP6gC3YcNG
k64FUKZ17Xvd2gGfzgtmK/j8hEd1nk98+zrg0AelUPbvc9B+zwcuD3VAwXBI
gerVObBYDCrkWu6Af7q+nfY6P8B3ODE6/EgnEG7aMHjhvkNTQpqO47FOONan
rifROAOMJln/NE93guejqd0NzRlI6iz0+KfdCQ3OnhPTptNQU95+0cerE/JS
lg5rRE7CdvQah8PnTmDhv61dZjkGWvp/Os4RO2H2Y78yuvkNIvfTBAp/64Sx
Km4sHv0GQv4sy0NrnTD+Hc+WSPkKqIsY3ljkM8g7KjO9Oz0MYZJS4adkPsNj
gdfzSMwQ9I6dxNiUP8NCUl/g1sog2FicLerU/wxZlkvkvAYqBGhdioF7n+FX
wacb7X5k6PxnrisU/BmU78y9xq2SgLP2Gs3fyM/AdvqA7UNXEmScdvKsyPwM
kbeVp2UdidB09NGlk72f4UfyJ34JvwGg+53PeUSyC9IeG2WHK/bCkR6NX3Cq
Cx6cLtBJ9+8BxTeDJIezXfD62fjBO13dcOPCgeSPhl0QezPt9CGPL9CZZCep
4dMFnY9zZGMn9up0/33AKbALBj78apjV6YQ/52LmIp51AR25/tHjog6Qnasv
JKV1Qf7P1/cuRrRDtBq/mnNHFxDWobjmRivkshcJPu/vAuVNwp/iyRZomtD+
VzLcBUVBUW6BDi2w+sy7dXupC5Lo1Tpv3WqGy8N9RjF8XwAxK9SSy2wCj0LH
0+ViXyCD4prwQKkJwh/vHByS3YtLbVz3TmiEahmZQfFzX+DUSkRa5996EHwY
Zl/p/AWO1XBu6u7UgNIlIe2RO1/g85NjnnG6NWAkUSZF++gLXJZhHONOrIaA
7vEFvZdfQFbFstJs7500IYj4jtbsrdeIdhR3lsPfZcJV+rYv4BovYHxFoRwO
tbkgUn1fIJzI3/ti712r7Z5I5zW5l0+dT+NOeCm8r/8VycDaDUx25ORN/2Jo
fvHMQ5qnGxpE5FTV6Yth6IaoyUWRbhBtVrwXElEErOwXeZMUu0HM/SVLz4VC
8LTJeyNr3Q3WZ83UrFfz4emZcyHGTnvYdkOm/UQ+ZO6nOvrc7oaFL49nNBzz
gPCRQbYptBvWhJcHGRZzQfnf9QrTj93g73k2sUgpBwwMm4LPV3VDH62g7df4
bLBPFr6o0twNt4KrVYX+ZEGMyuh3AXI3EPZbX7zf+xZ+eFzjn9jphg8eaiqn
s94ATUPNNOFAD3wpL34SJPYGeFgFStq4eoBV8/lR5awM0Mil6r2X7AG1janc
Lbt0SBkzf+hp2AOCcW85OiaSoUSuXNfOogeyhgbG7nAlQ+fDQ4fNbHtgWajI
u/78a1jnIxSo3O2B8f2uWWkNiWBkfOnbbkoP2Nw8fo5hMR4c0gvzl3N6gPnF
Z9N/5+PBb4Hdd6KoB7gVVFYSMuP27rkezvbWHvB8f/OSjHMs0DbraUTN98Bi
oGnZuNQL4OPMYw/Y6IG7jLp9dZkxIGfDNOxJ0wt1540arEVi4Oqfjjtmh3ph
jOMFXtjwOZSdOZ99BNcLWzqX+8yqnkFXYNZtNu1eSG64/Uxv8imM9dKj/y72
glr7+KDtoad790gzecK+F4w/7bSahD8Bx7fAmBfRC3f4N6L+lYTAw5U0YnJ8
L1xNOPanjjkEYmE3Iyq9F0qtmZVvOT2GpuG6s7dLe+Hhx7v6kqeCgXxCcL99
fS/cR9+V/0gKgvl7fgNmHb1gUCHEJMwUBPyH1FxVh3thwdSY0DIbAPJ2SSrS
073gNjrIdXPsEWgXbdELLvVCFyxZ0Yz5g5dBZco/uj6QH40gyG34QXeIYm+7
dB/kBHd8r/b1BTWOL3QvlPrglKfg0vfEe5CbZKtyDeuDhqeWNc+afODxx+cZ
S+Z9cHT9Mr2O5F1YVpUkVV/vg2ZzgbfLtt5g01LLFOLaByGSGqqnsu+AGnXW
iy+oD67uurGloF6QaxfwbiKiDwKjprUd424Dz8LhkQ8JffDslr3FzpInrNBq
nj/3oQ/Wnj+dL/bwgFyZVF4XSh8Esfi77jC7Ak+FgoHiRB+scOVJ1TO5QAjW
Fbg73wdDjGzoHS5nKMr7632BFg/I7TNcqWpO8H1JO/rjfjzwqv7yfHzNEY4q
vXx/kBUPB1Jsjc+H3ICIRqnRrzx4+KHkd8Ri3h6a93lvaQjiQdNDKP6EjD1s
XWjkzhXFQ84ZuoQRTztwJJrreMnuxUcfXtvhsAWNH8FF+zXwYNh1st9Lzhru
y/V2uerggf2Kk7ckuxUU3eGfxhvgQY7vbqrp1lU4ulvIn2yBh+Moy/6auStg
rvlXgcYaD/3lR/9orVpAZLi20Q07PLg1SFcs01nAb+6vwafc8eBDOfDNDTUH
+StSqXFeeHARbSnIumkGjql3Kn/fw8NE8cDUl9emQDzOPN8SjIemPvbj/YdN
oAinYn4lEQ/PhALtBRqN4HtQsEd9Kh4klQy+sYQYwtGOnqdib/FQN+eoMG9m
AJHGDg3zBXgYP57t/4VPD1oSCqnGpXjIopRpbDNfgD/Df1YrqvCQqn7sQsAB
Xbjp+OJ4UAseEtn/cuw7qg3p+SPnZjrxYJHFFG2sch7Iy8et9Hv38CE0NdxS
C7T8GmIOD+IBw9cddK3UAOGYn7/fL+KhMITbHfcGoME24H3JLzy8vlszGemE
go3CQcvaLTx4cv6SuHkWgRSyWlU3XT+gb8d+Su2qgXpurxPpQD/c2joarr98
Fobu2/GOsvbDk7RjP73mVYFP6JnPEk8/tNdc3HalVYHKRaFjW0f6ocTbbfQl
vzJcbiom0Yj27+k2a7mppgTx9oOK3DL94DcquvQjTgG486R+KUI/fLbb/KGb
LQ/FfnWZiFY/aPGk51Wun4JLhpdMtC/0g8eI2OHhAjmIXr5XbGHaD3b3CYag
KQtyzSy216/s8ZtuOKcIy0BvbDqns3U/3Gkx9T51QBpYVTo8Hjj1Q2X4GUXL
jeOQz3hN+LFbP/zXCBkndo6B3tBib8TtfqCjuJx+y3YMwv155FL9+qG8Nyfw
hJ4EMLTemG+M7oeL1092m0iJQlb87+TOuH74ly0tInlHBLScovT7k/qBrcvo
hOozYQhmLs+beNsP4ffqGfv/CILoiO7Vn7n90Nox+sS3/Qg0FYwwrRX0wxfS
JpNdmgDsXtrnzFDVDw7+djKSt/kgVSyRj72+HzbL36kfdeUF3JpMJ09zP5jc
eTT3yoMH/F6ZHpfq7gdmjpRRn4RDsPU1c1pvrB+oWEP5c2MueFWoHG863Q8n
FeO+C8ZzgnJQl5bVXD/cyxFJLmrigLsSq2/d1/rBkL569BI/GxzaCDX1+d0P
b+5IDFsOsUBZBz99wO6ef+/Is365zLDqcs4uhnEAJKTdV+hcGOEFjsSVxDYA
NUH67R5WB0Ce3fnTG+4B+E17l4Xh6n64VRwjUio4ADTvDEk/vPcB22MJfK3o
AMgyxqo6vKCHD2ZVAa3HBsAitf2RVSUd/Nz8NkqSHwDK6JqwzlFaqHCKbtZT
HgD/m8ndHUY0EEhBcxrVB0B4wHjai+sfylOZ6v5eewDES6do0+W20fFjhsZH
DQbAYeIPgzX5D/ohYVsx1ngAMn/k18xE/UY1fK5tP7QaANX1+OS0E5so2wzz
2IrtAISWbJcEsG6gVPOaFkenAegRkWl8sb2G3lLij7jkNQBGlifztmh/oWez
O2+13RuAg/tlGZR4VtF9h31N1PwHQGHcrc9TaQV9vUbmlwjfq1/8ue0PySX0
hkPYTmLUAIx3HJ99k7GAyhOVxtliB6A5q0/y/cl5tL00LnczdQByLPZ5/+f3
A30hrhXp9nYAjv9gKA1Wm0WtYn95jOcOgKjfC4MRxu/oipeJypfSAdj/afP5
XfwUWjdBewSrHoBbPfYZzp2TaJhJ8W5ZwwDMfh5At7snUMEznO1pnwdg6bzX
q5LfY+j3N43vD/YNANn7LMMnkTG0hMsjKpy4p8fTuTE0axTVXekx8/o2AG4p
tuPu2cPoQVt/1e9Te/qNFc0enxtCR/GyglZzA/D+8LG2sUUq6l0UMXl+fQD2
ObW903hARkFEvaPmzwC0Rhrqtl0mocwxc3mnaAhg+/F8YMQ5IpruccGLn4UA
DIc2K9RgAHX5tmX+nJMAD+/pfpq41I8qXsw9S89DgPmScIL+LTzaJXeAdkGE
ADlORcJX4nrQ+LSKKdtjBHgv2GV/mqMbvc7u2EmWIcBE0EV/29QudGOhNbpJ
mQBPv7IvCC53oJ+sve8o4QgQxXTDarGkHY3sEbfIO0cA0on0qTehbahYQfDR
OAMC0Jw/qPDOogVdEDxDx2RCAPXiJJ0I82a0KnJ82t+CAG+EZHTvXv+EGrph
BU52BPANWVIsVWpE+UaWYkacCECudXmr/7IendBP9zZ2J0DbuyZZ5X11qK/M
rrq6LwFkXp2l/yZejWomFwgX+RNgJzaHKb+vEmVnsaaXfEwAfdX/AicjK9Cs
udou9ucE4OZ6MnBatQy99eqiuEssAT5wNuzEnyhFVbQm/doSCUBb+PZNkVQJ
2pXKfPLhWwKUJXIu2hoWoXF6aaGUXAKkZas/uz35EbXZPD165iMBDkzX3Y3Q
KEBXLllG/6giwL+6EwlZkIfW7Mx/12ogwJkQ/iPxw7loSF4gltFCAHrFBD3C
03co377clcu9e34EZq6l82ejE0XqeiUEAtR0Ffv6/36L5lv3ZbINEqD/QWD1
+dlMFK3cMG2dJEBcm+btzKUMlNHh2QfhHwTIXC2MI+zPQAc4jzL4LRJgPT5x
8aJZGnrD5XzF6d8EEI4UfpQqmYzK8Q6yR+0SIN9jfv92QRK61eLmNEtPBCVH
D8mDeolopFAcXzo7ER73SLR7V8ejl7uO3/5zkAiTmj30k8/iUOF7tZ/N+Ynw
ieWuxCW3WLQEP/GAVYIImKCi7ty1F+hDfx+C0wkiBM4/tX55MwbVlmaWbZEj
AokL9lvvi0YHH5/+ev8sEWpoGFaR0gg0U75NiYQSwbyr9qab7DPU7euV5/Ja
ROjOluGOqglHaVQC4bsREVJXT61bcIWhXZMHEzXMiLA4ZM6wSwlBY2PeLada
EiGDTJcZWfgYPTbX+8bMYY9/67vVVFQQupxg96fQmQjlo+fZmWMD0RrNDRMW
DyIMBGiVZegHoIapQvua7xNhIknHCT/hh/LoFVsJBRChlC9zt8v4ATq2oVXu
G0IEtWc1a6VkX9T7kpvjqWgiEAlXH1UK+aDozr+GZ3FEQLakfuR99UYP5MXy
ziQRQTUpewpXeAd9TV/bmZJFhJMNxzceP76NOhQZiW69JwKv/gt7vxBPVM56
4r5pIRFcaG8UnjjugX6qYJJhriHCdgJu+kqJK/rMPvXxjUYiNMbOfQgVdEHN
OE+PNLUSYUlN7q556k101vlK1L0+Iozp92IMozfQEp756QEiEain4q+/SXZA
/VoCULkhInyVrTxs4WqPsgu9W5qaIkJIjY+DFGKLYpcff538QQQeXh0fZaPr
qFf0f18mFolQJce700KxQcm0fO/GtogQF+Vzel/8NZRRfS3u2w4RWjUcIsMO
XUXVvPHBo3QkeBIiVuqdewVNmwm3GWElQUeDyehNpssoXviGwTAXCR43tdk9
IJqhdJbn1IZ4SOBw1MCZrcgUdfzy+zBVhATi4a+aTeON0cR9ZHqKJAn+5NQp
eKZeQruQkhWSNAm8Z5PeNdy4iMoVufQQFPfigWbbswwG6PUf2rUDZ0mQavbT
O8NXD30pJv6+HyXBRel40wGaC+hG3HBIny4J5P0Mnpw01Ealeiu9eg1JIBah
awEc59GrB+Ku95iQQD9B7GDyhCbacN8A98WKBIuFD1lfVp9Dl0ukpLtsSTDE
l/rZrxZDxeb38X12JAHnh4dPEhIADbOp/9XuSYJtVfdqK3EcWvUqabztLgl2
8n2EO6LU0Dn83b7WB6Q9P/fZBrGfRQ015fKbQ0jgG2CUJmOkjD56yJz06SkJ
Muy8x6aZldCi8pmwpuckOGBevh48qIAekkq3a0gkwbkjDmvxuadRbVu/S/Wp
JBjYwQ9pvpNHfV9boHWZJAj970FY2M1T6Agrp0DNBxKsOFh+vTAvg7Jrzx+o
LiZB1MpDbXlTaRQL6FyvrCBBc8tr6794KTRrJbC/vIkEZ85z0FxiPYaSpa0b
y9pIEC4d5RvRIbF3vpwtKO0iwfVe+MQWL466kVfCi4kkoPw7xbtsJ4qmcfT6
FA2SoGh37LGPrQiK181zKBwlgfUHX4WjX4+iirV2WMEsCZjw8qov7Y6gjmuo
3IcFEuyPvd7/tYsfTTx5RDB/lQRcT0Y2rfT40O10wmbuNgmcfsmMjT49jMoN
Fk6/oyVDcl3gYpDOIfQ6dyQhZz8ZfqZ/1H/FexBtDdEqzOIkA+d/9jQHfnKi
G/UiqW8Pk8Hv32Vsk8qBSm1uP8sUIMPEjoSmzG82NNK53DFDggwnUm6/+vWM
GZ3DCsJZpMmw6v76fDqVEdXhy87zOUWG82JsKn7nDqBZSynd44pkcNCSN/va
woDSdcQtGqiRYYxmclvRZh96PS2SswrIMLTcHcnEQY823A05I36eDH2nTq5v
EWnR+xLePr8vkuHfJY9L3Mr/EPJf10QHczKM8BAeJZzeQRQJ9jV9V8lAf86Z
pt/wL/Iy79qI2nUyMO4YU2vCfyPLQaa72TfIEF9cftdtbBMxstQX4XIlAzV6
kHrEdAPJl9fUeOhJBuOIhwSBb2uI47czYSZ+ZDiz/FEMj1tFWiukc+sDyTAX
7E/KYVlBxJ6LdUmFkSH1WDQTz8gSEnhDYD42ggynrVlvhrYtIF9x3Oz/YsiQ
LoteNOr/iagdYpZ3SSBDcPSsn87ODyTxJ60JKZkMd1u0S511ZhGz1yvx+Tlk
yPkZaJ0nN42U3P5RyfNhT+9kfpVJ5yTCcWF8MKiYDNZTvK6K9ycQN5HBv/MV
ZGAK9WYkwzjStYkXulJHBveP87EkgTFEqq8TWj6R4WZNo1Qv1ygSltNkK9dB
hlMPlR7mcI0g58yLsvcNkAHV8nnx8A4VSZPN7fCgkGE/Jkt/uZ+MbNNn/Bga
IYPFMz/SKz0ScnX4FYv2BBkiprQvB3wlIFUl0SeLv+/xK6ukHMMHEJ5nTy4K
LpDhoGjZk6YL/cgd24DbT1bJYMC9lXlEBI/IcXqUW++Q4Vz49+kt1m4k8rsj
pZOOAlncfYO8Ul3IXIPNbwVGCliF8/Ncte9EdBMuH0lno4BNtslKbl07ku1u
hDAfpED1a45OjjNtCN157f/u8lGAR2l3tPpTC3JdEA0aE6LA4JuvN5admxHB
LyfbKqQo0OZ8gMHhbyPyIFPyu6gcBR4Jbma8765HKPeFmKIUKFDwZOv19ZZa
RNH4sMyWKgUmOb6SuL9WIy+l2AztUQr8Vnv82Yu3Cln+t8+jV5MC1zvOrl3x
rECMKNsxZy9QIMnJzfvTdBnCFDZP5DCjgJOKfdHHoyWIo/XUxgNLClSoGyh1
jRYhrYojfDM2FNAMPx0v7lyIiLES1YwdKKByblz0BFKABE5+sapzpsB2wBPH
X8r5yGhNy6PjHhSIPmRat2P6HlF/WZvx0psC/Vb30hdevEM2sPypmwEU0Npl
zCc7ZSF1WT+T74VQgEGLg0f/4FskmFHWNOwpBQZud92JIb5BdN3cmOOfU0C5
qyRUJy8DYcd/+PQ2lgLq36+6Gx5LR4gKC74liRQofKmeuHIkFXn96qT8p1QK
jHb6m6soJCPH/vuYNvqOAn7md8R1G14h882L5gsfKNCouEFUkktASo6dYtsu
psDix4PX91fFIb7PPFqZKylwUeDs+0NXYxF0sdCPv44COycdSSTul8g+k+Uz
Up8osHA1t5AyFoN0lcvPKbdTYCoGNXoUGo1c9i++YoanwEvc7rTfgwhEcHyF
w55Egaoq6QNs754iE1pnOm4PUeBqreu9E6tPkNxcr0eB3yjwH4VbddgyDLnF
WqoUPUUBhbaOn/ojIYii56/51B8UkKG7PtF87zHyh6CQ9WGRAiU86xpvpYOR
sOQy7q4tCsQtlry/9iYAMfi39pm6QwGXtEoOpWB/hNteKeg7HRUqJqecp8P8
EGr7XdWNA1R4ttpeyl9wH0mTrljax0YFrZOW3Vmr9xCH5xs5B7mp4Fioy+dv
7oNIryrbiPFSgSlF60INwRspr67sBlEqcKX2gdURL+SB0NZjo2NU2Gc31x4y
7olgQarq1jJUsP0zbyB73wPZP+276ipPBZy55j37y+5It271+wdKVDDx1545
esUVefnh9/Wnanv536hWb/k5I1c41fgSgQq0kuzvSxqdkClKTVj5BSrwcrCM
h6Q5IHnqf5FWoz2cHY3HK9kjnunq6wOmVNDWb5n+b9oWUaZ/+GH8ChX6KFTV
V/nXkW3HOvtlaypIMfnJL7D9hzR3bQv8s6MC56RP7sl5KyRcDhlgu0kFjcUB
/UtLV5FDG/WYjBcVBFj1ZBOuWiBDlrubZ+9RwaMsylqvwRzJqEcLdR9S4UBS
ydMdxAxxFA1wtAiiwi+7bxN4igkiG9oo5BhGhSilPlaGZ8bI6uw/oncEFeIm
iw5vmVxCqgywyMcxVMAWaoR17IwQrUOf/mS8pkIeS4YB90U9hNmXtqQwnQpT
hCl22we6CH74nHNDFhWOrbHV9bVpIwkQLNLzngrR9nIvFE6dR6zeNlOGP1Jh
9PXBxLAyTUTsAH30XCkVrnWYn5s21UBmXTS1f1dR4WJVvmQkyznE+0xrGU8L
FbZ0UrO8HiCIo6JIxotOKljxLFA3EXXkivLDCNZeKhiP7d7VkT2L6KlSfZ4Q
qPDj60UDdQ0VRF1N0Y5ukAojtFwR3x8qIbK4GEP/USr019UnJgwqIEfRedWt
SSqUGNMpt5mfQeg0sjgWF6ngMq0ju659ClnTpPl7c22vn26HMhaOyyLT561m
Jn9TIacUKy3Lk0bIOlX9Nv+owKIQuBWXJoV0XjhUP7hvEG5xPxEWrjmG1Oh7
5poxD0JUxUEdmz8SyAfD7tg+jkFIuhR7ON5KHIk2DnFpExgEjpfYsdWHIkig
6Zg5JjII3etXHUXdjyJe5rhztZKDMMRU8UaUWxBxsEiUVZbZm08zIic1zY9c
tlzjLZYfBCN3u92GCV5E99olelnlQVBECpOLD/AgZ60/LOaoD0Ly3Q83GI0P
IYK2Dm0p2oNwuJwRz6/NhbDbNxXxGgzCJo3596+DHAjNDcGUl8aDsHvhHCXf
ig1ZdfR9wmYxCNpBb13iOVmQyZtEr3CrQWBXC678tsKIEF3kbejtBmH/Yo8m
785+pN0t8sIjpz1+/99m5lMMSJ6nloi31yB8tvzv+vO/tEiKVwbL0r1BKPm5
mjYSQ4NEeW9vOPsPwgtJZL08ZBf3yOfKxFTwILypNxD7dGQb5+lb1vNf+CDM
BfXcG5n4jbN7wFk9FDUITmwLPy+TN3FmD92yzGMHQSE0dat9dR2nEijhp5+2
5w+La/Px16s4qeBAx/a3g6Acy/vvofAKTiBkxPjc+0F4/Zl9P2foEo41TBWp
+zgIH0+Y5m/RLuB2n8RJqZQNQsD+2zXexXO45afLB0uqB8GX1pEmMXoWNx5h
8E+2ce//aIqwtSTO4Fqj95HFugbhnHKEHqfwJC43tu4DH2kQFgPyGaNlx3AR
r7wfs48NAsKbLDFvOYy7lSx7dd/PQfhZUeb/R4iCM0mfkv+zPgjl36zQoScE
nNLblAPLNEPwLj833/8RHsf3zmx0mmUI/mtXgOODX3DbeazlwzxD4D9XGLse
0IH79rE1ol90CCYjO8pfDrTgMvLaWC1UhqAt1VxhxLIOZ5fTHjViMARhaHWf
EVqGM5nev4iYDEG3mntK1usSnKaEjlG6xRA0974xiuArxklkdrDb2Q3BoU2T
YoOvH3AzqZ3R3+8NwTbp+3mmyCwceYRxWdd/CMbzacRtRzNxHUcuXMoLHoIW
m60pB9M3uNykz5zuUUPQacjpr6SUinOJ73qxmjkEAoZKL6/UxOEWIrtjd3qG
oOte4qJdZwhu9Avrmg1hCLIKSG9M2R/jepkNzZqoQzDiJZX4wjcI9zG859Dj
ySGQzGmkI1r54zxDeuMZfw/B80Ct7alyb9yaH/7VQYlh2P9lcEThsQPurwsx
+cSDYbAqjTa480kTZ6Zs/UIuYBhYwx7eoJPRwH2gnQlTCBkGsVfGgmNlGM4m
cfM28nwYInnXZsQBh/vUJqBrnDkM3nHDVTnSirgnIrZrvl3D0DF2143mgQTu
IHnBoFNgBETgmmt0+z6czLkDu461I4CwxzBZc7Sq62SKOhXzjsLL9YksT9vT
6veE/hMbt/oGPqN7bbuTriY7b85CMRyDwGZut7ryA2oHOZYZW/+MgdC5aReX
59fO7mtMLhRPGQdX26M/1DxKVF0VaweZ9CfgRAA2JMCyqpJ/wS6jYWMCPuZv
VCd+lFFZ/ynAOZMwCb63Xh2cee6iXG6qQx+nNQXD8cvODvwvlAJ0Q9PLZqbg
Dbtt2K2aOkXRr3rUt6HTkNsqreocP6WgphISx39mBmSPWGUUnlk9Y3W07zct
YQYYFHhWt1v2n1nviprwDPoOc4dTvv+9QXM6cZ+Nt4nELBgZRTHq36aVPzha
nknXOgsFLdmhoeY0pxj8g8zO3v4BAZh1MciPnaR5b1M4wT0HK7cuyPqUf5b1
el0Yxd08B6fHxZLUpeJk6mXCGblu/QQzmQF1L75r0lx6XrLB7POQ4OLI+LXm
1ImRk3jC/bp5wPEeO/mNMHa8KA0kpmwWoFRm+6GaWsYx60JlLqHdBaD9GEnQ
VLWWDAx9EzSStwiRPVV2t76vixfMCiWzGyxBYVuBbsOZDLHw1NDro0ZLEE8f
wHt7PlHMwWRB8qPxErjfvGIuJRsrJlhXV2RosQQh8aH3Fz6GiT2LvtYeabcE
D8iBdOwVHmI3lZNWmO8vAQ2v/nc8ERUTCzmkeyBnCbKjz/SejB4R3VV9yEbJ
XYK/M9aRjdMk0cGFyYGc/CVotPR/V/AZLxpjUWqtXbwEsm9bl51rWkT/SZvc
Ca1bggoNUc58pXzRkf7oNHrCEnyVnCr53HhftCps055AWoJ1sVTuzPI7onHq
/514S10C714Ds3syt0T1s+XKNEb3+F/76HrzbEVrfHs+B/1YgpPzDUc3FHRF
E04qRRvP72GbbMfsYA3R2xMpZqJLS3AmjXXc/SJOVMrA7VvT2hLg39DfHouU
F91HS8yK2VyC/3YnEtcMT4iOlau7XP+zBOn/chZKLMRF61zenpLfWQLnhc1/
Oi+ERF8Js6z/+7cEKb4riQWJPKL/A6fDGow=
           "]]}, Annotation[#, "Charting`Private`Tag$586048#1"]& ]}}, {}}}, {
    ImageSize -> 300, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-0.02, 0}, 
     Frame -> {True, True, False, False}, FrameLabel -> {{
        FormBox[
         TagBox["\"Probability Density\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"fat frac.\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], PlotLabel -> 
     FormBox["\"Imposed frac. = 0.1\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.476], 
          GrayLevel[1]]], 
        GrayLevel[0]], {{}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.476], 
            GrayLevel[1]]], 
          GrayLevel[0]], {{{
            
            RectangleBox[{0.36666666666666664`, 0}, {0.4, 0.144}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.4, 0}, {0.43333333333333335`, 1.332}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.43333333333333335`, 0}, {0.4666666666666667, 5.1},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.4666666666666667, 0}, {0.5, 8.58}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.5, 0}, {0.5333333333333333, 9.204}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.5333333333333333, 0}, {0.5666666666666667, 4.104},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.5666666666666667, 0}, {0.6, 1.224}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.6, 0}, {0.6333333333333333, 0.288}, 
             "RoundingRadius" -> 0]}}, {{
            RectangleBox[{0.6333333333333333, 0}, {0.6666666666666666, 0.012},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.6666666666666666, 0}, {0.7, 0.012}, 
             "RoundingRadius" -> 
             0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
7fYm3j8rK0yoBY6XUWhJ+3/A0TlH
           "]]}, Annotation[#, "Charting`Private`Tag$586906#1"]& ]}}, {}}}, {
    ImageSize -> 300, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-0.02, 0}, 
     Frame -> {True, True, False, False}, FrameLabel -> {{
        FormBox[
         TagBox["\"Probability Density\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"fat frac.\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], PlotLabel -> 
     FormBox["\"Imposed frac. = 0.5\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.476], 
          GrayLevel[1]]], 
        GrayLevel[0]], {{}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.476], 
            GrayLevel[1]]], 
          GrayLevel[0]], {{{
            
            RectangleBox[{0.7333333333333333, 0}, {0.7666666666666667, 
             0.10260795211628901`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.7666666666666667, 0}, {0.8, 0.9747755451047456}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.8, 0}, {0.8333333333333334, 3.1551945275758873`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.8333333333333334, 0}, {0.8666666666666667, 
             5.425395468148782}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.8666666666666667, 0}, {0.9, 6.9003847798204365`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.9, 0}, {0.9333333333333333, 6.528430953398888}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.9333333333333333, 0}, {0.9666666666666667, 
             4.2710560068405306`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.9666666666666667, 0}, {1., 2.642154766994442}, 
             "RoundingRadius" -> 
             0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwVVnc8lu8XpohU9k7JykilSBnPc56MrMyUEFmJkhWlIZEVkmgIoaiEsgnZ
qyR7ZL174UX1TTa/9/fX8zmfcz/nXNd1xn3LuPnZXNrCxsa2fSsb2/+/ppcY
fY1TZ9HPMU7Qf1lTjUNf0h8voQE+/Bt3H13RUlPPSs0okzAAcu8z4QeDumpm
P0ZKX0nYQtaZubXYeD01O4/FumQJD3Dc+CF59qOF2uThGP1HEkGwwEmMzPrl
oZYtYhkdJxEJfMYi5iN2KWrh3GWKDyWeQuH1L3ckCPNq5+1fF/36nQu2Qo1P
ahdKjuzYDL9gtLcIVsXEtT6tuh1VsJ5jtMSXg8qfm+JiBTvVb3ZrQerfaih+
lMkf6daoLlYugGNnbwCy8fLSESc3jUqSflePbjOY5Ek8Gd/Ke6z5yqvd9sxW
6JRxIvEYlRxb2I/wfbzWASITjy03vAw0tywX8O9W6ITSTumD8V8JmpqbLpVn
PnXB8/IESuWaz/GuSI3udpUeCLC/oM4f8ue4dNLM8oe5XlAqFa8NtA47MbOI
xw2p9UOxd5xCv8L6idzp2k7exAHQkUqfv+8RrsW75/08hTIInTPpIZkaG1oJ
3hWe2fLDYLPP7tyTfb7a/7ACilfYCOjMKXr5eZK0g462lou2/ATf6OH0X1dN
dfCfWuP7ZMZg+HhR9CH3Sp3VK4PpyrfHQTfzZqyClJTugZNcG561E3C289EY
vTJYtzi/QPFn4wQ0FSopH1e+qashbGVt0j4BGsvW3eNlIbq69NTcA30T4BNA
2P1I/K6uxSMVs1+0CUgu/cdUV47QDRw1T70lOAm+R5reXz2VqFsd8PRogvck
BJ7r3jjcn6uLjp+4sO47Cdj8Luk3B97pNhtMRvkGTcIwJb9IIf29bqfY/lGr
sEnodug342zO152oqwoTeTYJrjY2p4kHS3RdFC98iE6bhKuORoUzxqW61CS2
gcWsSZi5e2BoKrhMd87dZP9Y/iSUXohMtOSp1GXjGe/KbJyE+Z0npeuwL7qC
xT7X3YcnIW9PsVuPWLOu/LkNCSXmJKwpNAw4KHboaq49bmSy4yBavrFlNO2H
rtEbmcslYjiIs53lUJjq192XuEoZk8GBv8F4E8fRId2VW0NuHKo4SP3V6eDb
OKI7eKmIcFATB0GGguYPMsZ0P1o/dLbDcPDYfRxseyZ1oxH3ifumOFDiyN4M
LSHouigjDvm2OPCrmax2LiHpaouI/RxwxoFVnXdQ8ixFV4j999l1LxzcC7QJ
E71G12UyOwf2X8fBisrYUNnxad32n7nWVqE4uBHwCC9yblY3u/Vez60YHBhU
1I389vqle6v4vHnOExzsvcWxdc7hj67nO8Odn5/jQCAoiGbm/Z+uTcbR713p
ODgT9EBtJfqvrmrsTpN/b3HAa9dbWfffP12Je8tcOwpwsCNTxKXQYEl3WxCt
XboYB9VErYysvGVd/MVGA5MaHDycJDSOf1zT7Tr7catzAw7+7FUx97Xe0P1s
ltYc2IqDvoPJyubb2JDk40FYRjdLX0+gRdLZkbCDrpvFAziQv7orOYm5BfGR
s6hv+4mDnfrFkwgbB2LIp6Q7T8LBPGHQpvncNuQop8jqVgYOErvrYs6ncyF7
V9lrxGdx8M/pZQHfH25kiTZ+XG8RB1yTR9emRncg1Imv/86t4YBu40/SuLYL
6e+vqLjKjoe522offovyIQX1j9Wf7cDD5Iu9hU72Akhq+d0/H/jxMJh0wubz
GUEkMt+7pF4ED+VW6ZoLjkKI83P9wwxpPAj3Nx9QfCmCmCWoza3J44HS5RzQ
0COKnIjY81FABQ+uHEah4WLiiIDvooqOBh6+tPedNMVJIhvulClLLTy8sS1Q
OHtRCpm278vzQPFA1laITFnYg7QaFuxPNMbDlrCDT5XK9iElOqnUN+Z4SFLN
bHj7WgbJPBKVW2WDh8BLso9PvJJFbu65KEu8gAfftC+8d+rlETcrtXMTrnj4
a7JzuQ6vgFg8YI8b8cTDQETwgzB+RWT/VM7vH/54cFYJde/KUUYEpYIVvgXj
odJTWF2S+wCybnHKvvU2HnxqnlX4hKkig+WMxppIPPzXRDNUKTiMNNKr/1Y8
xINKgc12XLEaUiAZr1SSiIfohn2VvS+OIBH3Dya9T8WDqPeM94F4dcS3bKPl
zSs8eJ+6PU5O1UDsaT2Lr97goe5bdi29/Biidjrw4tNCPBxst48ckjyBSIXp
pzwuwYMW6aqUg6cWwlUq3BFXyeJXVhPu0qKN4MSqDoU3suJV0WyzKxCk0zTW
7W4bHkakuOu6TwNSEWr//GYnHnL9NHgr7mJIAnl1/dogHmZtPjJKzPSQENEf
R7xH8RCkXeyVbKiPuJtkXvLA4eHdo7/fEk4bINpF2A8HBh4iQjvi4yJPIftJ
AuznZln9MFo7yF5lhAiIkDWs/+DhUcRyyZ1lY4RxOyrDaA0P038OJ3eWmCHT
5w54vWYjwNGFy6iHsjni8ktoi/RWAkj9yCHFlVsgZnLUY5LcBAhLsvJu47BG
Gr/86HnBQ4Dv/Ttt26atEc1zld4iuwjA3+UyVTphg8g+jHnFL0iAxeET6V00
WyRV1v94ojABIlNGTxqxnUN4v5zv2yFGgM0ZSV9zJTtkeU6Zk0uKALLfjnIt
v7NHfGMFsyL3EuB4xsRnjU0HhCKzemKLDAESqQ7eyt4XkF7bLp91BQL0fl3/
PRl8ETk1V77tjhIBzCutPQ0fuSBfYl5lL6kQwE+kjXrpiivyvsZ38L/DBJjS
v7V23MgdkbK18w04SgCP30dDhY09kORZ4J7XIEA9590kgXOXkHv7BHSntQjA
8/7ba7GMy8jf6uWhy7oEyEuN7Y0b8kKunCH5UVECfJj92fLf3ivI2eiyHII+
AZxu4ZSJFB+kUzoDcT5FgCsWawpS7r4IVh05Mm5MAG2Ojf9q/vohqsyzO0bM
WecP1M5yFgQgn21PN8RZEWCwUytHPS8Q0a/Tu46eIYCWbLeSadl1xCHx8Pjb
8wTYXii7RedfMEL7p/DY3pEAf+omh8sO30QCL0rp73ImwC37msdnbocgD9W2
FwS5E6BDXUGl+dQdRPjlprOSJwFyQzjGHnXeRbLZ/wlOeBHAt0vx/B33e8jn
ftJtfV8C5IyEnXvPvI8Y6IweWvQnQOj3e/o2E+FIT04PKf86Sx+jLOrGzwiE
FvTFVPAWAbzXYokqa5FI4GTpRtsdAoypaicoyUcj64YfSm/dI4D1Ol+kwoUY
RFjsuSTxAQEYmrf3JWw+RLLDErqfRrPieXwe+OYTj6gyIiKMHxJg5bGqVPFs
AqJf7TddlEiAb69XemzFkpBuGc9M9ycEeFCZXHx3KQlxiLtgI/aUxXdbpWgl
9QkS6GhSc+8lAR6GceTO0VKQjRbwPZpBALZMhRyztafIQ1VNWVomAdJv8pXd
2PccyV6XjTPPZemz6Ftin5qKqHpKoOzvWfrvavr+ZfYlUtXN96f8AwHoAYt2
hmfTke6sNXupIgK0NCUbpjlnIg7c/+3qLSEA9c9pynH2bITmP9X0oJwAZkjP
PsBlI+snh5Vnqln9d8pLcan2DRKb3zWZ+YUAEjdG4+h1OYiwUMsTmwZW/fXr
nfx+5CKqlKLl6lYCfGaTK5YWf498Pv2O9VxjzVc8baHTNg/Rr8hwlekkwPQp
fxmRNx8Qh+iH32J7CHD9dN3V1YBChDYXFqrbT4CRZHd5338fkQC7G0d+DRLA
y86f/9DjIiRWyf2l3RgBlr/brlPulyDCT+zNd0wSwDn6H9dv31Ika9mSvQFP
AENF6Wsu3mVIZaeu934qAZovh6ktRlUgeurqe8boBIi/27p660Ml8iNdue/R
NAt/0XSH2EQVQvER1VqYZ80rpUa2PqAG8R/aOZv3hwD7q1xP+wzXImvI1tcX
Fggw3u77Jty8DhHi+8XdukKA58/KdWx0GpH+urgYk3UC8Jq5y/pva0KSfRS2
9Wyy9sEiOnxqvAkR7HTYOsZBBLZx+vxCTgvSH7IQfpGLCNfr98V0pLYiyYpJ
bNTtRJhMCew0eNmGCEa1rc/zEuEBsfNTcEMH0q/ucjdYgAi8N7/tPkP7iiST
VlZWhIhwaPjbRbXdnYgAprbEKUEEPtFvZvElXUjvXOeN+N1E0IuZS/QR7kaS
Xl1a4N9LhGAN20cisT0I/2ran91yRNjpYUXzt+lDej8cC3itQITKlaBPw4r9
SNL53vn9SkSgbw/mMeEaQPgqOWePHCSCnP9h+6O0QaTbI/tq1WEipD/5ir6j
DSGJQjrTukeJcPb7fTGZ/4YR3gB/utFxIjCk7fQ9j44i3dI7PH9oEWEgZ+mX
k+cYktj9lmKjS4STh7SGq/LGkV2q40Snk0S4otBUr+WIQ7rGgl3I+kR4qvzw
/tcuPJLwkB/vdYoImuHivS3vCchOuuHEdTMinPh0phxvSEK6nhEcls2JMP2+
0TNAjowkGNwZvWdFBOYo/fKpHRRkx5vi4YdniSC4XMBIW6UinVZmZ/nOs/Kl
6XGIc9KRuE3qwFMHIpC7N3cPSjIQHqfdfVkXiZClilc0uDaNdO6otFRwY+Hp
NbZWKJhB4mqsuvM9iBAVkns1e5GJbBeP/l7hzdLb5akCT8M88rV9n6mODxGu
Li/uKXr1C4kNrv3a6EuE3235U/EevxHugV9t368ToUXc9NP8rv+Qr+HxBtY3
iPDytWaa6e//kFi1/S3DIUS4vCyTwIb/i3AlOjYSQ4nQz7EXbz/+D2nX/Yde
vk8EE7r7paXpRSR6JqmOGUEEyR37CxnblpFtJu01izFE2G1ZmvPn0irSvuii
FRpHhJS+x8XH8teQ6HerVVseEUHiy4PqPevrCCfHkYpdyURQWKw59MWLDW0t
/a6e8pQIMRzW7goq7Gikq2ep+AsicAbuP3LyLzvK0ZBeJJdBhKqOQ1a7c7ei
Y7oGxvhMIoS7RS8GZnKgRTVMQtprIjxzqjj1L5cTdahEBAXfE2Elvdd46CcX
qqZBy//xgQjcH+kc17i2o9tKE/UfFhLBk++R5AcDHrTkIz6IrZQIq06XwkZn
d6LRB2J3fSknwrXEtG3GjrzohQ9q725WEWFvhZyw1Rgfyv02fGTuCxFCm9t4
9WIFUJysin9+AxFEFb2VazwE0bLsfm7PZiJUHDIubjETQp0z5LQnO4iQ+dRo
V5yOCKoh2dWf2kmEWcGjm7aGouj21KCrtj+I4OfNEO92FEPLU9oyvvcTQfG9
yYRqiQQaJ+B7LGaICEm32am2vyVRl8ei3Xo/iRBx9JZfMSaF7oi/vFk9SQSl
SsXqUT5plMDNnxpMIMKR1rq5FON9aGX0Z7UjZCJE2/ZHnBWUQd0itrvlMYiQ
x36vZbRZFj3BVrriPkOEhK7Yy+H5cuiuew4p0nNEsGj/wtj1Sh79fKug9fl/
RCAWfCwfzd2PJi6ecbL5R4QtnysjlWsVUffgtYVdy0Q4N8X3JQynhPIGmCtG
bbD2xfYel7cWB1DK3EIDxk4CvL4d7nOGKlrjk3l+bSsJymxDbzmuHEQvec0/
vL6dBOQKymjKdTVUm/ZC9vBOElRtT1Oe0jmC8ntgtdO8JBgKeugSs+so+uXi
E6arMAlU8yo/WXaro8mTWlF7xEjgOGqh71yvgV52JO0ZlWD5mVYyYdXHUEE7
dUsraRI01O18tNx/HGUMjtN3yJIg11+T3+3PCbTOJvJ+hzwJAmQ5T67u1Ua9
LIZKUBUSPKukv9r3RhdFu0JNV1RJsCeF1Du7jKBCpvvJFYdJ8NTxnrmvK6D1
hjeFDx4jgfTx10IHj5xEn7ZIf2QcJ8EO0t+m7I2TqPfJr4a52iRILey6fGVI
DxVGJG7uxlj+tsP8+dkG6HRNE9+IHgk+VEe1sj03RBtPXMlLNiQBLwbH/J6f
Qq9q1I5uNyPB/EqNVXyNMdrYO1T42ZyVf5NZ3DVqgopc+xV22YoEG8kfS75w
mqENbxX2t50lgVfP/MJYlDkqrIctXz9PAqFnFOEj4xaoN86hS9aRBCNWm+wt
0laokFhS4H0XEhAc3UmEdGvUqyzf8LA7C19sik6Epw1aZ9kmjrtEAkn2YrlN
rTPo5diVep2rJOC2qdfnX7dFa5c9diwGk+A0Uiwvunke5X8ehnsbQgKRtDEB
dikH9NLRtBLbOyQopuMyMENHlO9qj13pfRIIxHh/G6x3Qj24plVcH5BgisBe
pMd/Ea3O4djgiyaBYJOYsNQJF9R9Qiv3WjwJtilvPhYtckU/h9jelEokQUTN
DZHaG27oLhE/0+9JJMij3FGbPeWOVpnn/lJ6TgJPLrjiveUSuqOBF6Fkk8Di
wfXV7F9eqIujMn9KDgncQocHb3FdQSsW9ckn35FAGdkYVVC5il5Uu/Uwq4AE
oukumbNPr6HlXSkXLD6RwNKjaZUf54tu9/50eL2YBD9fv3gSL+mPlr0mDzlU
svB/ilKMjwlAudGNvO3VJFiNSEl4bRKIOo2J3/1cS4LBoFHbSaHrKJeQhaxo
EwkCzbs1dzcHoY6Rn337vpMgatnofNfjELR438DJ+90s/66yFOFXt1DOulnh
w30kOGYaLJNQcRstWpCtTRgmwbcmwebR7aEoRzKSqDNKgt0dfV45p+6h9ofO
u06Pk0Crdh7/ICkM3Xr5EZcxkQTnBA9N9+8PR89vzRv7RyaBkrmoHTsxHP2Y
1fzxLY0E4q1IzfCbCNTu5+KZrUxW/6v8eV2MRqIFJm7Z9f9Y8/EjJeMSIQbV
UJVBYZkEfqerlC/3xKL1vITxhlUSYOFTiTc6HqK9A05iTWxkKNPC7xYZjEft
K6UqTm4lQ73i5O9zUwkoKXXcppmTDFFGrWo7tyeif53sE1t4yFCSzMUo1EhC
QzFxVYNdZEi+fjXn4lASuk1u5FsrHxnyTC8aSdx9gkowbDnbhclAFB9/GzGR
jKKBVne/7iWz7iu+4Y75Z2iHLZ+kiQwZbmhumkDHc9TqeHfVNzky/LiQWFr5
7gXqtmb2X6cSGbrcf+r/uPcSncHxPDE7QAbrr61N20LS0KCmb4e6DpIhac/I
9uDb6WhMtNGVH0fJEMlFTtPLeIXye2/jtjhGBpVf127bfMlE08za3nYfJ8N/
oxwRS7QstJBfn9ijS4Z7X5sU2g69RnvT0PP9p8iQnXzkSMJsDmofur5gY0KG
ybPkmfiPuSjp4peUATMyOEQ0h8UEvUX/ymv3DFqRAZ83NOgr/h4N5Vr2OXuG
DPqKn7VxC+/RbdNVPMNnyaAgq0qzGs9DJYqOnRpxIMO/n3zGLg356Jsnf8l2
TmSovr13f0p9AaoaVBb+8yIZdKr8GxfaC1FU60jdqAfrfxOf+uS/n1C3FlWN
CV8yvCEelXCjlaAzb2f6LgSQwcP0RXfo41I0KDbfb/I6Gb6mIalZaBkaY65U
gAshgzLl2ZXOonKUX41ufPEOGd6vWp/TC6xA0wTf0fChZChS9DuRqVOJFo7I
yRIjyBBe0Sjzl1yFHqshNbhGkaFDagbxafmM1me8diLFkEFCf+Jla3412usq
/ZKcQIaHeVoXlZNr0YUZSX7aczKI/hahfPvegD59Re/IeEkG3sebhV+jGlF1
y/KwMxlkMOc7fKzmQBMaUGo+3/iahZf/DPNDXDPr/pB8fzOXDDu0pT7tNWhB
i0Tozofes+Ira0UmcrSisyH3u9MLybDgK97pnt6GJqiYR9sUkcFlHwePdWA7
emBCAt1eSoYvPGflTaw7UG8o+3ijigx7NT/OPVD6hlI5aQnWzWQYFhCHCYMf
aGRVqQF3GxnOmg7qfvXoRuW8w9bqO8hQ6zubaf+4B3XtEvdR/UGGQ6NxK0tb
+lC2e1Q5cg8ZFDuPzrp+6EOzDpeOv+xnzY+6QSbjbD86mWxmxvWTDAlSySEH
mwfQuwbiW+vHyHDsg6nPxYhBdPc/Sk3QJBl6qVV9z02GUHv7eyokEhmMhIpc
heaG0SHpku11s2RoePfYNf/5GBrUF9p0/RcZWh9JcLk+H0eFHpjeUvmPDIKG
tvtssiZQaxqZ8WKJ1f9PT5xX7cahv14UZ1ussvzP0MTGv3j0sUnoec4NMtgG
fvn6J5mA/igU/Rq4lQIr0byEgkEi6uNMDlPeRoHsM3aV6vdI6A7+4uMEbgqI
mtkmtB8koybXTd6b81LgS4VtDDGLgrZp3Y1WkqBAqbYJ555hOuoxY4zid1Mg
+mDqFtlKBrr1lci/Z3spMNNv1b09cwo9yVZ0aas8BTI2M0VSomdQQsmdPTX7
KYBDZN43xzDRMHfjIX9lClQ5Yba/n8yide1EA9whChCf6bwIb55HL4R8Wnt6
hAIJHCE7m4N+oavKd8rNNCiQ1/Bo1H3Xb1TrkbB8tRYFng87mn22+INWnDHa
+tSAAm2JS5fqRBfQWLPPUVJGFPDjnLiDfl9AL+grc781YfEtFbGMjvqHblHf
savSggK+Ul0p0juX0CGVu49RawqEtLxf7/65hObJzgp0nKHAdFuqInvhMmoh
2CP68zwF/l44PfTZcxWV4cFeujhSYPKmXux7izX0L3vJ7iknCqCm8ddmkHU0
/XfyvhU3Fr4qI45z6psoo/ecitQ1CniK6Z2Tb2SH2q8dhbl+FLiXJX+u3HYL
JDaeOHwwkKWnibM0Y3YLaBRLaqA3KTC+2IH/eogDuPLiK9tvUeDB9QXthmEO
GMtaO2F5lwIf4nI1mA84IfwxDnEJp0DwyUbD2LltYBtj2ch4wMJL80dMCrlA
KaxRLyCaAp8v5Lyh+HFDt+8bo4h4CnQ+kVVx3M4Dkhae1rnPKODWwXXnYtwu
mDUcGVBNpcBSCac6x11eaESMz1WkUaCp9LgFZzAfeB5UcWzPooCr2puG1Xp+
0FJIn7R4Q4ET0omjqkYCsHPPTpeRXAr8bHxyOnRAAMp2znkwPlCg73cEc2FJ
EKI5LtL9CymgmhC5diFZCBzWeryXP7H4WylpuqoJAxuzxJennAKPn4U6f70t
Aqe/B4eo1lPgXL2V1eJpcZBuoa2UN1JgMTI2XpFPAv7U2IUiLRRQyzKZ3D0i
AS/ztSIsvlKANKt/ZjFkN9Aersf791Nga/zYQ8Pt0lAd7su7PEgBee8YI8cN
aUi4hU8KH2Hpabx/3jJ0Hxz1bnqWPMHCp3WDqylSBsKMo7LKaRQwvP7G/lSL
HPQ7e11Qm6KAws4ZrksO8iAfbCZROEOBP1ZXnbsW5KHztUBKzi8KPH2m1TCt
tR+EV19FJ69Q4FrBgZWOFSXwFAjX512nwBWh2rrYKmWoVvRgi9ukwIL9tM+T
WyrgbKtyO5yDChwaBx5t51WFvI+V1/x5qeBbd/9S0d3DsNLyUoXJT4X7muP7
SepqYD52l35ZiAoJi64XCwrV4M82fdeL4lQ4/Ear0CrvCOi69NhayFIhKeSt
mFunOiTeKBXolKcCj9tMlsMFDSAmPOs2VKRC3acIIfM/GhBd7WiMqFKBMtx6
MFZFE3oFGTqqmlRo5lnTPNtzAmSVvy+9P0GF5xutO8QitSAYPlXI6VChYpbb
ohzRBkmfoMO7MSq8a+av3GjQAY82NjkeUypse+uZdJUDoHKcjI86TYWAFtEQ
1rUA2/+0Z7BbUoFw37zX0QODT3sfiS6focLfLO3Xr21OwtJNCR6GExX0HXvE
Ns/qg2niWru7CxUi/3pMeeD14VUu/gHejQqb30t+ufoYgF7f2/Xhy1SQx24l
3nliCAkqR3+3BVDBKcPlv3oeY8BhIp9OBrH4NJ3kvlZmDEfslq7U3aDCzi/W
n667mMDwg3pK+R0qcImnNS50mILMpOnPnCgqKBcczB/vMYe4Zp2is7FU6BPP
llMutoA/71WjueKpQHpy69q755bQHMircTWJhf+OxlvvWivw4O5/fDSdCufn
35MtW22ga7bZk/KKCuvFd+NiLM/AsYEy5Hk2FR5mBVZE487AtsxnM8tvqZB2
iBtFuM9Cnrq9UVMxFda+Fu4798gO+CVM914vo4Ich6juE63zcGtDe0G+kgr8
bYelPKfPg+k3qZzYWlY9fp/ttnZwgBlnwoZlOxUYHcJq0TecwNagb4j9GxXu
9RudIZg6wxfl5sKy71SYPcz2p1v+IiT8zXEQ66MCewZydCXIBQ7FXa7EjbPi
b/jwFDi7wXO/84+ScFQQq48KlyW6waatiYcekQorkUdElz3doVf6AOuFQQWT
rfe/i4R6QEDF3LVrv6kQ0t7if2nIE8bS8AbSf1n9MXRmQSX4Mujd793d948K
MSLEgk1xLxA0K/2msUaFEmRf4fFr3lBOCFZY20aDG/5j2m9NfUCq3XPt43Ya
2N2KPpa76xpEFdgNXNxJgyN9ax3hQ9fg3A2t8BYBGhxDdhaYBvnB4o71iTgp
GqyOff+WFxIALr9ny3SlafBA9HE3zAfA12Fc3JwMDTQ3K5savAIh9XXjCRtF
Gmzj+Sdd53EdtI9HPpU4SoOLO7QZyRHBMOwmoflKgwacQ+drXnDfgOuJn0b2
HaeBtJrPs6wnN6CQ+lNSSZcGtPx6x8XCm7D36cHXmqdoMJW4/vYxz22oaWjW
qzGmgRuPu/31/NtgN2NHQcxoIGXHex1vfgeS9CIUDa1YfBx+HHqZdRe2/B7+
eMaBBu7nm5oy/cMgU8rHcuQCDfyCtzZfFrsPOsbsvx0u0gDnkTiYFHIfgrIO
aLh50MBw7s119GQ40Mzv1/j70uDjeI+a+mwEfM9X7ngUQYP43PVPIdXR4DVc
7yUQxcIbPkIcQmOAY4stz7MYGkjgbSs32mMAtb9nnpFAA688djIDHwvFXAMD
+c9p0Jm+9uzNsXg4re4VfOglC28drgjXHw9Tzuuipek0KHUuM7a7ngCylYoO
1dk0UP+PL0e7/hE89bhL6MinwRtNE1IDmgRqSQIRZh9pMP46llMlPQl+1L6T
6yli1dtxWTFwOQm2CfV5DpfTYEB9V3p97RMIaVKYpdTTQLQgqgg9nwIX9vYs
sw/QYL+1cd360nPglQisqB2iQY9rSZdFxAtoEhIJCP5Jgy5lPa8o3lTYv92R
wZikAf7sE56xwy9h/j/acA+DBpfMEmYLXqTDm7mHyQ9naCBkKjJdqpUBtlOq
FvpzNLAJcr4siM+Az7jAtsr/aNCMDl4R18iEiG8bZa82aNAr0dQfGpkNGq2v
/ezY6VCsKLO7kZwN9HqDAwIcdCjsfSMwb/AaTpfHvYncTof2Kf2rx3a9AZEs
0SdXhemgWWok5ViZA3lBh3y1VOhAXUqxVLn+Hhz8+pT/U6XDX//BD/cW3sOu
K0HUwsN0+NluZWF3Ow8CL9Zc2HeMDqu/5Vsb4j+AjukpMy6MDmlzryYzugtg
zmBqW5MeHQyy/0rpeRZCNiQ03zakQ/+W/OIWto/Acaxfa86UDuecgz3i0E/Q
Le2sNHSWFY+rpVXLrxjuS7JTEs/TQeL36a3yHcWgLpKbZexIhyT9lubCfSWQ
yjMt+sWFDjsst2JlP0vAbSGYM+cqHTSa5u+bOpXBQucjkn84HZbTtXof11fC
xI4hr7UHdHiX7rFQfqAKmk9LzcdE04HoWyiVk1YFSd35q5nxdPAiaU78Cf0M
Kv0dwj+e0eG/Y5zCvI41wC/El34+lQ72r70mlUZqYPHMORlKGiu+ky4dPVsL
rUOUg6tZdCg4doN0w+4LOI+yGynn0+FwN0dUb1A9GEia/CgvpIPDWPPGPfYG
OOCYdAYrYvlHqN7OSQ2wNLHXxa6cDns4Xi9ecmiEZILOrah6OngUO/WmJDRB
Oz24gNhPhzXmHom9B1qhUKnuyLUhOug4bl4qjGyFFG+Oz0sjdCj/cHHsEb4V
XGaSW/km6bCgt6PF/mUbrMwVTSJ0OjAPCr99sKcDDv+b4ktbpUNYarp8ztVO
ED1+5LnCBivfqxp+vYlOWLsZIlXCxoCXzx8Tgyy+Q+fyNuWvnAwoR99Jvj/e
BR7rcnr/+BhwJXHuTMWebkjlcA6ykWeACfuUmczePthwFzvWt58BBAHpP8Vu
feDR0rtgqcxgvT//7ZbP6wO1CP2b5ocYkHjH9ErdsX74uql02/gEAy4xP5ss
Og7A4sp/YehpBjysrgj1HB6CCw4fsToLBgwX1eAOqgxDc7Unu641A5J+XtxY
uTcMiSGjEVrnGGCjUbOv6MAI7P9XH6XhwgD8i9jE2ic/4dzvh/EqQQxg3Lpa
ZZI8Dl+s9E9/uMGAb/OhKf6L4yBbvLZT6RYDrj7rqm1wmoA5X79EhXsM6Iut
DsMfnIQopu2TfbEMeOpQdcNlAgfldOkXohkMOL4tXGifNhGEcBVvtrQy4MlD
bjOSBRUSd4aGVrUzYDJ3/uj2DNa7R8fgvM83Bkhzz5znmKbCltT+XcPdDJB7
1/jrTiwN/ljPh3wYZcDM+FTy4x469LYpWVrNM8CCzeOfZsw0nP47r8z5hwHC
jskP5UjT8FW2iqPmLwNOB3au/EVmoCHMsEZuhQHLSS95TZdm4JOWm8IixxTs
8vcQGro5Cwkf01dfSU6BWgCH3WPrX8A94TZss2cK9qkXnXSK/gWRPColXPum
INYkJTun9hfcufzZM0BhCgZeL46mKf6GKzJDfQZqU9D4m+KhzfkHjJ/x5s0Y
TkG14Y1An5H/gDM03FYrYAp2uAx22v1chPLfzOWG61MwJ3I0YV5sCTw8z2ed
ujEFUf1HNf/YLUGr5eHpM3emQHBaNf/46BJEyk6G+UZNwYYoXbaesAwcX08U
5LycAq+glx3RW9dgi9Avdt7mKVgay3wwacqGsX1wLiIJTkOhbc7mwcucWDtz
xDdLZBpe9o99MnrOiSWoWR+6ID4Nkh2znHFtnJjYZ/2PQ3umYcA4fSVKfht2
qEOp4KvSNPzTvpZtRNmGXaD+efcJnQbniE1dyyvcWLVMTObtK9OgPcDRRY3b
gQWmFT0SbJ4GtdSlzB8L/FjVWlpMc+s0zK95/CzgFcDWnKPDAzum4Wn+3Idw
RQEsRs4puL9rGt7ljPIJ2gtgGYU8Tskj02A5tVRZVSuAtdVfUhWcnYbgn56p
ufcEMXHy7u8C4jNgWW80f2NRCHMy5GprkpyBNUfZ5tO8wtib93/qA/bMAE+z
6HYeBWFM1edbaZ/sDOgFZm6csBHGTi7cSHtykGXPJP5xKBDGrnD1ewvozwBN
gnuvwXkRrO5ALLeA7wysyjNf3HwpimkOiv1I9p+BoU+V3wQKRLHiu++fCF+f
AYdHBfvivohib360S4qHzEB5Zew/IbwoFuvHeVA6YgbQz1tvP5AVw2zKIqwP
Pp8B+Yc9DolvxLDvjoKiRakz0JvVcYRWIoYZcLwZU0ufgQMf/vqLNYlhx882
uWtkz8DU4z4xTrwYJrW4GayTz8IzxdbFKSGO0bVD00zqZ4B9K1HOM0occyHv
vPi9cQY+6q2kayaLY2PxGXLmLTPQdsby40SmONY1UVto9XUGjG4Gfs+rEsdK
763U2/XPgOLsnjAdujh2QDHuwejgDJzgt9Av+yOO5fZIGDuOzICYzPjuzXVx
7MU+rT7niRnoN2W/ICgsgd1tvkm+RJsB3sOQIotKYAtXuPLojBmoaYm9pmks
gfkKvfDxnmHpbxkvtcdGAnP1qFzw+TUDPgfGrrldksBObVvgClqZAfztVstv
DyWwxk+RXQtrM7DkpaPtnyyBadkJP7m5OQPnYnLYptIkMNU8dck7HEx4JyBf
Y1kggQmYBqpG8DJBvfr76flvElh2E98ObQEmhFD5a2r7JDA1rY9Tv4WYUB+F
E7EelcAslBjvXCWYkCalazBMl8Ams6KiJKSY8IUH+9U2J4H5iMl59O1lQuDD
MuTeggQWt81Z5qQ8E6KZffeNt0hiEvdWN5f2M0E0xOyCA7cklreQiitWZoJc
cG+uBq8k1kEZSN93mAmCCaH2ehKS2LkLAbd/HmGCq8rnquC9khhtgNc+SYMJ
Y6jM5QA5SYyjxUSUTZsJQRsXPjWpSmIp2vS/VbpMSP5xyUD0iCQmWxo54AdM
KGndpqR+TBIrUZYtVdRjwndeqQviWpIY9rohCW/ABPOKTUqbriTWI+7k98KI
CbfFYr/qYJKYc9KKuaUpE2KttvHe1pfEQsOO7WiwZIKxRSTZ0kQS27nYP3XD
hgk7su8+pJtJYhm+/l8PnWXCX63zdUYWktgB2q73NDsm1KaUPfK3ksRqnAqi
Mh2YsJeRxuNmI4mZDBl7nHNigp1SrKGUrST28zRNj9eFCZwEF+uss5LY5dYH
Mu1uTMjbHqQ3c04S+6cjw3bvEhP2Dd48xHZeEosqq8cd82KCpn2MKo5lCx+4
UDd7hVU/w31no+wlsdw3y+lvrzGhJWBf8wLLVpd8cdvJnwn3fFsSDztIYs1P
NOxFrjNhlS175CjLttnef/xHMEv/lLc1m6zzxPt+olEhTDB8JmH3nGX7L+1c
0L3DhJqBpz/+sfJt+uUP/A1lwv56NkyGZSfSjUoL7zNBKOdpn4idJLbnIjXJ
4wGrHrj+d4MsPoXDEX5S0az6rUVRnVh8dSz2WQzGMqGzt668hKVHZ1udakI8
E9ruden2svRyQBx3GCQy4dBd/ffVLD2nypemVpOYkPLg117f05JYiOrzr2Up
LL1Dx3pmWfXgzlV/f/U5q36uKP2EkST2YndflNxLVr9zJqRYGkhi+1N8PcbT
mXBp1o3j6ElJrIJnp35KJhOcuR5fISCSmEHEBxmz10xI8OBcctCWxNwCKLia
d0wg4ZzPVRyVxH4zwusCPzDBvXw86dkhSey+i3SGSiETjvv0tOmpSGJZlg72
aSUsPTf8NzhkJLGJg70Dt76w+GaWsR/eyfLPCIRubWD1u9SWEvw2VvwPZ/Y/
amLl57YOv8TO4ic/EpLdzoT0/SJnf7Pm599u3J6OXiaonKS/4ZuUwGpGpTus
BpiQ6JdxyG9YAgt94eo/NsQExsHDiW97JDAOIWrz7BgTVHk8i140seabh3lZ
mMqEXVNOMy9yJLDBjoMCmXQmhBfHR5SnS2CpUX41itOs+HJTnR9SJLC97P/t
1JlnQo6dkbf0A9a+WFoucV1mwh3qyX7EhbVvaFxrn3bNQpLE7c/3hSSw7bkm
b0/wz8LASM63U9slsC7XeItmwVnI//GvaGpDHDszyft6SGwWFBg7RTqmWPt1
UOTUmswshJ/ZwcmoE8fuNMslmWjOQnTbx0Z2F3GsOBPkKc6zcM+k4OmrR2LY
f7f/43J1nYW/B8F+IEwM07R7PzPpPgsnU3sMfwWIYbV8fGUjXrPQ/46vlnBW
DGu/jzv5PXAWfnIoiOZKiWHjbqEXS6NnYYL+6u3ft6LYNsXatPufZuHIvc8V
Xz6IYE5FmgJ7NmZhemktITZKCLsf9Tp8In8OfAN8wE97F7brJpep68c58PcI
EgsQ3YWleV0TpBXNwc+Lkmthf3ZiZWZaOfPlc5CcHifenr8Town0tW5pmIN3
rXaFq7t3YmaZbNzKA3NQ/zN61YR9ByZadTExeHUO7DYcPTRHubGcvLZzK+tz
MC75yuBCFTemlnZAOoxtHt75HeR78YwbMwldLIrlnIfaeh+V0zbc2F39x33p
fPPA84y9ubqLCyP11As3y82D6gNNm862bdhHxp503tPz8LO65sXYNw4s9lWU
C85iHkoVk6n27zkwD5tZhU/W80CRvGq/HMmBSX35UmxuNw8J+7eYv8Q4sLjH
ju0JbvOA2+Pq7lq9FfPSfPmb59Y8fNce0z5csgWTjRQ25no3D897PaNv17Bh
Gyfu7hrJm4fmdLPF4xls2Ogsuf9dASuekEah+D02LMmuzOlUyTxwfavkM9Bj
wzZVbK5HfZmHHOm+DzGpmzDR9zhz68A8iCd7po7/WIfP0YvuA0PzoJWn+rX9
2To81bmonPNzHq6c0DRfdloHs7eHyvVw82BV3XlBY34NakJ+fAufmoeJbM8b
W0TW4PnBY4+tmfPA0A9ElPCrEEDKsJWZn4f7cydOPfuwCkqnffCNf+fB1tBw
3QBWgYN9MDdpcR6ub8ymxvCsAqFC54rLyjzM5++1FhhegS9Xcg6rrc8DVWtQ
gvR6BV5I71jY3GTxfbtGXb62Av8DTGjYJg==
           "]]}, Annotation[#, "Charting`Private`Tag$588358#1"]& ]}}, {}}}, {
    ImageSize -> 300, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-0.02, 0}, 
     Frame -> {True, True, False, False}, FrameLabel -> {{
        FormBox[
         TagBox["\"Probability Density\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"fat frac.\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], PlotLabel -> 
     FormBox["\"Imposed frac. = 0.9\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.870315863813139*^9, 3.872061944162896*^9, 
  3.8720620040759573`*^9, 3.8720622042591753`*^9, 3.872062323689802*^9},
 CellLabel->
  "Out[371]=",ExpressionUUID->"fc697f41-9796-4b72-97da-115bdecd868d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.476], 
          GrayLevel[1]]], 
        GrayLevel[0]], {{}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.476], 
            GrayLevel[1]]], 
          GrayLevel[0]], {{{
            
            RectangleBox[{0.16666666666666669`, 0}, {0.18, 
             0.06000000000000011}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.18, 0}, {0.19333333333333336`, 
             0.029999999999999933`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.19333333333333336`, 0}, {0.20666666666666667`, 
             0.27000000000000046`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.20666666666666667`, 0}, {0.22000000000000003`, 
             0.5399999999999988}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.22000000000000003`, 0}, {0.23333333333333334`, 
             1.620000000000003}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.23333333333333334`, 0}, {0.24666666666666667`, 
             3.119999999999999}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.24666666666666667`, 0}, {0.26, 4.889999999999999},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.26, 0}, {0.2733333333333333, 7.680000000000014}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2733333333333333, 0}, {0.2866666666666667, 
             9.02999999999998}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2866666666666667, 0}, {0.30000000000000004`, 
             11.129999999999976`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.30000000000000004`, 0}, {0.31333333333333335`, 
             10.41000000000002}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.31333333333333335`, 0}, {0.32666666666666666`, 
             9.660000000000018}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.32666666666666666`, 0}, {0.34, 7.319999999999983},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.34, 0}, {0.3533333333333334, 4.28999999999999}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3533333333333334, 0}, {0.3666666666666667, 
             2.670000000000005}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3666666666666667, 0}, {0.38, 1.0800000000000018`},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.38, 0}, {0.3933333333333333, 0.7800000000000014}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3933333333333333, 0}, {0.40666666666666673`, 
             0.20999999999999863`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.40666666666666673`, 0}, {0.42000000000000004`, 
             0.15000000000000027`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.42000000000000004`, 0}, {0.43333333333333335`, 
             0.030000000000000054`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.44666666666666666`, 0}, {0.4600000000000001, 
             0.029999999999999805`}, "RoundingRadius" -> 
             0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
WgjFOTaVrCNyYGFlhYEqD6+kE5yp5P8Bue+uJg==
           "]]}, Annotation[#, "Charting`Private`Tag$589271#1"]& ]}}, {}}}, {
    ImageSize -> 300, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.092, 0}, 
     Frame -> {True, True, False, False}, FrameLabel -> {{
        FormBox[
         TagBox["\"Probability Density\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"fat frac.\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], PlotLabel -> FormBox["\"SNR = 10\"", TraditionalForm], 
     PlotRange -> {{0.1, 0.5}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.476], 
          GrayLevel[1]]], 
        GrayLevel[0]], {{}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.476], 
            GrayLevel[1]]], 
          GrayLevel[0]], {{{
            
            RectangleBox[{0.24666666666666667`, 0}, {0.26, 
             0.08999999999999997}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.26, 0}, {0.2733333333333333, 0.9300000000000017}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2733333333333333, 0}, {0.2866666666666667, 
             8.72999999999998}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2866666666666667, 0}, {0.30000000000000004`, 
             27.689999999999937`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.30000000000000004`, 0}, {0.31333333333333335`, 
             27.63000000000005}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.31333333333333335`, 0}, {0.32666666666666666`, 
             8.970000000000017}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.32666666666666666`, 0}, {0.34, 
             0.9599999999999979}, "RoundingRadius" -> 
             0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwUV3c8Vf8bR0YpSoNINqESsjnnORkpoUiys1dIISJ7l77JKG0kpVJWdva8
3Ote110oW0K2osLv/v46r+f1Oef5PO/xfJ7PEXe+Zu7GxsLCcp+dheX/z1iV
gtrHj6vg3KeBUterOUpCeetLr3Kq4L5MXNdXy9dKJfuM5D4WVIF733DdWcl3
SqNL05lNVVXwR7Jz/c7jUqVTxceuzTCq4J5tVcAGa5vS1vEicUSoGgKGfonS
02eUwo5UJAw/qQYukWhtbjFV5QCh1gtHntXAzhdhByRD2pS/8f2c/9f5BXLa
RNcVHX+fVHWP2jvQWw+3Vc94z2tzqfYVnOhomGqASXSKEN7EoWYk93pX5UYj
sFVt+Nxc2KWudpmYdpKlGVhvy3p5UFbUh+9Fi1w82ALlJ0/38JwY0zj4gE6z
PNoK/HtlbAmsDZptuhO93462gcqe9dXla1FaShvBZG7ddjgql25otaarvc+9
4UCNQQfoOLcnLbTOasc+/Rh/Xr8TDt8aXWO/l6Bz2yfOI/tMJ1i+mbX8Ip2s
E4jYnF007oRtGpKcSztSdNyHOHjSL3XCXo2y7tarD3TOSNpnUN07wfjk4z8u
/U90eN/vfGWf3AlzJvtSQws/6XDdHon7eK8THAxzPDhfFuuwmFS4bz3ohIzi
Vu7Zx6U6i3PO8jlPOuEAtuOkPlqpM12vsWvpRSc83lmq/3KlWmc0lXdO91Un
BJSmfU3+/UWnT7m6ePw9M87d/eVxTJNOW59bUEJZJ/RWFhyK7m/TqbjJpyn7
pRO+kX7fPXCyW+ftwS//Ols74ceWw/g5F5LOk2rPhquETuBQONIk4UfRSb+L
5tb2dkJQslamWidNJ8VufxwPrRMam+FBllu/TtzxaTeHgU5IShuaR42+6oRv
1ht+GuqEK5/VvH1hWOdmT6Ycy3gnvMFSO1Y5RnX8sq/uNJvqhBjd+XmvjTEd
j+unfubMdsJqlEj2mvykjqOuQM/SQiesKzyh22RM6Vjt+1mkt9oJCyRp1lGY
0TEbb0rLWO8E/uqpiESVOR2jz1mBExudcEuJ/edm7YKOboKfpRobDvg0HuOd
UpZ0tC/rayRy4qBI+yin8L0VHRVZISE6Nw58FDc4rFt+6Rxbn/8ruxsH/WUP
0rvV13Wkca1fb+3DQYq92+OGn391RJ4+rccJ4EC7PM9M6uemDr/P9ZxDwjjo
nE28RRBhRXYjhrE+YjggeGNs3ctsyHbew25fpHBwu5in4cQfdoRlaOk0rxwO
VCOT1wXUuZD1Tx2yV47jACU/dZMt2oEsRb3gLlLCQSY7X9yjq7uQabPAWRY1
HHhFBRsg/ruRMQkjgpkWDjbcdR+QnPmQwWXRolwUB5iL9Bi31j6kr2X1wbIu
DoZDZzTsdA8g+MyuAH1DHNADq8XxUQJIm3vOpcxzOCjlGW6f/COI1KkHq0+e
x8GtS9H1DeXCSMV2E0F1CxwMft6xb3eNKFLEkPibaIWDafUmSlaiOOIcvfXz
PzscSAWqTVXqSCIH5AaHMx1xcIrXYt+XQ9JIB7GS/MwVB/sE3pQ+kj2ChIZk
tr3yxEHAT9U3WR5yyDGxG1XvfHBwsfxNV9DXo8hQu+mHYn8cuN9hRy3uKyBp
146+rAzEgcbjEDWvRkVEX2B7Wn0Is37fwcQdV5SRX3XjcW23cZCjtu3uuKQK
UuDeGIyPYu5HmDfP3aeG2PG+8O6Lw8FxwbyXmLIGwlseaj+QhIO3KcH3heK0
kAb7yxdGU3CQ3P95Y4EHQQI4VPR+pOJAXvHG8+U+QGQK96gtZOAAH+fg73bt
FEK3+Cn7OwsHzRfHHEgH9ZA7/zoPbT7DwUm7EOVD0/oIkpfPy5GDA9E0lYi5
ydPIwrlY1l2vmfwYEGvO7TuL5C5fWdlbgIOFTjfS/YBziMVTne+ChTjIqL2A
3t5linDpCfaLFeMgvKdw8+X1C0j19Gr3kc84ELftzmzYNEN80nrrFaqY6/r6
TaVFFxERrU8lql9woLarY5R85xJCGrn7WqcRBwW3RTg7Ui8jccmeWXqtOLDf
qZF7p80aUVMyuGvUiYO5ipxv/op2yA+6eIQZHgfnD3yKUCY7IM+iNv2tSDjY
O26rs85wRExlB1yuUHCA8PpJSfk4I6zECkt3Bg56hkK4pCVdkbLgjLO+X5l8
3IGWc2zuiLvodZ3AERyo34j/p8zjiQi2m5wIm8DB3dvYnTZDb6TbT14i5gcO
pp7FRBmV+yAR/FwHkn/iQOf7q2Zn+2uIUt0YV+oiM5ZOy+URv4485Hn+8/k6
Dj4EZH7w9Q1Ezny+NZy3wfRHtsaT9yY3kb92luT3rF3gV4oOaliHIB/ZT7aV
cHRBtvfpoOn0UMTxw+6qqh1doDKXHDrNGo7stZh938DTBRaEBuP6N5FI69+O
F+18XcA1o/VZziAakT8XE0cR7IKTJhKE1ntxyOCSQ/Dg4S4QSmyOl7qagNx/
ou09Jt4FuRKGGZwBSYiu7kH7aekuGL0pFSpRcAdZ+bFyflGuCw50vt4RxXcP
yX9A0l073gUZOpGqkUX3EWvNj6pbSl0Q/HWl/JrBA6QuyeMQj1YXJAREWXjE
ZiD+ivq8+9EuGMo8Fc5m8xCRpIuxHtLtgv7Djse2rLMQauTGsvjpLgidKAyY
S3iCJB3pn5Q16gL5rTc3Po4/Q7R6yhknTJn1WiuW+Ae/RH7eTO9WM+8Cd+7y
6GHxHMS8zbhE36YL1hReUTJN8xDZBFDNdeiCgy9Ooof08pENA+XKLecuCLD9
lDLq/hbp5ZDWtvfogq7dGx+N6t4hb1sF6qqvdgHqq94nYFqIRMRznzroz4z1
DRTreIqQiwYbzUGBXUBXuXKR72ExIsuxcJoc0gXevuy1h/RKkc2W0U7F8C4I
y+UhaB38jPTFUYz/i+4CEcpVCUHBCqRAv6NnJp6pZ9Ols5/PViER7DXmZ+90
wbar4mJeH2sQi5ZCSv5/XfD0DU/74rk6RD4u24o9vQvMo0UkatMbkC299AGn
R13Awil03USyCenbluBQ/7QLOPEFH2pozci75pAR4Wzm+wYx0zZlrUhU7FXX
0LwukJW5EICrbUcu6Tl8p73tgiBch87flU5EfpuZt2phF8Q+6J9Tc+pGWJr1
fqYVd0FHoWXkEc4ehBqj5r/wuQtsKHKV11aIyHtduWWTaqa/yuDK9cRexLKJ
d317M7MemcukfBEqciyG9bZ7exccdtn8+kaOjrDqrmw2d3VB5u+G2RWXfoTK
+j1anNgFyD25llrSIPKhkcEe2dcFTcFCr+4EDyEx0d2Jg/QucKiaYD9yfAS5
fKqeW+trF2CNHOnF9aMIW2PentWJLvj0nc4qbTGJ0KMepZtPd8G0Se3rPLsp
pBC7w1801wXRuAeN8enTSAxL+GOeZaYfVvose//NIlYN14Sv/u4C8q5Mg9ln
84hClPPLjr9dMCN9+qyRziKyDbskIcPSDTUfEnNu4ZaQj/VasiPbu2HWmlXv
0sVfSFzk8fcoTzfkjNSwXrRYQ6xBTOEZXzdwB9yXs475gyhs7S1eP9ANH9cu
iuuP/EPY6zlULgt1A+NA1KJu0BbSH7FWXibSDWU1Hzf9xFnRT+iM5l7Jbvge
JioR+YYNtakjAv5oN9R6Lt3XFeZEFSOam+QVu+GQ/m7Z1T3bUQ603CBJpRti
/zt5bUmRG+3feNsxodENfWt/c0cid6FFX56e00O6QX25YrKcdTeaEP4fIftU
N3zDvyuz+7oHtUWizTYNuuE9roit9fJelPOL++Uq026wO2VwOaboADp427qf
/2I3KLp9/3ErQwAt1jG2D7zcDXibGq38HEE04R86TLLtBoUfmljAwCHUrlbJ
5YRjN9zKCWlMNxBBlW9LTaa4dkNQ1OqNbTfEUC4dAa9pz25oHqs7eP+rOFpS
88/v9fVueLT+5bD4Pmm0em9+zFxQN9zsDM3NZMigTV7nH6qHdgOIfdrl1SqL
4hrWCqIimPzdcj74hCGPkgRyv3TGMOs/sGboIngcpfudI+1N7Ia4fRzekHQC
HW5dGbe9y8x/YF3z934ldCHAcNdcejc8N7iuI7pTBV3DLYiqZ3WD+W6F3ytl
qiiLxJOTUc+6wYfvIVU/Wh3dfkvPsDObycfRpPa2G5robuKszd7X3dBtcnan
Z4o2yn/koZ9tAbM+X/rx8yQEFYmAmLzCbvAy/k/CXwJDFY6lFaiVd0OakOnm
tTFdVC1W+0tkdTece7p0p9pPH0X7x4kddd3QGz+6HC94Gj2t9N84XzNTL8F3
7/UmDVGTJPU1m/ZuuDr3GcmgnUUthoZ35nV1Q0JB1hejhXOondod0Z893eAU
pRHof9IU9RkfPB1J7wbDod1d8q/M0EDtBJuOwW4YmPItL+S9iIalnfDjG+kG
vspls9KHFmjMD3q0zUQ3JDuJKHoilugdLCbz1Q+mHyXXeCU4rNC0R0cLZn8y
/bgTwzkvWKNP5vpqVZe64UfFo+gBVju04NmR8fY/TD0PVPA9N3NEi5aJv/ds
dcPnK5E72585oZVGoTtttuGhLKCFI5LVBW3IkRR9xYWHXVYf3D5Fu6Ida93K
szvxULt674S7qDtKPH/ztOoePPDKzybQBj1QWr6oTcR+PFwu/2DtWOuFTlrc
iN5zGA/89pZuO2Z90bn3hzKtxfHg2/eRfULMH/3F1vo2VxoP5zzfMQKdr6Ob
1n61M3J4UK6QYXOsvYFyFAsQVRTwEKQgQ/RXDER3bW8cC1fGw+6164ppDUHo
/ivev9vU8MD6y/c7yS8YleL5ImINeIixIRzMVghDj7m6K+fq4UFWriyD1yAc
VanZfXrGEA9J0XFsTrGRqM7eKmsVYzyE5zWpIb+iUD0vZ9/wC3hgFOR1VZ6K
QY0adka3WeChMkRIC/c6FjUX+Jyx2xoPo6HfFlSl4lHnVq7aHCc8LNtvV8EH
J6HewsU902542MN/2OyI2R30RoDN2ElvPHSyH7mJmKSgobhtv2/74WEg3TQv
0e8/NFq8kLvtBh7OUBtf9NmmokkhliK7g/Gg+3dsoSrzAZras6VkFYaHljdX
kaDJNDQ73Nx6OhYPP76t5qz1ZqLO79kifiTiQf3fDmu3S49QSUZJ7tRdPFhd
0J5rWMxCxzld2r/fx0P8gYSk6oInaL7KvtnJdDwIyVqYCUc+Qz2dm/dMPsLD
V+T1fnzAC1QuNUB14ikenh3P+Deln41+mCFHjL3CA+noxRbDB7mon2Dcq9E3
eGCjPsjY6HuFnjBU6Rh5j4dbys3RexVeowuB47PDn/DwKMStaux5PlqSm8E3
XMrUx3PPyJj0WzSQqK82VMH0j+Fzm2ftBaja5orNtxo8XFq6++Rj3Hu0yvpS
3mAzHjZY3st/v/wJDU3k6Bxox8Mv+7G56coiVOfz55/9XXho+jV5zJpWjG6O
uu3t78ED3q0z13J7Kdqwh1+dQcbDgdL5lF0mZWgM2mZLp+FBBQjc5fmfUT2f
m1G0ATxUp9bK5PBXoG3t1E7KGB74Fv+7x0Cr0aTVhLm+73ioM9/9+OifGvSs
pPq+vhlm/UghdJG+oNxm39XJ83hA2QY/3GyvR7sjHtn1LuPhU9wjjdi5BvS/
D4bRpN9MPLpIlDp3E3q+//dr4l885K3pSIyoN6O9qlbzhG0EmCkIXk7At6IZ
Ltv3E7gIMBZs5jSp3o5eelCpgd9JAKHl0eRtVR0of72nffduAkRui3dCzXEo
ffZgTNc+AnilNRvs5OhGnwh15uMECBB7LExkpReP2p651dV5iAAf1g7/9/hL
D/rtFWN/hyQBJu7or3OvkdBsUrJm+xEC+M5fLaUcJqNOW5oObUcJkGPAl1d3
qQ+VOD4d03qCAKb/JDbo2RR03ObJm5aTBJgb7083ZKGh+UlG3c3qBNBwvFyF
BNFRz/I/C03aBLj5+rQIC2s/OsNnq9WoR4Cl2x1zVs5f0Q+w80qDIQGIVAOM
rjWE+vnWxNafI8AWXPr699Ewqvj06tu68wQIE339qyhnBF3qOIT/cpEAmyUe
aT41o2jZr67F2ssEgBhDS+HJMTRI6jZ/rS0BvNvmdtdITKBrkYNXql0IcP2j
atovyne0ujAlrsqDAJ6aHyVJpj/QsAGdgsqrBFD1ONwt8G0a3VR7vlQewOTj
v+4JQYM5tMHVRKA8mABNSQNp+N0LaHTahvbnMAJ4PMjf5N65iLLP2ceXxhIA
Y5wrKVJYRqdOSmntSCKA3bjUXtKNFRR/a3rOIYUAzqMM9YSuVbSkvuhVWSoB
HoXL/LdH6zf6kCPYijuTANRVJd7m+jU09BzC4/iYid/mvh67wx/0yoNtTZ+f
EyBfOcX+PP8/VPZw6lGnfAKMlxqs2w9sobtcLIfL3xEgaiK2omWVBRbfCmfu
+kQAPJnw/AwvG1DnRs86lxJAdCdtREVjG1SrFGxWVBDA58UC40EgO7wIvVbK
U0sAw3C1xpstHBDboOrp0kAAab+haG45LjA2biLxdhKgYVD87XFVblBMS0pw
xTP9cOrsuuPQTjhAN9WuJhGgMusjI+UVD/w5fGBhN5UANfHj30/G7oZvLgN5
bv0EQMSmtv+u3wNNBTnWNd8I8CI5nlaG54M38x68fGMEEI/wsCif2Qv+YSvB
tTMEOP17R6Op3QGwaKw+tneBAKT2eJHZIn7Q5Ioe8VghQCN53mlA8CCwpfOc
27fBxO+qUmZ//BBM0slbnqw9UKTvYuzfLwxdIk/K6jh6wEvgSCQlWwQy3smI
ePP2QAhZIbwQxCFkYba3fm8PrMr+t9PQRALs1UoTDwj0gKr+s8/PvSVBpgkW
G0R74OBGgvouujRwb+fM55fqAXTyRien/BGYN+m28ZHtARu2yAPx92WhkmHV
IqDUw/xI87zz46PwTFT0lq9qD4wS0F+7seMQ7TZxvFmzB0Ts2o4NbyqA0eL1
R366PeAfpV8h6KYECuoaxi2ne4DaUlDW7KMM+8I3WYTO9cDd8tSaC7EnYXD7
Xe/Wiz0Q4+d+zmRYFRpMzUQPWfXA3rDB1ABZdXidIdDnb9cDtyyOm83EaICf
WB4i7NYDl73UWKtvaIO5u/fSda8eWCk8EyHNjYD6B8U37b49sEsQ+byrEgUW
jS97Am72QGB68BNOhVMwHh7b2hHaA2KRnzIuyetCZ/PZUJHIHnibtavZQ0UP
0s5TxzoTe+BkgXFRaaABBGc+yxJN6YFt+b9Sb3w4DXYDziZBqT2A1xsv3lox
BGmP+XKxxz0Q+dKcf73GCFpia28fe94DTr7Bf7fEjcE5O1lXI6cH2O5K7MQ/
NoEXDEnC+YIeOLGo9Ijb6QLo/FpIty3sgehwtlp5LTMY2Ftn7VHcA2a3Uu8u
HzaHg8ZWExFVPXBoaWPvbS4LKPeUfn/nSw+o7Bv6ach7CS7FL/k/bOwB0dHv
MhRxS0irS/lX2NkD/HKHRlKuW4HigHVTFZ7pn/fNE8sfraHnt0xSK6kHwqMy
uzP/2sAupcZ9Xxk9cHixsdy01R7emfzHmPraA8vFb/379a7AWW/blysjPaDE
LxJn4O0ICa9W5XdN9wBniRYVL+AMUg1NCwJzzNh+rJW+4QxNg/fLJZd6YNjo
h+GHORfYOiCvq/2nBwJ+7XTIXHKDF8q/uQw3e6D7SHzIe04PeHFk1F2OlQiv
ZB/du3vEE3T0Px1T5SBCa5reyvgDb7jbm7lbm4sId5TqJO4MXoV+x9tL2A4i
9M7jfMzUfOFW+NlKYx4imOOioxd2+UPHTsWn5ruJcManMSy21x8OPuGPsOIj
gpC2hDtHznUoLx/Tcz1AhIvOhvttbAKAwwAn4y1AhGGBReU1g0CwIBft8Bdk
5veM1xDWCYKl+fCesMNEsKjWTKk8GwynIlxLokWJkLX+slvYOQRSd53LTBQn
gmImt/hQwi04IXfQNl2aCD8kOKcTf4eBj3PJ5LvjRLggpi/h3BQFNQtZnUUn
iEB+XHLwXWI0cEdGfihXIsJTsn2j76UYKHhqfKNJlQgudu+eNO+MgzW5k5c6
1IkQJnLeZOdqHJypFNQgaBKBLSf1u+ZUPEz2TW4wECKIEFJVB34mgqoLfngI
iDCupesiwpoMcYulzROniGCVVZH7Q/QOSPBGJy8aECEjmX5qNDoFrhgeOrDD
lAix+lcvOC2lQsPILkzrAhFMJINcdzU+ALHbm95XzYkgP319aDArDUaLRhrw
lkR4fdSYetUtA3TPkWc2rYjgeSGke9EmE15NtPAr2jL1GNo0P2b7EFyF3vqk
XWHyJTHPcTM8C1rLHj9qdmLqM8Bu5p39GGTO321acSGCaLLiq689T+B7rN/B
y55EuDTQHKJh+Ry8f6q0HLpOhGxvzjM1iTmAS5SZNw4ggkaowLlI81w4KnFQ
KCKIiT9nZqhM+hXMWv69NnyLCInsmkK1k3lgsjj7hO82ER5dZwhrUF7Dx7vf
WnUjiMBaLHk/FJ8P1xoaD72OIcJLO7arbYNvgWhTepoaRwSFNHbeBysFoLia
d50rkQjFNSZVeQLvYUkuqd3rLhGaY143nIsuZJ4rpgEKGURo77864xlcDH3H
sRdXHjL5+ff0VJxaCah2KHWmZhFBXOXbwP6NEvj1b7/o8jMiBBAfpGTnlMHl
R5xGUi+Z9ZnyDkpHfYZKpbXASzlEuM+m8VvFoxxuuQ/gKl4z613sdjl0oRL6
WfCrU2+I4Bub4nPPvAq0ntaJCb0jgrNWRWudQzX868m5efsjEbhUt4QLM2sh
QtNT4lQFk49yvGRhcwMMka1NblQR4ZfH39IP/o2A+Z0LeVVDBAHXyaA1ySZg
faVA4GggwrFIgzDdF83gjIitqzURoe76nW3v3VqgicYn5dlChHSyibmKSivE
7Vq9hesgwsQvjt6U720wnj+Z9xdHhOoH0hdI3e1gcIrecwxPBD/KtKZ4dQdw
3qyRvk8igsPTn9++FuIgeSiadLGfCAs+fWlrLMw50EpoCR1k9iftYduB/US4
/f5QZc43Itg7rpPSPxDBP/jzi/lRZvzfvxddsyTwtmdL459g+m+uzpSQ0Quu
eufjke9EiL4w4WOoSwar3T+u3p0hAg7rc1D/2Afmq6pXSn4y83wnOG/4UMB4
IMacMU8EI9sZDboSFeCNsOaRFSKsz1MzAwg0kIELnM3/iNDjs/8+q9UAiEk/
X/+xSYTHT2c2ZI0HQWjn9OweVhJsxH6W7jT8Cjy0WLIDBwkoUrhAVcshWPGr
yP7DQwLay7yjz6dHYM6CPUN8DwkuyOWumsaPwpSWWeKZvSQYC8hZS5YagwHO
Gd+H/CToPGgvy319HJpeiGgri5Jgf95B5ILBd6iNu6pgLU4CRlnosBvXFJR7
V4pHSZIg0ob4YpYwBQVq5tsJR0gA+fHKnX7TkEqIp3gpkiBfLtdNffUn3Cnr
7UhVJsHfDufCc5NzEPdEtLZChQShzWrdvV/nIdi9KpdDkwRiR/JxjgsL4LA5
ey3nFAn2ampF/RJeBqtxTZcOPRL8e+aQqFi8zDx3EyznDUjQeHDeTfHsChg8
FEMQIxLcDzvOwMWtwjEFC26GOQmK//vgd+PYGsjsz9nYsmDiNby8OjK8BmJ/
fi7IXCYBy4EI1sLH67CvLZEWaEuCU9FXMnIP/oU/9jV5e1xJUHLzg6+86SaY
fbqbvdedBO8uuStRD27BWxa7Z/s9SaCm7cFP/s68Zb/6l37QhwT1qvG7ozpZ
sKIpJFYskMmnq4TG8n02jFOLN1LiJgmkiaflfLm2YfZ3v4VKhZDA9SoWej56
G8atEHlD9jYJXreen/K5zY65BTQ4KcaR4LFdEvf3VE6stiXVXjmBBDtY3h6L
EubC9vI7WaskkYB/xFOy4R0X1lDJaqaRQoLpOtqkec92TGhTF8MySKC7eeNm
huZOjJjUKnIhjwRboRyTLsZ7sCP9mULm+SSofr7mIFiwB4s46s5v8ZYEQs9O
L1lz8WFHCZy8Vh9I4DXWfSGpgw9L2Hdm40oZCQrtb21N2e/DtF/gBq61kOAI
Zc5qmsqPpc0/oV1vI8ECKczojokANoVdJQd0kID3MW9Lf6sA9nBsZ1dwNwk6
9olsT685iC3ImlRH9pHAiZY2H10jhOWX9mTdH2fi/7dNaYlHFOPlez9YO0mC
+GHNu04fRLGbfgli01NMf58xGvOWEcMM5ZC3+j9JoO1irDzeKYZNvXhXsb5K
Auvfo4t9whKY3J14qgtXL2gJf9h6tCiFfXDU3q8h3wu/cd0uMoZHsf11/FZu
x3qBQ4i6qlV6FLt9aOlpmkIvCNUZdrKKHcOMqW8lfyr3AlfitQPpf49hP8/x
n8zV7gXT32PtatUKmIL6otkuk17g/fDS+6KsElbM8+b+8LVeeO7d9MqtXwW7
SeUYnLreC60NSVkEPlVM56Wr7GJALxx7zt0ie1YVa1OUaGQN6YWkQx+xVxWq
WP/F50sSUb2gLniI2yxdDWN7kn7JLbUXqozrqqN1NbB256Uc37Re2LfjU4FD
sAaWctRsLoh57kxtztWtvNfA+L/wJiZk9cLWcNUmsl8TOzqcXPkmuxem+U+e
Hx7WxCxkog5NF/XCtVdOxw08tDHB+W8eSyW9MHBCnX/7Q23sWwVS9qesFywy
xWPPtWhjnmf/Gu+sYuLx/HfhtKgOFu5zM+JYYy9sIxqJfCToYLqqFJxKcy/k
SbY6CqzrYNs3Twogrb0Q8mKxelICwdLuL34y6ewF7x8dUu8DESy/xGfEj9QL
l+hBAkF7UOxqWNfxYHIvZP45LValimKK+vKhkZReGHKtUTtng2LVlO97Uxm9
oLDvladpDooR1pz1i0d6QXktsjdeBrD0xsbUqrFeiBoUHJ8zAMzqjtjXxgnm
uhZZ/IErYKOHvgX1/uiFUmFae/BLwH6j1m+WF3vBgdd2vJ0Dwywv7qtdXO6F
8j5hlH0vhpV54Inzq71gZqg5RD+MYf6pp/7MrDPXR1buGKpgGCHvL+/03174
79f68hCKYceqPktObfSCfpqVE89ZDJsakTMZZyUDOWPLWcoOw07/GnMa3UaG
3Xt6H+9yw7A87hc3hznI8HJaWyjRF8PYRK3ufuMiA9Xq1rn0IAxzOrk3e3AH
Gb4fLn6uGI5hDYbdZf07yZAnwXHHIQ7DROwSOuk8ZMgn5KQJ38Ww/rg/S318
ZDiePKdg+AjDNB6XcZH3kaEwKG+l5BmGPSz0EyYdIMPp1y1ahTkYttIoq9Qj
QIYhee9i1XwMu0gdNcALkiH96D8+43cYVjL9zKbrEBlOXFQRXSjEsD1bltc6
D5Phx6bka/FiDPPbxxfXLkqGmcMat4ZLMaz7SFdWqzgZQtu1Q4+VY5i8Tnxh
syQZ/iRYp3JUYljSBWhqlCaDgMOhwqtVGDbpuk6tP0KGD+FeXQ7VGGZwq3Tm
ixwZrpQnzn9jxnn3fFlqj5JhOYfvyCwzZss9cqD6OBnqE1aTEpixY/mIXOUJ
MvT/8lX9yMxXh3uKlisx+Tv255ILcz/hoUsXy06SQUb20uF8Zj2hy7s9S1TJ
EHz3avvNMgyjc+FuF6mT4R5ceExh4lEXjnvwUZMM176eGGn6yORLEc3/oE2G
qVHdX+h7Jl/6a9XvEDKklNVpGL3BMHPrkp63QIYG/1a+iVwMK/L1Gc8/RYaA
RxbLu19gGG+MzHqeHhkc7yhbdWVhmM/DYZ5XBmTY/NHfLJCOYbh3TyRyDMlg
SfZqWk3BMNl6C/WXZ8lwcVvClFsChiWQeY2fn2PyP36W7BmJYePfOxyfmpBh
MPmo7FYwhuXsQe48MiODgePFnikPDGOR/v0i8yIZep28MpErGOagWVyafokM
Yi85CmUtMUzIWfrrfWsyHNa32t3KHAUhN4cW79mSwdw+bFeIBoZR7zzmTLEn
w4Z3fX3LcQxLK+VRTHIig/MuyS0FAQxbaG/XT3AhA5boHGK6E8NMB6Ot49zI
wNIWuk1gE7CdHL9iorzIQAy4Q2nBARZn+Y0Scp0M82FHBPVtAVu5+Uo5N4DJ
P1t1305twFwfed7vCiJDoOusNKsQYHr0pTMioUz8FJJQNAXF2Gy4aptjmP5X
4QtQ0kOxSHvFXN4MMmQEGApc/qeDzYWvbqo/JIN8bevDFKIO5vCi2tYpiww/
pbSeHsnTwdAh/QNlz8jw8IRXzPOzOtg/R+sk69dk4Nm+3Wj1njYW6hrjl1dO
Br3y65LtW5rYdJxhF76SDFvsvcfkuzUxm9e7ZH9Xk6HxmitRKUsT05x8OHK2
nunHMEMGekITW/N4bzHfTobubUOS9dYaWNDVPi0tBhk878Tfa3ulhvnfkOEi
/iWD1vjpGRGZk5jOpp9P3wYZuGeuch1dUsZ23Kkg0beYfN/+W2Ncp4zl5px5
NrKtD2amcqv7LZUxCtFbaXlnHzQIfIl1SVbCtE58suUX7gPpwwNlqrMnMM6a
3w1CIn3w0N8kQjL5BEY+jcmIivWBIzvPx2iZE5iPA2nhiFQfxFCaCp47K2Av
7y3Hax5jfv8yXr5s+BjGPqteZKfTB3svG/Dt/y2HEYOjDjihzP1ruDXuPpPD
nm/rDHXD+mDIRTY8V1cOUztkY+Cn3wd3/z62rE6VxbyMbvdHGvfBgl2KSafK
EYzwtoH9lV0ftNW90154LoU9Udnh/cahD07vaHpmZCqFeTSY9bx37INCa9N7
V7YkMRb66OMy1z6YLdPk+OIiiSlzcZxo8+kDHanP+faqEtgjt7PWP273wZxs
i4HvOnPebzzjFIzsg1e9VtcI7qKYReZC6ZnoPngrVrJrjSKC7Wl9xPs2vg+4
KWljr6oOY0lSk83u//VBgPorvQsPD2EhYzEK4y/74BLDd59AngBmGUYd2Jfb
B6lYUMez4wKYyj75ZL28PvAdBDytkh9b0CWN5b7tA0Hl+3WufQcwr1zRx07F
fRBuE5aUKbofs3Gq3TbUxPx+o51vbBsfprG+u5i3tQ/+4JInI97swfgfuDig
7X1wsNNrIYd5v+pt4K563sW8929dcBhS240ZiVn72fX1AWVQsO9O5i5MtvLD
oRRqH9jS9zT4ruzEOC+wdNbQ+yDUUWtEynIn1hT5RvLQ1z6wl/pzYlGcG9Me
WqUzJvqg6VNRn2w/FyYUfDZhxxQz38zRuj5TLmyN9/lJzek+cDnT6sbfxomV
ofr/Zc31geRa+B+tWg7s2Is0vcu/+8BiwO6qbNs2TNj+xMe+7RQoqKykJZ5l
wdKxb5J/uClgKLglr9+1BdxS9x6L8lBA83rw0m2uLVifno7z5qOA6PyV6Pq7
G0ANybdlEaIAWwM6O9X4B0zsLpGkhSlwqkmm9uXBP9AC7IbnRChM/GPU8Rvr
UMLprPxQgrlft8D1YaU1uJ9xeMexoxSwYtmmsYe+Cpwh3RFmxylwrmJXy/uz
qxBhG7Zy8wQF6uMf6bjVrYCPBGOo8SQFqoqHev8WLcOZoozyyzoUeK4u6aZX
tQj16XrHwlEKOHgybK11F0EteCknF6PAo5K3R6UICyCNXrj3U58CslLBAcYD
88DWvdM11oQCjZKWOTsezsKtT9WMt+cpUPPtOr6XOAMLaV7nCWYU2PY4wlh/
zwwMWbdrCVpSYOPaj8GWZz+g9nsM3ycHCpSc9r7W/WMSTnYpJfY5UmCcuuzk
bjgJ7z4O/1t3psDMdi+j9bcTkBWETul7UEA3v6atIngcgrb9qeu/RgGC+p9D
nqdGYXbyrQrLDQo8Tit3y6odAVfc5XfSgRS4plZUIaU9AuYPPmf6h1Dg+Jlc
/+26w6Aget2HM5oCP7/6zwpOD8JrNrHRo7HM/8qKnAirvYMgPEm4bBZPgcAv
aZ81sQHYWXhM71kyBW6aGnx3+cBg/v9NCSqnUaB8fCVwpYkKtclCWcoZFDDy
835wXYwKqXRj/pMPKTAilhrJHkMBjZvFe1WeUKDh0VMbPrM+SC4O3amWS4FP
fdOoizDzXsVSmKyWR4HmXzK2slkkUD4/xKWeT4EzXSQVKwES9M/qsWu8o8B/
hilZBaJEkJfl2dAsoUBSqbYz24du2LwJYVplFFAsbQjcTe2C3tbr61rlFLiI
19qG4+iCUBfqqnY1BTbVu642BHVC14uXc0gTBb7zOxpKZbRB9k+SD9pCAd+j
r725p1ohUId9Bm2jgH+LybFsrBWE+z2/A465fsJF1WOrGXwOKA+f6qWA3hvG
ObuiRuaAcnXQ7aPAynqZUJlMI+wvfTioS6XA1hW7rLHsBqi98Jeu108B75tG
rESsHnhSWkgGoxSQP2YSM59WA6P9v86fHqdApWjo9tWKaiiXkyOcnqQAbee9
KGSsChza7+EMpykQuyffZPlcJXxku9x8donpX0n5D2+dPkOMWfIpoxUmn752
t4PKysAyu6be6BcF7vL+ELbYVQabiFjtuT9MPgsDpetwJdCbYq5l/I+pj2O3
ApdSCeQPxFUab1JATWpA7+vTYjC99aPMhI0KfFYJMmURRSDRceikKTsVhiWq
xRdnP8EvftNiU04qOCkX38gd/wgvykoKz3NTofJ3jPezmQ8wPx+Wb7aXCtvJ
2rd2mBdAn1GVT/h+KuwNlHVSvfoWql//Ui7gp4Lapnbt9pQ3kGB7vZ7lEBW6
muMJVWOvwaf8Y/yxw1R44nMvVFroNZjxzZ6zEqXC4xzz6xaX80C43Z3+SZIK
rg8HOmUncoFNIu/FgDQVFoRP7PJUzYXvt0dcuWSZcYXf2Rd3c6BE2W7R4RgV
XjInv/LZbDjzwoybV5UKcY0ix05sfwYK6/8RNdWpMNfzpkFv8wnss+h+6KZJ
Bb2OzMD0jcfwbYeh5BeECjGLfB8q+LOgxTXuxxRQgTLXYPr3xCN4V9/4ab8u
Ffivl560MnsIQUE6Oj6nqTDx1z7b/H0G2BBvsWWdoYLLzuPB18bSATta0dFs
RIXrZoIH8iTSYdeI0qVD56mwVdBY6PH5AeQaH/HDXaYCTiNtV7jxf5D0xlXl
lzUVhKqaAybE74EvW+4fcTsqPNt6syDGlgIalcKJtxyp0Fm5x/vFSDKI7LMx
ee1MBflrOBGF4SRg93u0j+RKBYmUi8rHphKhR3JvtqwXFT7yHg0/ti8ByiLO
u1tcZfJr9zTtgWo8PGGkHIvypUJev+ZLecc4cL/PVUW7ToWzt7N76N0x8O/P
P1JCKBVe/bvSnrgeCaOXtLJKblMBT1dR/VASAe1FwQ7fIqgwH69YLBcSDmnu
S9OqsVQg/Uh3CpQJg5DGE8VO8VQg11we8OENBXth3+B7iVTIvKtduZ/1Fsj2
ft82cZcKWpHpYXPswcB7XBq35z8qcPruMHE/cBOWE51TdVKpoDEveETwRBDU
IV+FMzKo0Hr1+ejg7QC4VNCrqvecCreFa12Ub/lD1rV0dqOXVDhouexn/OEa
9KtakC/kUMFY80rm8Rt+4NhE8Xd4TYXs5jIWDTEfyE16CG5vqHCHqBT+iOsq
TJhe5vUpoIJl2/PPdute4D1Af3+rkAqfjETevfnjAR9yHodGfaKC3PBSzO0d
HjDvYXM2sZgKqjPbpS6Ju0PgysBkxmcq6CctTRC8XSGCZ0i86AsVEpFSfI6d
EzSQXy6U1zP9dOdHLPreEbY9caz/0kgFK8rviCcsjpAkM2rX1UqFEU+1xpPh
9oCbzT3a206Ft9kTYf+Z2AFPqcsfeiezH86I2NyXs4U0mHg0iafC76aY7VQ2
a+jjyHf/2UOFL1a2J023LoNAt7vqCokKdiGD/4gcl+GZ1VQvK5UKN/PPlEWd
uAT512d4Dn+jAuupBH+WWTOYUv8wKDlMhapvpbrHT5jB0U2f9/KjVOZ5NL/Y
fusCFN2ZO6MxSYUlJZdbNmdMYenCJwGYYvp/cZ/lKKcJqAr4TxpMU6FhVHJS
vvccVL9ajL04R4Wj5onK/PfOwj+vEnObBSqYBYjW94SdAVAMEHdaokK996pl
cJAhtNSu1Pn9okJIRVnRdKIBECi/15M3qTA6wcP7RkQX9jyr7EhlocGLf5//
W7c+BRedbz16xEYD89FnqUbPMaDP/VF5zUmDK5Klk7ZBKAh9rtn2YTsN2J+6
91rIImAfdru3hJsGh9zeFS1NacMo1+a1Bl4a5EdwebA80AQpQh3avocGrGNF
mF+wBnhkRPIQ9tLgBAhV3vZSh1kx1vcD/DTwjJzOeuenCr802Sd/idDAZy34
TdSiEvSeEwtfFqOB7nmricljSlBor7N/QYIG/p+Hz7n4K4JrdKDuDxkaENsY
OyuFFQBLT2VMyNIgVrNPNJx4DIRff/AflafBObb3y5xpR4HcMf5iQIEGfHgV
GdCRg4/9LGp0RRos5lW9mpCUhTuzwvg+ZRpwDzQ1YAJHQHfPpb94NRoIUK+d
1hKVhqLLrZcbUBp8OZ4bqfZWHFK8RuZqMRpc2xT4ZTsiBh5hG/FVujTYQRVM
nJMQA5GXqmUlp2nw6N7L0q2ww/CnyOzcpzM0kKlfxpccFwZqk+/oeyMa/Hh+
hfDupxDcm3y957UpDWyG7XYIPjwInmuNb3Iu0MD2d4d3ULgA6HN/Q1+Y0yC9
7Ub6qD8//DvO7/vIkgbyc+GXft3aD3RQZs+wokHiMtL/4b99UGpm+jTVhgYM
pZoX6YV7wTsooTPZgQZGlB2Y/nY+OJ2Y65jgSIMb7z5NntLbA+KP637HONPg
NudhkY88u4Fe+0v6tjsNFE+qZn423gVlhL1fQjxpcMvrWa/6tp2QOqxgEeRN
Ay83jTLljh1gyO4R4+dHA1HBay0yYVwgwR8reNWfBh52T8rWPThh88jLIo8b
NHDey26+5sgB5edo3xxv0uBBmkXy1aBtkGa/HGQfQgPCTOf05H028L22m8cm
lAZnq86LPi1jBal0Q+2LETRQ+PmpZlGIBVheu/Sej6LBNlHn0piKTXSgPNLL
OIYGU08JlYZGG2haf8UjgwQauAYhFhbZf1C/WbKCbhJTf78hhrrzOmq0Od+K
3qFB6YSxT4jyGsoqIbui/h8N7uGvqD76u4oOntS/q5JKg58mk8Jnl1fQSgNH
CaU0GlxKU/m5+WsZ9ffKuiD/kAYaV3nDHcWWUOOwsu8yWTS4uaPIdLfBInrk
HjFC8gkNSsbyqtsDFtBvRdsLhV/Q4Jnly1uyAz/RLsKJFP1sGrgjIW+izGbR
ylnLqz65TP/bhBHDB6bRNNnXcrX5NAioCP/5VmYKjTzdvX38LZM/GV/nfZOT
qI/r8ved72kQ2jPe/+TzBGqYfSrf9hMNJJ5Tx6eix1CVOs/42GIaGLrM3NIK
H0UlBu+7vi+lwfBwv2Fd/Aj6T+CbxN8KGkx6eYq+CB5Cf6hysElW0yD3cGLf
BeJXlHrx2IhRLQ1er4QdzkIH0aL7oS+fNDD92uP66dNlBvq8MCeiqYkGbZce
XYlnoaN3ujrsp1toEJddYbReTUVduQSEtTqZfrbw1zrt1IeaSaN/nbpocCZ0
Fhdxjoyiem79yXga3DXfKt+n34sKRpZmMUhMPZOz/cPsiSjn8/5g1j4aiDsN
TC6sE9CVatbLclQatHz9PmB0AY8Sfp0/cKufBiGfFE7fRHFozf7glexBJh+F
Ks8F+jrQt8ovyB3faIDvPXW+4nY7GuM3++DgGA18z7/+Lr6tFb2Wsu86NkGD
09KmjyWGmlG7d1oXPL/T4FSsl0gKrglVm0zirZyhQdPQvMbt7gZUkr3o59BP
GvBMcssKNtejeyRo3VwLNIiIudSgyFmHzthL3728wjwvyE4xJ3qrUXqYsXfk
LxqoGyc4lVlVoW2PA86+WWOeXxEe27yXK9BsSiPX73802J9Eoeo5fUbvLU9N
imzRoCOzSCVYuQwN5dvTdpqVDt42ZR5r+0pRCxOHuIccdBiuYUtNYC9GT12N
d6njooO7WUjFFl8RqpD8QXdyBx0Iu38e0LH+iG5v/cOixksH/twWpcM879HV
UfFh+z10sBw5e0E5uQAdZTlbH7+XDncNu+2vC71Fa3UehVP46fDphofoVvBr
tMCmzm7jIB122xyc0tLNQx+GTGhLH6ID9YmU7a3Dr1D/spN/AkXpwFGy4O+5
LQe177VhPBOng/mq++uru7JRo4XoyhZJOtQWCPySP/0ClT5GvLlflg68/GUb
c7NPUP/PoQ4C8nSI+xpz+Hz4Y7QalT4tdIwOj1/8tewWy0JNzUIPiCnSweWE
uKXx80w0q19qQ0KZDlKTfOxxgRnoqEvPuLQKHdZyKGGnbNPRmzelyo5q0KHr
c1GLgsUDtGGL8FRBiw6jzy0yvrumotzJt2KVdOigNT0S7Md+H33xlGCujtHh
V5b1HpGGu+iU1C0tLV06yMl4puLQO6jyR0kJRJ8ODXte5g6QktC2hpBF3TNM
vhYGm9mVEtA9RpIMAyM6pIy3h8n/jUNtyPiGM8Z0OIL9IxIosejchESq6QU6
7Dl6I0K5KhrVuIYPNjOng1cIOcSuIQqNWQu+YmFBh5v+D/8rKYhE+XfiFWys
6FD40kFC8PRt1DEjmN/ehg4j/oHJy+Wh6LvDEptX7OiQlXH5izFyC0UVg/Fu
jnT4+6iEzplwE02qEv/s6UyHuW9375idDkJ7dbufXXWlw1PSvOJPgUDU/ZK4
z3VPOrxXaJkLnbmOFn3ruhjoTYfilltna2f80T8eN7WDfehgm77rO235Gvpf
aBd3uD8dJi3MT1iE+qD0bTeXIm/QoSeEyvV5xBuVuCfWHxNIBz3B43YhV7zQ
8pdBBUkhdDBOsDjt+9gdZZETe3A3lIl3XsrU66IbalSCC/nvNh0Mm6wkbUVd
0W8tomcyougQZv7T8sIPJ1TWFHfiUQwdvl2KD7074YjeoAUKPImjQ87chPWl
4Sso53Tn5MskOtxY8U7gsLVDLwQEEnLvMKeeyTKa9cUGffJPpPx1Ch2Qr91f
ldWtUYXdgfHvU5n6eXB+vedtiYZkifh+TGPieWM7tSl+CW0S77QozmD6hV02
lDZzEbVUEZGqyKLD/f+O1LeWmKHZXzp2Vj+hw6n9/a4sHy+g06cDlmuf0cEx
+4Yk9dp5NMK6o6kpmw4P1DoJ8OMc2jF6411rLh16/yVPMs4ZoXt9Dqd15NHh
hPrwpa+tZ9A3ETecCG+Z/FJNtbf9NUDZ9ss++PeODkVvJBVEHuujDgVfG+QL
mf22SrnAbqLH7If0BatPTD8EHvzsdkAXPdB3RiyxmA4XVTrkORcx5vzZPP+5
lA47jsgiIV8A7d4sjRz7TAcTg1C+oWoEjZUTHYJqZn/Scqqj9mmh3+r6eP1q
mf0nZGe67q2BalncQZ/V0WHmrT9hfFANffgD/HANdFjUGb+b76GKLkasPl9r
okOm71fP6h0qqPH+93iZVjr0/Xl3tbRRGX1b4Lhh0c7Uj9vVXes/JfRKX5dd
cRcdpkh1v1frFdBqr+iUITyzXy30zxJbj6H8W2q1PEQ6LLEKXkmdkUdvZMzO
aPfSIYBWEYOekEPxcrmHvPuY/SWZa8t6/wgqW3/5XBaVDg+DjsgI75BB4yx4
wtrodNDnt2X/+VQK1Y4M6Zf4SgcGp11aPocE+nC/ArfZEB1+8hUfb2GIoUsF
Y5qRI3QgTfr+3IgWRU3hsVfhGB2cqO/+GAUeRgv6TB8PTNCBHjg/q5R0CGX3
Zu/cMUWHRg9tyKoRRB23qtbUp+ngQR52i9t1EBWQl7bKmKND4OcQuZyt/eiN
+v7EpgU68GQuO954sQ8lWKRWLCwx++Prgg6XxV5Uftrgu8gqHVxjh4rnRfjQ
+Mi//Ca/6RDqt2ci7+9udHh/8emwdWa9+6XEad94UJ137jcL/tKBu8rPhX9i
J7rcR6JwsDDALig54rfZdtTUO5FDhY0BtO67yffKONF3WzqqzuwMGPCNJ+1X
5kA5M5dcUzkZkKXgXtTXsQ11kn+bUbedAY63iLsVg9nQ2nr7llluBkT9Lat6
pc2KHry0b0WIhwFJk++aWvazoD2REReD+Rjwa1ts/Zutv4j8AZXY1/sYQNKk
qBSL/EES3v0oIR9gwKP59Elv+zVkFF6Osh5kwIaLRnZH1S8EoVjsVRRiwL/e
YNshpVUky5tb10GYAc+nHJTHmpeRla366ykiDLAW0Lgu7beEvJc/SpqSYECV
kNJ/ShwLCGfDMIuANAN4OuUCsG8/EedLDxUNjjDAX+7hkyO0GaRu+pxjgBwD
NFMyFj8s/UAEo1hTc44y4IiWVkKKwhQSeKCivuc4A4odNrLeJE0ixHc+8xsn
mHxM/TzNtjWOJFJopjYqDNBg8T0pqzmKYNQ9iS5qDIhbQgL38o4ga9Sz9T4a
DNhinMl5MzOEFNFifgdpMYBFN0w07ttXxJNecyJShwGxbYWCd5YGEDHGikcS
yoDXWj5n30v3IwzG8ewHGANa6vPd1oPoiNHAyz15+gzo1SWO/HanIGyD9DOF
pxnwUDxzpy17H1IzyBddfoYBlZ17/Ewqe5HAr0ZV9UYMcBob0nWPJiHHvsUu
dhgz4Ns/yjdzByIy/q1WrteU+T5/eu27pwTk+dCq08AF5np+Hi7heTfCO+LR
+9OCAa0FGXdkWDuRtpFs7t+WDFCq8cyed2hHIkcZuizWDNh0K415SGtFNMb2
hu2wZcDxzpdyXl4tyMLYudK99gxAItn9iHubkbfjcTOHrjD13d7mYdrbiDhO
fJGUdmLAXpntE7fzGxDS5IkMdTcGFHy8gUbv/oLc+e7ZjXkwoDNofW5SqgbR
ncphN/Ji6mPFKyZqU4X8merXuXiVAU9596VIFFYgJT/2Bdn5MkAe332VW7gc
8Z42LnS7xoAR9j/BvK/LEMmZ+Am/68z8n9J3xJ4uRTJmf1+KDmLyH7LRld5d
hBj/VPzvTjADDPDha0V2nxCOOa+29FsMeN+uYF1hUIjUzeVuPgtj6t9C+k40
e4/cnB9Qyw9nwG0cbaQ6ogBRWNh/7VMks76XMrKXcW+Q7wsmbyqjGfDY4MFa
gXI+YrVUL9AVz4AOhXhTSfNXyJ7ltfN9icz8KxbJMxy5SOeyUtLXZAYQfkXx
vevJRmJWvBsm7zKgOWmqc9T2JaK1+mpt/h4DLE8eKaOiz5Gl1UHF9fsMAC9F
808GT5F3vw54saUx+UoePnjA7zFyaC2Rsf8hA1bO36v+LvQQ6Vtr4BPJYuIX
DJK3e5qBpKyvnz3yhAGl3WkJnqrpiP4f5RjFZwwYlcmrcPj+APn352q15gtm
v8lwu3/4lIqU/c1b0s1mwNHAtGslgvcR339f5Y1zGeCxbcOC+28K8m3j/FOH
fAYUCViPZsomIw83k8gebxnQxieyS8I/ETm/1bjz+jvmfi0c6laUeGQ7y1+9
0A8M0BPv5z9lGYc0sKjcjv3I7LcnZ49yLsYgIay+ZSlFDFiWjs6ffxWNKLHl
z2aWMP1snhDk7BuF5G47aP+2nAHV3y7OrYXdRlbOf7B/U8kAMz0+Fqf/QhGD
Z5hDfjUDbraY95Y0hiAPp/ocXtcy4O1BVpvWfcHIlIrX/xoqE3cq1y6MS5Gx
NFGGDpFKJVOvofdpiegyZOjsyDZPOyHJtGXcplJSMpw6yVTy7SQ+mlwyRzkq
XxR5n40XIQoJxZHh23/Auta679+613ItrKUg+NkIZMSHIoO4Jdd79RT0Lg3f
0ZMIQSnvbrjdbeT7xzbDU6VBSJ1V5Z7/ioIUrWTmVv1AxKmw8shr4e9f8X7W
pkMBqH150CO3lYIrqICloOaPdliwPXPeUhD9yaPsNemLQm6Ke91po8AvQsT7
aaAPevU5zyv7PQVCz5VUyl+ykIyGjvftDgreZUhfKNb2RlUtTqxbXRQoRE6W
LXt4IIktP1g3uylwTLKp6dnujpzdk07/hSnQ2nTMJXTAFZU+2uaT1UNBwckR
ScNSZySw8Mgns4+Ca2yQYRY4ohOmRmcy+imIPKDlolXpgO6ld51JH6TgsDxT
3nPKHpnuXfFNG+Hnvdx6cPkFA91iZ/hdH+XrtV3Id7H4E4293OV/7SsFGpwr
sb9nbJGBVLV/6jgFoQcmipSe2KCrTjZnr07y/8fWLM+Qzdaojzt0NmWKgnWZ
k2npY5ZI42d4wJVpCpjcmefdQ+boQ2rBueRfFBitcS8uNz6GVPDBwEvzFBiO
V9jcvmuCwlRbAy8u8OevOS5mu/0oaglyOZ+0SMFC266f9BMjJFs3fT5xmQL2
tv6OIK8jyF/8UlCCAIby1w3vGXsNUY29XHC8IIbMCb2xnvWHkduUcQhHGMPx
1uL5z/P6qILsDokVwWBfH5PnrKyHVl/2D40RwxCb5l2fEkAgRqdAWLQEhvYI
DfaBbh1UpJQVFrUOg8ODzEYNF200f3YPO1IK8+/9qYnsZU1kVlXDjtiIQVv/
24685xpo/MRIeLg0hjEreJBI7UOH8yIusLdiEBNjYO4bNXT927qIMFkMHuLS
UzWDu1G/7r2IUHkMlbMjPB35XUgrUTcyZDsG3c59Jg9Dd6LE928igxUxNL2S
TB4dV0ad8m5RQTv4+gJFv+DYHSj8aXJ0oCoGNc1/x7MG/0CtqxRizu3GEN2u
8rnglgKSsyqPCVDDoNkaydIIl0P+t01iz+7D8AQ0F5kx21DtCBXrr46h0yfL
IoArg6S0Azh+GhjK3qgUjcxsQe6xgnG+WhhubKVb/V02ozVb98b7EBhyOmKL
NiRvQKcDW1vT9TDY9uvsx7ulUGvLmU01BhiEM/xWkv+RRPuVRJ2+kBjkThwI
igkWR2kXuIUbAENH+nhEg4Uommk/NnHoCAbkEHa9xWotslP7cpBljOFIbrOT
1QUhJM/b+brqGJ+P0sTwnJ4gitVuXj9shqHAUsu6qkUADaZ4nVpvyfcj4+1H
t6/LpMnQ6gJ9K359PUvSPHyR5JL3xjxt+Pyy27hyugukeJaR1rUTGFyq97hJ
Kc+TARMDEZUMDPP29owSvV+kTq6ihKQDX3+Nw4Dex2ny5q86hq4jhscFu9F5
xg9ywco1x92Z398n73Lp8HfS+T/LwymuGMyn9qSpMifI+pUc9WfuGCr8RoXn
Vn0jlU8hdr8nhsnQThslapS8+N+eOjEWhkbvbOufvBHS0l3O1tWXzyf1uS7Y
fyY3bmQOPg7AMOG0ryHXsZ/sbrwVLBKMgd3I7hnj8sjc4E9rnNkYCi1agllu
n0gvFem/yiP5fCjtpfd1H0i1TsYuYQ4Gw6x2yZpH78mppIxKZiKGXro9W2bP
W/IZ0WFWloyBY7fOqvLlazLqixRvdSqfj9Pej39INJEiZteWSrIwnAja+dKE
U01mFosr2uVi+PlZ7mCXwRNyTvChDycfw+9e1WHftAqS6WheXnwXQ8+Do4+f
iJSTihKXjVaK+HyFPjiOl5SQJWeFvbllGFIPqzorWRSSzRqrihfqMQx0dkQ+
JzPJxFnl3yuNfF7b7hsMFKWTRytNLYWaMSyJ+fVHaNwgm+Dq5Pp/+HnsQu4y
mqlkk5WM9s52DCO9o7Ozwklkk//+ausBPg9BhYw/q0PJl1yHtsJVPJjmNMva
99mRDYoV01ZGPPA05n17+EaGlN+ieji0jQcJMnHD/0tPPlT73T9f8lQP3DH8
2/1B9IxBdsE1ZZ/uHjCu5bnaS7gbdNkHP8j07IWnhieVmSqV+pbDWjYJw73g
3cmLHM7fpC/q0Cw55NUHipceLidm+urtbJdtk/7eB4s53zkzo8W6UYoWZeKB
NOSLyoqsHZkiXId8ORZBNHhuUmdkGU8QRtwrtikhNNx463hcwW6MENFonRG7
QENUl7ln8OIgkQVmemLxNNgVNqmoW3YSpS7HGkQyabC8rmVa/bCKGLhj/EGo
koZdWqmdyomJRJObZ6FJFQ1tpZdNDzyNI7gqCaFJ1TT4JOc9ik+LIQJKGmWE
Gmi4Onufua4xjFh4ccRpTSsNp8tbLFx1zhCbeTAs2ENDCo8xdLrJipjLdX1m
1EfDxjteiy4J5gT2iL0U30+DW3aEJKPblMj/WrtHcJgGwYHFscpZQ2L/AgpY
NUlDDHPAr46rRUjVOsORKRqUrY0qBTZoELNx0VJx0zQ4r9XMOlq8l6gSrakQ
mKOBNR07oc5RIXLe9SQY/kvDx9OboxXvKxGcG4sMzm8atrDrzoi4bic8T8qr
1i/RcHGg7Bx3hyxhuo2cW1mhofPFvqEfUdLE/wEoBp4s
           "]]}, Annotation[#, "Charting`Private`Tag$590235#1"]& ]}}, {}}}, {
    ImageSize -> 300, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.092, 0}, 
     Frame -> {True, True, False, False}, FrameLabel -> {{
        FormBox[
         TagBox["\"Probability Density\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"fat frac.\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], PlotLabel -> FormBox["\"SNR = 30\"", TraditionalForm], 
     PlotRange -> {{0.1, 0.5}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.476], 
          GrayLevel[1]]], 
        GrayLevel[0]], {{}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.476], 
            GrayLevel[1]]], 
          GrayLevel[0]], {{{
            
            RectangleBox[{0.2733333333333333, 0}, {0.2866666666666667, 
             2.189999999999995}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2866666666666667, 0}, {0.30000000000000004`, 
             34.949999999999925`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.30000000000000004`, 0}, {0.31333333333333335`, 
             35.460000000000065`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.31333333333333335`, 0}, {0.32666666666666666`, 
             2.4000000000000044`}, "RoundingRadius" -> 
             0]}}}}, {}, {}}}, {{}, {}, {}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$591526#1"]& ]}}, {}}}, {
    ImageSize -> 300, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.092, 0}, 
     Frame -> {True, True, False, False}, FrameLabel -> {{
        FormBox[
         TagBox["\"Probability Density\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"fat frac.\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], PlotLabel -> FormBox["\"SNR = 50\"", TraditionalForm], 
     PlotRange -> {{0.1, 0.5}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.870315863813139*^9, 3.872061944162896*^9, 
  3.8720620040759573`*^9, 3.8720622042591753`*^9, 3.872062324553087*^9},
 CellLabel->
  "Out[372]=",ExpressionUUID->"00fe73f4-bf7a-43a7-9356-87c5a7cebdbb"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.476], 
          GrayLevel[1]]], 
        GrayLevel[0]], {{}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.476], 
            GrayLevel[1]]], 
          GrayLevel[0]], {{{
            
            RectangleBox[{0.18, 0}, {0.19333333333333336`, 
             0.11999999999999973`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.19333333333333336`, 0}, {0.20666666666666667`, 
             0.3300000000000006}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.20666666666666667`, 0}, {0.22000000000000003`, 
             0.449999999999999}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.22000000000000003`, 0}, {0.23333333333333334`, 
             1.4700000000000026`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.23333333333333334`, 0}, {0.24666666666666667`, 
             2.939999999999999}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.24666666666666667`, 0}, {0.26, 4.979999999999999},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.26, 0}, {0.2733333333333333, 7.380000000000013}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2733333333333333, 0}, {0.2866666666666667, 
             9.26999999999998}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2866666666666667, 0}, {0.30000000000000004`, 
             11.609999999999975`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.30000000000000004`, 0}, {0.31333333333333335`, 
             10.470000000000018`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.31333333333333335`, 0}, {0.32666666666666666`, 
             9.450000000000017}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.32666666666666666`, 0}, {0.34, 7.199999999999984},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.34, 0}, {0.3533333333333334, 4.34999999999999}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3533333333333334, 0}, {0.3666666666666667, 
             2.730000000000005}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3666666666666667, 0}, {0.38, 1.4100000000000026`},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.38, 0}, {0.3933333333333333, 0.5100000000000009}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3933333333333333, 0}, {0.40666666666666673`, 
             0.29999999999999805`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.42000000000000004`, 0}, {0.43333333333333335`, 
             0.030000000000000054`}, "RoundingRadius" -> 
             0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
y4/CdzbJkmk/9gXJerRAQinb6fW8LHnucomdWnALVLRLk4yN1pPNtytljie0
QHimXSliYT2p3P1U0iixBU4SSc8WlsuRfpscxEySWjAyfmnFqdVy5Kam5QLm
71pQZP8q8o+iHHlLWH/R5lML+DxK9ncclSP3vKqjuVW0oPvcteqpV3JkYuaX
iIcDLWjvP9O/dpc8KbA6tadgsAWPqkym12vLk14XbskO/2iBfy5H6prD8qSe
yr4knZ8tGBef+dhvI0/+eJWS/edXC6pWmjszb8mTKndvtp9ZQcHnvk1pthR5
8vF3W8kwHgo8Chr/hNPkyXmdvaeLeCmotldzyx2QJ+uWpr5JCFKwZPo5oPu3
POniafurUYKChx1H690lFch3tntEdm2k4M1tHd8fpxVIkSIx83ObKWjwfsGl
4ahA+khNRT3eSgHvw2WnLropkIfbk+R/bqfA00eOP/+GAvnzkJh63B4KpJUm
HZ7FKJBbNSdP8B2hwGXBfodxjwKZzv/2Ya8bBeYNqVdsDBRJr3aunh+XKBi4
l/xV45giuTfm7IbJyxT8WX582V8TRbJKTa502VUKutX+KJyyVSS7jV9OyflT
8JMvLdrSS5FkfxFueu4RBYynVh4XYhTJavup1+cfU7DVX3mHQYIieW/TiTHP
JxRkbb81KJysSIoVCoTciqDAf3Fp7GqGIrmp907O21gKtpe3uPhXKJImSv5S
w2kUZKi5KPp8UyTXjDMcpzIouLRNVPjEkCLJyN73af4TBTvnZ0+I/lQknQz+
HubNpcA3833sfzOKpK+rl9/mUgper8Hzo+xKpPaOtjqNcgryTnPIv+RSIrn/
qYvvq6SguPJ6UTe3Evn44eTHI7UU7JJPWS6/SolMzHDtu9BCgbFGoPB3SSXy
v+v1W65QWVjH0vj9WiVSTWej9402Ci5mbfnPXlaJzGv7LvSoi4JEyTaeSEUl
8sYrXZsIGgUBtyODJTcokTqOb1Jj6RTc9ttZfHejEtk0Z6+T3kcB8+ATa01V
JTK8tPRRbj8FqY4hWZe3KZHmd2Xppd8o0O7Jzn2lrkR+lWJ4UoYoUDg2k1Ki
qUTOEqfeTk+y9PWxLEsdSuRJY+GCyWkKDFWHQnpIJfKTY2Pz+C8KCuYr7nto
K5EXH+2fH/nDmlffJxX3g6z8CX8Fhv9S0HJfI7dDV4ncnPtZ/sciBWmF5MXN
+krkjz6VIwPLqFA44W0Qb6hE6v7ut/vKQUWc0UGHykNKZMLKV169XFSEKnfG
tB9WItnXmYcyVlDxO7xvuv2IEmmnLhTbw0NFauNO26qjSmSJXsOnbl4qhoOo
XxOOKZEyVrdqO/mpyBjsuuZ+XIn0uUgy2ldRcfr9Y3nVE0pkd/D8VOtqKiqk
zzO6WXhX5KcVVGGW7+BbSvI0UiKfvb8g3SJKRe8oZ+ASC8+Ubtj2RZyKk7V2
TleNlUjj9q8HG9dQoX50nWUvC2cMR1vUS1Hxte78KU0TJVJw6aRb7VoqqjQS
7H1Z+ILw6uDqdVQYqJBeGSzcoFwfUbmeirPj38LbWXjj3pvvy+WpCLpqmz/E
wrePo6xUkYpvtq9HR1h48Oyf9mJlKuzHS5TpLHzwWuZIoQoV8SL/XAtZOOH+
ebaCTVTkOhcV3GNh9jhl0bwtVGhufSB+iIVts/pUclSpSDko6zfHqreoLorI
2kaFv8bRyScsLM00Nf6kToWttIS7LAt7T69yythBxc/shGVRrP47V9T5pGlS
MWe6/zUnC2tKB4d90KJCptXOyJrF3zM1IvHdHipaI2LF3rD4ntGZy0vZx+Lv
XtE4jTWPtPOuA4n7qXiy3OqHGGteAoFKfxIOUJGXuJZPijVP12e9/PEHqVB8
oX1EgDXvDcUmmjEGVFyq6N1WZqBE3qIKHH55iIpsWlN3IEs/A99rbKOOUOEz
yfNuu54S+Vpw393nJ6iwkv9FtdFRItkUZ189NWadf+/QNjpLn6e10jPDTang
8dxTYbBfiZS0V6Q/PEXFtmvtkRP7lMirXszJ+5ZUcH8wG9i4V4lsvxu5/J41
FVqeMh4mu1n3N5Nf7bYdFQFXazw8dyqRE9XVOrfOUPE67eOYq4YSebQn4FTw
OSp2Hh8oNt6uRPJy/Q70d2bpyaz7+vgWJTL4JKPt6iUqOsTiR2wUWPx4xW+P
u0yFCeON/4v1SuTZ504P6z2pWGnd+L5URok80DmlL+PN4oM9cbxNgjVPixUF
5YFUTI2a/hbjUyLdvRskfgaz5uc1oZrNel/6XoR5ioVQoZrMfVCH9f6U0KRU
nUOpuLAopqz4T5G8Ya0WJ/CEVY84SWMfVyTHfH/903xGRVblv6WVI4rk6Vd5
lnYRVJSOcR1n+65IEkwd0U/RLH7Wub/MYCiSC7anbp96Q4XjTN8GzUZF0vts
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
CfE/oPO5EQ==
           "]]}, Annotation[#, "Charting`Private`Tag$592552#1"]& ]}}, {}}}, {
    ImageSize -> 300, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.092, 0}, 
     Frame -> {True, True, False, False}, FrameLabel -> {{
        FormBox[
         TagBox["\"Probability Density\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"fat frac.\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], PlotLabel -> 
     FormBox["\"B0 = -60 Hz\"", TraditionalForm], 
     PlotRange -> {{0.1, 0.5}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.476], 
          GrayLevel[1]]], 
        GrayLevel[0]], {{}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.476], 
            GrayLevel[1]]], 
          GrayLevel[0]], {{{
            
            RectangleBox[{0.16666666666666669`, 0}, {0.18, 
             0.06000000000000011}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.18, 0}, {0.19333333333333336`, 
             0.0899999999999998}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.19333333333333336`, 0}, {0.20666666666666667`, 
             0.3900000000000007}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.20666666666666667`, 0}, {0.22000000000000003`, 
             0.7799999999999983}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.22000000000000003`, 0}, {0.23333333333333334`, 
             1.5000000000000027`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.23333333333333334`, 0}, {0.24666666666666667`, 
             2.4899999999999993`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.24666666666666667`, 0}, {0.26, 4.469999999999999},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.26, 0}, {0.2733333333333333, 7.470000000000014}, 
             "RoundingRadius" -> 0]}}, {{
            RectangleBox[{0.2733333333333333, 0}, {0.2866666666666667, 
             9.929999999999978}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2866666666666667, 0}, {0.30000000000000004`, 
             11.099999999999975`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.30000000000000004`, 0}, {0.31333333333333335`, 
             10.380000000000019`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.31333333333333335`, 0}, {0.32666666666666666`, 
             10.440000000000019`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.32666666666666666`, 0}, {0.34, 6.749999999999985},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.34, 0}, {0.3533333333333334, 4.1099999999999905`},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3533333333333334, 0}, {0.3666666666666667, 
             2.760000000000005}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3666666666666667, 0}, {0.38, 1.2300000000000022`},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.38, 0}, {0.3933333333333333, 0.7200000000000013}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3933333333333333, 0}, {0.40666666666666673`, 
             0.26999999999999824`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.40666666666666673`, 0}, {0.42000000000000004`, 
             0.030000000000000054`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.42000000000000004`, 0}, {0.43333333333333335`, 
             0.030000000000000054`}, "RoundingRadius" -> 
             0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwVl3c8Vu8bx81SRgoRkoxHRUYURedzyAilYRSZlaKvNKlEIStUQqiIJEmS
tGTvvR/zmSnKKGUUSfk9v7/O6/0697nPNT7XfV/X2sOn9rvzcHFxHefl4vr/
85rO0+K7d9/jqb2GpGJJMyGd8Xvy0cP3aNnXm8AmW4h8MYv1uU/fI3C9MjFY
20J8nBy9U/n+PXRvaGh+628lDF+qnRrrf48jhU+co2+2E33yAY9/DrzH3fXL
dkjR2onTMS30hZH3EHsZHTRB6SDSTnnvFJ97D8W8Xebp1R3Ewsa8tdulCxHV
2vYiRZRKJKRwHTRTKEQ5JfuCznEqoS687+a+DYUQmAw9Y1ZGJZy/Tsy5byuE
46JVm/+c6yJKsrW7bjoUImzV8q17f3QTl1XehX24V4gZhWqtom39xIrExSWj
6YXYEvjQxzCnn8hedHBqOrsQp+QMyDdraARtaNZlSVEhSsQTW0OF6MTWjG1b
N9EL0a8ZW/76H4NoF4s6ZfCpEMzcu3tiApmExzX6Y9OxQri3hMal8LGIpMP+
Kw79KUTTA6+hM2JsYka+dOyaTBH4Xr/ZFpr5gbgZI6JwU7EIva3mxSU/PhAU
LpeDSapFeFCsmLPZYICwYy9U5+gXYfnTsbjZngHiTYrhg+5DRRAeOqTvKvuJ
OCdds1cluQjUkwrLcsaGiL2Fhk9YGUX4tnr7muc2nwl1h9K/d54Xoe/O9IW4
ss/E6N132XxlRYDNbqrW/S+E66psvo8DRVDxNqI+PTFCEO8ph+6OFsFEqrO3
/tMIIWv/6OXeqSLc4DsdJu4ySvQmJTuX8RXj+apNpw46jhFWUrcKklWKkZbV
b/H07DdCrUBwmY1mMU5ue+q54983YsnBCHfBrcWw3dp041D0OFGdGLTCz6IY
p7sWdWjlfSf0Jc97HThZjLbxvvF+wQli3Up7+RWvirHllGjm7oIpYtHbbt+G
omKU3/z+vE18mhi03d8SWF2MfFve8qmz00TqHUu/793FOFYnf4rQ+UmslCC6
mmeLcWZRk/ezpl/E9OvCDSHcJei7nnhh6ZYZosNGN0h/aQm6Okgfs/QZIjpe
Uz1bpgSyk5X3LgfOErziihHhRAn4iz2m39jMER9epbIIsxIwbJU2fGudI0qt
ZTf/2lMCObHcw6aWfwi/OImPR91KsKA+EnrNYp74sULAwCikBPtZ7f5aR/8R
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
Ef8Dd1BVmg==
           "]]}, Annotation[#, "Charting`Private`Tag$593548#1"]& ]}}, {}}}, {
    ImageSize -> 300, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.092, 0}, 
     Frame -> {True, True, False, False}, FrameLabel -> {{
        FormBox[
         TagBox["\"Probability Density\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"fat frac.\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], PlotLabel -> FormBox["\"B0 = 20 Hz\"", TraditionalForm],
      PlotRange -> {{0.1, 0.5}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.476], 
          GrayLevel[1]]], 
        GrayLevel[0]], {{}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.476], 
            GrayLevel[1]]], 
          GrayLevel[0]], {{{
            
            RectangleBox[{0.15333333333333335`, 0}, {0.16666666666666669`, 
             0.029999999999999992`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.16666666666666669`, 0}, {0.18, 
             0.030000000000000054`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.18, 0}, {0.19333333333333336`, 
             0.059999999999999866`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.19333333333333336`, 0}, {0.20666666666666667`, 
             0.24000000000000044`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.20666666666666667`, 0}, {0.22000000000000003`, 
             0.7499999999999983}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.22000000000000003`, 0}, {0.23333333333333334`, 
             1.620000000000003}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.23333333333333334`, 0}, {0.24666666666666667`, 
             3.119999999999999}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.24666666666666667`, 0}, {0.26, 5.099999999999999},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.26, 0}, {0.2733333333333333, 7.590000000000014}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2733333333333333, 0}, {0.2866666666666667, 
             8.87999999999998}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.2866666666666667, 0}, {0.30000000000000004`, 
             11.369999999999974`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.30000000000000004`, 0}, {0.31333333333333335`, 
             10.26000000000002}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.31333333333333335`, 0}, {0.32666666666666666`, 
             9.420000000000018}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.32666666666666666`, 0}, {0.34, 7.259999999999984},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.34, 0}, {0.3533333333333334, 4.19999999999999}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3533333333333334, 0}, {0.3666666666666667, 
             2.4900000000000047`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3666666666666667, 0}, {0.38, 1.3500000000000025`},
              "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.38, 0}, {0.3933333333333333, 0.8700000000000015}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.3933333333333333, 0}, {0.40666666666666673`, 
             0.29999999999999805`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.40666666666666673`, 0}, {0.42000000000000004`, 
             0.030000000000000054`}, "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{0.42000000000000004`, 0}, {0.43333333333333335`, 
             0.030000000000000054`}, "RoundingRadius" -> 
             0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwVV3k4lG8XJvuSVLaQhIkULSopzf3mZ0mkJBEqZIlEJUtK9jVFaJctpEiU
kn3fKWbss1EolK2klHzz/TXXfb3PvOdezpk5z3p7j6OOyzg4OHZwcXD8/zNk
x7OyBw+KkR5xT+rnv+9k6Yzfs0/SitGWlP8q9vAP8qvVBzfmPSsG74aN++zT
fpA/zo7fqSkuhkzPqrN1B+bI+ws2e0z0FyMiPDGG4+lPcp+8f+bcUDHy0s68
GuacJ1+Ia6ctjRXjppzXMpVT8+RUD/cDYgvF2DV7NmxQ+hd5SS1//T7pEnDH
rWjLyfxNvvuYw9JAoQQCw3oBMsILZPXlprdMVUsg567PLX55gXzq68yC454S
8PLu0Ck78Idc/lyj65ZVCfhyL28K4FkkX1UuCh98WIJzQjcIWRcOrLrHVz6e
XgLGFUvL5c858JzX8vuP5yW4oqSZPjfBgYGRX6cFSkuwZ+S/ieJLnNDK2KO1
nVYCsVyFQe+YZehYfcND+1MJSu0ZNeHdy3A2hJapP1GCvz491jnruHDf/toq
6z8leNK3ykWniAvz8hUTITKlGBfmXpD6wY1bcSIKtxRLsfzA4l7o82ADx2nL
+5tK4Rs/vfzRAx4cZy3V5e4tRc49sLh1efHm8f7kbutSnEiU/SGXzQdP6foj
ykmlcPkmfe5WgSCOlOx/yswoxYu8sFRuBSGoW1Us3nlRitaCPub+RCGMPyh6
zl1ZiszuACG168KwXfOc++NQKSyHT3TEnBUBuXiD9YPxUmx9s2TM+UUEsiee
FBz5XgoPodIUb5cV6L2fdKqSuwx2PlHH92uJwkQq9l2Schl45QQ9l0xWYvM7
oRXHtpbhNVfm2KZ7KyFgGekopFWGjRdlVK4MrkTdvaBVfgfLsMZ8g0GE9yrs
lbzsZnG+DHsz525M5q+GisQJ+VWvy7C4abUG1xkJ8L7t9m4uLcNSQ1SOQ6UE
hs2PtgfWleHGEfdkjbWSSLlj5DfVXYZ7znvitjAkISFO7mr7VYZ/Q1/V93qs
wY/CEtVQznJQ/ReDn/SuQecxzaC9guWIVC2IydovjZjErerPZcqxrcrmU6K0
DLjEFCMjyOXoUmnSrxqUxeDrFCbZoByXHjSdzjm+FhVmsjt/Hi5Hin9B7pn3
a+GXIP7Rwa4ce09qdRyvlcP0Kn5tndByXA1x9+e2lwdz5bepv83laH7mg+sJ
Cth62uesPKUcbpuMmiL7FRCUyzn030A5JByOC8fJK0LJQIISPV4OvX1mp9IL
FOFyDYVSQhUQP/erSnNQCT9Gb/vuMK7AV7G/vJaXlKG/Q3bG4lgF5ryKKhnN
yrgXlOVy1aYCO03u9j5SUMEe2VKrGrcKyP5ARWevCgJMh7WP3KyAWQZv+CNT
VQiW7eJ0e1+BJr8Nl2+Gq8FGoPpKbE8FimSnbz/9roYXx41mXzEr8Lcvt1nH
Xh1HZk5/+j1ZgXUXM8tFdbfgzoao+ogVlXBp0KQfurkV8rdpUU+OVKIo+5qR
RMx2XGQ6Lmu0rERrhN7Frx+2o2bTtN+4bSXWEgknX4ppwLGB223bxUrcLCn8
wJemged/1Ewqb1fib+LVtdb1O7DTKXAVjVKJOz46692gifEhn9zuAXa9AMeZ
sduaSD3pod/xsRJ7FCc6ro9oQtj8lF/9bCW8VaQr/sTuxux6uRkLgSqM9uin
Zc1qoVn0r6XOxir80JFb4J3VRsb7+UyoVWFvS6p2vsU+XI/5Pqu9rQo6tGc3
X1Tsww7+iRhNrSoIu1VqvIkjI3Wpv2qzYRVKbhUmvVMg4DNZpCLpUoXOrBTu
hoX9OJr72kvsfBW2Z3HK6mnpYLPry5qVF6vQ/uzUULyvDj6OZNkIX6nCafuE
2xm/dWDCuBPHGVUF83sDn7/w6GJDm+eviewqfBUUjzc11AdntIfeWG4VGrnt
gxfu6INucC5+NL8KRw5LiiR/0kd8rf3moXdV2BweKjoUZIDFElPbnqYqRK00
tnzRcgBdz7Y0VX2pQu7ACqNtcUagBOzPFPtWBXBrdC37aYQOc7PgszNV6Lv5
n6PWSWO0cfpoiy6w8bqPYl+2HELtiYr800LVkNxzlKNj1ASvBA49+KdWjfCY
qYRbh02RzzrlfXR7NfS5j2TW3jJF3psLZlm7quH8wDiU+t4Uz+wSl5ugGgmy
qzpvmR5FajEt6PGRahDNZ6Nq7cwQ6+Lqqu1ZjQOkKKPql+aIwTWDOJ9quJxv
y+D6Z45o8VtKw1fZ75ffYm966DjCqwuYN0KroRt/2kt26jiur/l9lHanGtPq
GgqdsIRbc8Rev3fVUHdg5PVKWcM15YHU+7JqyPMN7PC9Yo2zXjlz66vZfIQf
R5yiWcNh/YeXzc3VSN0wlCf8xAbWVySU1tCqcSb/raW9zikc3Jgp/G6xGtIx
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
K/dxsWBkNqjZGTdI5hk0e6fLx0L+kufPso8s8sKwE++xFSwoce7u0IlgkHdn
TfRbrGRhn4MwLzFPJ3s5X3hhvZqFMW5l1kcXOnl67MqxM5IsbF5J+zB2nEYe
mYxJv7SOBa/rq+RKTPrJHb9ekW9vYaHotGf2ZE43WaREc9WdbSycl1GxF9/f
TTa6WjZyX4OFGbelht19XeSGxfqYVE12vYcfzE2Fu8ily/oHXoKFdYlW3l3R
FPKv2pN5r/ez67/LsxhXp5B3hX0MKvqPhS9/XY696+ok5/N9Vak0YKGnXVTs
JKmTnCW85P3+MAusf+tKvrz+QB5uDzlIMWUhYrlZ0pj4B/L6WH65HjMWMn9d
OP3J7z05aeWqeoYFCxa3Sp9GH2on35Ygrf52mgWb5O/6O8VaydfkjV4KXWCh
Vb/FWE62kXx62DXQ6BILu7VWcR592EDWyY42vXGZhReTZRX6Mg1k/q0t3wWv
sPmFE3NapHryHRjuFgxmITXGdnu9RS3Zl8tF4GAoC5/sVfj9x2vINo2RA1Hh
7Oe28jujA2rICoebrgncYOHVGeMnnvnV5LxTBtX8iSxs7DW/rbW5inxbwTn+
wF22vhv62umpleTLo+FnIu+zkJZGta37WkHe697Aw/+YhfuqeY634srJTf56
B/myWPjewh3Gz11KHkr6j8rzjoWCA3LvTKPfkutsz2TolbDw3oHOLOF/S85W
CvEKK2PBMPNw7lzUG7J7bo0kTzULk1Yq408SC8kLpfttuFtYIOvwRh1qfkVm
BNip6bax/Zeb/S/X5hW56r+gfyHvWXjTci3z3GwBOaK1KpWLyoLzszzlfqUC
shj76rCMzvYnX0pN/cBL8nzy6bc6TBa2XeyS0YnPIw/YB0QED7KgXFxy22Lw
BTl1vGLjshEWHIv+7N0amUtWW9jnzjnJPh+4Z4cp93OyaMVJ7J9mYQvnfMMG
t2fkH0H+okGzLJAuLx637s0mlwiUv+KYZ+EEw+bjvaKn5Mft9BDiNwsr/AIF
rm1+Sg68/fdY4B8Wgp/kB/lkZJHPmMtuqFpkIZ7/xMEr67LI+mu055eWWIh0
Xyy78DiT/D8cftTC
           "]]}, Annotation[#, "Charting`Private`Tag$594569#1"]& ]}}, {}}}, {
    ImageSize -> 300, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.092, 0}, 
     Frame -> {True, True, False, False}, FrameLabel -> {{
        FormBox[
         TagBox["\"Probability Density\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"fat frac.\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], PlotLabel -> 
     FormBox["\"B0 = 100 Hz\"", TraditionalForm], 
     PlotRange -> {{0.1, 0.5}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.870315863813139*^9, 3.872061944162896*^9, 
  3.8720620040759573`*^9, 3.8720622042591753`*^9, 3.8720623252332277`*^9},
 CellLabel->
  "Out[373]=",ExpressionUUID->"bd8bc93e-af9d-4dbf-b8bd-a497c26dd040"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ErrorPlot", "[", 
       RowBox[{
        RowBox[{"frF", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "frs", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Imposed\>\"", ",", "\"\<Fitted frac.\>\""}], "}"}]}], 
        ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", "\"\<fitted vs imposed fat fraction\>\""}]}], 
       "]"}], ",", 
      RowBox[{"AspectRatio", "->", "1"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ErrorPlot", "[", 
       RowBox[{
        RowBox[{"frS", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "snrs", ",", 
        RowBox[{"{", 
         RowBox[{"0.2", ",", "0.4"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<SNR\>\"", ",", "\"\<Fitted frac.\>\""}], "}"}]}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", "\"\<fitted fat fraction vs SNR\>\""}]}], 
       "]"}], ",", 
      RowBox[{"AspectRatio", "->", "1"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ErrorPlot", "[", 
       RowBox[{
        RowBox[{"frB", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "B0s", ",", 
        RowBox[{"{", 
         RowBox[{"0.2", ",", "0.4"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<B0\>\"", ",", "\"\<Fitted frac.\>\""}], "}"}]}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", "\"\<fitted fat fraction vs B0\>\""}]}], 
       "]"}], ",", 
      RowBox[{"AspectRatio", "->", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.758467870613595*^9, 3.7584679842631335`*^9}, {
  3.7584684443567295`*^9, 3.758468470692998*^9}, {3.7584686893642855`*^9, 
  3.758468762361865*^9}, {3.758468960321937*^9, 3.7584689743737674`*^9}, {
  3.8454624759523096`*^9, 3.845462487487566*^9}, {3.8454635092314234`*^9, 
  3.845463518673795*^9}, {3.845463574246812*^9, 3.84546357718423*^9}, {
  3.8703158782759523`*^9, 3.8703158848549747`*^9}, {3.87206223604312*^9, 
  3.872062258054421*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"e9c3029c-e293-4798-9790-fdf3c938956f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBwBWIQjQ5mzQSBnfYf7Gvajp3caQ/hn7S3eOrBYtRw0t7E
GAQu2z9IChA8wH4ZKn/Tft2MfhnThpv2EFMe2LfMj9j5//l9qPrH9hud3Lmu
yTy2T08DgWf2tYrVXk5Rz6D6X9rXCXj7fe54aX/2DAi8sf997DOfz/Y3UPM+
2HcmxgjnPHtvj8u9G/R8f0bc3wR37xE1i3VffY/B3bvhV1qHVMdFuHu9ZLc9
Uvt9He7ef1+miKiJ34O718zz/uS9do/g7v1/4bEah+9TuHu1dFbuj49+AXev
wp/DFcqFr+HulZ4vkrmm7h3cvQq2E+z2xcy2h7nX4vHaK9YeB+DuDXj7zNWz
7gzcvVuSKr9unncF7t4qGb9XiYq34e4tiGS1V73wAO7e7H+PvSawP4G7d/db
mf2zC5/D3Rtd9qav7MIruHvVyh9tmM/7Du5eGP3sx5vfDvvM4e5OstmRvt5n
Hpy/qayC4eg8dH1AsODvTSNGi/1DJf00/HscFbhz/v7R9EOd9GPxuv7z0z0f
7AEzLeKa
      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          Opacity[0.2], 
          RGBColor[1, 0, 0]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{12, 35, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 33, 
            36, 32, 31, 30, 29, 28, 27, 26, 25, 24, 
            23}}]}]}, {}, {}, {}}, {{}, {}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large]], 
         LineBox[{34, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{35, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22}]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
          36}]}}}], {{}, {}}}, {
    AspectRatio -> 1, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{
        FormBox[
         TagBox["\"Fitted frac.\"", HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox["\"Imposed\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"fitted vs imposed fat fraction\"", TraditionalForm], 
     PlotRange -> {{0., 1.}, {0., 1.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQDQEiDgLeDVX2Hy/ZQ/gqDln7uN6Wy16G8vUc2t5L
PWqVh/FNHKq+GXUVWsL4lg4nDGoZAtVgfDuHjCkn76UZQ/kNjg4OwXaLnhnC
5F0cssJqVA5awOTdHHiuZivHGsHkPR3OrIgp2WwC44s4LHnEE7j2yHm4+yx+
eP4s6rwId98zgbjAZKlLcPcJXOVpj6i6BHffpDXqO4zrL8HdN4vTvvPI2ktw
90Xd+7fD6/gluPvWzAxZYHT1Etx9QuKGdZV3LsHd56Gcy+7w8hLcfRtqqzIu
C1yDu6/t0/4b7duuwN3HUxHzQ1TkCtx9elusZXs/IsLPapXW+udHEOE37SdT
UtZWRPg9cu/9YbcAEX4zNFb29sxBhJ/M2t6XXc2I8JvCz7GeowURfqPxOzzj
FwBmzw3b
      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          Opacity[0.2], 
          RGBColor[1, 0, 0]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 30, 29, 28, 
            27, 26, 25, 24, 23, 22, 21}}]}]}, {}, {}, {}}, {{}, {}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{11, 12, 13, 14, 15, 16, 17, 18, 19, 20}]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{21, 22, 23, 24, 25, 26, 27, 28, 29, 30}]}}}], {{}, {}}}, {
    AspectRatio -> 1, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {5.000000000000011, 0.20000000000000046`}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
         TagBox["\"Fitted frac.\"", HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox["\"SNR\"", HoldForm], TraditionalForm], None}}, FrameStyle -> 
     Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"fitted fat fraction vs SNR\"", TraditionalForm], 
     PlotRange -> {{5., 50.}, {0.2, 0.4}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJztk4tLU3EUx38KOm01BXtsy9fQKMHeJkGwjjamK7FaktuYoUXUwgyKTIRm
6ugliWUIs2bOxOWtTRjURj74gWZQFP7souBS0CiDlZWtktLMHvf4R+SFH5cv
5/U9HziKgye0h4MJIea59/v/99NTV/tkxiHRi+1/5Ln9VDlQ76ha9U+THJrf
N2s/tVaI76VZ2THddQlCPJvqqr9rMmIFraFckCTPIOQTFe1z1WvfBglaSUNN
nyucywSdQnV3Le+siYJOpNrmVKNsqaAJUVuLvsZHYhxUoUtSTVKsB6O7siAf
/SoBqhsVog04H0Y6FavPRqE/kB7NNcuS0T9U7Prw0b4e94Mu38vxGTHuD4Ga
sba26X6BD5hPl+14tkKI62FC8S0pVYaaGjdKJ1/VMuTpLbfu5N0Meao+jZZ0
uRjyPHZnOO7pFYY8QWVQEytDnoWShqmAkyHP9LCIiNkahjw5fRUvqWbI84Gt
9snUNYY8Lw+H9EdjPiHRZzLTOrB/IqRvnRb5r2I9lIrbkzgb9ocJ8sWQzOF8
4OTbgkZwngZ6Eq7bjtejf/DukT8ydOB+0JPluWG5gPvD0Dh1NM7zAemasde+
SoY8l+f6O49YUNNSeWugvI5Hng2Zg6bdXh559hbsy6cOHnmORcbEOe088lQX
c7EWjkeei+RNl1xC/hzPpvPN7H4Jjzx7Hovd4zYeeSp/lnmmnTzybBR1h9di
P0ImIf7mwyaMg3mTzzx4G+vhoj+F3UI/SugdKN0STnE+6NLSQwqxXgPrTlrf
/2hF/1CcEyXJ8+B+EPZGtbmoBfeHxbrnzbIWfp7nvZmVB9CvHrTBlUOj6Hfh
3hfufeHe/4d7/wVRDGZ4
      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          Opacity[0.2], 
          RGBColor[1, 0, 0]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
            35, 36, 37, 38, 39, 40, 41, 42, 63, 62, 61, 60, 59, 58, 57, 56, 
            55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 
            43}}]}]}, {}, {}, {}}, {{}, {}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 
          37, 38, 39, 40, 41, 42}]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 
          58, 59, 60, 61, 62, 63}]}}}], {{}, {}}}, {
    AspectRatio -> 1, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0.20000000000000046`}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
         TagBox["\"Fitted frac.\"", HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox["\"B0\"", HoldForm], TraditionalForm], None}}, FrameStyle -> 
     Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"fitted fat fraction vs B0\"", TraditionalForm], 
     PlotRange -> {{-100., 100.}, {0.2, 0.4}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.8703158656691265`*^9, 3.870315885692295*^9}, 
   3.8720619484030733`*^9, 3.872062208409403*^9, {3.8720622417562914`*^9, 
   3.872062259376633*^9}, 3.872062297118457*^9, 3.8720623278328266`*^9},
 CellLabel->
  "Out[374]=",ExpressionUUID->"ec627cee-3a0e-4f2e-9e46-744c73a851fb"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ME-SE  (TSE) T2 mapping", "Chapter",
 CellChangeTimes->{{3.7548951014856977`*^9, 3.754895112634607*^9}, {
  3.75489562596196*^9, 3.754895628456525*^9}, {3.7549025592745514`*^9, 
  3.7549025710189853`*^9}},ExpressionUUID->"b341beda-5ee8-44a9-9312-\
619b2c8f81f1"],

Cell[CellGroupData[{

Cell["Import Data", "Subsection",
 CellChangeTimes->{{3.7549991104024525`*^9, 3.7549991145354114`*^9}},
 CellTags->"c:45",ExpressionUUID->"b8cae968-01be-4d76-93c4-914725dacb60"],

Cell["\<\
Very specific case of T2 data converted from a phipils MRI scanner using a \
multi echo spin echo acquisition and exported with the T2 map which was \
converted from dcm to Nii using DcmToNii.\
\>", "Text",
 CellChangeTimes->{{3.7548954792598314`*^9, 3.7548955300130854`*^9}, {
   3.754902580410942*^9, 3.7549026194989295`*^9}, 
   3.7549029519227858`*^9},ExpressionUUID->"838c8185-e694-4949-9dd0-\
0c59b961e8bf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"T2data", ",", "fit", ",", "T2vox"}], "}"}], "=", 
   RowBox[{"ImportNiiT2", "[", "\"\<T2data.nii\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"echo", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Necho", ",", "T2echo"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"17", ",", "7.6"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"echos", "=", 
   RowBox[{
    RowBox[{"Range", "[", "Necho", "]"}], "T2echo"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.754902725324188*^9, 3.754902785821125*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"b207c621-7de3-43fa-8bdf-ef8e64f0d8bd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"meanT2", "=", 
   RowBox[{"NormalizeData", "[", 
    RowBox[{"Mean", "@", 
     RowBox[{"Transpose", "@", "T2data"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"meanT2", ",", "15", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskComponents", "\[Rule]", "2"}], ",", 
     RowBox[{"MaskClosing", "\[Rule]", "3"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"T2data", "=", 
   RowBox[{"MaskData", "[", 
    RowBox[{"T2data", ",", "mask"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.754903335308236*^9, 3.7549033466208315`*^9}, {
   3.754903384462629*^9, 3.7549034269760156`*^9}, 3.754913701077524*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"6a0e43c3-6e49-4acf-a0d5-faa81d3c50fd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Define Slice Profiles", "Subsection",
 CellChangeTimes->{{3.7549037926246223`*^9, 3.7549037996799846`*^9}},
 CellTags->"c:46",ExpressionUUID->"e4d814b7-307b-44b1-8176-77d613190d5c"],

Cell["Simulate RF pulse using bloch", "Text",
 CellChangeTimes->{{3.758436631234725*^9, 3.758436643807841*^9}, {
  3.758437145534289*^9, 
  3.7584371487969856`*^9}},ExpressionUUID->"08e92c98-8105-4c77-848e-\
fff3f471f75e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pulse", "=", 
   RowBox[{"Pulses", "[", "\"\<sg_150_100_167\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sim", "=", 
   RowBox[{"BlochSeries", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"4.", " ", 
      RowBox[{"10", "^", 
       RowBox[{"-", "5"}]}]}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "4000"}], ",", "4000", ",", "50"}], "]"}], ",", 
     RowBox[{"4", " ", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}], "pulse"}]}], " ", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7584366502214785`*^9, 3.7584366573124576`*^9}, {
   3.7584367145087543`*^9, 3.758436716860037*^9}, 3.75843714147445*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"b1483bf9-66dd-4581-84a9-c843d760fb15"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", "pulse", "]"}], ",", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"sim", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7584369139245076`*^9, 3.7584369191665163`*^9}, {
  3.758436965037548*^9, 3.7584369703172874`*^9}, {3.7584371252779617`*^9, 
  3.7584371369439707`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"e6d0f667-bae9-4dd4-a3f7-1cb0f0305255"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdlAlQTHEcx1djhjFKFEMykStdQyGpdr/VtpVqtdtezojFGKYcyRrHQ1hn
xUyaxtU4BiXCKjl6JuO+jcm17hSlcqeVUfb3zPzfm3nz5rOf+e/7nW9ASqra
6CCRSIxtd/vTfjXJjFuXmRUZ02T0A260OkWtli6osGNnqGatjQ9YuJ7YGY6H
pjeb87YTu0KRHJ5fMiefuDfqNmee2RVXQOwOnx87rTs2HCTujxkNEyOktUeI
PXE7RHk/Z3Ix8SDIUr3V0+eVEA9BHn/snOnoKWIvbEtf0NfxlYXYG9FaF7m1
UxmxL5Z34T53dSsn9of7nd9znZzPEw+n8xeIR+A5d7fbwMwK4gCUpqx6Embi
iQPRW+p5SN7jEvFIRIfJ94eYBR6FPZZn/iOrBB6NtmT+RLYIHASHJ3VWj0aB
x6BPR52T30mBgxH6dEyKn1TgsWiPzi9beH8IPMr3XTQqhfhCYboF42+bkE8Y
Hg1RNmR4CflKUbfI0tN28wyxDMlTuRWLP54kBgIy/AZ4fCuyMwe8NVuaXSX7
yYcjfVuHtoizyIcjSLPla1ABR/MRAUe3lqFlhgI7cxGQ9cvqc3jLcfKRKJ55
VdF/ain5SBz12VttSqsgL8e/9rRUkpcjeJVLl+5p18hH4XytT0xgr9vko7Cx
a+HSgV/vkVdgSesa64n5D8krMDO9sObAz0fko3HT+Wp52dbH5KNh6vDj/hGf
Z+RjkK2c8sv3rpV8DFbUrmnJDX5FPhaWjTts/Ta9Jh8LY3s6VW/Ij0P2iPYC
viM/DtVfPB6kJleTj8P3i58ts3Pfk49Dq8vkosOXasjHo7D+nGfzy1ry8cjx
neZQ2vCBfAJk+kklFfUfySdg97qwT01VdeSVWDys2NtWXE9eCUnOStvYtE/k
xyNP5Vt62q2B/HgsPWtuvFxELElE5uqaF5WDG+2MRLjKrjy3ZBJziWgK9Hfv
fJ2YT0Sl94troV+IJSrYn010XsV6TiU6r2L/X6IWvV/Nxsep2fh5tSi/JDZ/
JLH14ZLY+vFJovpq2PpDw/aH07D94zWi/mrZ/kPLzgenZeeH14rmS8fOH3Ts
fHI6dn55nWi+9ez8Q8/uB6dn94fXi/bLwO4fDOx+cgZ2f3mDaL8nsPuPCf+/
D38BeS/0Jw==
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{16.153061224489797`, 1.5}, {12.699513494948633`, 
       0.5000000000000426}},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 101.}, {-0.14045, 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {160.86175578329784, -99.12299459796564},
      ImageScaled[{0.5, 0.5}], {301.7898460902821, 188.80570399612503}], 
    InsetBox[
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxV1g1Q03UYB/BhEiPBV05HiQ2VEvFokiKcaI8KIoUIpAUe1oVDhxwwDBAM
InDkVIihgAwHbIy9MAbuSC3U8skyMC2BxPDiaJUFmsKZkogvl/n7rbtnd7vd
5/77v/1evs/jnZgemzRBIBDonnz/+336gaPYH9tRVnzCHZ66vxVv7RkZnRnB
ndOK3aMbnPJVbswerRhY7VmwpXQSs60F26emfbI99DnmyBY0Fnn82oZC5iEr
1t6O0J6a5cKssOKDLaM+59OdmcVWdL2Vba0TTmQ+3YzuM5bO2LHqGea4ZkwZ
v7QyoYT7rgWrLVJXyRp+vsqCIYb9j53y+f0WWbAnpSs7bBZ//s4mvOKy1eVs
2jRmaROeTDzgFdntwSxowuX1mwZc9CJmjRld6vN9e/tmMweZ8aPyCTNzjouZ
L5tw47Zg/27fecxyE1prB0OWdPgwu5nQ3lby1vEDC5jNRvRLdQ+pyPJjDjXi
3Gn+S+fu8We2G7A99esrcVclzHkGHH185O+wwgBmkQFd595ZkRW0hPlYI/b8
k3L6/qOlzNGNmHDW9YOfu5Yx39Rj/aSe2zNtwcxKPYYrD36jqVnOPF+PQ9uS
zsWUrWDGBpyf9KnPlNLXmBMaMF9qkMacB+YxHUa1jV7dfmkVc4UOU8LK177c
t5pZosP3buTOHvxtDfNFLd7IHF49PhzKLNPi84pluUcfhDFP1KJuoXtHjDCc
Geqxb/LowwUe65hz6tDJLTV895wIZlstzlru1qd86XXmIQ16e90zVfm9wSzW
4C6T29t/LIpkjjuCym1Cv8981zOravDz8+mLo72jmDvVWJDx/sf3pm9gFqhx
ZOXIV2OPuIOqcUqb/7keeTSf38P456sjhuYBbnMVTn33xN6gdTF8/irxWPvD
45IWblElvvhTVGiseyyfnwo8u2fx9K0ybuUh1Ad2fLf4S248iB82OPdVTX6T
j3c5Xq2UQlY8t6Qco/xkSafquGUq3LE2Xr11gBvKsGdgvChTtJGPVymeSBSF
O63nFpegOlia4ZvHrdqPPn4B1SIjt2AfvvKDsN35Ard8L4acM0YF/MVtL8aQ
b8/Mu/7sJv4+Crz2ReBQ3hxuLELv0i7V2gBuSSHKziw8oF/NDQU4NvxC950N
3OI87L2mGDy8mVuQi9c9hb3Didz2LMQ+H6+NyY7r78R3Cm5d8EpzXC8df9T8
UluT4Tg/GdW276OmZjr+n4iG3QrPk1mO4/Hov/B3eUe2wxEojrTd37zL4SeR
UCu8sO9/RwA9Hg/kfEwEev1kIPeHdCDPhzuBPL89C8j7CXKBvL84D8j4QAGQ
8ZMUAhlfLAIy/tEKIPNjLwYyf/K9QOZXsA/I/Kv2A1kf4hIg68dWCmR9QRmQ
9SdTAVmfknIg63esHMj6xoNA1r/yEJD9EV0BZP+IKoHsL3slkP1nrgKyP+WH
gezfoGog+1ugBrL/O9VA8kFVAyQ/4o4AyRexBkj+DGmA5JOtFkh+5dQByTeo
B5J/E7VA8lGmBZKfF7VA8lWiA5K/FTog+TymA5LfCQ1A8h0bgOT/fD2Q+qDU
A6kfN/VA6kt0I5D6c6wRSH0SGYDUrzwDkPpmNwCpf6FGIPXRbARSP91MQOqr
3ASk/l42AanPQWYg9VtjBlLfBU1A6r+0CUh/0NkEpH9YZAHSX6gsQPqPuxYg
/UlcM5D+5XQzkP5GbAXS/yisQPqjISuQ/imyBUh/ZWsB0n95tALpz3JagfRv
/a1A+js4Co7+71+6JB7d
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{7.041666666666714, 5.041666666666629}, {
       12.699513494948633`, 0.5000000000000426}},
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{-4000., 4000.}, {0, 85.86778522340097}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {479.8004034043153, -99.12299459796564},
      ImageScaled[{0.5, 0.5}], {296.22011819912564, 188.80570399612503}]}, {}},
  ImageSize->{
    UpTo[600], 
    UpTo[223]},
  PlotRange->{{0, 637.877295242035}, {-198.2459891959313, 0}},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.870937693757188*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"f78ee4cb-fa48-404d-aa06-ea0bf8ec82eb"]
}, Open  ]],

Cell["\<\
To accurately fit the data the slice profile needs to be defined with the \
exitiation and refocussing pulses\
\>", "Text",
 CellChangeTimes->{{3.7549028998233905`*^9, 
  3.754902948209705*^9}},ExpressionUUID->"84309912-9796-472d-8aa5-\
a93ea74bc056"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ex", ",", "ref"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"90", ",", "180"}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"flip", " ", "angles"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"exitation", ",", "refocus", ",", "plots"}], "}"}], "=", 
    RowBox[{"GetPulseProfile", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<sg_150_100_167\>\"", ",", "ex", ",", 
        RowBox[{"{", 
         RowBox[{"2.2845", ",", "3.9632", ",", "768"}], "}"}]}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"exitation", " ", "puls"}], ",", 
        RowBox[{"{", 
         RowBox[{"name", ",", "angle", ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "t", ",", "w"}], "}"}]}], "}"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<sinc_centre\>\"", ",", "ref", ",", 
        RowBox[{"{", 
         RowBox[{"1.9037", ",", "2.0560", ",", "486"}], "}"}]}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"refocussing", " ", "puls"}], ",", 
        RowBox[{"{", 
         RowBox[{"name", ",", "angle", ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "t", ",", "w"}], "}"}]}], "}"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"SliceRange", "\[Rule]", "12"}], ",", 
      RowBox[{"SliceRangeSamples", "\[Rule]", "15"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "sliceRangeSamples", " ", "determines", " ", "the", " ", "speed", " ", 
    "of", " ", "the", " ", "EPGT2", " ", "fit"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"angle", "=", 
   RowBox[{"{", 
    RowBox[{"exitation", ",", "refocus"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "@", "plots"}]}], "Input",
 CellChangeTimes->{
  3.754902749179872*^9, {3.754902845965876*^9, 3.7549028890530605`*^9}, {
   3.754902919632263*^9, 3.7549029249090977`*^9}, {3.75490298065442*^9, 
   3.754902999821941*^9}, {3.7549032406720304`*^9, 3.7549032407331963`*^9}, {
   3.758437195117894*^9, 3.7584372048792877`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"83924ee4-b18d-4de6-b618-a5e212f482da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"slices", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"SimulateSliceEPG", "[", 
      RowBox[{"exitation", ",", "refocus", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1000", ",", "70"}], "}"}], ",", "echo", ",", "#"}], 
        "}"}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"0.8", ",", "1.", ",", "1.2"}], "}"}]}]}], ";"}], "\n", 
 RowBox[{"Row", "[", "slices", "]"}]}], "Input",
 CellChangeTimes->{{3.75490295733055*^9, 3.75490303724695*^9}, {
  3.754903110045624*^9, 3.754903180060878*^9}, {3.7549032511356535`*^9, 
  3.754903254044939*^9}, {3.754903298110441*^9, 3.754903309416548*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"d3e7e3d0-876a-4f04-a706-ec1533d2392e"]
}, Closed]],

Cell[CellGroupData[{

Cell["calibrate and Fit the data", "Subsection",
 CellChangeTimes->{{3.7549136808715067`*^9, 3.754913705573042*^9}},
 CellTags->"c:47",ExpressionUUID->"a32b7405-2d28-4efa-ad38-9fc2d3fe6ff7"],

Cell["Calibrate the T2 fat using automated fat masking", "Text",
 CellChangeTimes->{{3.7584375079307623`*^9, 
  3.758437522559623*^9}},ExpressionUUID->"07ba9190-658c-49b3-addf-\
eafc175f6ae3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"val", ",", "std"}], "}"}], "=", 
  RowBox[{"CalibrateEPGT2Fit", "[", 
   RowBox[{"T2data", ",", "echo", ",", "angle", ",", 
    RowBox[{"EPGRelaxPars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"10", ",", "60"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"50", ",", "300"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1400.", ",", "365."}], "}"}]}], "}"}]}], ",", 
    RowBox[{"EPGFitPoints", "\[Rule]", "40"}], ",", 
    RowBox[{"EPGMethodCal", "\[Rule]", "\"\<1comp\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7549036012855253`*^9, 3.75490366959524*^9}, {
   3.7549101256964436`*^9, 3.7549101531350975`*^9}, 3.7549139103888135`*^9, {
   3.7549181943181515`*^9, 3.7549181966994443`*^9}, {3.869803094107977*^9, 
   3.8698031426753407`*^9}, {3.869803192531239*^9, 3.8698031926123505`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"2b8f0007-7a5b-43a9-8a6e-74ff32e52a1c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "163.34085967096968`", ",", "0.9098058006945249`", ",", 
     "288.3908185602121`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "6.792610350790498`", ",", "0.06690199800592135`", ",", 
     "55.281310224129044`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8709377744918547`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"e3534870-9bdc-4750-9122-5004353c44ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"val", ",", "std"}], "}"}], "=", 
  RowBox[{"CalibrateEPGT2Fit", "[", 
   RowBox[{"T2data", ",", "echo", ",", "angle", ",", 
    RowBox[{"EPGRelaxPars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"10", ",", "60"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"50", ",", "300"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1400.", ",", "365."}], "}"}]}], "}"}]}], ",", 
    RowBox[{"EPGFitPoints", "\[Rule]", "40"}], ",", 
    RowBox[{"EPGMethodCal", "\[Rule]", "\"\<2comp\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7549036012855253`*^9, 3.75490366959524*^9}, {
   3.7549101256964436`*^9, 3.7549101531350975`*^9}, 3.7549139103888135`*^9, {
   3.7549181943181515`*^9, 3.7549181966994443`*^9}, {3.869803094107977*^9, 
   3.869803137210425*^9}, {3.8698031935711327`*^9, 3.8698031936858273`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"42ec77b4-7ad7-4fd9-a626-d9584a62749e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "38.133312128591676`", ",", "196.95071319738253`", ",", 
     "0.8660792848575749`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "14.985586204788858`", ",", "17.934973089809944`", ",", 
     "0.06673352666160533`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.870937800103693*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"ad6e83cc-ca97-4a17-9d24-028404d7a9fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"val", ",", "std"}], "}"}], "=", 
  RowBox[{"CalibrateEPGT2Fit", "[", 
   RowBox[{"T2data", ",", "echo", ",", "angle", ",", 
    RowBox[{"EPGRelaxPars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"10", ",", "60"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"50", ",", "300"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1400.", ",", "365."}], "}"}]}], "}"}]}], ",", 
    RowBox[{"EPGFitPoints", "\[Rule]", "40"}], ",", 
    RowBox[{"EPGMethodCal", "\[Rule]", "\"\<2compF\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7549036012855253`*^9, 3.75490366959524*^9}, {
   3.7549101256964436`*^9, 3.7549101531350975`*^9}, 3.7549139103888135`*^9, {
   3.7549181943181515`*^9, 3.7549181966994443`*^9}, {3.869803094107977*^9, 
   3.8698031449459047`*^9}, {3.8698031943711543`*^9, 3.869803194488799*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"4e602531-e8ac-4a28-9dbc-6c382d3115d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"178.00252464958336`", ",", "0.8667127366284467`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.935724372544326`", ",", "0.0649677198617282`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8709378133661666`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"0b26a214-4c8d-4832-9f77-0e4f22c66c4a"]
}, Open  ]],

Cell["\<\
Create a dictionary for fitting manually (never needed, fit function does \
this automatically)\
\>", "Text",
 CellChangeTimes->{{3.7584375249941444`*^9, 
  3.758437553571023*^9}},ExpressionUUID->"691708d6-126e-4d41-be2c-\
d857f4226500"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dict", "=", 
   RowBox[{"CreateT2Dictionary", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1500", ",", "300"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Necho", ",", "T2echo"}], "}"}], ",", "angle"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.758437310560252*^9, 3.7584373257910223`*^9}, {
  3.758437386751029*^9, 3.758437430172845*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"4b0a9093-cbed-430e-a3b8-9877643a7ed4"],

Cell[BoxData["\<\"The dictionary contains 1396941 values, and took 25.4 \
seconds to generate.\"\>"], "Print",
 CellChangeTimes->{3.870937857102317*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"d61108cc-d590-4f51-a3ea-792bce6605ac"]
}, Open  ]],

Cell["\<\
Perform the EPGfit, only fitting water signal and calibrating the fat T2 from \
the subcutaneous fat\
\>", "Text",
 CellChangeTimes->{{3.7549994845540285`*^9, 
  3.7549994980291653`*^9}},ExpressionUUID->"fd6e9fa0-b5a6-4e96-bc4d-\
c468cb86b649"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2map", ",", "T2fmap", ",", "B1Map"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"watEPG", ",", "fatEPG", ",", "ffEPG"}], "}"}], ",", "resEPG"}],
     "}"}], "=", " ", 
   RowBox[{"EPGT2Fit", "[", 
    RowBox[{"T2data", ",", "echo", ",", "angle", ",", 
     RowBox[{"EPGCalibrate", "\[Rule]", "True"}], ",", 
     RowBox[{"OutputCalibration", "\[Rule]", "False"}], ",", 
     RowBox[{"EPGFitFat", "->", "False"}], ",", 
     RowBox[{"DictT2IncludeWater", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7549034567488422`*^9, 3.7549035295651903`*^9}, {
  3.7549994821031966`*^9, 3.754999489810546*^9}, {3.866257521402103*^9, 
  3.866257524330206*^9}, {3.866257761262754*^9, 3.8662577798324223`*^9}, {
  3.866258249337085*^9, 3.866258257421528*^9}, {3.866262269422616*^9, 
  3.8662622755077753`*^9}, {3.8662623442589397`*^9, 3.8662623498498487`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"8de819ca-705a-4220-8130-c192af8d549b"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Callibrating EPG fat T2.\"\>"], "Print",
 CellChangeTimes->{3.8709379001646347`*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"6046eeda-0000-41ec-9858-fe14e3104f85"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"EPG fat callibration:  \"\>", "\[InvisibleSpace]", "200.`", 
   "\[InvisibleSpace]", "\<\" ms\"\>"}],
  SequenceForm["EPG fat callibration:  ", 200., " ms"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8709379358187876`*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"1f80f1e7-b14c-4a4e-b7f6-163241a702fc"],

Cell[BoxData["\<\"The dictionary contains 6946 values, with T2fat = 200 ms, \
and took 5.1 seconds to generate.\"\>"], "Print",
 CellChangeTimes->{3.87093794100144*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"ce18d13e-041a-43b1-9088-fc6517baae2b"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"T2map", ",", "B1Map", ",", "T2vox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.", ",", "70"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.5"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549042371860256`*^9, 3.7549042619343824`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"47a0659c-4df1-4f1b-9d7b-b96779ba5cb1"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"T2map", ",", "T2fmap", ",", "T2vox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.", ",", "70"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"150", ",", "220"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549042371860256`*^9, 3.7549042619343824`*^9}, {
  3.866262286429801*^9, 3.8662622891948*^9}, {3.8709383721371264`*^9, 
  3.870938377657112*^9}},ExpressionUUID->"8c52458d-45d5-40ed-949c-\
38e8440a1f60"],

Cell["perform the EPGfit, fitting both water and fat signal", "Text",
 CellChangeTimes->{
  3.7549995006740847`*^9},ExpressionUUID->"3ef473e1-450e-4731-ae4d-\
89c5b79bd2a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2map", ",", "T2fmap", ",", "B1Map"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"watEPG", ",", "fatEPG", ",", "ffEPG"}], "}"}], ",", "resEPG"}],
     "}"}], "=", " ", 
   RowBox[{"EPGT2Fit", "[", 
    RowBox[{"T2data", ",", "echo", ",", "angle", ",", 
     RowBox[{"EPGCalibrate", "\[Rule]", "False"}], ",", 
     RowBox[{"OutputCalibration", "\[Rule]", "False"}], ",", 
     RowBox[{"EPGFitFat", "->", "True"}], ",", 
     RowBox[{"DictT2IncludeWater", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.866261943402553*^9, 3.866261948632841*^9}, {
   3.866262047001569*^9, 3.866262154769133*^9}, 3.866262811414209*^9, {
   3.866262953808297*^9, 3.866262955710544*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"01f5867e-d0e6-4ecc-92aa-dfbb4af4d59e"],

Cell[BoxData["\<\"The dictionary contains 201434 values, and took 6.6 seconds \
to generate.\"\>"], "Print",
 CellChangeTimes->{3.870938387682864*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"eae537a1-ef92-451e-8098-af28b66a1d19"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"T2map", ",", "B1Map", ",", "T2vox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.", ",", "70"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.5"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[30]:=",ExpressionUUID->"3e9a97a0-dd2f-4ec4-bfe3-85b303b130d6"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"T2map", ",", "T2fmap", ",", "T2vox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.", ",", "70"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"100", ",", "200"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549099865144615`*^9, 3.7549099905281663`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"6a2dbfc3-df24-43c6-a38b-c46b51dc77c7"],

Cell[BoxData[
 RowBox[{"PlotData", "[", "ffEPG", "]"}]], "Input",
 CellChangeTimes->{{3.8698037554486713`*^9, 3.869803761107154*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"5ffc8d0e-c31a-4ed0-8c25-b069aff53b11"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulate EPG Data and fit testing", "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7554985560315247`*^9, 3.755498559150863*^9}, {
   3.758348438387064*^9, 3.75834843870792*^9}, {3.758433092886845*^9, 
   3.758433096742123*^9}},ExpressionUUID->"206c273f-0ccf-4695-9121-\
5be90826dd71"],

Cell[CellGroupData[{

Cell["Simulate the EPG signal", "Subsection",
 CellChangeTimes->{{3.7583490562055683`*^9, 3.758349062121837*^9}},
 CellTags->"c:48",ExpressionUUID->"8445ef95-5973-4648-871d-e56f6b632789"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ex", ",", "ref", ",", 
     RowBox[{"{", 
      RowBox[{"pl1", ",", "pl2"}], "}"}]}], "}"}], "=", 
   RowBox[{"GetPulseProfile", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<sg_150_100_167\>\"", ",", "90", ",", 
       RowBox[{"{", 
        RowBox[{"2.2845", ",", "3.9632", ",", "768"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<sinc_centre\>\"", ",", "180", ",", 
       RowBox[{"{", 
        RowBox[{"1.9037", ",", "2.0560", ",", "486"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"SliceRange", "\[Rule]", "12"}], ",", 
     RowBox[{"SliceRangeSamples", "\[Rule]", "100"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.73657451115738*^9, 3.736671472682128*^9},
 CellLabel->
  "In[276]:=",ExpressionUUID->"57234781-617a-4162-9879-35e308aaf866"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"echo", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Necho", ",", "T2echo"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"17", ",", "7.6"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"angle", "=", 
   RowBox[{"{", 
    RowBox[{"ex", ",", "ref"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tfat", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"T1fat", ",", "T2fat"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"365", ",", "150"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Twat", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"T1wat", ",", "T2wat"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"1400", ",", "30"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7383022683834667`*^9, 3.7383022686959963`*^9}, {
  3.7583484500849504`*^9, 3.758348461828597*^9}},
 CellLabel->
  "In[277]:=",ExpressionUUID->"24da691e-d6de-410f-b0ef-1d2de61863d9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"b1", "=", 
   RowBox[{"N", "@", 
    RowBox[{"Range", "[", 
     RowBox[{".75", ",", "1.25", ",", ".05"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SNR", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"5", ",", "55", ",", "5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fat", "=", 
   RowBox[{
    RowBox[{"N", "@", 
     RowBox[{"Range", "[", 
      RowBox[{"10", ",", "60", ",", "5"}], "]"}]}], "/", "100"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.758348577382124*^9, 3.7583486435100155`*^9}},
 CellLabel->
  "In[281]:=",ExpressionUUID->"8984a19f-eabf-4e62-97e2-98267e2bcc61"],

Cell["\<\
sigB1 : SNR = 30 and fat = 30%
sigSNR: B1=0.9 and fat=30%
sigfat: B1-0.9, fat=30% and SNR=30\
\>", "Text",
 CellChangeTimes->{{3.758348486184921*^9, 3.7583485082277412`*^9}, {
  3.758348672821705*^9, 3.758348688469573*^9}, {3.758348848328043*^9, 
  3.7583488612875695`*^9}, {3.7583513359319706`*^9, 
  3.7583513506832733`*^9}},ExpressionUUID->"054abc16-56b6-40bf-a212-\
835aa4516f1a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sigB1", "=", 
   RowBox[{"AddNoise", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"TransData", "[", 
        RowBox[{
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"0.7", 
             RowBox[{"EPGSignal", "[", 
              RowBox[{"echo", ",", "Twat", ",", "angle", ",", "b1s"}], 
              "]"}]}], "+", 
            RowBox[{"0.3", 
             RowBox[{"EPGSignal", "[", 
              RowBox[{"echo", ",", "Tfat", ",", "angle", ",", "b1s"}], 
              "]"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"50", ",", "50"}], "}"}]}], "]"}], ",", "\"\<r\>\""}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"b1s", ",", "b1"}], "}"}]}], "]"}], ",", "30", ",", 
     RowBox[{"NoiseSize", "\[Rule]", "\"\<SNR\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sig", "=", 
   RowBox[{"TransData", "[", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0.7", 
         RowBox[{"EPGSignal", "[", 
          RowBox[{"echo", ",", "Twat", ",", "angle", ",", "0.9"}], "]"}]}], 
        "+", 
        RowBox[{"0.3", 
         RowBox[{"EPGSignal", "[", 
          RowBox[{"echo", ",", "Tfat", ",", "angle", ",", "0.9"}], "]"}]}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"50", ",", "50"}], "}"}]}], "]"}], ",", "\"\<r\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigSNR", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"AddNoise", "[", 
      RowBox[{"sig", ",", "snrs", ",", 
       RowBox[{"NoiseSize", "\[Rule]", "\"\<SNR\>\""}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"snrs", ",", "SNR"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sigFat", "=", 
    RowBox[{"AddNoise", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"TransData", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "ff"}], ")"}], 
              RowBox[{"EPGSignal", "[", 
               RowBox[{"echo", ",", "Twat", ",", "angle", ",", "0.9"}], 
               "]"}]}], "+", 
             RowBox[{"ff", " ", 
              RowBox[{"EPGSignal", "[", 
               RowBox[{"echo", ",", "Tfat", ",", "angle", ",", "0.9"}], 
               "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"50", ",", "50"}], "}"}]}], "]"}], ",", "\"\<r\>\""}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ff", ",", "fat"}], "}"}]}], "]"}], ",", "30", ",", 
      RowBox[{"NoiseSize", "\[Rule]", "\"\<SNR\>\""}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "/@", 
  RowBox[{"{", 
   RowBox[{"sigB1", ",", "sigSNR", ",", "sigFat"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.7583484752998204`*^9, 3.7583484835448604`*^9}, {
  3.7583485161003*^9, 3.7583485602140207`*^9}, {3.7583486512417836`*^9, 
  3.7583486703280087`*^9}, {3.7583487385524225`*^9, 3.7583487506008997`*^9}, {
  3.7583492916439*^9, 3.7583492959631824`*^9}, {3.758351355182659*^9, 
  3.7583513564450274`*^9}},
 CellLabel->
  "In[284]:=",ExpressionUUID->"ace4a269-d905-4882-89d8-90bd356cd7f9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fit the simulated EPG signal", "Subsection",
 CellChangeTimes->{{3.758349069323036*^9, 3.7583490793226967`*^9}},
 CellTags->"c:49",ExpressionUUID->"d12758da-d1d5-43a6-8aaa-503db8464fff"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2B1", ",", "T2fB1", ",", "B1B1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"watB1", ",", " ", "fatB1", ",", " ", "ffB1"}], "}"}], ",", 
     "resB1"}], "}"}], "=", 
   RowBox[{"EPGT2Fit", "[", 
    RowBox[{"sigB1", ",", "echo", ",", "angle", ",", 
     RowBox[{"DictT2fValue", "\[Rule]", "150"}], ",", 
     RowBox[{"EPGSmoothB1", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758348920042689*^9, 3.7583489895278234`*^9}, 
   3.845467890733239*^9, {3.8454681059467745`*^9, 3.8454681078021097`*^9}},
 CellLabel->
  "In[289]:=",ExpressionUUID->"552a216f-db51-4a52-837c-8826af038d2c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2SNR", ",", "T2fSNR", ",", "B1SNR"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"watSNR", ",", " ", "fatSNR", ",", " ", "ffSNR"}], "}"}], ",", 
     "resSNR"}], "}"}], "=", 
   RowBox[{"EPGT2Fit", "[", 
    RowBox[{"sigSNR", ",", "echo", ",", "angle", ",", 
     RowBox[{"DictT2fValue", "\[Rule]", "150"}], ",", 
     RowBox[{"EPGSmoothB1", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758348920042689*^9, 3.7583490207110653`*^9}, 
   3.8454678975176506`*^9, {3.845468112275992*^9, 3.845468113775572*^9}},
 CellLabel->
  "In[290]:=",ExpressionUUID->"75ab4e15-7874-4e05-accb-830a5a8437a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2Fat", ",", "T2fFat", ",", "B1Fat"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"watFat", ",", " ", "fatFat", ",", " ", "ffFat"}], "}"}], ",", 
     "resFat"}], "}"}], "=", 
   RowBox[{"EPGT2Fit", "[", 
    RowBox[{"sigFat", ",", "echo", ",", "angle", ",", 
     RowBox[{"DictT2fValue", "\[Rule]", "150"}], ",", 
     RowBox[{"EPGSmoothB1", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758348920042689*^9, 3.7583489895278234`*^9}, {
   3.758349024935327*^9, 3.7583490403141985`*^9}, 3.84546789857469*^9, {
   3.8454681207073975`*^9, 3.8454681222416143`*^9}},
 CellLabel->
  "In[291]:=",ExpressionUUID->"e5f441ab-6c4e-4b17-a787-cc5a724424cb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Evaluate the fits", "Subsection",
 CellChangeTimes->{{3.7583490835356913`*^9, 3.75834908874759*^9}},
 CellTags->"c:50",ExpressionUUID->"3661d520-8d0a-475a-b073-957f7c24d670"],

Cell[BoxData[{
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"T2B1", "[", 
        RowBox[{"[", "#", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"20", ",", "50"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<T2\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<B1 = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"b1", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "b1", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"T2SNR", "[", 
        RowBox[{"[", "#", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"20", ",", "50"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<T2\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<SNR = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"SNR", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "SNR", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"T2Fat", "[", 
        RowBox[{"[", "#", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"20", ",", "50"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<T2\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<fat frac = \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"100", 
           RowBox[{"fat", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "<>", "\"\<%\>\""}]}]}], 
      "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "fat", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.75834910393007*^9, 3.758349169277294*^9}, {
  3.758349205810248*^9, 3.7583492386886806`*^9}, {3.7583513807354507`*^9, 
  3.7583513963960643`*^9}},
 CellLabel->
  "In[292]:=",ExpressionUUID->"2df86a65-6a91-4969-a35f-485561eeaf98"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorPlot", "[", 
     RowBox[{"T2B1", ",", "b1", ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "60"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<B1\>\"", ",", "\"\<T2wat\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<T2wat as function of B1\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{"T2SNR", ",", "SNR", ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "60"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<T2wat\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<T2wat as function of SNR\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{"T2Fat", ",", "fat", ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "60"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Fat Frac\>\"", ",", "\"\<T2wat\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<T2wat as function of fat fraction\>\""}]}], 
     "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7583511545395966`*^9, 3.758351217714362*^9}, {
  3.758351299601017*^9, 3.7583513035333433`*^9}, {3.845468516021093*^9, 
  3.8454685219772577`*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"c373eede-fb5d-4af4-906d-3ef381ffe28c"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DTI and IVIM ", "Chapter",
 CellChangeTimes->{{3.7548951014856977`*^9, 3.754895112634607*^9}, {
   3.75489562596196*^9, 3.754895628456525*^9}, 
   3.7549109686882687`*^9},ExpressionUUID->"47034db1-d0d6-4b23-af6e-\
0f6546045b3b"],

Cell[CellGroupData[{

Cell["Generating diffusion gradients", "Subsection",
 CellChangeTimes->{{3.754910970230391*^9, 3.754910977730441*^9}},
 CellTags->"c:51",ExpressionUUID->"25adc37f-e4d2-4d9f-a5ed-8612c20d46c3"],

Cell["Generate gradients in the notebook.", "Text",
 CellChangeTimes->{{3.75491113415291*^9, 3.754911143400069*^9}, 
   3.754913719097209*^9},ExpressionUUID->"ea42799b-6877-4b38-b569-\
13addb9d2db3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"grad", "=", 
   RowBox[{"GenerateGradients", "[", 
    RowBox[{"{", 
     RowBox[{"6", ",", "6", ",", "12", ",", "24"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bval", "=", 
   RowBox[{"{", 
    RowBox[{"10", ",", "100", ",", "250", ",", "600"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bvals", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"Length", "[", "#2", "]"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"bval", ",", "grad"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grads", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"grad", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bvals", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"bvals", ",", "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549109906143837`*^9, 3.754911107683816*^9}, {
  3.7549144751927624`*^9, 3.7549144808054914`*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"27dca582-2b36-49e0-88a2-e3bb99bd2d01"],

Cell[BoxData[
 RowBox[{"GradientPlot", "[", 
  RowBox[{"grads", ",", "bvals"}], "]"}]], "Input",
 CellChangeTimes->{{3.754911113493312*^9, 3.754911119058152*^9}},
 CellLabel->
  "In[301]:=",ExpressionUUID->"9d2e7d89-461c-48fc-92b8-0015aa0d0da2"],

Cell[BoxData[
 RowBox[{"ListSpherePlot", "[", 
  RowBox[{
   RowBox[{"bvals", " ", "grads"}], ",", 
   RowBox[{"SphereSize", "\[Rule]", "30"}], ",", 
   RowBox[{"SphereColor", "\[Rule]", "Blue"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758439780019206*^9, 3.7584398502570844`*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"512a6259-5ab7-4fd1-b670-1393be8510df"],

Cell["Or generate Gradients in the GUI", "Text",
 CellChangeTimes->{{3.7549111465330987`*^9, 
  3.7549111568381367`*^9}},ExpressionUUID->"06fed56e-cf72-4eab-877f-\
8a2fa48264d1"],

Cell[BoxData[
 RowBox[{"GenerateGradientsGUI", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7549111235416102`*^9, 3.7549111293220572`*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"505f5e4d-61b2-45a6-8a8a-10a30bdf2cee"]
}, Closed]],

Cell[CellGroupData[{

Cell["Import The Data", "Subsection",
 CellChangeTimes->{{3.755000756204663*^9, 3.7550007614125185`*^9}},
 CellTags->"c:52",ExpressionUUID->"37567aef-8b97-425f-abdf-d82ae053b962"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dwi", ",", "grad", ",", "val", ",", "dwivox"}], "}"}], "=", 
   RowBox[{"ImportNiiDiff", "[", "\"\<DTIdata.nii\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"datareg", ",", "dwivox"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<DTIdata-reg.nii\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tens", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"ImportNii", "[", 
     RowBox[{"\"\<DTI-tensor.nii\>\"", ",", 
      RowBox[{"NiiMethod", "\[Rule]", "\"\<data\>\""}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"labels", ",", "vox"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<labels.nii\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.754895634046774*^9, 3.754895667562751*^9}, 
   3.7549147982158546`*^9, {3.7549998933836317`*^9, 3.7549998936081953`*^9}, {
   3.7550004747855062`*^9, 3.7550004893652954`*^9}, {3.7550005862069235`*^9, 
   3.755000615146139*^9}, {3.7550007439214835`*^9, 3.7550007442834463`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"b6a6e3c8-61e2-4f74-8ee2-1ecd45f55cfc"]
}, Closed]],

Cell[CellGroupData[{

Cell["Prep the IVIM and DTI data", "Subsection",
 CellChangeTimes->{{3.75491344533817*^9, 3.754913448807496*^9}, {
  3.754913730092126*^9, 3.754913732275964*^9}, {3.7549138844520955`*^9, 
  3.7549138871242504`*^9}, {3.754999581165014*^9, 3.7549995852456675`*^9}, {
  3.755000767977996*^9, 3.755000769270936*^9}},
 CellTags->"c:53",ExpressionUUID->"29712ec0-7f9d-4363-bd69-fedc89b926de"],

Cell[CellGroupData[{

Cell["Sort and mask", "Subsubsection",
 CellChangeTimes->{{3.755000777818706*^9, 3.755000782394892*^9}},
 CellTags->"c:54",ExpressionUUID->"7b6f1d42-3372-4eae-9f3b-52b01fd6c20a"],

Cell["\<\
First step is to order and Normalize the diffusion data. Also find all the \
unique b - values and their positions.\
\>", "Text",
 CellChangeTimes->{{3.754999902345565*^9, 3.7549999343805895`*^9}, 
   3.755000639302743*^9},ExpressionUUID->"27abfcd5-f584-46cd-8df8-\
6aa1f69b339e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dwi", "=", 
   RowBox[{"NormalizeData", "[", "dwi", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dwi", ",", "grad", ",", "val"}], "}"}], "=", 
   RowBox[{"SortDiffusionData", "[", 
    RowBox[{"dwi", ",", "grad", ",", "val"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"bval", ",", "pos"}], "}"}], "=", 
   RowBox[{"UniqueBvalPosition", "[", "val", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bmat", " ", "=", " ", 
   RowBox[{"Bmatrix", "[", 
    RowBox[{"val", ",", "grad"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mdata", "=", 
   RowBox[{"Mean", "@", 
    RowBox[{"Transpose", "@", "dwi"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549134223765755`*^9, 3.75491346814913*^9}, 
   3.7549137609540815`*^9, {3.7549145002322235`*^9, 3.75491450083834*^9}, {
   3.754914563063095*^9, 3.754914615898838*^9}, {3.7549159495136757`*^9, 
   3.7549159519931593`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"e685e2ff-8cec-433d-90f3-cd1e4ba107a4"],

Cell[BoxData[
 RowBox[{"GradientPlot", "[", 
  RowBox[{"grad", ",", "val"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549137630150776`*^9, 3.7549137707406816`*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"2c219bff-98ca-4149-8f73-f5d4c18d1d6f"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"mdata", ",", "dwivox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549135038347163`*^9, 3.75491351177946*^9}, 
   3.7549996248755584`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"58a620c5-fd10-4d1a-b298-19131a1f4f75"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"mdata", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskComponents", "\[Rule]", "2"}], ",", 
     RowBox[{"MaskClosing", "\[Rule]", "3"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dwi", "=", 
   RowBox[{"MaskData", "[", 
    RowBox[{"dwi", ",", "mask"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549135142786407`*^9, 3.754913543186923*^9}, {
  3.75491373622853*^9, 3.7549137504520597`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"82cbf336-e0f4-43db-94e4-46d687594afa"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"mdata", ",", "mask", ",", " ", "dwivox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549135038347163`*^9, 3.75491351177946*^9}, {
   3.754913554131217*^9, 3.7549135547232995`*^9}, 3.7549996256124425`*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"e78c9670-4878-485f-9214-babcab9aa322"]
}, Closed]],

Cell[CellGroupData[{

Cell["Denoise DWI data", "Subsubsection",
 CellChangeTimes->{{3.754914631559713*^9, 3.7549146366652336`*^9}},
 CellTags->"c:55",ExpressionUUID->"75236b9f-93a9-4123-9f0b-e0d6063ca27a"],

Cell["\<\
Denoise with a PCA based method, if noise is also measured it can be used as \
an input.\
\>", "Text",
 CellChangeTimes->{{3.754999595850682*^9, 3.7549996174036827`*^9}, 
   3.7549996609142113`*^9},ExpressionUUID->"8f267ee5-face-4d96-81f2-\
eb7a65fb2c80"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dwiN", ",", "sigma"}], "}"}], " ", "=", " ", 
   RowBox[{"PCADeNoise", "[", 
    RowBox[{"dwi", ",", "mask", ",", 
     RowBox[{"PCAOutput", "\[Rule]", "False"}], ",", 
     RowBox[{"PCATollerance", "\[Rule]", "0"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754914643126322*^9, 3.7549146569014473`*^9}, {
   3.7549147466066494`*^9, 3.7549147486135406`*^9}, {3.7549996343115797`*^9, 
   3.754999634647128*^9}, {3.7987708057251964`*^9, 3.7987708090481696`*^9}, 
   3.7987730509492016`*^9, {3.837232613241161*^9, 3.8372326175714617`*^9}, {
   3.8372430897617474`*^9, 3.837243096623809*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"b25ec0c8-9dee-4355-8b9d-d5d64b8430a5"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dwiN", ",", 
   RowBox[{"MaskData", "[", 
    RowBox[{
     RowBox[{"dwi", "-", "dwiN"}], ",", "mask"}], "]"}], ",", "dwivox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "150"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "15"}], ",", "15"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549147303342247`*^9, 3.754914741221796*^9}, {
  3.754914837336503*^9, 3.7549148434932365`*^9}, {3.754999733194705*^9, 
  3.754999744672658*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"2421eea9-a6e2-44b3-aab6-fe2b35f370c9"],

Cell["\<\
With the sigma map from the PCA denoise the SNR can be calculated.\
\>", "Text",
 CellChangeTimes->{{3.7549996406923895`*^9, 
  3.754999661576975*^9}},ExpressionUUID->"645118b4-3efb-4e87-b82b-\
7000552f32c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SNR4D", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"DevideNoZero", "[", 
        RowBox[{"#", ",", "sigma"}], "]"}], "&"}], ",", 
      RowBox[{"Transpose", "[", "dwiN", "]"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.754914770757429*^9, 3.7549147779259467`*^9}, 
   3.754999639357337*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"3d0989cb-3f8b-44de-811e-bb762ce4f8ac"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"SNR4D", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "75"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549997522715864`*^9, 3.7549997718589225`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"cb791753-16a4-485a-856b-2d0dfaadcfaf"]
}, Closed]],

Cell[CellGroupData[{

Cell["Motion and eddy current correction", "Subsubsection",
 CellChangeTimes->{{3.754914684136002*^9, 3.754914709700195*^9}},
 CellTags->"c:56",ExpressionUUID->"d4ebefef-2c40-4afa-86e2-01e82ef7e608"],

Cell["Register both legs simultaneous.", "Text",
 CellChangeTimes->{{3.7549999548970714`*^9, 3.7549999729488125`*^9}, {
  3.7584403903058157`*^9, 
  3.758440413362672*^9}},ExpressionUUID->"fcfdba04-a6f9-409b-bf78-\
69c9d9a513ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datareg1", " ", "=", " ", 
   RowBox[{"RegisterDiffusionData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dwiN", ",", 
       RowBox[{"Dilation", "[", 
        RowBox[{"mask", ",", "2"}], "]"}], ",", "dwivox"}], "}"}], ",", 
     RowBox[{"Iterations", "\[Rule]", "100"}], ",", 
     RowBox[{"NumberSamples", "\[Rule]", "1500"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7549147131639323`*^9, 3.7549147214124303`*^9}, {
   3.7549999466673007`*^9, 3.7549999473195624`*^9}, 3.758440407491884*^9, {
   3.76035821701776*^9, 3.7603582235379643`*^9}, 3.7607790796429935`*^9, {
   3.7607794942163477`*^9, 3.760779497513489*^9}, 3.7614797778632016`*^9, 
   3.761479997024624*^9, {3.87092778407057*^9, 3.8709277879922247`*^9}, {
   3.8709280374621983`*^9, 
   3.8709280609966497`*^9}},ExpressionUUID->"bd7f1df1-29c6-4ca4-a54c-\
3c906bd69bd4"],

Cell["Separately register the left and right leg", "Text",
 CellChangeTimes->{{3.7549999548970714`*^9, 
  3.7549999729488125`*^9}},ExpressionUUID->"2c663dae-ce55-4c0e-9ead-\
798d28b2441d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datareg", " ", "=", " ", 
   RowBox[{"RegisterDiffusionDataSplit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dwiN", ",", 
       RowBox[{"Dilation", "[", 
        RowBox[{"mask", ",", "2"}], "]"}], ",", "dwivox"}], "}"}], ",", 
     RowBox[{"Iterations", "\[Rule]", "100"}], ",", 
     RowBox[{"NumberSamples", "\[Rule]", "1500"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7549147131639323`*^9, 3.7549147214124303`*^9}, {
  3.7549999466673007`*^9, 3.7549999473195624`*^9}, {3.8709280501332273`*^9, 
  3.870928052037201*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"9b20175a-57c0-4449-83ec-169ccd6f1d3d"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IVIM Fitting", "Subsection",
 CellChangeTimes->{{3.7549137794368954`*^9, 3.7549137848242793`*^9}},
 CellTags->"c:57",ExpressionUUID->"194fc7a6-9250-4380-ab91-b6f48a0893c5"],

Cell[CellGroupData[{

Cell["Whole volume calibrate", "Subsubsection",
 CellChangeTimes->{{3.7549138637211986`*^9, 3.7549138972407355`*^9}, 
   3.754999859291905*^9},
 CellTags->"c:58",ExpressionUUID->"c83a9054-dd74-47d7-ad95-3b9d6619e603"],

Cell["\<\
Calculate the Iso images from each b - value and calculate the mean signal \
volume\
\>", "Text",
 CellChangeTimes->{{3.7549999858705673`*^9, 
  3.755000031508486*^9}},ExpressionUUID->"c0285daf-d6f8-45d3-b7b0-\
a5175ce9af64"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dwiIso", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{"Transpose", "[", 
        RowBox[{"datareg", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "#"}], "]"}], "]"}], "]"}], "]"}], "&"}], "/@", 
     "pos"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sig", " ", "=", " ", 
   RowBox[{"MeanSignal", "[", "datareg", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sigI", "=", 
   RowBox[{"MeanSignal", "[", "dwiIso", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549159320232944`*^9, 3.7549159330627413`*^9}, {
   3.7549160034802017`*^9, 3.754916006774444*^9}, 3.754999982025779*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"2c24046e-db0b-4e2d-93ce-548abb04f40d"],

Cell["Fit and show the IVIM signal of the whole volume", "Text",
 CellChangeTimes->{{3.7550000404661784`*^9, 
  3.7550000531960096`*^9}},ExpressionUUID->"ee6a7083-6d3f-4950-8cbe-\
77fbc5364897"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fiti", "=", 
   RowBox[{"IVIMCalc", "[", 
    RowBox[{"sig", ",", "val", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", ".05", ",", ".003", ",", ".1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitIi", "=", 
    RowBox[{"IVIMCalc", "[", 
     RowBox[{"sigI", ",", "bval", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", ".05", ",", ".003", ",", ".1"}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotIVIM", "[", 
  RowBox[{"fiti", ",", "sig", ",", "val", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotIVIM", "[", 
  RowBox[{"fitIi", ",", "sigI", ",", "bval", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7549155168555403`*^9, 3.75491555474142*^9}, 
   3.7549157282165155`*^9, {3.7549157951437693`*^9, 3.7549157954631233`*^9}, {
   3.754915838571384*^9, 3.754915852712798*^9}, {3.754915888023015*^9, 
   3.7549158974301367`*^9}, {3.754915972296256*^9, 3.7549159737517576`*^9}, 
   3.754916032154574*^9},
 CellLabel->"In[62]:=",ExpressionUUID->"fea884d6-0f69-4111-9d39-fa9e2a661e4d"],

Cell[BoxData[
 DynamicModuleBox[{QMRITools`PlottingTools`Private`plot$$ = GraphicsRow[{
    Show[
     QMRITools`PlottingTools`Private`pl$310298[
     QMRITools`PlottingTools`Private`f1$310298, 
      QMRITools`PlottingTools`Private`f2$310298, 1 - 
      QMRITools`PlottingTools`Private`f1$310298 - 
      QMRITools`PlottingTools`Private`f2$310298, {
       Part[QMRITools`PlottingTools`Private`cols$310298, 4], 2}, #, 
      QMRITools`PlottingTools`Private`func$310298, 1], 
     QMRITools`PlottingTools`Private`pl$310298[
     1 - QMRITools`PlottingTools`Private`f2$310298, 0, 0, {
       Part[QMRITools`PlottingTools`Private`cols$310298, 1], 1}, #, 
      QMRITools`PlottingTools`Private`func$310298, 1], 
     QMRITools`PlottingTools`Private`pl$310298[0, 1, 0, {
       Part[QMRITools`PlottingTools`Private`cols$310298, 2], 1}, #, 
      QMRITools`PlottingTools`Private`func$310298, 1], 
     QMRITools`PlottingTools`Private`pl$310298[
     0, 0, 1 - QMRITools`PlottingTools`Private`f1$310298 - 
      QMRITools`PlottingTools`Private`f2$310298, {
       Part[QMRITools`PlottingTools`Private`cols$310298, 3], 1}, #, 
      QMRITools`PlottingTools`Private`func$310298, 1], 
     ListPlot[QMRITools`PlottingTools`Private`pdat$310298, PlotStyle -> {
        Part[QMRITools`PlottingTools`Private`cols$310298, 4], 
        PointSize[0.02]}]], 
    Show[
     QMRITools`PlottingTools`Private`pl$310298[
     QMRITools`PlottingTools`Private`f1$310298, 
      QMRITools`PlottingTools`Private`f2$310298, 1 - 
      QMRITools`PlottingTools`Private`f1$310298 - 
      QMRITools`PlottingTools`Private`f2$310298, {
       Part[QMRITools`PlottingTools`Private`cols$310298, 4], 2}, #, 
      Log[QMRITools`PlottingTools`Private`func$310298], 2], 
     QMRITools`PlottingTools`Private`pl$310298[
     1 - QMRITools`PlottingTools`Private`f2$310298, 0, 0, {
       Part[QMRITools`PlottingTools`Private`cols$310298, 1], 1}, #, 
      Log[QMRITools`PlottingTools`Private`func$310298], 2], 
     QMRITools`PlottingTools`Private`pl$310298[0, 1, 0, {
       Part[QMRITools`PlottingTools`Private`cols$310298, 2], 1}, #, 
      Log[QMRITools`PlottingTools`Private`func$310298], 2], 
     QMRITools`PlottingTools`Private`pl$310298[
     0, 0, 1 - QMRITools`PlottingTools`Private`f1$310298 - 
      QMRITools`PlottingTools`Private`f2$310298, {
       Part[QMRITools`PlottingTools`Private`cols$310298, 3], 1}, #, 
      Log[QMRITools`PlottingTools`Private`func$310298], 2], 
     ListPlot[QMRITools`PlottingTools`Private`pdatL$310298, PlotStyle -> {
        Part[QMRITools`PlottingTools`Private`cols$310298, 4], 
        PointSize[0.02]}]]}]& }, 
  GraphicsBox[{{}, {InsetBox[
      GraphicsBox[{{{{}, {}, 
          TagBox[
           {GrayLevel[0], Thickness[Large], Opacity[1.], 
            LineBox[CompressedData["
1:eJwVkHk41Akcxh0511GiqFTSk6ucjZTN94uIhgo5Ggw1tEJhsqOMMfw61ObI
pvKoVJpybkUNSY1E2tyK+nU4Mu5jxuZsd9PO/vE+7/M+z/vH5331DkZ5hspI
SUntl+h//y5zSK8pu7La8WVXqIf0JCybZRernObDjgNKqg3fxdDAXk6vNGyH
U98P4ty8GIx/3tH3xr8fTDKzXBliMdCu0XhBMzOQnP2QSPosBmZTqNyGF/LI
qQhvr6sQQ2LIGOWc4XKMlOf7rmeK4ZS5acsTfwNsm0/IV5wWgUNvYL6wxgCD
O7e5KEyK4EdGWpKKoSF214vnlcZFEC8et6RPG+JqRUHIyn4RxNwrviKdZoyr
srxCjnSIgL7R6ICLYBN6HfGzq+eLYJWmxt/hiy2R0iIXvYQtgjl11bR5pg1+
Mdh4N15NBFkZlMiiPBsMmFiZyfpJBObqdGrAGxsMCbJKiFUUQZjafaXnFltx
3VkrB5aMCEgVjzMpk1uR6ffPiszZCXisdIm77KgtSpsR59b2TEC8rC5z82E7
zFfwiEwtnYBE9mWTx2YO6BMwYtBHmwAZL6OXsoouOOF87/FKwTjYDa0g9YJ2
Y2rHHR5dbxwuVF5YPbfeE1PZ8t6UK2PQHVibVr/fG+mPdoWnKozBptgt769z
/XBQtlxDkzsKe+TLXd2i/JE3YytQlx2F5lnhPCOXjgkVpuqF3BHIsEgPK2wM
xmjO7I0chRGoXNtYw8OD2HFlz3bLrGFYUh1Uua+TgaVDo2sidIbB6+oJp8nd
oWikYN2xuHAIajeMReHwIZRz79qSazEEVhGcFM34MLRw+pZRKBiEtIksq47J
w3iSGtET5z0IWmsWJbqkRGDr27S6MwMDkJI+H1AgcwQv1Y2pyHMHwOCPHR+f
Xj+KpU+LtDU0BoDxwi+vSDsaQ6nbkqwK+8Gwuf3WeEc0ammv16W49sOp+6xJ
xVsx2Kg9oq0jFEKnOV3pahATeRueu108LYS7au+0o1YcQ+V1MUXpJkJQqzsR
pztwDB0i9DurGvsgQjv4pn1eLDqZ8qWkYvsgaAdTG6N+xfz2ybGKZX3Q0aSZ
kmTDQiVvQbro6RfYPv2t2nqahTYWLzk14ZI8pezyqjoOt74Y/Oix9AtYZtJz
mjnH8bq0rA/U9kLBeQehls0JHLT+ILeJ1Qv8QE+2jUw8rt7p7LFqfS9UtPC6
2gTxWMYOH54r7YG9y/UzHM+zsczo5GkTjR7oWhAqb9yVgF2Nrxc3cbthzIHC
8ZHj4Egkjzf8tQsu0Mvs/Ns42KMp2zoT0AXGOsyGzrREXDB6U1nw9jP4Fwfe
MfbnYqysIe2h/WeQa46sCtZIQrVKdwVr/icgl7op/RKdhPsS/D1zN38ClnNN
Iu1dEh5mdCe0F3+EjD99P5ylJCNnaNYrxfQjDB+3NiN/T0ZS11lHzP8AqlrF
JZrzydjCaaCmUj5AiZS9eqoPgWYx7p+kn5Nw232028KPwFaN7qFvz0jIybl4
7/1+AkVfdNZ8rSLh7OZBd/1AAoMUTqsKK0hghJ1PfcIg0JP1aqT+Pgkr2jqV
RqIJzFAXXbt8Q9K/Eb7I+TyBqpm0Tm8uCdzxpR1jqQTqP0gz9+KQwNr67HZm
OoGMxH/5e9kkhLxVd+zKJLCcygW3OBJAgZ8cm01g34PHbk5RJMwe/bGQd4dA
mZYpNwgiYaKqoMUln0DHHIddEEhCv6JnrqiAwKnaSzHgT0J7Hm/7thIC9UJt
7dCXhJJ3rgntZQTOhui3Ou6R7NWfosY9InDh5uZVTu6SvdHXVuqWE/i6xPSi
M1XCryx+ElZJoC2zdcF1p4TfN/s3tSoCSWrUFNVJws+zpz16SqAJZXTJbkcS
Iv8aNaIJCBwS/Ezbay/5xy7r249qAmXjGU2eQMJ/pIGjXA==
             "]]},
           Annotation[#, "Charting`Private`Tag$310352#1"]& ]}, {}}, {{{}, {}, 
          TagBox[
           {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], LineBox[CompressedData["
1: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
B/q9yLM86c9RlxpXQV+QD2yIDlpVeA+gFXGO0sZQHzjEOzY9f3QA8bHtqayI
8AGdiDydusV+5PeKpe0KxQeuTfJ93OnRjw660s4YXPYBA7GUUkPfPhSc9ENw
6o4PNPEJ0V269gwdHnhxe3HUB36limcEKXahShsWjgOvfED1XoZ5Pn0XUvip
Gnt+0geSnmteVH/RibT3Nzrdf+8DfK61HPwunSjAtVjc55sP5Pe+0a7K7UDN
dOE1P3b6wtefSwr++9qRenaNiDCzL/x1vhh9fKENDUssXzdk9QXNx1Mt9k1t
6IOBY1gNpy+IfS2kZrNvQ0wFOjhY0BcsvheFhlW1ImMk/GzztC9YunXS1jm3
oHcvrE6LI18YSkgM/o1bkKtjdpn5GV/YHflkfxFPC4q4xHq5Uc0Xfvb0VPBl
NqOCiV/6UYa+EFPdpRPu8hR9DRqY2uHlCzayQuqXJRtR7IOgZYbbviCRz98+
IvsYJZ6fOElT5AvqsUqnuf7UocsLBPl3sS8shx4jDXfXoWxROvbv5b6gpvWV
t9GiDt2/mX588vE/PyuRcUcv1aJXVx4GVQz5Qu6m/JtbVDXozVHO5rsjviAr
76Us+KIazfQF7ywY9wWvM3Zcuwqq0dedOCtzyhdkFD7JCJ2tRtSkgfroeV84
rYrUpVKrkITPl209Kj9wKeFS+X2yEh1j1T57jsYPXNUpXN27K9GJ8kcpqvR+
ELJvmvfb3CN0Zj7koAKLH5x5wheim/kIGdvsBGGef/x44VmdjYeIpCscsybl
BwaWfMJcNx+gMWkrxlxrP9hxrjqywLsMnWO7YRpn5we/eyaK+2XKUMfS63u+
jn7AmphfHblWiirvG2mqu/vBkSGxUe/oUpQqcT55NcgPJCwusAZcv4c0Dyvu
0r3sBzNt3Rs0b++i1p1hlgppfrAos9XAVXoXnfxUVyGS4QeMbM9e3wi8i0SL
j2v/zvaDkW9RgjtZ7yJaYfErpXf+6WOJWZJSKUZP+Xn30DX5AVX3adPNjiIk
9/eC7XKzH6QV1LQtZhah8ulrjybb/CC2fEDjrGsRys3bo1/Z4wdkqb1ih3YX
oZD9jOnWo37QafJ0Jt66EMns/cXZsOAHSdL2EgfYC1Ax6ziPN68/BD8lszP6
3UQRebrD2Qf8YWEny0d3kZtIT6IvuUPAHyJv7kiKncxH2xotf/aJ+sPbWL+w
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
3UQ=
             "]]},
           Annotation[#, "Charting`Private`Tag$310486#1"]& ]}, {}}, {{{}, {}, 
          TagBox[
           {RGBColor[0, 1, 0], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxNz30w03EcB/DdQrhwhSydyuk89YBEqwvzkJtC3ZSHrW3O0IpsLc3DbOh0
UzMP5TrnqczUyqo7hxqyQ0+HOasNdccfUckonaf5I6q7fL6/z93nPve6e//x
/jgncSgpeBwOF/V3/93f+FTnwSqVGvd/ti8LmrfcaAvacL/AgaFy14I9j4d9
fk+bAlNrqXLm0hKYN5hi6tprRtqwKNngd9PdAVzkfXCog+YGXrGxkhp5RJQX
3N33wisEjI/xeL3JnAwO/OY45syMBperynet7KWAJ+h90jcJ58AHMo+M1uXH
g0+btUdEcmhgzfKkkVXPAJf5lLIfDSSCVXsGeuSkJPBWNVN1Vs8Cx9TknJiP
TgH3uRo4pOlUsG+aUGyXywZL5yp9dfMXwfa7TURkcRpYXGo8r8BfBrs9CfvU
VZcBZvXGyx4TuGB3jbZhVodc9Iw/b95wBaz3ZljUMHngB9YjBI7jVbD1q5ws
py/IaYTE+8GyTDAzjEcgca6BdYN24gIiHxywuKr2X8R4wZL8Vp0FPlTBqNYI
s8EKScikPTEH3EanCIj4XPDzIfn4cDfyGQeXslCJADy+Nmm5/2Qe2BDiJ4w1
FYLLGS2BtGFkzx28fr1UBKY105s8aflgU016Z+K2AvCYbaTFBS4yP7xHRB1B
LnsX97HYrxA8ne3vNXYb2cq+WWlnRFbigm1KYq+DG6NmJnzikaur7zwdTUAu
Pvw1yoWOzGJLSjpYyI7DeovvXEz+3iWTcAly/qytzlCCzD/6srGiFDn5g03o
eAVy0Oa2wswq5OWM9TVZE/Jcp2KI/BB5ypxS/0OBrJXJA44pkZUjEXnaFsy/
Lgunslox/3Jrdzq1Y/pb/uxgqzD946puWXdi+suDqa1dyOm/Zjyo3ciswMrV
dTXyH29pHgQ=
             "]]},
           Annotation[#, "Charting`Private`Tag$310539#1"]& ]}, {}}, {{{}, {}, 
          TagBox[
           {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVkHs01AkUxzWbPLZYIqOV1tHqoaQ8Vir3ei7G9Birx4zXNpHSNpKIMYbf
4Wh3vIrtlCZpmtppWbaHmIiNVCdDZkM/NJIxHoNJKY+eO/vHPffcc77nfD+f
a7OPw4ii6Ojo0LXz//5EibaRnZU2hLyuHVX2aGDJNLdsYVYVfBA8uFZKauAx
1yJcukoOdfm0orAuDazZ4jPwL2sQPoTWjDyTa4ApZIoj3r0Dk8HmvLZHGoiX
RenaNS7ARpNZWdNtDaTtH3P5dZUFzvrrfGw9rYFMR4e2O6yVmFxzLimSpoEZ
40W5s/FuuLlhbUzdjQlI456xr1nvhYzJhNRxuwmgBK9u/krfH6u9k27uLR0H
j+GlpE3ENpR+T+gvMxmHAmmB9cwKBgpL9ejTuWPQF9aU+2BvCM4InTadpIzB
uoQfnl3g70EfuqMgOFUN2xfcDgjisHCc2rGdN08NrdPKWXZJOBZsLmhpTRuF
/A15MddaIvGpOHWrtd4oSL9ruSfGffjc1VipLhwBk4YI6U+dbKwwtDD3sRyB
4PPJvpPbojDYxfrMe8kwNNmNcXAkGkXuxTanNwyDUywv2ywlBh8ZXRkT1Q9B
7kSRU8fkQdwlOGeaEDIE5svnp/lnx6JP29XrmSoVZOfNhkoov2A9zevFfL4K
Vv7l01N34Qhez7A/bmKqAnbjHtGf1DiMHiixc7o2CKta5ZfGO+KwyZaidg4Y
hMzKxEn9S0exxM3sE1WphE7HcIPzEfFYGfV+S2GWEq4adVE5S4+hlfuBS3n2
SjC6n5y0THUM7xdtbK9tGYBYamSppygB2QzVpy/HBiDCJ56KnOOYrHdIXb1k
ADpkZtnpbolo1jacq6l7CVvfzjW4vk3EvwsDefcOae8pQ/+HDUm4cPRyz87F
L2HjqfDiVt4JLDRWhEBTP0gEXkpzt2TU5zTprkvsh6owBteNkoLIdN9ptaIf
qtvEivb6FDRVho7MXH8BOyxs870FXLRo5mbZm74AxWel4drAVPxZ2PyNjN8H
Y14uvF26POTricQjbxRQEH7Dg9XOw6HmeU/ehSpgjWX8487cNBTEyqWSp8+B
VRZ2ZQ2Lj/bClcybns9Bt/VwbaRpOh5Mp+u5VvUCuTjI4EBcOn5ksRglzr2Q
6HcvjdmVjrKdfanysh7If7S7+6RLBqYrpoOzHXpg5ITrevJ0BlpT/SxfVXXD
IvOycrPZDCxPeUzLcemGch1P45xdBEZz6L3z/iHhMl3dt2EPgV+b9A3P3SWh
uLiw4tleAh36LZe/qSXhpPMQ3TaMQIlu1iJlNQnsGEHOHTaB5QkPRx9UkrC0
vdNgNI5AAyON8MxFbf7iofl+AgIb8pmdIXwS+OOLO8ZyCOyuyHUM5pGQuOnu
5VN5BFrxPlbt4JKw/6mxt+IUgccD+RCURALoVWUknCWworImyJdDwvSRL59F
VwhUyaaCIIKEiVpJm/8fBK4+5xUIYSQM6jNKNBICext/PwosEuQi8Vb3cgKN
92/2wN0klHcFpMpvEKhh2z7x3q71tZ2iJd0icO6is5UvXesbJ/x22W0CH5Y5
FPrRtPyGr+7ESAn0OPrkc8CPWv7dZ38zqiVQEciZovlq+cWezFt1BDo5q022
eZNw+LV6NbOewNd3tzB3eGr/41E096VB25/MljGAhP8AVExZ3A==
             "]]},
           Annotation[#, "Charting`Private`Tag$310592#1"]& ]}, {}}, {{}, 
         {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQDQPuqyIuHpf+YA/hfbD/tdfhoNKE93D+VcutGb2y
CHmOi7NMW1kQfMsd5rO5eRD8RUaSge3nEPrz4tLNWZfD+CoOQUqWBw99fwfn
Pzc1DP3/HMF3c2v3sL0A41s6vCnfVC6VjODvLf6lz96A4PPEyIg/XfUWyo90
uHq0wnb/9ldwfmucX7WfLoIv8iqw9psRjJ/pcNVjZ21V/XM4f5P4d6Zrws/g
fIf9iUpfEhD8Px6flxoYINQ/2pvk6LwDIR8U8XjKWnEYv9LhRaRVNUPjAzg/
Zd3KecGr7sH5S/ZkVG4MRvDZxE+xSEQj1Hc7eaga3EXwjeaXXXkgjOAzKgiG
ZF57COeXrWzVVnSG8g80Oby/I/Lwa/R1OL891mzraa5bcH5Agv4RqYnX4HwN
jg61LQ434fz028f5laqvwvlv7e0MCw0Q+vV+3Do3Swah/pnSlud1z2/A+VP5
uC4dq0Oob3jQYPk8E2FfRACjQNU7BL8gpbTRe+VNewCF0s0e
           "]]}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, False}, {True, False}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Signal\"", HoldForm], TraditionalForm], None}, {
          FormBox[
           TagBox[
           "\"b-value [\\!\\(\\*SuperscriptBox[\\(mm\\), \\(2\\)]\\)/s]\"", 
            HoldForm], TraditionalForm], None}},
       FrameStyle->Thickness[Large],
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{34., 5.2857174986613416`}, {35.999999999999986`, 1.}},
       ImageSize->200,
       LabelStyle->Directive[
         GrayLevel[0], Bold, Small, FontFamily -> "Helvetica"],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{-0.0999877530612245, 599.9999877530612}, {0., 1.1}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {106.66666666666667, -64.89356881873896},
       ImageScaled[{0.5, 0.5}], {200, 123.60679774997895}], InsetBox[
      GraphicsBox[{{{{}, {}, 
          TagBox[
           {GrayLevel[0], Thickness[Large], Opacity[1.], 
            LineBox[CompressedData["
1:eJwVj2s4lAkYhq0lhzQIJeuQZTXkECLtlbykrlFqWzZEM2QQRjnEKOP4RSw5
lWRFGSHFxtoQyosOi5DzIUmMEOMbhaLLZu2P+3r+3D+eW93d385TWEhIyH6d
//dfYS/1tqwaLJsZTo9SMLHY8plTIhVXaRFTGKK+u9wQWzlbGTXULosGzWsZ
W7RsUWef9Xi3y4SFg9/qMzGuGzrnOBe4Li1ZiH/K3HmrJRCD2jxFtZo2QM1q
/psjGgRGesya/E7dCqry4dfMeOkYu0u/o9ZlB/RE4QktMS5avaPf5TXugNrS
b64sGy6upSZHS1GpwFS/VxeSxMUwAd+IsUgFQXF2yBtKPgY+KLnxXbIOOGkI
lITk7iBDV/s0rV4PvqYajm6SLURl+c1ffWWMIFo02JozVYxfpDclLweZwWFT
X1+qZDlGcjJ3PjKwAr6LouOSQhUK22s//16cBlflBIe5nDrcP6U0qO56DPYs
XN9Ij2rAtJo01S+advDJx3dZ42sTvqU/TX5x8gSIZhY5hN98jnrBewZyo5zA
gBKw0YTajL9sqLKx9XeB03v1KoZjW7H9M2+ZeYsBZVZtdL5sO6Yapnjfe+kG
5feUbxsHvcKa7S8bC8AdeGN+h8bHO1EWXWt+62OCHvtF/JOfutH+5sWD88c8
ITG9kzJi14NPtWb9YdoLnPZqd+/6oxeNWRHx8mHeMCuzZBcz1IfJcxnGvfM+
MCbd1GMiMoAKaiKRtHgWOASqHdWlDWJ8yvKpYuGzUKmuQU9iD+GOP61fP849
B76O7u769a+R2eSUf18xALiNZMbQ2jBS27u4/N4AYFyqNhfsHMHYMva8ODcQ
NCN/LbEJfIt9uxgSN12D4ONxqV4KdxSLKP2K/krnoSJT1fuc5zukPLsYqvL+
PPg/aH79ZcMYshTd8izzg2F7SNejqtwxdLUOUgT/EHAb0qIoWo5jb5t8fLQZ
G+RoHr0RY+NovriCpotsSBu9Lr4tlIfmC5K0fzAUBlhGlQ7bJtAonZHdHnEB
JhJ/7Gwpn8DiJCuegtlFsCl8d8ry4HuspNtxzITDgCWxz91l8j1WdxSMdNaH
gbm7bP/98Ek8vlUj9UASB6Zyk5py1KZw5BtPUvdwOJRXxKk8q57CWSuTCAfR
CJBSZs4IbKcxjVGx36UzAkwuTRvUk9Oosy2otS85EspU53mNcR/QpYReqOMS
BfoGeTLe2jMo2u5X57Y5GhLbd5dtbp3BQTlbiTMB0dAiY/v4k+sssg81Rjr3
R8OLlY1WIcJ8TG12HEowiYGeG8dM9bL5OH3B1GDwagx0zITkfNCfw00KJaXy
yzEgxz/IoXXOYamQpfQVBwImi7Oa33iReOfozFtDJwKG7kZoRfiQmJ197cHA
SQJaitxjVfxITNg9eVSDTsD9Al1gBJLI9E66UsskgJXXUD3KIVGps0/iQwAB
/BvTReNp6/5tX5FDSQTwLpvFTdeSGMWX6529QkBPnAov4QmJ7L1P7qSnEPA0
VthSu4FEjx7pAyPpBOQRbas+z0m0EKuMCc4igBHpFjz7isTP59a+5RcS0B2S
wCQnSJyrK+6g3SWgMfhsY8oUiRPidrfIYgL+Om+nZjBDYld+gfnPpQSkBCoP
+wtILO23Ce+qIMD6bLndx5X1Xo2FI6EPCTD2u16evrreG5Dzg0oVAZqsMIrR
2vp/SUGtdw0Ba97WrUEiAoxyzEqk1BFAntGmyokJkF1g6fzwMQEjXpTLf0sI
0O/jjLZzPQGtngs8eykBMvdnrKwhAY88Bi0XKQL8DxX3qw0=
             "]]},
           Annotation[#, "Charting`Private`Tag$310728#1"]& ]}, {}}, {{{}, {}, 
          TagBox[
           {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], 
            LineBox[{{-0.0999877530612245, 0.004767441950917159}, {
             0.08406142412783199, -0.004008070464344639}, {
             0.26811060131688846`, -0.01278358287960646}, {
             0.6362089556950015, -0.030334607710130166`}, {
             1.3724056644512275`, -0.06543665737117751}, {
             2.8447990819636795`, -0.13564075669327225`}, {
             5.7895859169885835`, -0.2760489553374618}, {
             11.679159587038392`, -0.5568653526258408}, {
             24.44910508698373, -1.1657396599631447`}, {
             27.47589433442429, -1.3100577548602026`}}]},
           
           Annotation[#, 
            "Charting`Private`Tag$310781#1"]& ]}, {}}, {{}, {}}, {{{}, {}, 
          TagBox[
           {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVj2s01AkYh+0ktxitWygrpxIqSo1oF++gomj3jE1lYhwTDWEkZlwal3/E
5hLVdiRdDEpotRWW8KbLJpcaZSQla4ZcxvwHldiUtR9+5/ny+/A8ZoFcRhBF
SUnJa2H/8ysl2Kw9vw6/083bXHNdiAbTCRWaadXOKr7hAtcOIbYmLPOvs+h0
1iryeCKaEqLVT26SF8xB5zlrClPmWIy+hb4lrE+fnFV2HyNWdhVjVHvQYvMH
KiAn9naeUirFxEMy2m8Wy2B0yojLOnAdUzdaP6tnroX2F8JytSWV+FlbK3sm
yh7mWk196CvuYGLC+XV/2bjAFz3lthtva5Hibfl4kZo76K6hPqelNaDTsHGP
GWsPxL6xbg99eh9z63J/+LyaAWfyB0KXrnmI7/weZv99YC9kGmwdd77zGDdE
b311KWk/FPBNaSm0FvxZpcbDk8sEcbuOfX5WK3ZMS2fYl/1BLikzcTDowNOb
cjg32gLAWu7RWBX9HOtWtjWXQCDslDvpFEpF+D2y6n4Vs4HtZrV1jfkL9L4Y
t31iTxAU6C93MPJ+iQ/NZVwYCYZtO/3WMy504eYjgnS9eA4Ej3EWnXstxmz5
uc1dEyFQrhpfC8qvUN9UOdE9/QgcTHt70Na9B9NzZg6WUcLBQuDWn8N7jWtv
uvU2XIoAP/FXxsamXmQ/2C8sN4wEsyvJ5b3zb9Cio7NovCsSZiVq/Yp1fZha
xZtQKzoK9HSJ8q6j71C80V/9IisKikubVbWL+vEatduQa3wMHhnT+BFB/yD1
URzfZOgYTOrYSj+rDOARw4CrdGE0WLb82VhzaQBZblGGwI2B8xt6lxrSJdjV
rpeebM+Dtt3DYsGABB0/zqLdRx4sWctXN+JL0fGDhvsT5EPK7apqH6NBtM3z
L+gQxMKiL6Gip7cGsSzTRapvHweecxp+9O1DWO3HSLCnxEPbTe9A5vshrH1W
0idqigefFabd5cff4y/LVp12zUwAwx/PPig0Hca+b1KN9buOw5DBKZNHtcMo
c6EJfBYLIK4iaEzhOYK5/redmCIBuE6M2jSRI2hlFNUqzk4Eo6kJaXPaKDIr
/EqtmElgXnJ1KcdyDBd3hN0L0EmGaSqtSqd1DHt0PdUPRyaD2M6zYYolQ96O
5kTf7mQYoWq6xFDG8XTLvtcZtBRQL9ljt6FgHEdi7Wx6zqSAYjKmcNRajlr6
FZV6MymgNbE9wV0kx0olunaWDwG0ivyWt8EkFnuNvdu0nwCzcoG5IITEgoKz
f7w6QIDmjcBUkzASM7a891rlR4Dk2nrwP0oim5OZVc8mIEd4v7Y/gURjkVh9
NJKA4Qsj1yS5C/8roco7MgnIz7BPG6knMWlct0uWRcCJdBNpRiOJPIfG4rwc
AiJOUuiW90k89FLbtS+PALfU9rmQxyQ6q1anROcTMJUUEC17TuJ0xPw3YSkB
HvwMNjlIovxe2TP36wRs4YU35wyTOKjGuEyWLfjHMExtxkjsFJY4bqskYDpq
xRuugsTKbo/jnbcJuBpxizE5u9C76sNu/l0CMsN/v5U3t9AbWbjcpIaA2LB4
qu38gr+Gop5TR4BXqFtrlLICk/bln6LeI8AhxNJCV1WBvBK6790GAlZzqCfv
qCswbHLM0reJAOrhD1JvTQWync7NziMB/wb10D9SFfgfKvZ36w==
             "]]},
           Annotation[#, "Charting`Private`Tag$310886#1"]& ]}, {}}, {{}, 
         {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQDQMVKkp859dX20N4H+wV/PJTlmj07Ifxf3slJ9sX
1cLl90fMZ/MUCoLzmVr3dGjyZcD5csWfxLrOV8D1T9grF3wztg3KV3FgXNxh
3HJyAZxvFpBQkHpuIZzP1i24ZmLEYijf0qHk9b/vS6tWwfnu83VyDaesgPPj
W+4WPozfDOVHOpy8eNN7mvhxOL8go7dq0daTcP4hw8OMf2fC+JkOthn1IvsO
X4bzX98xOBV/8Dqcv1rQbnnI42tw/qtdXOsU516B81e8kT7R+voqQv3N3kbb
bTD9lQ5fuFpO2Rg8hfMnro4579z9HM4337zivvYzBP+WQjObUBVC/UHD4BVZ
9U/g/O8hvz/PZHsG5+eVP8xcvvkRnJ8TUBdhdeAxhH+gyYGXYeK8IIUPcL4s
w/dJ34++gfPLe1yT1q1FyO/6/ahI6dBbOF9vDtP7leUf4fz3Z9dOujYdoX9l
wo1TjB8Q6k+7KQt/N34H52uVPuhba4FQf5jx3+OJJxH2iUxM9mfKQfBnc+lM
WGH3dj8A0Svkaw==
           "]]}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, False}, {True, False}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Log[Signal]\"", HoldForm], TraditionalForm], None}, {
          FormBox[
           TagBox[
           "\"b-value [\\!\\(\\*SuperscriptBox[\\(mm\\), \\(2\\)]\\)/s]\"", 
            HoldForm], TraditionalForm], None}},
       FrameStyle->Thickness[Large],
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{39., 5.387758212989553}, {35.999999999999986`, 1.}},
       ImageSize->200,
       LabelStyle->Directive[
         GrayLevel[0], Bold, Small, FontFamily -> "Helvetica"],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{-0.0999877530612245, 
        599.9999877530612}, {-1.3100577548602026`, 0.1}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {320., -64.89356881873896}, 
      ImageScaled[{0.5, 0.5}], {200, 123.60679774997895}]}, {}},
   ImageSize->{
     UpTo[400], 
     UpTo[124]},
   PlotRange->{{0, 426.6666666666667}, {-129.7871376374779, 0}},
   PlotRangePadding->{6, 5}],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.8709284588589144`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"00844d33-5a68-4ccb-9868-d7f3a13305a4"],

Cell[BoxData[
 DynamicModuleBox[{QMRITools`PlottingTools`Private`plot$$ = GraphicsRow[{
    Show[
     QMRITools`PlottingTools`Private`pl$311068[
     QMRITools`PlottingTools`Private`f1$311068, 
      QMRITools`PlottingTools`Private`f2$311068, 1 - 
      QMRITools`PlottingTools`Private`f1$311068 - 
      QMRITools`PlottingTools`Private`f2$311068, {
       Part[QMRITools`PlottingTools`Private`cols$311068, 4], 2}, #, 
      QMRITools`PlottingTools`Private`func$311068, 1], 
     QMRITools`PlottingTools`Private`pl$311068[
     1 - QMRITools`PlottingTools`Private`f2$311068, 0, 0, {
       Part[QMRITools`PlottingTools`Private`cols$311068, 1], 1}, #, 
      QMRITools`PlottingTools`Private`func$311068, 1], 
     QMRITools`PlottingTools`Private`pl$311068[0, 1, 0, {
       Part[QMRITools`PlottingTools`Private`cols$311068, 2], 1}, #, 
      QMRITools`PlottingTools`Private`func$311068, 1], 
     QMRITools`PlottingTools`Private`pl$311068[
     0, 0, 1 - QMRITools`PlottingTools`Private`f1$311068 - 
      QMRITools`PlottingTools`Private`f2$311068, {
       Part[QMRITools`PlottingTools`Private`cols$311068, 3], 1}, #, 
      QMRITools`PlottingTools`Private`func$311068, 1], 
     ListPlot[QMRITools`PlottingTools`Private`pdat$311068, PlotStyle -> {
        Part[QMRITools`PlottingTools`Private`cols$311068, 4], 
        PointSize[0.02]}]], 
    Show[
     QMRITools`PlottingTools`Private`pl$311068[
     QMRITools`PlottingTools`Private`f1$311068, 
      QMRITools`PlottingTools`Private`f2$311068, 1 - 
      QMRITools`PlottingTools`Private`f1$311068 - 
      QMRITools`PlottingTools`Private`f2$311068, {
       Part[QMRITools`PlottingTools`Private`cols$311068, 4], 2}, #, 
      Log[QMRITools`PlottingTools`Private`func$311068], 2], 
     QMRITools`PlottingTools`Private`pl$311068[
     1 - QMRITools`PlottingTools`Private`f2$311068, 0, 0, {
       Part[QMRITools`PlottingTools`Private`cols$311068, 1], 1}, #, 
      Log[QMRITools`PlottingTools`Private`func$311068], 2], 
     QMRITools`PlottingTools`Private`pl$311068[0, 1, 0, {
       Part[QMRITools`PlottingTools`Private`cols$311068, 2], 1}, #, 
      Log[QMRITools`PlottingTools`Private`func$311068], 2], 
     QMRITools`PlottingTools`Private`pl$311068[
     0, 0, 1 - QMRITools`PlottingTools`Private`f1$311068 - 
      QMRITools`PlottingTools`Private`f2$311068, {
       Part[QMRITools`PlottingTools`Private`cols$311068, 3], 1}, #, 
      Log[QMRITools`PlottingTools`Private`func$311068], 2], 
     ListPlot[QMRITools`PlottingTools`Private`pdatL$311068, PlotStyle -> {
        Part[QMRITools`PlottingTools`Private`cols$311068, 4], 
        PointSize[0.02]}]]}]& }, 
  GraphicsBox[{{}, {InsetBox[
      GraphicsBox[{{{{}, {}, 
          TagBox[
           {GrayLevel[0], Thickness[Large], Opacity[1.], 
            LineBox[CompressedData["
1:eJwVlHs01AkUx0XaSLTlMVmKtDWjElINWffGFIUeenlkkEilTJPIm19aFWO8
itXDaypFtVuoIWzphQjN8CMmGaLGzFCKnnb2j3vu+Z5z7zmfz/3jGu8JcQtQ
VlJSYirq//5DOdD4eQ6/1nzVERFnygjofo4q0ThZDgzngW0BP+TQEKXH5FNb
wWtqjgp/XA6mtoy+Nq9++DrJs4kdloPnBU+ez6dP8GbRoYnodjmwnweoLno4
Da0dXe2sSuUQu1ey8jRVD7dnpB3s8ZbDnuF5fykN6KF4pGUT3UMOjqFu38ML
KFhhe4mRu10OsxL5DwP19TEl05Fy1FkOBUVJmxkahvikzBjCrBX7o+llk+HG
WJrJtb6tK4dEc7PmSq/FmN2wjzwllIF9r/dV8YPFWHhFVL25VQaTXE68BpWK
vjX9xw2aZBApH7ZkjlGxSrSU9vSRDI7cLMmewjHF7+Vx6T5lMmAupfk51SxD
9W/DJqlZMjDQnv31wCxLTJ3xyjfCXQbjWjM5E2w61o3khTdIpJDFXRl8vZCO
j0Q6v78YkoK5FtN5dxsdr5sdsGkfkEKQ5i21fy2sMdPlBCF5LQVSY+ufSSPW
2JvJEloIpHBP7Wyc7uE1mD3aTaNWSyFSxZBttd8Op1yYtjgrTQqxUeeW3Ftu
jyYdniTTVgrK22iPVaY74eA3nl0RbxjsBvVJY59N2FYdYLZWYxjS+Gnzxhe6
oYfBm40vEiUg8q7jPPHYge2vOq+JP7+HZaGrOy7GuWNBsRd9fch72DytYoNL
iBcqUUIK0z6+g6bP4gn/S0zMtOv8soT1DrgWqUHXGn1RNpfOHR0fAr5R4wMe
7kETR9JhfeIQ/Frrw98u9Mfrpwy/UNWGYNv5iHUjmwLQNtJXdDxnEOoWSUJw
KBD9KwXLio0GYcXBmCTtyCB0ppUI3G+8BY40a4VgZD/abqgIFDq8BZ35U2Od
kg7iP/WnCe7LAUhKndhdrHwIu990FNQFD8DiG4yu+xcPo7vmbj4x2Q/+D90L
r1NYuIHLX+B9rh+oTa0FwwIWpueuSTZa1Q+Jt8JGphccwY1/t/g9fiEGoTlT
7bwPG7ua87jT2WK4otlOCdE/iioDkrRWPTFoPooINxw4ihWlxj8a7/bBQYpv
/trCUHSl1e/q9+kDHwabgiHHUHWvSgJLuQ8Ez7WT4ulhOOGUIYgrfgN/jH2p
XTUWhpPzb4LFTkX+qO70tDYcK+sp5/J/9oJlOjO3KeY43iqbg+ybvVCcbC/W
oUdgtsqJAEe/Xij3douiK0fiDKMqlflavXC3mdfTUhOJEzlHI9qTXsMWPROu
Q3IUJjl25g8MiqDnp1h96cZoVO3YvWb/DhFI7FfG7FSNQalO48zDz3ogjXnb
zqslBnmnzVmBlj1gOpfdIOTEYmncnQj1a93gVeJ92dQrDovmse+q6XWDalNw
le/seDSq2SI8eeYVkHNc1Pax4tH+setXidorCFv/INazPR7r5fDNKKELuM92
dZ5amYCMPPVN3SpdMHR81XIyIwGdLp/pdEnuhJk6JaXaEwn4wSnKZly9E0qV
1mql7CQw3dQgIPosCUWu70UW7gRSsw/UhGaSkJubebPDQ5G3FtgfSifhlNVb
VxNvAl8m8BuZHBL8g5JTKv0J1C236HU4SYJ+i1DtHYvAEjealu4xxXzeganr
kwkcW5EY3LWdhLjhOQJJCoFmZVMNSDdS8UOqi9JTCdx75/sn4RYS9r7UcuhJ
JzCcuo7W5kIC/FKeEJpDoF6rMOU5g4TPhyd/Fl4mcIrZW0a9FQnSquJmp6sE
+kXY5NZbktA/3e2SrJjAD87NcxvMSWgt5P1hU0pgc8aV7MalJJS2b4huva3w
1bjHaVmo8DX56BxeRuCFsStWbQsUvqwLvxlWEFh4gq8qMFLwq8srg/gEjpas
WUQaKPh35ZzRrCIwfwvvWJe+gp+31rPsPoFz7iyQd1NICB59T/OsIbDM407G
a13FfeyyvkzWEri60c23T5uE/wAh39wJ
             "]]},
           Annotation[#, "Charting`Private`Tag$311089#1"]& ]}, {}}, {{{}, {}, 
          TagBox[
           {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], LineBox[CompressedData["
1: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
vT6RRvgfq0D5PQ==
             "]]},
           Annotation[#, "Charting`Private`Tag$311142#1"]& ]}, {}}, {{{}, {}, 
          TagBox[
           {RGBColor[0, 1, 0], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxNz30w03EcB/DdQrhwhSydyuk89YBEqwvzkJtC3ZSHrW3O0IpsLc3DbOh0
UzMP5TrnqczUyqo7hxqyQ0+HOasNdccfUckonaf5I6q7fL6/z93nPve6e//x
/jgncSgpeBwOF/V3/93f+FTnwSqVGvd/ti8LmrfcaAvacL/AgaFy14I9j4d9
fk+bAlNrqXLm0hKYN5hi6tprRtqwKNngd9PdAVzkfXCog+YGXrGxkhp5RJQX
3N33wisEjI/xeL3JnAwO/OY45syMBperynet7KWAJ+h90jcJ58AHMo+M1uXH
g0+btUdEcmhgzfKkkVXPAJf5lLIfDSSCVXsGeuSkJPBWNVN1Vs8Cx9TknJiP
TgH3uRo4pOlUsG+aUGyXywZL5yp9dfMXwfa7TURkcRpYXGo8r8BfBrs9CfvU
VZcBZvXGyx4TuGB3jbZhVodc9Iw/b95wBaz3ZljUMHngB9YjBI7jVbD1q5ws
py/IaYTE+8GyTDAzjEcgca6BdYN24gIiHxywuKr2X8R4wZL8Vp0FPlTBqNYI
s8EKScikPTEH3EanCIj4XPDzIfn4cDfyGQeXslCJADy+Nmm5/2Qe2BDiJ4w1
FYLLGS2BtGFkzx28fr1UBKY105s8aflgU016Z+K2AvCYbaTFBS4yP7xHRB1B
LnsX97HYrxA8ne3vNXYb2cq+WWlnRFbigm1KYq+DG6NmJnzikaur7zwdTUAu
Pvw1yoWOzGJLSjpYyI7DeovvXEz+3iWTcAly/qytzlCCzD/6srGiFDn5g03o
eAVy0Oa2wswq5OWM9TVZE/Jcp2KI/BB5ypxS/0OBrJXJA44pkZUjEXnaFsy/
Lgunslox/3Jrdzq1Y/pb/uxgqzD946puWXdi+suDqa1dyOm/Zjyo3ciswMrV
dTXyH29pHgQ=
             "]]},
           Annotation[#, "Charting`Private`Tag$311195#1"]& ]}, {}}, {{{}, {}, 
          TagBox[
           {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVkHk41AkYxzVSeBxbrkkqHU9hO8i5Uu/rqLRh7VTCxJBjiZidXNO45rd6
lCN0Wjo0DU2hnkI1KVY6XRkMP0LWuIdRIWybdvaP7/M+3+d5//h8vmuPRtKC
KAoKCq7y/H+/UYLXNuQKq4t4CyznFhnofuEUq52qgOOhb+wpzTKo4+j5Co1E
IPNI3fG0UQYmdk79LfQB4M113DN9KwPvK958xswMHCoMy1/5lwxYDUFKG58v
wcjuy5z5UhkkBkotzxjpoXvt6D7xGRmkmG5tekLfhC/uBkeoOchgVlM9c45l
g1SL/PsCwQQkci79+HibA3oJO9hbDCaAcsD4paKyM272+fps/sI47BrWJ9cy
3NDunbW2rtI4ZAuzV89uoCFTrfOYN1cKvT61ma+8DqG/4h4H2swYbImy7ria
5Im2fe/iMyPG4JclD/e5RNJxitr6g/XUKDR+kcwFXPPFwA7JakXmKGSZnQ25
Xe+HEYErJ3pmR0BoWF/Dx6OobsO6b5cyAsuqGcKD4gC02ml3cYPKCBzIZ+/+
6BaEOq/dqmNyh6F2ozQSR4LRRTpjdctwGMzDElK1T4bg1a7mo56lQ5A5ccG8
7WMoTtcEbhM7DoHOmsWJzqlhyOZjaFbrIKSenTsioBxH84I7F2vDB2FTqVPX
06sRqCzqKCO+D0DAc0/eHSoTLeNMDX0uDYBRo+jGeBsTNVwWpRlaDUDKvZiP
yjd+Rw/C3v/lOwmITX1V8hksjNOjZymzJFCk0U6N1D+BtZF12SI9CWi8YMeu
GjyBXl7Lv9U/6ocwql+BPS8KZ2prDg8w+oHhxKJiZDRGKStwmZR+aGvQTk22
icFlz7LbkgR/w87p+Wqr6RiUMErBzEPep1SdX1fH4lIW9VLBQh9sz/HNa0yI
Q26aFrLu9oEg3UGiY8NGxUkiaK9/H1T40Dg2lJP4p26l4hrNPnjUxO9prjqJ
4qwT7PbUD+Cutz7LMZ2DDMfOgsHhXuhZkKhu/jkel4qP7Ag91AtSB8sED6UE
nNGuV4940wPZvg920ZsT0PyMKTN4ew+YrGDViTMTMTqpjK16uxvoxT6FJvQk
TFvNeqSi1w1KjeGVfsuTUafKXXwq7T2QWi4qvzGT0e6l6z9SlfcQs6cm0bs9
GV9NwldDbhdkvTncedqSi47XVd26FbtgJM5qG3mOi3sL0zpd0jtBXae4RHuO
i5+dObazqp1QomCvmeFBYI6JQVD8RRJuuo71mnkSaHT5WFXUeRLy8s7f7fCS
919vOBzPIeG0xZDreh8CW7nCet9MEgJC0jOeBBCoW2HW53iKBP1mscook8Bi
mrGmbrT8//qxxXvSCZw2TwnvOkhC0rhWmzSDwK3liw1IGgkxPz27mXOWwMCy
f2fE7iQEtmo69uQQGGu027jFhQRYWsGNyiVQTyTOaHAi4UvE9wVeIYGLtg45
vbUgYaJS0OR8i0B/tm3e2+0kDCjTrskEBH7e37SizpQEEY+/07aEwKZzRZfr
N5NQ0r4vXvRA7qv2OLN5g9x3/dT+2HICr0wXWbSsk/syr6xc9ZBA3h9CpTZD
Ob/q5JMQIYGfindsJA3k/Idz0zQqCSxw50d36cv5+fbe5U8J1CpbN9lNJSH8
05ixdxWB5V5l5z7oyvfZdWH+ezWB1vU0v35tEv4DldtTFw==
             "]]},
           Annotation[#, "Charting`Private`Tag$311248#1"]& ]}, {}}, {{}, 
         {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
          PointBox[{{0., 1.0040422323551579`}, {1., 0.9937305637301708}, {10.,
            0.9625840521054181}, {25., 0.9400052294604091}, {100., 
           0.8208694337672291}, {200., 0.7054061044314858}, {400., 
           0.5112313936898353}, {600., 0.37914557148582684`}}]}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, False}, {True, False}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Signal\"", HoldForm], TraditionalForm], None}, {
          FormBox[
           TagBox[
           "\"b-value [\\!\\(\\*SuperscriptBox[\\(mm\\), \\(2\\)]\\)/s]\"", 
            HoldForm], TraditionalForm], None}},
       FrameStyle->Thickness[Large],
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{34., 5.2857174986613416`}, {35.999999999999986`, 1.}},
       ImageSize->200,
       LabelStyle->Directive[
         GrayLevel[0], Bold, Small, FontFamily -> "Helvetica"],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{-0.0999877530612245, 599.9999877530612}, {0., 1.1}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {106.66666666666667, -64.89356881873896},
       ImageScaled[{0.5, 0.5}], {200, 123.60679774997895}], InsetBox[
      GraphicsBox[{{{{}, {}, 
          TagBox[
           {GrayLevel[0], Thickness[Large], Opacity[1.], 
            LineBox[CompressedData["
1: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
FmSrHbcTY4BVzuwczv97cEp0t4vxP8A/+cs=
             "]]},
           Annotation[#, "Charting`Private`Tag$311353#1"]& ]}, {}}, {{{}, {}, 
          TagBox[
           {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], 
            LineBox[{{-0.0999877530612245, 0.0061627284016919975`}, {
             0.08406142412783199, -0.005181111787181104}, {
             0.26811060131688846`, -0.016524951976054022`}, {
             0.6362089556950015, -0.03921263235379996}, {
             1.3724056644512275`, -0.0845879931092919}, {
             2.8447990819636795`, -0.17533871462027578`}, {
             5.7895859169885835`, -0.3568401576422435}, {
             11.679159587038392`, -0.7198430436861789}, {
             18.882213507441712`, -1.1638020648175635`}}]},
           
           Annotation[#, 
            "Charting`Private`Tag$311406#1"]& ]}, {}}, {{}, {}}, {{{}, {}, 
          TagBox[
           {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVjHk41Akchy3jGE+NVHK0lFUMbVEhR8zXsa2WpKk0zTCUI0uiYeUefpQs
QtqS0pZhZ8p0bNLmqG/YNisjytnu6HA2M+anzVU91eqPz/M+7/O8z8d0fwwz
TFVFRWXb/L7wo2q4aXtpHTpGxnaU2wtw2UxK9YKjtQzFju6k8AABtqXoc+vo
XYx6R4fV1oQArTZ7vnrCGWZ4UFVS70sEyD7PrgyanmZEigoth0Irkdcepm7e
rAF5o9ey6SVVmB4qt8ul68Pk/gmnGlKI2TbrOuo5FiDkRApbRWKc1VlYMMdz
gNW6CvbauBpMTzm95o61O/DoeUxD5zuoutPygZqWF/Srq5moyRvRdcyo3zTI
F16FG7n7qTRhUV2RyewqJgyEHoi+EdSCg4EtBX/t3Q36LN1w2ZsHuDZ+U185
nwUR14ReZomtuF3j9lafGA7cMOEJJp60oWRmaC7kAhe2ZJ99VBwswcL1JyIu
PwqGLrXpqIfNj7Fu5aOmStgPDnEmH9IWdKEuBtXt6gmBNc8nzdV3PMGd55K+
m/QNA0OWlNbDf4ot5vIYGA+H696JUt3WbtwYlZazNDkCJLFUU1/tXiyYOLWx
e/JHGKm4tfKpfR/qraCke+VEQdV2muaD1H7MOTEXIFKNhkAqcfmzeAAtrno+
ayw/BOhSuUE48wxDmlkVVwxioUrQaOPr9C/SJV2XFN2xkLuMlLlESDH7esKk
1qXDsJjSmVd2fRB7bLjUc0E8OPupbZzx8jn+Rus1iDGKA6YeN5B37AXS/kw6
YjwSB9XjVx0/0F9ilEHwRbeKeMhq1o4X3X+JQZ48A4j5Ca4O3DNdEPYKu9uX
5mQ4JEA5VZkbozGELlPv0H4qAbTAym/2/Ly/1fZ6iEfgYc3dXDsYxg3F3DJJ
WiJQ1nFNS/uHUZTnPqTnkAQaTUlx76NHsDaQmeKgmgwBxQqHJYtG8Y+OSmnn
vWRYG3EwwE84in76ZoUeeSnATPV46+E9htJPQ9rf/pAKU6ctxjnDYyh3t0vz
V08DdtuxM3HJ41jEvenK6UwDPWeXejfj12hlyGvrKUgHn5sqzra1r5FTHVhl
xeFDX/hya+leGapLDjYEL86AVba/S49+kGH/Eh/qgdgMeKO5S8Y8KceELU3p
7N4M0DH0jey1U2Bh656B43aZILbZ7ZXeocDxRHvr/pOZsHBf34vVoRO4UK9a
vHQuE1o6biiyNJQoVnHTyfcnYMr9jL/GBSUKtskG17MI2Hym5p8rF5VYVlZy
rW8vATnyx8HbBUo8bju6zSyQgOWntKJKRUoMicjLrw8hAEaS+FY1SjTq7KG+
jiUgPydA5Ns63/8aSdmSR4B5u+n70/8pka9Y0i3PJyB6pSvfeVqJCY53BcUn
CLgTz6a8mFVi6FMdD2kxAT7GJTTLj0pkaNZmxpcScPgQxaxBk8SZQ58/VVQR
0LhozPv51yRONIg6vIQEaIapdWWtIHFYi3lBKSJgR90Kf/o3JHZVVLo4iQkY
2scKPmxBorh3a2rXzfm+5u94tQ0kCszeeh+5RcBOzdF3QlsSy2LPLze+TcA5
jirfZxOJx7XJ+og6AtZRnHN/2Uwif0/pz7QGAhJZe2hODBITKt3YtxoJaBbH
lQy6kXjwjcySfY8A7a+KDLI8SQxxPfXuM87/7xaXW3xP4v8DS2zX
             "]]},
           Annotation[#, "Charting`Private`Tag$311511#1"]& ]}, {}}, {{}, 
         {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
          PointBox[{{0., 0.00403408448363089}, {1., -0.006289171715385539}, {
           10., -0.03813388977019424}, {25., -0.06186984047780796}, {
           100., -0.19739121534706905`}, {200., -0.3489816073595553}, {
           400., -0.6709329660481079}, {
           600., -0.9698350540146363}}]}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, False}, {True, False}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Log[Signal]\"", HoldForm], TraditionalForm], None}, {
          FormBox[
           TagBox[
           "\"b-value [\\!\\(\\*SuperscriptBox[\\(mm\\), \\(2\\)]\\)/s]\"", 
            HoldForm], TraditionalForm], None}},
       FrameStyle->Thickness[Large],
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{39., 5.387758212989553}, {35.999999999999986`, 1.}},
       ImageSize->200,
       LabelStyle->Directive[
         GrayLevel[0], Bold, Small, FontFamily -> "Helvetica"],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{-0.0999877530612245, 
        599.9999877530612}, {-1.1638020648175635`, 0.1}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {320., -64.89356881873896}, 
      ImageScaled[{0.5, 0.5}], {200, 123.60679774997895}]}, {}},
   ImageSize->{
     UpTo[400], 
     UpTo[124]},
   PlotRange->{{0, 426.6666666666667}, {-129.7871376374779, 0}},
   PlotRangePadding->{6, 5}],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.8709284593649044`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"7860f507-370e-4501-a80e-a0259b7c3ac2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["IVIM fit ", "Subsubsection",
 CellChangeTimes->{{3.7549138637211986`*^9, 3.7549138972407355`*^9}, {
   3.7549155771892085`*^9, 3.7549155820371375`*^9}, 3.755000066069899*^9},
 CellTags->"c:59",ExpressionUUID->"37c42ac9-91fe-46e0-b5f0-8a8055e0e5be"],

Cell["\<\
Fit using the whole volume fit as a initial guess and using a fixed D*\
\>", "Text",
 CellChangeTimes->{{3.755000067813447*^9, 
  3.75500009744042*^9}},ExpressionUUID->"0f42b6f0-0ac9-4f04-a3fa-\
eb1d2d31934f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"S0Ii", ",", "fracI", ",", "diff", ",", "pDiff"}], "}"}], "=", 
   RowBox[{"IVIMCalc", "[", 
    RowBox[{"dwiIso", ",", "bval", ",", "fiti", ",", 
     RowBox[{"IVIMConstrained", "\[Rule]", "False"}], ",", 
     RowBox[{"Parallelize", "\[Rule]", "True"}], ",", 
     RowBox[{"MonitorIVIMCalc", "\[Rule]", "True"}], ",", 
     RowBox[{"IVIMFixed", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fracI", "=", 
   RowBox[{"Clip", "[", 
    RowBox[{"fracI", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549160511618843`*^9, 3.754916055224902*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"9b64546e-04bc-4e97-994c-1aede4a4f620"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"fracI", ",", "diff", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", ".1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.002"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758440831414627*^9, 3.7584408799931316`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"18361a8d-0015-46b1-91d8-24b5e8b80e9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"IVIMResiduals", "[", 
    RowBox[{"dwiIso", ",", "bval", ",", 
     RowBox[{"{", 
      RowBox[{"S0Ii", ",", "fracI", ",", "diff", ",", "pDiff"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758440682540387*^9, 3.7584406853178387`*^9}, {
  3.7584407331240063`*^9, 3.7584407573610716`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"7a02e95a-55d3-4dcf-811f-6f7a57c0aed4"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dwiIso", ",", "res", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758440767656734*^9, 3.7584408171734514`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"c8cd8936-aaa0-4ffd-bcc6-64ae1a6de48c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Split signals into perfusion and diffusion", "Subsubsection",
 CellChangeTimes->{{3.754915593226927*^9, 3.7549156019133368`*^9}},
 CellTags->"c:60",ExpressionUUID->"e507394d-7fce-45ce-bab9-205bc132c31e"],

Cell["\<\
With a IVIM fit you can remove the perfusion contribution form the original \
DWI signal\
\>", "Text",
 CellChangeTimes->{{3.7550001029416046`*^9, 3.755000124998373*^9}, 
   3.755000646175701*^9},ExpressionUUID->"f1339e48-5568-4181-9103-\
13343d87b5ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dataCor", ",", "dataSyn"}], "}"}], "=", 
   RowBox[{"IVIMCorrectData", "[", 
    RowBox[{"datareg", ",", 
     RowBox[{"{", 
      RowBox[{"S0Ii", ",", "fracI", ",", "pDiff"}], "}"}], ",", "val", ",", 
     RowBox[{"FilterMaps", "\[Rule]", "False"}], ",", 
     RowBox[{"FilterType", "\[Rule]", "\"\<Laplatian\>\""}], ",", 
     RowBox[{"FilterSize", "\[Rule]", "0.8"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754213347702221*^9, 3.754213350373131*^9}, {
   3.7542134659202547`*^9, 3.754213466512255*^9}, 3.7549161050522118`*^9},
 CellLabel->"In[71]:=",ExpressionUUID->"01726389-dcb2-4df4-a42f-14741a4d3969"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataCor", ",", "dataSyn", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "100"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.754213485564293*^9, 3.754213492195796*^9}, {
  3.7549161354346447`*^9, 3.7549161421385717`*^9}, {3.755000140840662*^9, 
  3.7550001411680336`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"377f4aec-7083-4a3a-92f1-91ca05e12f9b"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tensor analysis", "Subsection",
 CellChangeTimes->{{3.754920706637082*^9, 3.754920714715969*^9}, {
  3.7550002741128864`*^9, 3.755000276412504*^9}},
 CellTags->"c:61",ExpressionUUID->"46cb5c22-df36-42f1-8278-128db9e6546d"],

Cell[CellGroupData[{

Cell["Fit the tensors", "Subsubsection",
 CellChangeTimes->{{3.7550002776467867`*^9, 3.755000283657793*^9}},
 CellTags->"c:62",ExpressionUUID->"46110b45-9f52-4171-ae7f-cc9053aa8a39"],

Cell[BoxData[
 RowBox[{"Column", "@", 
  RowBox[{"Options", "[", "TensorCalc", "]"}]}]], "Input",
 CellChangeTimes->{{3.755000157238582*^9, 3.755000168626581*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"4cc308f1-c626-492a-91a8-f47d2cfafa5c"],

Cell["Calculate tensor from corrected data", "Text",
 CellChangeTimes->{{3.755000205572136*^9, 
  3.7550002111624765`*^9}},ExpressionUUID->"9b1f7978-adca-4e60-bbe3-\
3c5f3c0ab3f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "@", "TensorCalc"}]], "Input",
 CellChangeTimes->{{3.870928599387191*^9, 3.8709286039267335`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"a1f009cc-d181-4348-ab4c-2221322f7f8f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MonitorCalc", "\[Rule]", "True"}], ",", 
   RowBox[{"Method", "\[Rule]", "\<\"iWLLS\"\>"}], ",", 
   RowBox[{"FullOutput", "\[Rule]", "True"}], ",", 
   RowBox[{"RobustFit", "\[Rule]", "True"}], ",", 
   RowBox[{"Parallelize", "\[Rule]", "False"}], ",", 
   RowBox[{"RobustFitParameters", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.0001`", ",", "6"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.870928605212447*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"cb0fa58f-6071-4c9c-a759-23c567d033ef"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tens", ",", "S0", ",", "outlier", ",", "res"}], "}"}], "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{"datareg", ",", "grad", ",", "val", ",", 
     RowBox[{"Parallelize", "->", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7542133092285795`*^9, 3.754213342561816*^9}, 
   3.754213542568743*^9, {3.7542147650041075`*^9, 3.7542147659083357`*^9}, {
   3.754918564252726*^9, 3.7549185903437014`*^9}, {3.754918924687765*^9, 
   3.754918928371292*^9}, {3.75500019939853*^9, 3.7550002177135515`*^9}, {
   3.7550005139963884`*^9, 3.7550005196559925`*^9}, 3.7550005581957283`*^9, {
   3.755585887168521*^9, 3.75558588745653*^9}, {3.7699584120848637`*^9, 
   3.7699584163511925`*^9}, 3.7699589571456165`*^9, {3.870928636071559*^9, 
   3.870928647574588*^9}, {3.8709295930188355`*^9, 
   3.87092959684295*^9}},ExpressionUUID->"3cde8bc5-3047-4773-bee2-\
bea3209a1f6d"],

Cell["Convert Tensor To matrix and vector format", "Text",
 CellChangeTimes->{{3.7584417914797144`*^9, 
  3.758441805382854*^9}},ExpressionUUID->"c1085988-fab4-4e7a-b40f-\
1be293ded423"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensMat", "=", 
   RowBox[{"TensMat", "[", "tens", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tensVec", "=", 
   RowBox[{"TensVec", "[", "tensMat", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "/@", 
  RowBox[{"{", 
   RowBox[{"tensMat", ",", "tensVec"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.7584418079588037`*^9, 3.7584418549323115`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"61179b73-6cfe-420a-8029-ad2d32a322e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"25", ",", "160", ",", "160", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "25", ",", "160", ",", "160"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8709295698859067`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"8f80dc84-d34c-4493-901f-a83e603aa9a9"]
}, Open  ]],

Cell["Plot the tensor.", "Text",
 CellChangeTimes->{{3.7584410647431507`*^9, 3.758441071843142*^9}, 
   3.7584420061501074`*^9},ExpressionUUID->"be4e95c3-60da-4f88-9331-\
306f45cd1c4e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"crp", "=", 
   RowBox[{"FindCrop", "[", "mdata", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tensPlot", "=", 
   RowBox[{"1000", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"ApplyCrop", "[", 
          RowBox[{"#", ",", "crp"}], "]"}], "&"}], "/@", "tens"}], ")"}], "/.",
       " ", 
      RowBox[{"0.", "\[Rule]", 
       RowBox[{"-", "1"}]}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.755000323126373*^9, 3.7550004528731933`*^9}, 
   3.755000654989583*^9, {3.7555869291906013`*^9, 3.755586936545241*^9}, {
   3.758441889125291*^9, 3.7584419446473494`*^9}, 3.758441979190585*^9, {
   3.7584557880197663`*^9, 3.7584558215242443`*^9}, {3.837509279580782*^9, 
   3.8375092879598637`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"81b68c3e-6296-44bd-95a1-16e20540b96c"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"GridData", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"TensMat", "[", "tensPlot", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5"}], "}"}]}], "]"}], ",", "3"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.758455792751069*^9, {3.837502116587649*^9, 3.8375021398980265`*^9}, {
   3.8375092129606934`*^9, 3.8375092308665075`*^9}, 3.8375092713038282`*^9},
 CellLabel->"In[85]:=",ExpressionUUID->"5feffc29-319a-4d91-98df-d76aafbbbd23"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ax", ",", "cor", ",", "sag"}], "}"}], "=", 
   RowBox[{"GridData3D", "[", 
    RowBox[{"tensPlot", ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584560457474313`*^9, 3.7584560724689875`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"8b0730ee-7362-439c-a55d-7b48c7668c7d"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"ax", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758455736008664*^9, 3.7584557692527666`*^9}, {
  3.758456044004887*^9, 3.7584560853204393`*^9}, {3.769959016241742*^9, 
  3.769959016528507*^9}, {3.837509292475665*^9, 3.837509294902581*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"9a36fc92-d1e1-461a-affd-7a4634929124"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"sag", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758455736008664*^9, 3.7584557692527666`*^9}, {
   3.758456044004887*^9, 3.7584560853204393`*^9}, 3.8375093009034433`*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"c10b5f5f-1c4e-46fc-8457-7ae8c5de5e55"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"cor", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758455736008664*^9, 3.7584557692527666`*^9}, {
   3.758456044004887*^9, 3.7584560629483066`*^9}, 3.837509303071743*^9},
 CellLabel->"In[89]:=",ExpressionUUID->"53def0d8-f168-477c-b7cb-c8fe6942331d"],

Cell["\<\
Calculate tensor using only high b-values, first find the positions of the \
high b-values ad then select the correct data and fit the tensor.\
\>", "Text",
 CellChangeTimes->{{3.755000220724985*^9, 3.755000228452171*^9}, {
  3.7550006807677164`*^9, 
  3.755000705520234*^9}},ExpressionUUID->"b7b2a8a2-13df-4751-8d89-\
c4d73b0ea43f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"selH", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"pos", "[", 
     RowBox[{"[", 
      RowBox[{"Flatten", "@", 
       RowBox[{"Position", "[", 
        RowBox[{"bval", ",", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "\[GreaterEqual]", "200"}], ")"}], "&"}], ")"}]}]}],
         "]"}]}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tensH", ",", "S0H", ",", "outlierH", ",", "resH"}], "}"}], "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{
     RowBox[{"datareg", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "selH"}], "]"}], "]"}], ",", 
     RowBox[{"grad", "[", 
      RowBox[{"[", "selH", "]"}], "]"}], ",", 
     RowBox[{"val", "[", 
      RowBox[{"[", "selH", "]"}], "]"}], ",", 
     RowBox[{"FullOutput", "\[Rule]", "True"}], ",", 
     RowBox[{"Parallelize", "->", "True"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7541969378065863`*^9, 3.754196960757258*^9}, {
   3.7549187589191275`*^9, 3.754918786013351*^9}, 3.754919332812829*^9, {
   3.754919561177947*^9, 3.7549195659665613`*^9}, {3.7549196440639453`*^9, 
   3.7549196533154583`*^9}, {3.755000217149051*^9, 3.755000255723921*^9}, {
   3.7550006858586383`*^9, 3.7550007090440454`*^9}, {3.7550013675359993`*^9, 
   3.755001371129531*^9}, 3.870929660714088*^9},
 CellLabel->"In[91]:=",ExpressionUUID->"0e3b5a12-1999-4716-a93f-1cb468138eef"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"S0H", ",", 
   RowBox[{"Total", "@", 
    RowBox[{"Transpose", "@", "outlierH"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.754919594117535*^9, 3.7549196290454493`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"9219a9f5-b371-4dfb-9bc4-f5c419d321ba"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"tensH", ",", "tens", ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}], "/", "1000"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8709297105764775`*^9, 3.8709297156449227`*^9}, {
  3.8709319626277437`*^9, 3.8709319790105305`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"d95b158f-77db-4726-b332-9f2e44c6093c"],

Cell["\<\
Based on the tensor residuals you can estimate a noise sigma map however this \
will severely overestimate the sigma\
\>", "Text",
 CellChangeTimes->{{3.7550016396203413`*^9, 
  3.7550016675961504`*^9}},ExpressionUUID->"db2d0a1f-9d4a-4bf6-94d9-\
6893ddbeb429"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sigmaT", "=", 
   RowBox[{"SigmaCalc", "[", 
    RowBox[{
     RowBox[{"datareg", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "selH"}], "]"}], "]"}], ",", 
     RowBox[{"Join", "[", 
      RowBox[{"tensH", ",", 
       RowBox[{"{", "S0H", "}"}]}], "]"}], ",", 
     RowBox[{"grad", "[", 
      RowBox[{"[", "selH", "]"}], "]"}], ",", 
     RowBox[{"val", "[", 
      RowBox[{"[", "selH", "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.755001350995302*^9, 3.755001397833783*^9}, {
  3.7550015474069123`*^9, 3.7550015510458455`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"81d0d641-85ea-42a6-9641-aa770949ecd2"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"S0H", ",", "sigmaT"}], "]"}]], "Input",
 CellChangeTimes->{{3.755001400060593*^9, 3.755001400226844*^9}, {
  3.7550015763895607`*^9, 3.755001580891612*^9}, {3.7550016333778324`*^9, 
  3.7550016367930765`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"28bec43e-e76d-4463-9d29-c32ba0fd6212"]
}, Closed]],

Cell[CellGroupData[{

Cell["Analyse Tensor parameters", "Subsubsection",
 CellChangeTimes->{{3.7549186656015377`*^9, 3.7549186728649974`*^9}, 
   3.7549194024976115`*^9, {3.7550008603924294`*^9, 3.7550008637192807`*^9}, 
   3.7550015902694283`*^9},
 CellTags->"c:63",ExpressionUUID->"5df7f489-c3af-447f-892b-2d741b7472b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eig", "=", 
   RowBox[{"EigenvalCalc", "[", "tens", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fa", "=", 
   RowBox[{"FACalc", "[", "eig", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"md", "=", 
   RowBox[{"ADCCalc", "[", "eig", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"cl", ",", "cp", ",", "cs"}], "}"}], "=", 
   RowBox[{"WestinMeasures", "[", "eig", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8705049348269043`*^9, 3.870504948757802*^9}, {
  3.8705051652047434`*^9, 3.8705052676058707`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"24c3899b-694b-4771-a7d6-cec18d60bac9"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"GridData", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cl", ",", "cp", ",", "cs"}], "}"}], ",", "3"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8705051949214144`*^9, 3.870505225351012*^9}, {
  3.870507136666195*^9, 3.870507156346069*^9}},
 CellLabel->
  "In[415]:=",ExpressionUUID->"3c550b97-fb74-42b7-bd13-854bf4fdc94d"],

Cell["\<\
ParameterCalc will calculate l1, l2, l3, MD and FA. Internally it uses \
EignvalCalc, ADCCal and FACalc\
\>", "Text",
 CellChangeTimes->{{3.7550008023956223`*^9, 3.7550008212908936`*^9}, {
  3.758440930595067*^9, 
  3.758440954625654*^9}},ExpressionUUID->"827dae19-915f-47c7-88e0-\
29476a68b6eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"par", "=", 
   RowBox[{"ParameterCalc", "[", "tens", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7549186746012135`*^9, 3.75491868181139*^9}, 
   3.75491987629683*^9, {3.7549199750647078`*^9, 3.7549199854126315`*^9}, 
   3.755000732829716*^9, {3.755000800069415*^9, 3.7550008004599547`*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"6288443b-53ef-46c2-adb6-5fd242877ecd"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"par", "[", 
    RowBox[{"[", "4", "]"}], "]"}], ",", 
   RowBox[{"par", "[", 
    RowBox[{"[", "5", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", ".5"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549201719106073`*^9, 3.7549202047145824`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"7d283bc0-0b1c-4f90-843a-7e94e6175fe9"],

Cell["Get the parameters from muscle masks in table form", "Text",
 CellChangeTimes->{{3.755000843971737*^9, 
  3.755000856556223*^9}},ExpressionUUID->"c7e1f636-4a65-44ba-97f5-\
3c532c2ec232"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"masks", ",", "labs"}], "}"}], "=", 
   RowBox[{"SplitSegmentations", "[", "labels", "]"}]}], ";"}], "\n", 
 RowBox[{"TableForm", "@", 
  RowBox[{"GetMaskMeans", "[", 
   RowBox[{
    RowBox[{"par", "[", 
     RowBox[{"[", "4", "]"}], "]"}], ",", "masks", ",", "\"\<MD\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "@", 
  RowBox[{"GetMaskMeans", "[", 
   RowBox[{
    RowBox[{"par", "[", 
     RowBox[{"[", "5", "]"}], "]"}], ",", "masks", ",", "\"\<FA\>\""}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.754919933167025*^9, 3.7549199519066277`*^9}, 
   3.7550008748413715`*^9},
 CellLabel->
  "In[101]:=",ExpressionUUID->"016438a3-9162-4cbf-bae2-0cd4f7115cfa"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"MD mean\"\>", "\<\"MD std\"\>", "\<\"MD Median\"\>", "\<\"MD \
5%\"\>", "\<\"MD 95%\"\>"},
    {"1.5495377006710052`", "0.09377924307661704`", "1.558700184218166`", 
     "1.380775624461458`", "1.6873523993502058`"},
    {"1.5151320426252204`", "0.0809588868216387`", "1.5241434232595887`", 
     "1.3679782996070429`", "1.6320429426823704`"},
    {"1.6095152767381276`", "0.06624295975045895`", "1.6132780438908134`", 
     "1.4943175182651878`", "1.7117992726708613`"},
    {"1.5637487653682762`", "0.06488860921775194`", "1.5601895079461439`", 
     "1.4633284600560088`", "1.6763896117757016`"},
    {"1.606448831041187`", "0.08262725765244516`", "1.6022442088482678`", 
     "1.4779883884018172`", "1.749356209321018`"},
    {"1.5578989272022936`", "0.07567502831108887`", "1.558964514194152`", 
     "1.4316386562132333`", "1.68050862655327`"},
    {"1.6761080946391003`", "0.093803206068464`", "1.6910142358574316`", 
     "1.5002708105804137`", "1.8024494674478828`"},
    {"1.5828710072399321`", "0.07651862763120891`", "1.591517962713377`", 
     "1.4436208863552251`", "1.6931235585721218`"},
    {"1.6328662262325357`", "0.07501114241441105`", "1.6264076113810495`", 
     "1.5210286448343893`", "1.766637243253736`"},
    {"1.633923248471189`", "0.06939851005642296`", "1.6291205724146096`", 
     "1.5283192974728794`", "1.7559500004294157`"},
    {"1.6821441747470023`", "0.08302734578423508`", "1.6861361471971728`", 
     "1.5389222208292619`", "1.8116443377660911`"},
    {"1.6354759998988624`", "0.06651729193486124`", "1.6316287589034368`", 
     "1.5328923299938502`", "1.751260120856189`"},
    {"1.5966809569504552`", "0.08814767474483465`", "1.6007248826515978`", 
     "1.444942842791566`", "1.7345152862830453`"},
    {"1.5948765630232056`", "0.07840423596063001`", "1.591126124700706`", 
     "1.4725527043132542`", "1.7300923686961116`"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.870932018355995*^9},
 CellLabel->
  "Out[102]//TableForm=",ExpressionUUID->"452a4606-7043-40ac-a997-\
ae2b5dacc5de"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"FA mean\"\>", "\<\"FA std\"\>", "\<\"FA Median\"\>", "\<\"FA \
5%\"\>", "\<\"FA 95%\"\>"},
    {"0.19690616591963922`", "0.03752414470464597`", "0.19266998549254813`", 
     "0.14283114761096175`", "0.26518793427614873`"},
    {"0.19651248127564153`", "0.041902589589898405`", "0.19218887985157496`", 
     "0.13536140544389055`", "0.2722289761606328`"},
    {"0.2353080950134224`", "0.03724450207922327`", "0.23593303380996067`", 
     "0.17299882994720384`", "0.2954747255666893`"},
    {"0.20814424014397567`", "0.0471529955205868`", "0.20162534214968253`", 
     "0.14253852214801235`", "0.29541381712728765`"},
    {"0.18236640711597563`", "0.03946740008698749`", "0.17850467879025844`", 
     "0.12437699172509385`", "0.253398378023628`"},
    {"0.18954228512513938`", "0.044268900580796855`", "0.1859463007953923`", 
     "0.12314541558419873`", "0.268177462526815`"},
    {"0.22621873865032832`", "0.03208102484620301`", "0.22176605191369497`", 
     "0.18161896368145947`", "0.285614047482722`"},
    {"0.22147821415880897`", "0.03193565790578685`", "0.2179332999399693`", 
     "0.1753421258496288`", "0.2795129507934676`"},
    {"0.2137740393644168`", "0.03534907570299276`", "0.21024574393954396`", 
     "0.1619648491130877`", "0.277488482882726`"},
    {"0.2104968740330044`", "0.04443635248662932`", "0.20763614997328642`", 
     "0.14249032345006987`", "0.28830130461912423`"},
    {"0.22404697248785427`", "0.034736523734254995`", "0.21954839068619134`", 
     "0.1751064774823852`", "0.2879744705825639`"},
    {"0.23322254717816587`", "0.034950182835092394`", "0.23019030165924587`", 
     "0.18115578973600763`", "0.2955837308542848`"},
    {"0.2619240785294337`", "0.046684528380260194`", "0.2560631236815526`", 
     "0.1957860141127992`", "0.3476151493737269`"},
    {"0.23904347010934823`", "0.04055459579357167`", "0.23451627035728947`", 
     "0.18050439879356914`", "0.3127739122268182`"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8709320191219926`*^9},
 CellLabel->
  "Out[103]//TableForm=",ExpressionUUID->"a786636f-6085-4660-b164-\
cc314056772b"]
}, Open  ]],

Cell["\<\
Plot the parameters prom a muscle mask as a Histogram to evaluate their \
distribution\
\>", "Text",
 CellChangeTimes->{{3.7550008867946796`*^9, 
  3.7550009101257515`*^9}},ExpressionUUID->"811ccd9c-c131-4267-85e8-\
406bc2e46d47"],

Cell[BoxData[
 RowBox[{"Grid", "@", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Hist", "[", 
       RowBox[{
        RowBox[{"GetMaskData", "[", 
         RowBox[{
          RowBox[{"par", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", "#"}], "]"}], ",", 
        RowBox[{"Method", "\[Rule]", "\"\<Both\>\""}]}], "]"}], "&"}], "/@", 
     RowBox[{
      RowBox[{"Transpose", "[", "masks", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "6"}], "]"}], "]"}]}], ",", "3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.754920962778118*^9, 3.7549209861502666`*^9}, {
  3.7549211603226004`*^9, 3.7549211784332447`*^9}, {3.754921251856983*^9, 
  3.7549212556549807`*^9}, {3.754999246118026*^9, 3.754999247507222*^9}, {
  3.7550009157742796`*^9, 3.7550009289458475`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"a7a27062-ebb2-4ed3-a1d1-3025b602e14b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculate Tensor angles", "Subsubsection",
 CellChangeTimes->{{3.7549205638416615`*^9, 3.7549205750434775`*^9}, {
  3.7550009652188683`*^9, 3.755000970820772*^9}},
 CellTags->"c:64",ExpressionUUID->"e037ed65-c2cd-4cc5-8065-ba7af72e972b"],

Cell["\<\
First filter the tensor using a diffusionFilter and anisotropic smoothing.\
\>", "Text",
 CellChangeTimes->{{3.755000973750066*^9, 3.7550009919163976`*^9}, {
  3.755001047885309*^9, 
  3.7550010495798187`*^9}},ExpressionUUID->"da9608bd-9f5a-4fa4-b8a1-\
f1650dab7c2a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "@", "AnisoFilterTensor"}]], "Input",
 CellChangeTimes->{{3.8709322243461847`*^9, 3.870932228700492*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"ff560c23-792c-49a2-9cd2-ce9d09a17f64"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"AnisoWeightType", "\[Rule]", "2"}], ",", 
   RowBox[{"AnisoKappa", "\[Rule]", "5.`"}], ",", 
   RowBox[{"AnisoStepTime", "\[Rule]", "1"}], ",", 
   RowBox[{"AnisoFilterSteps", "\[Rule]", "5"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8709322291881895`*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"e896aa8b-c98c-49f3-bfa8-6fd7d7341e2a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"tensF", "=", 
   RowBox[{"AnisoFilterTensor", "[", 
    RowBox[{"tens", ",", "datareg", ",", 
     RowBox[{"AnisoFilterSteps", "\[Rule]", "3"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7549202250785255`*^9, 3.7549202397016525`*^9}, 
   3.755001029185559*^9, {3.8709322499734344`*^9, 3.8709322513971157`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"3fe6c7c2-00b5-4d1e-b4f8-750688380984"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"tens", ",", "tensF"}], "]"}]], "Input",
 CellChangeTimes->{{3.8709321395162773`*^9, 3.8709321445475044`*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"25e62b7b-fcf3-450b-9801-5da78cc91f73"],

Cell[BoxData[
 RowBox[{"ColorFAPlot", "[", "tensF", "]"}]], "Input",
 CellChangeTimes->{{3.755001208033079*^9, 3.7550012133556104`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"d05c621c-17a6-4dab-b5a8-744183e72ded"],

Cell["\<\
Calculate the eigenvectors and their angle with respect to the slice normal\
\>", "Text",
 CellChangeTimes->{{3.7550009993812585`*^9, 
  3.755001024147148*^9}},ExpressionUUID->"c2e709da-971c-4de4-a9f5-\
34d1b012c9b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eigVal", "=", 
   RowBox[{"EigenvecCalc", "[", "tensF", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"angMap", "=", 
   RowBox[{"AngleCalc", "[", 
    RowBox[{
     RowBox[{"eigVal", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "All", ",", "All", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"Distribution", "\[Rule]", "\"\<0-90\>\""}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7549204064330254`*^9, 3.754920423101942*^9}, 
   3.755000996767805*^9},
 CellLabel->
  "In[107]:=",ExpressionUUID->"cfeacfe6-ee62-43ac-999d-2a12cb57a737"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"angMap", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "90"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549205923651466`*^9, 3.754920595437496*^9}, {
  3.754920650714964*^9, 3.7549206547954545`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"ecc0c585-9da4-4f6a-a6fe-b989e06865e6"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulate Tensor Data and fit testing", "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7554985560315247`*^9, 3.755498559150863*^9}, {
   3.7584331056859984`*^9, 
   3.758433107556983*^9}},ExpressionUUID->"1751ae4d-03af-43ab-814a-\
5f1f74188c44"],

Cell[CellGroupData[{

Cell["Simulate Diffusion signal", "Subsection",
 CellChangeTimes->{{3.7555055424913597`*^9, 3.755505547990526*^9}},
 CellTags->"c:65",ExpressionUUID->"d31f39f7-0271-44c7-bb22-4483ca591ade"],

Cell["MRI acquisition parameters used in simulation", "Text",
 CellChangeTimes->{{3.755498706578211*^9, 
  3.7554987088653297`*^9}},ExpressionUUID->"10ef7ece-7769-4d88-bcb0-\
24ae840e2ae7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"grad", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"GenerateGradients", "[", 
      RowBox[{"16", ",", 
       RowBox[{"VisualOpt", "\[Rule]", "False"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "0.", ",", "0."}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bvec", "=", 
   RowBox[{
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"450", ",", 
        RowBox[{
         RowBox[{"Length", "[", "grad", "]"}], "-", "1"}]}], "]"}], ",", 
      "0"}], "]"}], "//", "N"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"TR", ",", "TE"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"2990", ",", "49"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"parMus", "=", 
    RowBox[{"{", 
     RowBox[{"0.9", ",", "1200", ",", "37"}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"pd", ",", "T1", ",", "T2"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parFat", "=", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", "300", ",", "80"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dim", "=", 
    RowBox[{"{", 
     RowBox[{"50", ",", "50"}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"2500", " ", "voxels"}], "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7554991728825464`*^9, 3.7554991895206566`*^9}, {
   3.7555027201165314`*^9, 3.755502726818404*^9}, 3.7555027960200157`*^9, {
   3.7555046513955193`*^9, 3.755504652242817*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"5bf5b320-1c49-437a-99de-8917ff7c9d0c"],

Cell["diffusion properties of fat and muscle", "Text",
 CellChangeTimes->{{3.7554987153767567`*^9, 3.755498717795229*^9}, {
  3.755498845121635*^9, 
  3.755498846384009*^9}},ExpressionUUID->"924a6c5c-f5e2-49c7-9aec-\
d99cba543428"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eigFat", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.8", ",", "0.8", ",", "0.8"}], "}"}], "/", "1000."}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"MDfat", ",", "FAfat"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", "eigFat", "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"ADCCalc", ",", "FACalc"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"trueFat", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"1000", "*", "eigFat"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1000", "MDfat"}], ",", "FAfat"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eigMus", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.6", ",", "1.4", ",", "1.0"}], "}"}], "/", "1000."}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"MDmus", ",", "FAmus"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", "eigMus", "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"ADCCalc", ",", "FACalc"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trueMus", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"1000", "*", "eigMus"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1000", "MDmus"}], ",", "FAmus"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7554987124178233`*^9, 3.7554987420325537`*^9}, {
  3.755498807491068*^9, 3.7554989260180225`*^9}, {3.7554989951714444`*^9, 
  3.7554990114404864`*^9}, {3.755503913939555*^9, 3.755503915827593*^9}, {
  3.7555045928829904`*^9, 3.7555045943549566`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"ac329d16-f122-4398-9d78-bd98c3eb7a70"],

Cell["\<\
relative signal of muscle and fat, muscle signal is set to 1 and fat signal \
is relative to that\
\>", "Text",
 CellChangeTimes->{
  3.7554987349964027`*^9},ExpressionUUID->"1460edd8-ebc9-4085-89c9-\
9648c5994b0c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sigMus", "=", 
   RowBox[{"Signal", "[", 
    RowBox[{"parMus", ",", "TR", ",", "TE"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sigFat", "=", 
   RowBox[{"Signal", "[", 
    RowBox[{"parFat", ",", "TR", ",", "TE"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sigMus", ",", "sigFat"}], "}"}], "=", 
   RowBox[{"1000", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigMus", ",", "sigFat"}], "}"}], "/", "sigMus"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.755498733095319*^9, 3.7554987566720223`*^9}, {
  3.7555040874450517`*^9, 3.755504088387574*^9}, {3.7555045991718335`*^9, 
  3.7555046397624445`*^9}, {3.7555046804054747`*^9, 3.75550471723564*^9}, {
  3.755505126598693*^9, 3.755505158163907*^9}, {3.755505202579651*^9, 
  3.7555052230444407`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"8ef48365-f337-4591-929a-e3834a62a6b4"],

Cell["SNR and fat range for simulation", "Text",
 CellChangeTimes->{
  3.7554987547880144`*^9},ExpressionUUID->"a46f428a-dc95-4a9c-94ee-\
db51bba31c07"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SNR", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"5", ",", "55", ",", "5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fat", "=", 
   RowBox[{
    RowBox[{"N", "@", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "60", ",", "5"}], "]"}]}], "/", "100"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.755498747952379*^9, 3.7554987529771776`*^9}, {
  3.7555026885814595`*^9, 3.7555026952833323`*^9}, {3.7555039261491194`*^9, 
  3.7555039312025957`*^9}, {3.7555047653022795`*^9, 3.755504765826683*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"4c01170b-1dc6-4a6f-94bb-326f8fac8dcb"],

Cell["Each slice has a different SNR value", "Text",
 CellChangeTimes->{{3.7554992010614014`*^9, 3.755499222088479*^9}, {
  3.7554992963196063`*^9, 3.7554993090876026`*^9}, {3.7554993879996243`*^9, 
  3.7554993928785996`*^9}},ExpressionUUID->"26edf3b3-8ad9-461c-86ea-\
f42fcabaaf29"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"diffSNRData", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"AddNoise", "[", 
      RowBox[{
       RowBox[{"CreateDiffData", "[", 
        RowBox[{
        "sigMus", ",", "eigMus", ",", "bvec", ",", "grad", ",", "dim"}], 
        "]"}], ",", "#", ",", 
       RowBox[{"NoiseSize", "\[Rule]", "\"\<SNR\>\""}]}], "]"}], "&"}], "/@", 
    "SNR"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "diffSNRData", "]"}]}], "Input",
 CellChangeTimes->{{3.755499371169255*^9, 3.755499410639565*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"dc246c71-2d8c-4755-93db-3ddef0094fa6"],

Cell["\<\
Each slice has a different fat concentration and all data has an SNR of 30\
\>", "Text",
 CellChangeTimes->{{3.7554992010614014`*^9, 3.755499222088479*^9}, {
  3.7554992963196063`*^9, 3.7554993090876026`*^9}, {3.755499418469868*^9, 
  3.755499419198783*^9}},ExpressionUUID->"2870d320-5902-4ad9-9183-\
18b8640c365a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"diffFatData", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "#"}], ")"}], 
        RowBox[{"CreateDiffData", "[", 
         RowBox[{
         "sigMus", ",", "eigMus", ",", "bvec", ",", "grad", ",", "dim"}], 
         "]"}]}], "+", 
       RowBox[{"#", " ", 
        RowBox[{"CreateDiffData", "[", 
         RowBox[{
         "sigFat", ",", "eigFat", ",", "bvec", ",", "grad", ",", "dim"}], 
         "]"}]}]}], ")"}], "&"}], "/@", "fat"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"diffFatData", "=", 
   RowBox[{"AddNoise", "[", 
    RowBox[{"diffFatData", ",", 
     RowBox[{"1000", "/", "30."}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "diffFatData", "]"}]}], "Input",
 CellChangeTimes->{{3.7554990540502625`*^9, 3.7554990574422503`*^9}, {
  3.755499098578025*^9, 3.755499165345476*^9}, {3.7554991990731335`*^9, 
  3.755499199856219*^9}, {3.7554992345026464`*^9, 3.7554992567207756`*^9}, {
  3.7554992876353903`*^9, 3.7554993508476458`*^9}, {3.7555040025015373`*^9, 
  3.755504002562702*^9}, {3.755504115733507*^9, 3.755504119538631*^9}, {
  3.7555051476217604`*^9, 3.7555051480198555`*^9}, {3.7555058283248744`*^9, 
  3.755505829011708*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"bc673003-00c7-4136-ab12-9df2d7f84eeb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fit the simulated diffusion signal", "Subsection",
 CellChangeTimes->{{3.758349069323036*^9, 3.7583490793226967`*^9}, {
  3.7584697305882645`*^9, 3.758469732599307*^9}},
 CellTags->"c:66",ExpressionUUID->"09dc6daf-59ee-4840-bd77-0dfd2bff5562"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tensSNR", ",", "S0SNR", ",", "outSNR", ",", "resSNR"}], "}"}], 
   "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{"diffSNRData", ",", "grad", ",", "bvec"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tensFat", ",", "S0Fat", ",", "outFat", ",", "resFat"}], "}"}], 
   "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{"diffFatData", ",", "grad", ",", "bvec"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7554994561780434`*^9, 3.7554994672640123`*^9}, {
   3.7554995041277866`*^9, 3.7554995062093306`*^9}, {3.7554999740035515`*^9, 
   3.7554999771208525`*^9}, {3.7555000830755177`*^9, 3.755500086728283*^9}, {
   3.7555038872848186`*^9, 3.755503894660489*^9}, {3.7555040058494663`*^9, 
   3.7555040072512045`*^9}, 3.755505488884363*^9},
 CellLabel->"In[49]:=",ExpressionUUID->"936e9f89-0d66-473b-9277-3d000d5d55d5"],

Cell["\<\
Calculate Parameters with and without rejection of negative eigenvalues\
\>", "Text",
 CellChangeTimes->{{3.7555057186792235`*^9, 
  3.755505737032175*^9}},ExpressionUUID->"8fa6be86-0e1e-4c2d-92fd-\
815afc33504c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parSNR", "=", 
   RowBox[{"ParameterCalc", "[", 
    RowBox[{"tensSNR", ",", 
     RowBox[{"Reject", "\[Rule]", "False"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"parFat", "=", 
   RowBox[{"ParameterCalc", "[", 
    RowBox[{"tensFat", ",", 
     RowBox[{"Reject", "\[Rule]", "False"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.755500102429257*^9, 3.755500118594836*^9}, 
   3.755500158406703*^9, {3.7555022625180807`*^9, 3.755502271492881*^9}, {
   3.758470651156897*^9, 3.7584706560885053`*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"16a20155-a9d0-46dd-9004-3126334dafa9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parSNRT", "=", 
   RowBox[{"ParameterCalc", "[", 
    RowBox[{"tensSNR", ",", 
     RowBox[{"Reject", "\[Rule]", "True"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"parFatT", "=", 
   RowBox[{"ParameterCalc", "[", 
    RowBox[{"tensFat", ",", 
     RowBox[{"Reject", "\[Rule]", "True"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.755500102429257*^9, 3.755500118594836*^9}, 
   3.755500158406703*^9, {3.7555022625180807`*^9, 3.755502271492881*^9}, {
   3.7555057406599007`*^9, 3.755505770595284*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"d9be655b-99c1-4a49-92e9-1066227e6a3d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Evaluate the fits", "Subsection",
 CellChangeTimes->{{3.7583490835356913`*^9, 3.75834908874759*^9}},
 CellTags->"c:67",ExpressionUUID->"f1a32196-e07f-40de-9d22-2a3e291b7dda"],

Cell["Show histogram of MD and FA with different SNR values", "Text",
 CellChangeTimes->{{3.755500179573262*^9, 3.7555001958141766`*^9}, {
  3.755500399489155*^9, 
  3.755500419601555*^9}},ExpressionUUID->"ca482818-c0ff-4fd6-a65d-\
7ccf593d5fbc"],

Cell[BoxData[{
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"parSNR", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.1", ",", "1.8"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<MD\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<SNR = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"SNR", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "SNR", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"parSNR", "[", 
        RowBox[{"[", 
         RowBox[{"5", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.01", ",", "0.5"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<FA\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<SNR = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"SNR", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "SNR", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.755500162982013*^9, 3.7555001712671423`*^9}, {
  3.755500207797134*^9, 3.755500389828378*^9}, {3.755500476213152*^9, 
  3.7555004765159626`*^9}, {3.755502751367876*^9, 3.755502765781315*^9}, {
  3.7555028251228733`*^9, 3.7555028274430604`*^9}, {3.755505256917855*^9, 
  3.755505257698938*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"e1644f4b-cc91-419f-a202-938b3f310269"],

Cell["Show histogram of MD and FA with different fat values", "Text",
 CellChangeTimes->{{3.755500179573262*^9, 3.7555001958141766`*^9}, {
  3.755500399489155*^9, 3.755500419601555*^9}, {3.755504259300619*^9, 
  3.7555042596989145`*^9}},ExpressionUUID->"eb75b5be-106f-402c-87c8-\
a260f27e02a9"],

Cell[BoxData[{
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"parFat", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.8", ",", "1.8"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<MD\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<fat [%] = \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"100", 
           RowBox[{"fat", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"Length", "[", "fat", "]"}], ",", "5"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"parFat", "[", 
        RowBox[{"[", 
         RowBox[{"5", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.01", ",", "0.5"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<FA\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<fat [%] = \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"100", 
           RowBox[{"fat", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"Length", "[", "fat", "]"}], ",", "5"}], "]"}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.755500162982013*^9, 3.7555001712671423`*^9}, {
  3.755500207797134*^9, 3.755500389828378*^9}, {3.755500476213152*^9, 
  3.7555004765159626`*^9}, {3.755502751367876*^9, 3.755502765781315*^9}, {
  3.7555028251228733`*^9, 3.7555028274430604`*^9}, {3.755504263621405*^9, 
  3.7555043462739897`*^9}, {3.755505301230109*^9, 3.7555053021796412`*^9}, {
  3.755505373463333*^9, 3.7555053828834915`*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"73bedda0-2b21-40b2-b6f2-ac649cc09720"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parSNR", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", "SNR", ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "2"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<MD\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<MD as function of SNR\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parSNR", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", "SNR", ",", 
      RowBox[{"{", 
       RowBox[{"0.15", ",", "0.5"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<FA\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<FA as function of SNR\>\""}]}], "]"}]}],
    "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7555029294139233`*^9, 3.755502944645937*^9}, {
   3.7555032449315224`*^9, 3.755503245778783*^9}, {3.7555033968206387`*^9, 
   3.755503412773309*^9}, {3.755503455748889*^9, 3.755503541041586*^9}, {
   3.7555037516536865`*^9, 3.7555038438775*^9}, 3.7555054146962986`*^9, {
   3.7555054546298923`*^9, 3.7555054697152395`*^9}, {3.7555056432709084`*^9, 
   3.7555056532680564`*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"e72fb9d0-91ec-427c-bffa-63847b71c7e9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQEiDumFNnIz5b/YQ/gqDvsW/nhSLvUVytdzkGjg
KnnJBOObOMw6FnJSNhjGt3S4sHS2aIMrjG/nsGxf9creECi/wdFhHsey304+
MHkXh/Syp/w/Yfob3Bza3afxxgfA5D0dtJQD2Fy8YfLeDntvHah/EAeTF3GY
NRMEXsLd62w7X7hJ4iPcvR5rQ5bL2XyCu9cpsev37sDPcPe+FbU8zDv/M9y9
UScnqnz99hnu3mf/mXK4JL/A3at7/EOan/8XuHst/x9ufRT3Be7eLYcf3u4o
+QJ3r+3r90vvLPwCd6/YgwUWt3n+wN1ryRa0LVfmJ9y9L4IOOGw5+R3u3k/a
8tPrQ77D3bvZ9F/6p9ff4O79tDlVT23TN7h7wwQ9u6vrv8Hdu1D11o7FEd/g
7r3anzH1tuM3uHsXNO0z+K/4DeHeUxMjn0h/sz/t3HhvQpkYPHwBuqGodg==

      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          Opacity[0.2], 
          RGBColor[1, 0, 0]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{12, 34, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 33, 
            32, 31, 30, 29, 28, 27, 26, 25, 24, 
            23}}]}]}, {}, {}, {}}, {{}, {}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{34, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22}]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
          33}]}}}], {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {5.25, 0.806}, PlotRange -> {{5, 55}, {0.8, 2}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {5.25, 0.806}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"MD\"", TraditionalForm], None}, {
        FormBox["\"SNR\"", TraditionalForm], None}}, FrameStyle -> 
     Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"MD as function of SNR\"", TraditionalForm], 
     PlotRange -> {{5, 55}, {0.8, 2}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQEiDhD6gT2EVnF4EJyqtHTWLShfzyFNIHOtQ8tV
KN/EwWWOWdrW2ZegfEuHvgC+nIPJF6F8O4f/b8qX6FldgPAbHB1yrSeWz7hw
Hirv4hDS9YQ/gAfKb3BzuPzWp0by3TmovKfDvPdV6dwuUH6Dt8Oa2CrGK9Iw
eRGHa9IyFyr33oG71/DjxWrzRRfh7hVi32N1TPsc3L05nEK3/0qehrs3g+FI
Y0zaKbh7f131E9coOQl374tN8a/enDoJd2+RY2z3heMn4e49tPrUD0uDU3D3
Tsttt9FlPgV3L/eZOsEDQafg7kUNXz0HZ9kS23mfbsPdd8n4yb3sVdfh7nux
wGp6yJSrcPcx5nvYeu66DHffz8REJqXXl+Dum/3S9FS6xiW4+z5Nf17/5+pF
uPsuW5ifLHG6CHff8u+7fhR/umA/r7Q9rPaeAtx9R5arMlxcrwHnAwCmgJqN

      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          Opacity[0.2], 
          RGBColor[1, 0, 0]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 32, 31, 
            30, 29, 28, 27, 26, 25, 24, 34, 
            23}}]}]}, {}, {}, {}}, {{}, {}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large]], 
         LineBox[{33, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22}]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         LineBox[{34, 24, 25, 26, 27, 28, 29, 30, 31, 
          32}]}}}], {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {5.25, 0.15175}, PlotRange -> {{5, 55}, {0.15, 0.5}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {5.25, 0.15175}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"FA\"", TraditionalForm], None}, {
        FormBox["\"SNR\"", TraditionalForm], None}}, FrameStyle -> 
     Thickness[Large], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica", 14, 
       GrayLevel[0]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"FA as function of SNR\"", TraditionalForm], 
     PlotRange -> {{5, 55}, {0.15, 0.5}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Input",
 CellChangeTimes->{{3.7585379195504637`*^9, 
  3.758537942921279*^9}},ExpressionUUID->"659a2995-7727-4d66-9c45-\
aaeb505470d5"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parFat", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", 
      RowBox[{"100", "fat"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.5"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<fat fraction [%]\>\"", ",", "\"\<MD\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<MD as function of fat fraction\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parFat", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", 
      RowBox[{"100", "fat"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.4"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<fat fraction [%]\>\"", ",", "\"\<FA\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<FA as function of fat fraction\>\""}]}],
      "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7555054226454363`*^9, 3.755505444498875*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"7039e879-900b-4789-b0f3-47a256fa0bbf"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parSNRT", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", "SNR", ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "2"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<MD\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<MD as function of SNR\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parSNRT", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", "SNR", ",", 
      RowBox[{"{", 
       RowBox[{"0.15", ",", "0.5"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<FA\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<FA as function of SNR\>\""}]}], "]"}]}],
    "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7555029294139233`*^9, 3.755502944645937*^9}, {
   3.7555032449315224`*^9, 3.755503245778783*^9}, {3.7555033968206387`*^9, 
   3.755503412773309*^9}, {3.755503455748889*^9, 3.755503541041586*^9}, {
   3.7555037516536865`*^9, 3.7555038438775*^9}, 3.7555054146962986`*^9, {
   3.7555054546298923`*^9, 3.7555054697152395`*^9}, {3.7555056432709084`*^9, 
   3.7555056532680564`*^9}, {3.7555057548698072`*^9, 3.755505756086052*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"e4f0b636-a1bc-40f5-a4ba-1f9a6c814878"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parFatT", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", 
      RowBox[{"100", "fat"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.5"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<fat fraction [%]\>\"", ",", "\"\<MD\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<MD as function of fat fraction\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parFatT", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", 
      RowBox[{"100", "fat"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.4"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<fat fraction [%]\>\"", ",", "\"\<FA\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<FA as function of fat fraction\>\""}]}],
      "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7555054226454363`*^9, 3.755505444498875*^9}, {
  3.7555057607111783`*^9, 3.755505761685171*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"9ea6aef0-d1d8-4b93-aa04-3764b091c42d"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fiber Tractography", "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7554985560315247`*^9, 3.755498559150863*^9}, {
   3.7584331056859984`*^9, 3.758433107556983*^9}, {3.8375093153349724`*^9, 
   3.8375093191763477`*^9}, {3.865585680152398*^9, 3.865585681052548*^9}, {
   3.8698092317693205`*^9, 
   3.8698092348356304`*^9}},ExpressionUUID->"bc90db84-1b9a-464f-bfcb-\
7bfcdc17cc16"],

Cell[CellGroupData[{

Cell["Import The Data", "Subsection",
 CellChangeTimes->{{3.755000756204663*^9, 3.7550007614125185`*^9}},
 CellTags->"c:68",ExpressionUUID->"01c3231d-098c-4ccb-98c5-ca29c556a67d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"datareg", ",", "gradF", ",", "valF", ",", "dwivox"}], "}"}], "=", 
   RowBox[{"ImportNiiDiff", "[", 
    RowBox[{"\"\<DTIdata-reg.nii\>\"", ",", 
     RowBox[{"FlipBvec", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tens", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"ImportNii", "[", 
     RowBox[{"\"\<DTI-tensor.nii\>\"", ",", 
      RowBox[{"NiiMethod", "\[Rule]", "\"\<data\>\""}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tensF", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"ImportNii", "[", 
     RowBox[{"\"\<DTI-tensor-filt.nii\>\"", ",", 
      RowBox[{"NiiMethod", "\[Rule]", "\"\<data\>\""}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"labels", ",", "vox"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<labels.nii\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dim", "=", 
   RowBox[{"Dimensions", "[", 
    RowBox[{"First", "@", "tens"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.754895634046774*^9, 3.754895667562751*^9}, 
   3.7549147982158546`*^9, {3.7549998933836317`*^9, 3.7549998936081953`*^9}, {
   3.7550004747855062`*^9, 3.7550004893652954`*^9}, {3.7550005862069235`*^9, 
   3.755000615146139*^9}, {3.7550007439214835`*^9, 3.7550007442834463`*^9}, {
   3.8375094202002344`*^9, 3.8375094204766045`*^9}, {3.8375096188675065`*^9, 
   3.8375096327441254`*^9}, {3.8375106329545126`*^9, 
   3.8375106331145935`*^9}, {3.837511057132757*^9, 3.8375110681724567`*^9}, 
   3.8375111830577602`*^9, {3.8375115007051735`*^9, 3.8375115008517933`*^9}, {
   3.8375116843240447`*^9, 3.8375116917766247`*^9}, 3.8375119754757657`*^9, {
   3.837512081798009*^9, 3.837512107347674*^9}, {3.8485704645430946`*^9, 
   3.848570470409502*^9}, {3.8695454133997707`*^9, 3.8695454140600057`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"3d03fde1-41a5-4faa-a08e-3aa8eeca546a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Process the data for tractography", "Subsection",
 CellChangeTimes->{{3.8375104797294474`*^9, 3.8375104885479608`*^9}, 
   3.8620286543232174`*^9, 3.865585688515154*^9},
 CellTags->"c:69",ExpressionUUID->"7b2df312-5a60-4afc-9c09-a780d1b79f27"],

Cell["Smooth the data which helps fiber tractography", "Text",
 CellChangeTimes->{{3.8375106376639895`*^9, 
  3.8375106504812546`*^9}},ExpressionUUID->"5f0b1bca-e3d5-41ed-9a70-\
a694208969b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataF", "=", 
   RowBox[{"AnisoFilterData", "[", 
    RowBox[{"datareg", ",", 
     RowBox[{"AnisoItterations", "->", "2"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8375104731632657`*^9, 3.8375105249107714`*^9}, {
  3.8375105761397724`*^9, 3.837510580044135*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"d2775a6c-75c0-463c-becb-f6bfa512909f"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataF", ",", "datareg"}], "]"}]], "Input",
 CellChangeTimes->{{3.870932381976201*^9, 3.8709323868198586`*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"12720b56-7e2e-45cc-952c-34693e5f7fe2"],

Cell["calculate the tensor with the smoothed data.", "Text",
 CellChangeTimes->{{3.8375106376639895`*^9, 
  3.8375106653089695`*^9}},ExpressionUUID->"dcc0e6b5-0a89-49d9-90d4-\
a98753f46dde"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tens", ",", "S0", ",", "outlier", ",", "res"}], "}"}], "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{"datareg", ",", "gradF", ",", "valF"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8485704862851367`*^9, 
  3.8485704887647266`*^9}},ExpressionUUID->"f8f69f22-ac8e-4445-9f50-\
f25c1374ad4c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tensF", ",", "S0", ",", "outlier", ",", "res"}], "}"}], "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{"dataF", ",", "gradF", ",", "valF"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.837510590028081*^9, 3.8375105986846066`*^9}, {
  3.8375121743634157`*^9, 
  3.8375121759722643`*^9}},ExpressionUUID->"9dfec1b0-002d-4e9b-8152-\
5110df278580"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tensF2", "=", 
   RowBox[{"AnisoFilterTensor", "[", 
    RowBox[{"tens", ",", "datareg"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.84857049315275*^9, 3.848570514286255*^9}, 
   3.862028112609728*^9, {3.8709326248898478`*^9, 3.8709326319416137`*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"b35d80d6-8ab6-4048-8c66-b1b21e5c335c"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"GridData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tens", ",", "tensF", ",", "tensF2"}], "}"}], ",", "3"}], "]"}],
    ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}], "/", "1000"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.856864359837525*^9, 3.856864368961795*^9}, {
   3.856864476372245*^9, 3.8568644854732904`*^9}, 3.8620282377807074`*^9, {
   3.8698049474177895`*^9, 3.8698049577027807`*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"dec053e8-f133-47db-9804-5e67c2ee6d0f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fiber Tractography ", "Subsection",
 CellChangeTimes->{{3.755000756204663*^9, 3.7550007614125185`*^9}, 
   3.8375096562311816`*^9, {3.8655856710124984`*^9, 3.8655856793802214`*^9}},
 CellTags->"c:70",ExpressionUUID->"d662ecba-578b-4489-8e5f-fa36d3871aa7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"masks", ",", "labs"}], "}"}], "=", 
   RowBox[{"SplitSegmentations", "[", "labels", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"all", "=", 
   RowBox[{"Dilation", "[", 
    RowBox[{
     RowBox[{"Normal", "@", 
      RowBox[{"Total", "@", 
       RowBox[{"Transpose", "@", "masks"}]}]}], ",", "1"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.837509467801848*^9, 3.8375094726240377`*^9}, {
   3.83750962007218*^9, 3.8375096447132525`*^9}, {3.83750968068489*^9, 
   3.83750968257232*^9}, 3.837510273622922*^9, 3.838112996210114*^9, {
   3.838113164653401*^9, 3.83811316473518*^9}, 3.862028868870699*^9, {
   3.8655834616765747`*^9, 3.8655834626828804`*^9}, 3.865583560235936*^9, {
   3.869221606225309*^9, 3.8692216167462187`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"e94f71ad-35d3-45b1-b3f9-da7a4a305fbf"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"Mean", "@", 
    RowBox[{"Transpose", "@", "datareg"}]}], ",", "all"}], "]"}]], "Input",
 CellChangeTimes->{{3.8672980470642076`*^9, 3.867298050340861*^9}, {
  3.869221620546195*^9, 3.869221628640093*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"67eef561-a4d4-4ecb-820a-70cda30789b1"],

Cell["\<\
Calculate the tensor parameters which will be used as stop criteria\
\>", "Text",
 CellChangeTimes->{{3.8375096937244864`*^9, 
  3.8375097131614184`*^9}},ExpressionUUID->"416dd865-07cf-4983-831e-\
47ee4c74ed0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"l1", ",", "l2", ",", "l3", ",", "md", ",", "fa"}], "}"}], "=", 
   RowBox[{"ParameterCalc", "[", "tensF", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.8375106064921355`*^9, {3.837511371858053*^9, 3.83751140314091*^9}, 
   3.837512222171653*^9, 3.8485705407332535`*^9, {3.8620286632202396`*^9, 
   3.8620286635565214`*^9}, {3.865582967526085*^9, 3.8655829676895804`*^9}, {
   3.8698045375105886`*^9, 3.869804539753971*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"d1993912-fbeb-4d5c-9270-ec462e67e431"],

Cell["Define where the tractography is allowed", "Text",
 CellChangeTimes->{{3.83750972099186*^9, 
  3.837509741100566*^9}},ExpressionUUID->"0e98120e-f12a-4c08-9535-\
de77cbef1e91"],

Cell[BoxData[
 RowBox[{
  RowBox[{"stop", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"all", ",", 
       RowBox[{"{", 
        RowBox[{"0.9", ",", "1.1"}], "}"}]}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{"within", " ", "the", " ", "muscle", " ", "mask"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"fa", ",", 
       RowBox[{"{", 
        RowBox[{"0.05", ",", "0.6"}], "}"}]}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{"within", " ", "a", " ", "FA", " ", "range"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"md", ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "2."}], "}"}]}], "}"}]}], 
    RowBox[{"(*", 
     RowBox[{"within", " ", "a", " ", "MD", " ", "range"}], "*)"}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8375097171183987`*^9, 3.8375097844276857`*^9}, 
   3.8375123060070024`*^9, {3.83811303094816*^9, 3.8381130367865996`*^9}, {
   3.8686803638115573`*^9, 3.868680363849272*^9}, 3.869215303043618*^9, {
   3.869221641199744*^9, 3.869221646913018*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"9b120239-90bf-4ad0-aecf-298d967ccc6f"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"Mask", "[", "stop", "]"}], ",", "fa"}], "]"}]], "Input",
 CellChangeTimes->{{3.8375106716325436`*^9, 3.8375106939961233`*^9}, 
   3.8375123077213917`*^9, {3.86729807540627*^9, 3.867298076955129*^9}, {
   3.8692145588330097`*^9, 3.869214628803359*^9}, {3.8692146653944693`*^9, 
   3.8692146802246675`*^9}, {3.8692152437476635`*^9, 
   3.8692152572668715`*^9}, {3.8692216650422373`*^9, 3.8692216658730106`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"563e0d28-bc72-4f64-8c7f-3ab5a3ead7ec"],

Cell[BoxData[
 RowBox[{"DTItoolExp", "[", 
  RowBox[{
   RowBox[{"MaskData", "[", 
    RowBox[{"tens", ",", 
     RowBox[{"Mask", "[", "stop", "]"}]}], "]"}], ",", "vox", ",", 
   "\"\<DTI\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8692224313578253`*^9, 3.8692224679070444`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"ae4be570-d512-46ce-8fcc-f542bee08aea"],

Cell["\<\
Perform the tractography using Euler interpolation and nearest neighbour \
interpolation.\
\>", "Text",
 CellChangeTimes->{{3.83750972099186*^9, 3.837509741100566*^9}, {
  3.837509809802057*^9, 3.837509813389328*^9}, {3.869221825761391*^9, 
  3.869221849712386*^9}},ExpressionUUID->"29a9ffcf-a4f5-4810-b77b-\
7ca390550ef8"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "get", " ", "new", " ", "location", " ", "and", " ", "the", " ", "step", 
   " ", "at", " ", "new", " ", "location"}], "*)"}]], "Input",ExpressionUUID->\
"46fa9c0a-f8eb-4dbd-baf9-6b99cc953583"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tracts", ",", "seeds"}], "}"}], "=", 
   RowBox[{"FiberTractography", "[", 
    RowBox[{"tensF2", ",", "dwivox", ",", "stop", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"tract", " ", "parameters"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"InterpolationOrder", "->", "0"}], ",", 
     RowBox[{"StepSize", "->", "Automatic"}], ",", 
     RowBox[{"Method", "->", "\"\<Euler\>\""}], ",", 
     RowBox[{"MaxSeedPoints", "->", "Automatic"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"stopping", " ", "parameters"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"FiberLengthRange", "->", 
      RowBox[{"{", 
       RowBox[{"10", ",", "400"}], "}"}]}], ",", 
     RowBox[{"FiberAngle", "->", "20"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"flip", " ", "tensor", " ", "if", " ", "needed"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"TensorFilps", "->", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
     RowBox[{"TensorPermutations", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.862027437529236*^9, 3.8620274394079647`*^9}, {
   3.8620278897297287`*^9, 3.8620278912816095`*^9}, 3.862028062193336*^9, 
   3.8620291823113995`*^9, {3.865583029643325*^9, 3.865583049114889*^9}, {
   3.8672982710929775`*^9, 3.867298271781014*^9}, {3.867298381623889*^9, 
   3.8672983839740567`*^9}, {3.867308791188753*^9, 3.8673087993282256`*^9}, {
   3.867386970093936*^9, 3.867386970397539*^9}, {3.8673873363897133`*^9, 
   3.8673873381904573`*^9}, 3.8673877493641024`*^9, 3.8673879254289227`*^9, {
   3.8673881935876856`*^9, 3.8673881936996703`*^9}, 3.868441308731515*^9, {
   3.8686790175086393`*^9, 3.868679018340372*^9}, 3.868680348117711*^9, 
   3.8691219212508073`*^9, 3.8691237774244237`*^9, {3.8691238103860636`*^9, 
   3.8691238114396343`*^9}, {3.869123952595254*^9, 3.8691239549602995`*^9}, {
   3.8691240863384705`*^9, 3.869124086975446*^9}, {3.869125024053703*^9, 
   3.8691250269637012`*^9}, 3.869125201910782*^9, {3.8691258166964445`*^9, 
   3.869125816757825*^9}, 3.869125928072315*^9, {3.8691264849395013`*^9, 
   3.869126502328417*^9}, {3.8691956518372736`*^9, 3.8691956523284063`*^9}, 
   3.869202726368157*^9, {3.8692038804199905`*^9, 3.8692038812650585`*^9}, {
   3.869204654758319*^9, 3.869204655442842*^9}, 3.8692216826882286`*^9, {
   3.8692218218734713`*^9, 3.869221822276243*^9}, {3.8692218532804937`*^9, 
   3.869221904513771*^9}, {3.8692225648199625`*^9, 3.869222565283449*^9}, {
   3.869222634710676*^9, 3.869222636324993*^9}, {3.869222735447157*^9, 
   3.869222742637659*^9}, {3.869222779273733*^9, 3.869222780756804*^9}, 
   3.869222817159481*^9, 3.8692229802990513`*^9, {3.869223249738746*^9, 
   3.8692232510303946`*^9}, {3.869223361001232*^9, 3.869223362102726*^9}, {
   3.869223658906473*^9, 3.8692236604091935`*^9}, 3.869223836203209*^9, {
   3.869284020098873*^9, 3.8692840204608264`*^9}, {3.86928457915478*^9, 
   3.869284579261496*^9}, {3.869294581375993*^9, 3.869294582628645*^9}, {
   3.869559410612919*^9, 3.869559415491228*^9}, {3.869560756985879*^9, 
   3.869560768553611*^9}, {3.8695610895637913`*^9, 3.8695610981847563`*^9}, {
   3.8695621858544273`*^9, 3.869562185979466*^9}, {3.8695622188789864`*^9, 
   3.8695622222852435`*^9}, {3.8695627667376966`*^9, 3.8695627677097764`*^9}, 
   3.8698049389745045`*^9, {3.8698083581518917`*^9, 3.8698083594119577`*^9}, {
   3.869815459321882*^9, 3.8698154646613407`*^9}, 3.86988557209137*^9, 
   3.869886161254573*^9, 3.8698997971423864`*^9, {3.8698999687070837`*^9, 
   3.869899986291354*^9}, {3.869900252648826*^9, 3.8699002539552164`*^9}, {
   3.869900316679346*^9, 3.8699003169957294`*^9}, {3.8699003532826796`*^9, 
   3.869900355474845*^9}, {3.869902318428344*^9, 3.86990231869532*^9}, {
   3.869905010455185*^9, 3.8699050105262413`*^9}, {3.86990518399375*^9, 
   3.869905185070709*^9}, {3.869905383767144*^9, 3.869905409606275*^9}, {
   3.8699069130979176`*^9, 3.8699069141953087`*^9}, 3.8699074657671003`*^9, {
   3.8699088687318363`*^9, 3.869908869719452*^9}, 3.869908917836484*^9, {
   3.869911630564778*^9, 3.8699116356459503`*^9}, {3.869914005750476*^9, 
   3.8699140168179502`*^9}, 3.870932847623079*^9},
 CellLabel->
  "In[129]:=",ExpressionUUID->"fca4f62e-c46f-4fc6-9fcc-f999350245f8"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"number of voxels within stop mask: \"\>", "\[InvisibleSpace]", 
   "48644"}],
  SequenceForm["number of voxels within stop mask: ", 48644],
  Editable->False]], "Print",
 CellChangeTimes->{3.870932850875121*^9},
 CellLabel->
  "During evaluation of \
In[129]:=",ExpressionUUID->"dc7404bb-5745-4d34-92bd-a1d6a92fca23"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"number of selected valid seedpoints: \"\>", 
   "\[InvisibleSpace]", "44225"}],
  SequenceForm["number of selected valid seedpoints: ", 44225],
  Editable->False]], "Print",
 CellChangeTimes->{3.870932850886091*^9},
 CellLabel->
  "During evaluation of \
In[129]:=",ExpressionUUID->"fc3eba46-2cbf-424e-961d-52ae16bd5445"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Tractography took \"\>", "\[InvisibleSpace]", "64.2250939`", 
   "\[InvisibleSpace]", "\<\" seconds\"\>"}],
  SequenceForm["Tractography took ", 64.2250939, " seconds"],
  Editable->False]], "Print",
 CellChangeTimes->{3.870932915243677*^9},
 CellLabel->
  "During evaluation of \
In[129]:=",ExpressionUUID->"68716cf5-b308-42d1-b7c1-4226be43e7ec"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"number of selected valid tracts: \"\>", "\[InvisibleSpace]", 
   "38411"}],
  SequenceForm["number of selected valid tracts: ", 38411],
  Editable->False]], "Print",
 CellChangeTimes->{3.8709329152606325`*^9},
 CellLabel->
  "During evaluation of \
In[129]:=",ExpressionUUID->"60811df8-b2e8-4f6a-93df-90cbda10cc26"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "38411", "\[InvisibleSpace]", "\<\" tracts within length range were selecte \
with length \"\>", "\[InvisibleSpace]", "55.5`", 
   "\[InvisibleSpace]", "\<\"\[PlusMinus]\"\>", "\[InvisibleSpace]", "33.`", 
   "\[InvisibleSpace]", "\<\" mm\"\>"}],
  SequenceForm[
  38411, " tracts within length range were selecte with length ", 55.5, 
   "\[PlusMinus]", 33., " mm"],
  Editable->False]], "Print",
 CellChangeTimes->{3.870932915362361*^9},
 CellLabel->
  "During evaluation of \
In[129]:=",ExpressionUUID->"d1262a54-b653-4867-86e7-39a83c46f0f1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindTensorPermutation", "[", 
  RowBox[{"tens", ",", "vox", ",", 
   RowBox[{"MaxSeedPoints", "\[Rule]", "500"}], ",", 
   RowBox[{"StepSize", "->", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8698863940409584`*^9, 3.8698863988501425`*^9}, {
  3.8699077968178487`*^9, 3.869907883881158*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"98003f04-256e-486f-9e6a-32988ea12280"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"x\"\>", ",", "\<\"z\"\>", ",", "\<\"y\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJwBVQKq/SFib1JlAwAAAAQAAAAGAAAAAwAAALXyhlOv2+w/5OB82JDZ4D9s
U/qPsljKP74mUOnI8Os/29XsR/G95D9EOumlPp/NPwEkGklwPtE/K1uJSg2S
yD9Gu5sj+pLnP6mtRlA0U88/UO4AchBG1j/5CSvh9ffpP7yxSp8ApM8/5Su8
HHwM0z97hqFQXGnpP2jXB2haWtM/pDEgGocIwT+s8YDskb7lPyAYfZHrwus/
/v82nH8p5T+Ru/UPMQHOP/UGqvfz2uw/GJp4qviV3D/gDEIQ7WTIPyg8/jTF
kNU/HvcOcWu8vT+x5rrrco3kPxxMuMil79M/1JJhhCEYvj8rKyYNOkDlP6jZ
4EV+39E/m2GPRXtSxj+4AHG9QAfnP/r/Dpd07tU/XhDYTdKnvT+mTqCyS2Xk
P/vSgooGl+w/fd5Wcxg44z8HiUcEOjzMP+rMPSR8b+s/opkn1xTIwD/HZHH/
kenAPzAfeZvX5M8/RPWy1vZ10D8vn23n7PboP3M5oUL4stI/R8psLbdewz+9
RIHnyE/mPx3sftguM9Y/ZaSY67WYvT/aThDX1kfkP9fZmFc3qdY/xAfJVMJ+
vT+Tsm8eQBXkPyby8KH7OOo/TLkBE6Z+5j92vRPF1iHQP0SFXAEbVes/73+x
1Q6v5T/gm744zLPOP8fHKifWjtc/Y1rw+EVMvT/xQtfw1bLjP/FIvDydK94/
Nq/qrBbYuz/j/46oUN3gPzlBVAxm9M8/gMfXBwauzz+M6MVTeNvoP8epwDO4
0dI/SL0HwtLwwj/N1hOKGzXmP/9JMSs=
     "], {{0, 0}, {6, 4}}, {0, 1}],
    Frame->True,
    FrameLabel->{None, None},
    FrameTicks->{{{{3.5, 
         FormBox[
          RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "1"}], "}"}], TraditionalForm]}, {2.5, 
         FormBox[
          RowBox[{"{", 
            RowBox[{
              RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], 
          TraditionalForm]}, {1.5, 
         FormBox[
          RowBox[{"{", 
            RowBox[{"1", ",", 
              RowBox[{"-", "1"}], ",", "1"}], "}"}], TraditionalForm]}, {0.5, 
         FormBox[
          RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", 
              RowBox[{"-", "1"}]}], "}"}], TraditionalForm]}}, None}, {
      None, {{0.5, 
         FormBox[
          RotationBox[
           RowBox[{"{", 
             RowBox[{"\"x\"", ",", "\"y\"", ",", "\"z\""}], "}"}], 
           BoxRotation -> 1.5707963267948966`], TraditionalForm]}, {1.5, 
         FormBox[
          RotationBox[
           RowBox[{"{", 
             RowBox[{"\"x\"", ",", "\"z\"", ",", "\"y\""}], "}"}], 
           BoxRotation -> 1.5707963267948966`], TraditionalForm]}, {2.5, 
         FormBox[
          RotationBox[
           RowBox[{"{", 
             RowBox[{"\"y\"", ",", "\"x\"", ",", "\"z\""}], "}"}], 
           BoxRotation -> 1.5707963267948966`], TraditionalForm]}, {3.5, 
         FormBox[
          RotationBox[
           RowBox[{"{", 
             RowBox[{"\"y\"", ",", "\"z\"", ",", "\"x\""}], "}"}], 
           BoxRotation -> 1.5707963267948966`], TraditionalForm]}, {4.5, 
         FormBox[
          RotationBox[
           RowBox[{"{", 
             RowBox[{"\"z\"", ",", "\"x\"", ",", "\"y\""}], "}"}], 
           BoxRotation -> 1.5707963267948966`], TraditionalForm]}, {5.5, 
         FormBox[
          RotationBox[
           RowBox[{"{", 
             RowBox[{"\"z\"", ",", "\"y\"", ",", "\"x\""}], "}"}], 
           BoxRotation -> 1.5707963267948966`], TraditionalForm]}}}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->150,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8698899887742896`*^9, 3.8698902690155115`*^9, 3.869890354295583*^9, 
   3.869899860513519*^9, 3.8698999212348413`*^9, 3.8699004131543784`*^9, 
   3.8699076036615963`*^9, 3.8699076726736984`*^9, {3.8699077679170113`*^9, 
   3.869907887457588*^9}, {3.869907978242773*^9, 3.8699080043170586`*^9}, 
   3.8699090281951237`*^9, 3.86990912312757*^9, 3.869910801020062*^9, 
   3.869910884431033*^9, 3.869911459780926*^9, 3.869911607639104*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"c9cd08c7-862b-437c-b807-8b6ac5ca3dc0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotData", "[", 
   RowBox[{
    RowBox[{"TractDensityMap", "[", 
     RowBox[{"tracts", ",", "vox", ",", "dim"}], "]"}], ",", 
    RowBox[{"SeedDensityMap", "[", 
     RowBox[{"seeds", ",", "vox", ",", "dim"}], "]"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8698046299466467`*^9, 3.869804697751073*^9}, {
  3.8698048416775875`*^9, 3.869804851079446*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"dfb82d14-cf33-4b95-95f5-3ae78e89659c"],

Cell["Fit the tracts with 3th order polynomials", "Text",
 CellChangeTimes->{{3.837509851965728*^9, 3.8375098628005795`*^9}, {
   3.8375132423252225`*^9, 3.837513244198758*^9}, 
   3.86202748369426*^9},ExpressionUUID->"8e9aaa2a-5ea2-4fb3-8ba8-\
9490bfc44b9a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tractsF", "=", 
   RowBox[{"FitTract", "[", 
    RowBox[{"tracts", ",", 
     RowBox[{"FittingOrder", "->", "3"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "@", 
       RowBox[{"tracts", "[", 
        RowBox[{"[", "n", "]"}], "]"}]}], ",", 
      RowBox[{"Darker", "@", "Green"}], ",", 
      RowBox[{"Line", "@", 
       RowBox[{"tractsF", "[", 
        RowBox[{"[", "n", "]"}], "]"}]}], ",", "Black", ",", 
      RowBox[{"PointSize", "[", "Large", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"seeds", "[", 
        RowBox[{"[", "n", "]"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", 
     RowBox[{"Length", "@", "tractsF"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8619548180193295`*^9, 3.8619548369062986`*^9}, 
   3.8655830804904194`*^9, {3.869215437347533*^9, 3.869215489988062*^9}, {
   3.869215530404746*^9, 3.8692155326474085`*^9}, 3.8692846616884933`*^9, {
   3.8698085890774965`*^9, 3.8698086247709575`*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"ff53edd7-43f6-4728-b267-8c4a1d5935e8"],

Cell["Filter the tracts based on various types of ROIs", "Text",
 CellChangeTimes->{{3.837509851965728*^9, 3.8375098628005795`*^9}, {
   3.8375132423252225`*^9, 3.837513244198758*^9}, 3.86202748369426*^9, {
   3.8692155493141923`*^9, 
   3.86921556457899*^9}},ExpressionUUID->"ba6f53aa-656b-4275-bc02-\
f3f4ec042568"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tractsFF", "=", 
    RowBox[{"FilterTracts", "[", 
     RowBox[{"tractsF", ",", "vox", ",", 
      RowBox[{"select", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<and\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<z\>\"", ",", "10"}], "}"}]}], "}"}], ","}], "*)"}], 
        RowBox[{"(*", 
         RowBox[{
         "only", " ", "tracts", " ", "that", " ", "go", " ", "throug", " ", 
          "slices", " ", "10"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<or\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<through\>\"", ",", 
             RowBox[{
              RowBox[{"masks", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "5"}], "]"}], "]"}], "+", " ", 
              RowBox[{"masks", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "6"}], "]"}], "]"}]}]}], "}"}]}], "}"}], 
         ",", 
         RowBox[{"(*", 
          RowBox[{
          "tracts", " ", "that", " ", "go", " ", "trough", " ", "left", " ", 
           "or", " ", "right", " ", "soleus"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"\"\<not\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<through\>\"", ",", 
             RowBox[{
              RowBox[{"masks", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], "+", 
              RowBox[{"masks", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "3"}], "]"}], "]"}], "+", 
              RowBox[{"masks", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "+", 
              RowBox[{"masks", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "4"}], "]"}], "]"}]}]}], "}"}]}], "}"}]}], 
        RowBox[{"(*", 
         RowBox[{
         "but", " ", "not", " ", "go", " ", "trough", " ", "any", " ", "of", 
          " ", "the", " ", "gastro"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{"\"\<not\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<through\>\"", ",", " ", 
             RowBox[{
              RowBox[{"masks", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "+", 
              RowBox[{"masks", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "4"}], "]"}], "]"}]}]}], "}"}]}], "}"}], 
         "*)"}], "\[IndentingNewLine]", "}"}]}]}], "]"}]}], ";"}], "//", 
  "EchoTiming"}]], "Input",
 CellChangeTimes->{{3.869205939535359*^9, 3.86920599475975*^9}, {
   3.8692062052257876`*^9, 3.869206239898343*^9}, {3.86920643889259*^9, 
   3.86920646391333*^9}, 3.8692065053528175`*^9, {3.8692066375959215`*^9, 
   3.8692066411930428`*^9}, {3.8692156008705254`*^9, 
   3.8692156817014475`*^9}, {3.869222117010753*^9, 3.869222120781263*^9}, 
   3.8692221761940236`*^9, {3.8695455556265373`*^9, 3.869545559512912*^9}, {
   3.869545691642025*^9, 3.8695456965743294`*^9}, {3.8698072888969107`*^9, 
   3.8698073205279956`*^9}, 3.8698083826158066`*^9, {3.8699127206063604`*^9, 
   3.8699127244458227`*^9}, {3.869912897044009*^9, 3.8699129013115187`*^9}, {
   3.8699130095411525`*^9, 3.869913028581978*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"5c5b6aeb-5210-4c32-9ff9-41545e4bea0f"],

Cell[BoxData["1.8204224`"], "EchoTiming",
 CellChangeTimes->{
  3.8709329817551823`*^9},ExpressionUUID->"603291bf-ef25-48fa-ab7a-\
d605c659171d"]
}, Open  ]],

Cell["Show the tracts", "Text",
 CellChangeTimes->{{3.837509851965728*^9, 3.8375098628005795`*^9}, {
   3.8375132423252225`*^9, 3.837513244198758*^9}, 3.86202748369426*^9, {
   3.8692155493141923`*^9, 3.86921556457899*^9}, {3.869808395523324*^9, 
   3.869808397426778*^9}},ExpressionUUID->"32d1c8b1-1348-4f6b-8174-\
3144dd70f39a"],

Cell[BoxData[
 RowBox[{"PlotTracts", "[", 
  RowBox[{"tracts", ",", "vox", ",", "dim", ",", 
   RowBox[{"MaxTracts", "->", "20000"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8699137182250557`*^9, 3.8699137201282773`*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"561ac5b4-5038-4726-95ec-7c7e6d324fe5"],

Cell[BoxData[
 RowBox[{"PlotTracts", "[", 
  RowBox[{"tractsFF", ",", "vox", ",", "dim", ",", 
   RowBox[{"MaxTracts", "->", "10000"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.869806985314129*^9, 3.8698069948934236`*^9}, {
  3.8698154126299872`*^9, 3.8698154181811576`*^9}, {3.86988566807963*^9, 
  3.869885668287221*^9}, {3.8699136797621946`*^9, 3.8699136798879766`*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"9ea64246-3b66-408e-ba59-b74224025c00"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["J-coupling simulations", "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9},ExpressionUUID->"3b817272-df1a-4e68-aaea-\
c22d9c35e327"],

Cell[CellGroupData[{

Cell["Spin systems", "Subsection",
 CellChangeTimes->{{3.751786128248234*^9, 3.751786134998006*^9}, {
  3.8374894790943804`*^9, 3.83748948039189*^9}},
 CellTags->"c:71",ExpressionUUID->"16e4c173-1b98-4694-a73e-a9458b44e628"],

Cell[CellGroupData[{

Cell["Predefined spin systems", "Subsubsection",
 CellChangeTimes->{{3.8374894849067287`*^9, 3.8374894926988764`*^9}},
 CellTags->"c:72",ExpressionUUID->"2d7a5585-863f-40ad-b02f-be363d7913a3"],

Cell["\<\
Fat contains multiple peak with various j coupling frequencies\
\>", "Text",
 CellChangeTimes->{{3.7548947643514943`*^9, 
  3.754894808814317*^9}},ExpressionUUID->"a933a9a3-528b-4c0e-a038-\
17f710e1fe43"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sys", "=", 
   RowBox[{"GetSpinSystem", "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
      ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Total", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Times", "@@", "#"}], "&"}], "/@", 
    RowBox[{"sys", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5"}], "}"}]}], "]"}], "]"}]}], "]"}], "]"}], "\n", 
 RowBox[{"tabs", "=", 
  RowBox[{"Column", "[", 
   RowBox[{"SysTable", "[", "sys", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.748421110877775*^9, 3.7484211355335054`*^9}, {
  3.7484326404391546`*^9, 3.748432641990839*^9}, {3.751786144851331*^9, 
  3.7517861574756746`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"07aa0cbd-4fe8-4a6b-9db7-30e546e930eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"9", " ", "\<\"A\"\>"}], "+", 
  RowBox[{"60", " ", "\<\"B\"\>"}], "+", 
  RowBox[{"6", " ", "\<\"C\"\>"}], "+", 
  RowBox[{"12", " ", "\<\"D\"\>"}], "+", 
  RowBox[{"6", " ", "\<\"E\"\>"}], "+", 
  RowBox[{"2", " ", "\<\"G\"\>"}], "+", 
  RowBox[{"2", " ", "\<\"H\"\>"}], "+", "\<\"I\"\>", "+", 
  RowBox[{"6", " ", "\<\"J\"\>"}]}]], "Output",
 CellChangeTimes->{3.8709386214836907`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"c6bc561d-ff78-4ad6-810e-a23853b23ac2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"fatGly\"\>",
          StripOnInput->False,
          FontSize->Large,
          FontWeight->Bold]},
        {
         TagBox[
          TagBox[GridBox[{
             {
              StyleBox["\[Null]",
               ShowStringCharacters->False], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"G\"\>"},
                  {"4.2`"},
                  {"1"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"G\"\>"},
                  {"4.2`"},
                  {"1"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"H\"\>"},
                  {"4.45`"},
                  {"1"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"H\"\>"},
                  {"4.45`"},
                  {"1"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"I\"\>"},
                  {"5.15`"},
                  {"1"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm]},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"G\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", 
              RowBox[{"-", "12.4`"}], "\<\"-\"\>", "7"},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"G\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", 
              RowBox[{"-", "12.4`"}], "7"},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"H\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", 
              "7"},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"H\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", 
              "7"},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"I\""},
                "RowWithSeparators"],
               
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>"}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxDividers->{
             "Columns" -> {False, True, {False}, False}, 
              "Rows" -> {False, True, {False}, False}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[2.0999999999999996`]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
          Function[BoxForm`e$, 
           TableForm[BoxForm`e$, TableHeadings -> {{
               Row[{"G"}, "  "], 
               Row[{"G"}, "  "], 
               Row[{"H"}, "  "], 
               Row[{"H"}, "  "], 
               Row[{"I"}, "  "]}, {
               Column[{"G", 4.2, 1}], 
               Column[{"G", 4.2, 1}], 
               Column[{"H", 4.45, 1}], 
               Column[{"H", 4.45, 1}], 
               Column[{"I", 5.15, 1}]}}]]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"fatStart\"\>",
          StripOnInput->False,
          FontSize->Large,
          FontWeight->Bold]},
        {
         TagBox[
          TagBox[GridBox[{
             {
              StyleBox["\[Null]",
               ShowStringCharacters->False], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"B\"\>"},
                  {"1.3`"},
                  {"3"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"B\"\>"},
                  {"1.3`"},
                  {"3"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"C\"\>"},
                  {"1.64`"},
                  {"3"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"C\"\>"},
                  {"1.64`"},
                  {"3"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"E\"\>"},
                  {"2.35`"},
                  {"3"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"E\"\>"},
                  {"2.35`"},
                  {"3"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm]},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"B\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "7.1`", 
              "7.1`", "\<\"-\"\>", "\<\"-\"\>"},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"B\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "7.1`", 
              "7.1`", "\<\"-\"\>", "\<\"-\"\>"},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"C\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", 
              "7.1`", "7.1`"},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"C\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", 
              "7.1`", "7.1`"},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"E\""},
                "RowWithSeparators"],
               
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"E\""},
                "RowWithSeparators"],
               
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxDividers->{
             "Columns" -> {False, True, {False}, False}, 
              "Rows" -> {False, True, {False}, False}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[2.0999999999999996`]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
          Function[BoxForm`e$, 
           TableForm[BoxForm`e$, TableHeadings -> {{
               Row[{"B"}, "  "], 
               Row[{"B"}, "  "], 
               Row[{"C"}, "  "], 
               Row[{"C"}, "  "], 
               Row[{"E"}, "  "], 
               Row[{"E"}, "  "]}, {
               Column[{"B", 1.3, 3}], 
               Column[{"B", 1.3, 3}], 
               Column[{"C", 1.64, 3}], 
               Column[{"C", 1.64, 3}], 
               Column[{"E", 2.35, 3}], 
               Column[{"E", 2.35, 3}]}}]]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"fatDouble\"\>",
          StripOnInput->False,
          FontSize->Large,
          FontWeight->Bold]},
        {
         TagBox[
          TagBox[GridBox[{
             {
              StyleBox["\[Null]",
               ShowStringCharacters->False], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"B\"\>"},
                  {"1.3`"},
                  {"6"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"B\"\>"},
                  {"1.3`"},
                  {"6"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"D\"\>"},
                  {"2.08`"},
                  {"6"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"D\"\>"},
                  {"2.08`"},
                  {"6"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"J\"\>"},
                  {"5.45`"},
                  {"6"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm]},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"B\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "7.1`", 
              "7.1`", "\<\"-\"\>"},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"B\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "7.1`", 
              "7.1`", "\<\"-\"\>"},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"D\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", 
              "6.2`"},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"D\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", 
              "6.2`"},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"J\""},
                "RowWithSeparators"],
               
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>"}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxDividers->{
             "Columns" -> {False, True, {False}, False}, 
              "Rows" -> {False, True, {False}, False}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[2.0999999999999996`]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
          Function[BoxForm`e$, 
           TableForm[BoxForm`e$, TableHeadings -> {{
               Row[{"B"}, "  "], 
               Row[{"B"}, "  "], 
               Row[{"D"}, "  "], 
               Row[{"D"}, "  "], 
               Row[{"J"}, "  "]}, {
               Column[{"B", 1.3, 6}], 
               Column[{"B", 1.3, 6}], 
               Column[{"D", 2.08, 6}], 
               Column[{"D", 2.08, 6}], 
               Column[{"J", 5.45, 6}]}}]]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"fatEnd\"\>",
          StripOnInput->False,
          FontSize->Large,
          FontWeight->Bold]},
        {
         TagBox[
          TagBox[GridBox[{
             {
              StyleBox["\[Null]",
               ShowStringCharacters->False], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"A\"\>"},
                  {"0.9`"},
                  {"3"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"A\"\>"},
                  {"0.9`"},
                  {"3"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"A\"\>"},
                  {"0.9`"},
                  {"3"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"B\"\>"},
                  {"1.3`"},
                  {"3"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"B\"\>"},
                  {"1.3`"},
                  {"3"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm]},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"A\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", "8.`", "8.`"},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"A\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", "8.`", "8.`"},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"A\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", "8.`", "8.`"},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"B\""},
                "RowWithSeparators"],
               
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>"},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"B\""},
                "RowWithSeparators"],
               
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>"}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxDividers->{
             "Columns" -> {False, True, {False}, False}, 
              "Rows" -> {False, True, {False}, False}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[2.0999999999999996`]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
          Function[BoxForm`e$, 
           TableForm[BoxForm`e$, TableHeadings -> {{
               Row[{"A"}, "  "], 
               Row[{"A"}, "  "], 
               Row[{"A"}, "  "], 
               Row[{"B"}, "  "], 
               Row[{"B"}, "  "]}, {
               Column[{"A", 0.9, 3}], 
               Column[{"A", 0.9, 3}], 
               Column[{"A", 0.9, 3}], 
               Column[{"B", 1.3, 3}], 
               Column[{"B", 1.3, 3}]}}]]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"fatMet\"\>",
          StripOnInput->False,
          FontSize->Large,
          FontWeight->Bold]},
        {
         TagBox[
          TagBox[GridBox[{
             {
              StyleBox["\[Null]",
               ShowStringCharacters->False], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"B\"\>"},
                  {"1.3`"},
                  {"36"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm]},
             {
              TagBox[
               TemplateBox[{"  ", "\"  \"", "\"B\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>"}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxDividers->{
             "Columns" -> {False, True, {False}, False}, 
              "Rows" -> {False, True, {False}, False}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[2.0999999999999996`]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
          Function[BoxForm`e$, 
           TableForm[BoxForm`e$, TableHeadings -> {{
               Row[{"B"}, "  "]}, {
               Column[{"B", 1.3, 36}]}}]]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.8709386215245743`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"e697d960-349e-4eaf-afe5-7160ff5507f0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Custom spin systems", "Subsubsection",
 CellChangeTimes->{{3.837489496118237*^9, 3.837489503311245*^9}},
 CellTags->"c:73",ExpressionUUID->"26074711-b967-4b74-9ac1-52cb8c789745"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sys", "=", 
   RowBox[{"MakeSpinSystem", "[", 
    RowBox[{"\"\<custom\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.9", ",", "1.3", ",", "1.3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], ",", "8"}], "}"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SysTable", "@", "sys"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sys", "=", 
   RowBox[{"MakeSpinSystem", "[", 
    RowBox[{"\"\<custom2\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.9", ",", "1.3", ",", "2.7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}], ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SysTable", "@", "sys"}]}], "Input",
 CellChangeTimes->{{3.8374895371310387`*^9, 3.8374896901372747`*^9}, {
  3.837489735565732*^9, 3.8374897757400455`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"1d338fd5-7504-4d71-a854-b193d2d7194f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"custom\"\>",
      StripOnInput->False,
      FontSize->Large,
      FontWeight->Bold]},
    {
     TagBox[
      TagBox[GridBox[{
         {
          StyleBox["\[Null]",
           ShowStringCharacters->False], 
          TagBox[
           TagBox[GridBox[{
              {"\<\"A\"\>"},
              {"0.9`"},
              {"1"}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           HoldForm], 
          TagBox[
           TagBox[GridBox[{
              {"\<\"B\"\>"},
              {"1.3`"},
              {"1"}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           HoldForm], 
          TagBox[
           TagBox[GridBox[{
              {"\<\"C\"\>"},
              {"1.3`"},
              {"1"}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           HoldForm]},
         {
          TagBox[
           TemplateBox[{"  ", "\"  \"", "\"A\""},
            "RowWithSeparators"],
           HoldForm], "\<\"-\"\>", "8", "8"},
         {
          TagBox[
           TemplateBox[{"  ", "\"  \"", "\"B\""},
            "RowWithSeparators"],
           HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>"},
         {
          TagBox[
           TemplateBox[{"  ", "\"  \"", "\"C\""},
            "RowWithSeparators"],
           HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{
         "Columns" -> {False, True, {False}, False}, 
          "Rows" -> {False, True, {False}, False}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[2.0999999999999996`]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$, TableHeadings -> {{
           Row[{"A"}, "  "], 
           Row[{"B"}, "  "], 
           Row[{"C"}, "  "]}, {
           Column[{"A", 0.9, 1}], 
           Column[{"B", 1.3, 1}], 
           Column[{"C", 1.3, 1}]}}]]]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.8709386276373816`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"58710267-d72a-4d32-a49f-f729eb9e7b8f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"custom2\"\>",
      StripOnInput->False,
      FontSize->Large,
      FontWeight->Bold]},
    {
     TagBox[
      TagBox[GridBox[{
         {
          StyleBox["\[Null]",
           ShowStringCharacters->False], 
          TagBox[
           TagBox[GridBox[{
              {"\<\"A\"\>"},
              {"0.9`"},
              {"1"}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           HoldForm], 
          TagBox[
           TagBox[GridBox[{
              {"\<\"B\"\>"},
              {"1.3`"},
              {"1"}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           HoldForm], 
          TagBox[
           TagBox[GridBox[{
              {"\<\"C\"\>"},
              {"2.7`"},
              {"5"}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           HoldForm]},
         {
          TagBox[
           TemplateBox[{"  ", "\"  \"", "\"A\""},
            "RowWithSeparators"],
           HoldForm], "\<\"-\"\>", "8", "6"},
         {
          TagBox[
           TemplateBox[{"  ", "\"  \"", "\"B\""},
            "RowWithSeparators"],
           HoldForm], "\<\"-\"\>", "\<\"-\"\>", "1"},
         {
          TagBox[
           TemplateBox[{"  ", "\"  \"", "\"C\""},
            "RowWithSeparators"],
           HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{
         "Columns" -> {False, True, {False}, False}, 
          "Rows" -> {False, True, {False}, False}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[2.0999999999999996`]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$, TableHeadings -> {{
           Row[{"A"}, "  "], 
           Row[{"B"}, "  "], 
           Row[{"C"}, "  "]}, {
           Column[{"A", 0.9, 1}], 
           Column[{"B", 1.3, 1}], 
           Column[{"C", 2.7, 5}]}}]]]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.870938627653082*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"8f9d5880-6555-4d71-8cc1-a267d64d3e9f"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Glutamate spectra with Steam", "Subsection",
 CellChangeTimes->{{3.748230398223116*^9, 3.7482304059809375`*^9}, {
  3.7517854856684136`*^9, 3.751785492675087*^9}},
 CellTags->"c:74",ExpressionUUID->"2cfca995-51c1-4930-93bd-525f0bdfb9d5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"echoTime", "=", "18"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"field", ",", "nuc", ",", "bw"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", "\"\<1H\>\"", ",", "5000"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"din", ",", "struct"}], "}"}], "=", 
    RowBox[{"SimHamiltonian", "[", 
     RowBox[{"\"\<glu\>\"", ",", 
      RowBox[{"SimNucleus", "\[Rule]", "nuc"}], ",", 
      RowBox[{"FieldStrength", "\[Rule]", "field"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pls", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"dout", "=", 
       RowBox[{"SequenceSteam", "[", 
        RowBox[{"din", ",", "struct", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"echoTime", ",", "tm"}], "}"}], "/", "1000"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fids", ",", "dout"}], "}"}], "=", 
       RowBox[{"SimReadout", "[", 
        RowBox[{"dout", ",", "struct", ",", 
         RowBox[{"ReadoutSamples", "\[Rule]", "2048"}], ",", 
         RowBox[{"ReadoutBandwith", "\[Rule]", "bw"}], ",", 
         RowBox[{"Linewidth", "\[Rule]", "10"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotSpectra", "[", 
       RowBox[{
        RowBox[{"ShiftedFourier", "[", "fids", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "bw"}], ",", 
          RowBox[{"GetGyro", "[", 
           RowBox[{"field", ",", "nuc"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "5"}], "}"}], ",", "Full"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "2"}]}], ",", 
        RowBox[{"ImageSize", "->", "300"}], ",", 
        RowBox[{"Method", "->", "\"\<ReIm\>\""}]}], "]"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"tm", ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "18", ",", "31"}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{"various", " ", "mixing", " ", "times"}], "*)"}], "}"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Row", "[", "pls", "]"}]}], "Input",
 CellChangeTimes->{{3.7479933058095455`*^9, 3.7479933209230604`*^9}, {
   3.74799337592723*^9, 3.747993379465663*^9}, {3.7479934307764482`*^9, 
   3.7479934308255777`*^9}, {3.747994172569626*^9, 3.747994190903458*^9}, {
   3.7479953736250553`*^9, 3.7479953743923707`*^9}, 3.7480552391296186`*^9, {
   3.7481520234935246`*^9, 3.7481520371906805`*^9}, {3.748163203680167*^9, 
   3.748163204069208*^9}, {3.748163296543931*^9, 3.7481633122749677`*^9}, {
   3.7481634309156246`*^9, 3.7481634317759542`*^9}, 3.748182235067433*^9, {
   3.748230250760906*^9, 3.7482302866392374`*^9}, {3.7483409653608446`*^9, 
   3.7483409747667446`*^9}, {3.748615798967787*^9, 3.748615808831251*^9}, {
   3.7486855583611155`*^9, 3.7486855858293495`*^9}, {3.7486857183285575`*^9, 
   3.7486857941830215`*^9}, {3.7486858366955214`*^9, 3.748685837158784*^9}, {
   3.75178526306184*^9, 3.7517852706866055`*^9}, {3.7517853329146557`*^9, 
   3.751785333778942*^9}, {3.751785366968247*^9, 3.7517854513493204`*^9}, {
   3.754894725276472*^9, 3.7548947325069942`*^9}, {3.754894783470517*^9, 
   3.754894786444804*^9}, {3.7548948200756025`*^9, 3.754894849418341*^9}, {
   3.83724467272298*^9, 3.837244679429534*^9}, {3.8374843297977057`*^9, 
   3.8374843540853415`*^9}, {3.837484410598259*^9, 3.837484507244242*^9}, {
   3.837484599182022*^9, 3.837484602660529*^9}, {3.837484666072288*^9, 
   3.837484666156204*^9}, {3.837487662843403*^9, 3.8374878011877007`*^9}, {
   3.845468710197226*^9, 3.8454687729924345`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"b250ee77-119c-4a6c-ae60-654c651ae432"]
}, Closed]],

Cell[CellGroupData[{

Cell["Simulate Fat Spectra", "Subsection",
 CellChangeTimes->{{3.7517855020534177`*^9, 3.7517855103606234`*^9}, 
   3.7517855655882206`*^9, {3.754894858185709*^9, 3.7548948670807133`*^9}},
 CellTags->"c:75",ExpressionUUID->"bdc44691-f744-4c66-a1dd-7438bdd242a3"],

Cell[CellGroupData[{

Cell["PulseAcquire", "Subsubsection",
 CellChangeTimes->{{3.7517855668535924`*^9, 3.7517855716387463`*^9}},
 CellTags->"c:76",ExpressionUUID->"59807f79-d229-49e5-b637-790a17413076"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"field", ",", "nuc", ",", "bw"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{"7", ",", "\"\<1H\>\"", ",", "3000"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lshape", "=", "#"}], ";", "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"sys", "=", 
            RowBox[{"GetSpinSystem", "[", 
             RowBox[{"#", ",", 
              RowBox[{"CenterFrequency", "->", "4.8"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"din", ",", "struct"}], "}"}], "=", 
            RowBox[{"SimHamiltonian", "[", 
             RowBox[{"sys", ",", 
              RowBox[{"FieldStrength", "\[Rule]", "field"}], ",", 
              RowBox[{"SimNucleus", "\[Rule]", "nuc"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"dout", "=", 
            RowBox[{"SequencePulseAcquire", "[", 
             RowBox[{"din", ",", "struct"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"SimReadout", "[", 
            RowBox[{"dout", ",", "struct", ",", 
             RowBox[{"ReadoutSamples", "\[Rule]", "2048"}], ",", 
             RowBox[{"ReadoutBandwith", "\[Rule]", "bw"}], ",", 
             RowBox[{"Linewidth", "\[Rule]", "20"}], ",", 
             RowBox[{"LinewidthShape", "\[Rule]", "lshape"}]}], "]"}]}], 
          "\[IndentingNewLine]", ")"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
          ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"spec", "=", 
      RowBox[{"ShiftedFourier", "[", 
       RowBox[{"Total", "@", 
        RowBox[{"out", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pl", "=", 
      RowBox[{"PlotSpectra", "[", 
       RowBox[{"spec", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "bw"}], ",", 
          RowBox[{"GetGyro", "[", 
           RowBox[{"field", ",", "nuc"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "6"}], "}"}], ",", "Full"}], "}"}]}], ",", 
        RowBox[{"Method", "->", "\"\<ReIm\>\""}], ",", 
        RowBox[{"CenterFrequency", "->", "4.8"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", ")"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Gaussian\>\"", ",", "\"\<Voigt\>\"", ",", "\"\<Lorentzian\>\""}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.748229992433153*^9, 3.7482299971147556`*^9}, 
   3.7482300738180714`*^9, {3.748230123918957*^9, 3.748230124951667*^9}, {
   3.748230157213933*^9, 3.7482301620531178`*^9}, {3.7482351352193537`*^9, 
   3.7482351488687196`*^9}, {3.748235686160855*^9, 3.74823568660807*^9}, {
   3.7482691809371367`*^9, 3.7482691985853415`*^9}, {3.748273843907975*^9, 
   3.7482738738285837`*^9}, 3.7483200865733805`*^9, {3.7483210079837885`*^9, 
   3.748321016638588*^9}, 3.74832117160981*^9, {3.7483214752212343`*^9, 
   3.7483214819391317`*^9}, {3.7483217949776864`*^9, 3.748321814935499*^9}, {
   3.748321866491704*^9, 3.748321894899328*^9}, {3.7483219461685305`*^9, 
   3.7483219953029013`*^9}, {3.7483221618890285`*^9, 3.7483221687140117`*^9}, 
   3.748322245547207*^9, {3.748322561946589*^9, 3.748322564920495*^9}, {
   3.7483225975762873`*^9, 3.748322646232254*^9}, {3.748322689960739*^9, 
   3.748322713285779*^9}, {3.748323077665245*^9, 3.748323087386416*^9}, {
   3.7483237079179506`*^9, 3.7483237318664637`*^9}, 3.748332445544182*^9, {
   3.748332547703269*^9, 3.7483325609005604`*^9}, {3.748332698717409*^9, 
   3.748332706487593*^9}, {3.7483387227967024`*^9, 3.748338763325821*^9}, {
   3.748338807236164*^9, 3.7483388192757797`*^9}, {3.748338926064983*^9, 
   3.748338946316023*^9}, {3.748339008784735*^9, 3.748339010300783*^9}, 
   3.7483399760707045`*^9, {3.7483400127685337`*^9, 3.7483400176555862`*^9}, {
   3.748340636143362*^9, 3.7483406523026686`*^9}, {3.748340994495614*^9, 
   3.7483409992298527`*^9}, 3.7486158338071747`*^9, {3.7517855145478144`*^9, 
   3.7517855190458183`*^9}, {3.751785587862006*^9, 3.751785589428156*^9}, {
   3.7548948726829386`*^9, 3.7548948811473913`*^9}, {3.8374878424536524`*^9, 
   3.8374880181702404`*^9}, {3.8374880490054812`*^9, 3.837488077366084*^9}, 
   3.837488148770634*^9, {3.8454687823396215`*^9, 3.8454688286573772`*^9}, 
   3.8709386734673634`*^9, {3.870938709562275*^9, 3.87093874562617*^9}, {
   3.870938785531099*^9, 3.87093879849218*^9}, {3.870938939552102*^9, 
   3.8709389474978294`*^9}, {3.870938978122899*^9, 3.8709389782210364`*^9}, 
   3.8709392155955486`*^9, {3.870939909937612*^9, 3.8709399145240407`*^9}, {
   3.8709401792455425`*^9, 3.8709402371670885`*^9}, {3.870940332702853*^9, 
   3.870940358399289*^9}, {3.8709404006862984`*^9, 3.8709405468953075`*^9}, {
   3.872218130219509*^9, 3.8722181333064966`*^9}, {3.87221852310139*^9, 
   3.872218673147729*^9}, 3.8722191140457993`*^9, {3.872219201678027*^9, 
   3.8722192037894115`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"869625c4-c640-4b6d-963c-5879d140481b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Spin echo", "Subsubsection",
 CellChangeTimes->{{3.7517855668535924`*^9, 3.7517855716387463`*^9}, {
  3.751785612129964*^9, 3.751785613522607*^9}, {3.751786027777651*^9, 
  3.751786028417385*^9}},
 CellTags->"c:77",ExpressionUUID->"dab93187-a908-4ba7-ae93-e35b0b7d7535"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"field", ",", "nuc", ",", "bw"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"7", ",", "\"\<1H\>\"", ",", "3000"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"te", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"out", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sys", "=", 
        RowBox[{"GetSpinSystem", "[", 
         RowBox[{"#", ",", 
          RowBox[{"CenterFrequency", "->", "4.8"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"din", ",", "struct"}], "}"}], "=", 
        RowBox[{"SimHamiltonian", "[", 
         RowBox[{"sys", ",", 
          RowBox[{"FieldStrength", "\[Rule]", "field"}], ",", 
          RowBox[{"SimNucleus", "\[Rule]", "nuc"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dout", "=", 
        RowBox[{"SequenceSpinEcho", "[", 
         RowBox[{"din", ",", "struct", ",", 
          RowBox[{"te", "/", "1000"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"SimReadout", "[", 
        RowBox[{"dout", ",", "struct", ",", 
         RowBox[{"ReadoutSamples", "\[Rule]", "2048"}], ",", 
         RowBox[{"ReadoutBandwith", "\[Rule]", "bw"}], ",", 
         RowBox[{"Linewidth", "\[Rule]", "10"}]}], "]"}]}], 
      "\[IndentingNewLine]", ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
      ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spec", "=", 
   RowBox[{"ShiftedFourier", "[", 
    RowBox[{"Total", "@", 
     RowBox[{"out", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"pl", "=", 
  RowBox[{"PlotSpectra", "[", 
   RowBox[{"spec", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "bw"}], ",", 
      RowBox[{"GetGyro", "[", 
       RowBox[{"field", ",", "nuc"}], "]"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "6"}], "}"}], ",", "Full"}], "}"}]}], ",", 
    RowBox[{"CenterFrequency", "->", "4.8"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7482351714990845`*^9, 3.748235191739445*^9}, {
   3.748273924937831*^9, 3.74827395143205*^9}, 3.748339867254298*^9, {
   3.7483399355053816`*^9, 3.748339960080967*^9}, {3.7483400574082403`*^9, 
   3.748340059871789*^9}, {3.7483406608814077`*^9, 3.7483406634237876`*^9}, 
   3.748615848685067*^9, {3.7517856216532736`*^9, 3.751785623062027*^9}, {
   3.7548948899820714`*^9, 3.7548948976117563`*^9}, {3.837488071516144*^9, 
   3.8374881516367564`*^9}, {3.8454688702929797`*^9, 3.845468875049714*^9}, {
   3.870940558614194*^9, 3.8709405887365155`*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"7e2a2150-d80c-4034-83d6-d9565cf12a88"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {GrayLevel[0.5], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
xPycIw8bJ3hDZa7OkVFfCs6Z3SH9LNAbrmudWrbypmAhLiEjbydvaP32NOKJ
B3E/ONzxppE33KngnTd0I+YbS06pUvOGfis3/z5nCqae/njYRsYbhrZcfQeO
FLz7eXk+m5A3jN364tptR8Eu7/TuP2P1hmnf/WNKNhQ8yryNrmLTCz6TEmxa
LIl+tskfSFj0gh/9PUNy5hTM77LX1HnKC/7EbzWuM6Fgv+O5WvrDXsC4x/S+
hBEFP7vz67d6rxewvi6gVegT/lVlItRbvIA3e7xb8BAF19uznT1U5QUiGmLK
xdrEfuwqMnYo9AKpBf8WLqBgrx/jBTEZXiBffkPujAYFd8wwOZXGeYGqxXIt
ixrxflz0PfMgwAt06NQlMpQp2GzZRoLeyQtMbh6/THeQgjurzVl1jb3A1vuB
wNEDFByx/ZPyGXUvcOXmKFrdR8EfXw2UzMh6gX+f3c4YOcLP5C0xmogXhMde
zFmUpuDnjzJ6azi8IF7y/bbg3RSM5veF8dJ7QeqrPSdmd1Gw67du0tkfnnAq
K/KvpzgFB940vsH5wRMKVDuOTIgR78MGt+SFEU8o+7K57CBC+LHzj9474AlX
LxyKfCFIwY64Jn2w0xMaTLPnzfkp+GW2pUVEvSe0bT7zH+Ql3mvBX31CFz2h
p5E8o8dD3P+b6mPPcz1hwMPDrXcnMU+1d0n5KZ4wzFkzpsFBwWMCnZWOUZ4w
3vvVppOV8Ld2DXb7eMJMtMJThe0UbHr6hh6dnSd8EU80btpGwTS/19em9T1h
+SW+L72VgmsHbZ0eqnjCRsY27ZotFOwZ52DWJe0JW5XNb1PoCP3w/fG3hDyB
fa5Q+dKmGK59qTfYyu4JfKVvWsh/xHBJyw61HjpPEDOm7i1cE8PDFwUPX571
gN1/Aus4VsSw2PLLpOcPPeBAQ5NE9k8xLP+oJprU6AFqbiuXmZbE8N93ArTA
Ag/QZdcUTFsUw7s3px8NxnmAKTpRtDkvhptzhzY1XDzALnJw55HPYvi77eSd
HvAAd8rO3OWPhD6H/LKFhAf4P3dgjvwghrEA86nvzB4QeaL8xPw7MZwq9tS3
YsEdEhRn//pPieFpvDPS47k7HJ+VSZyZIOLqqefkOtzhdFH0L7fXYrhCeLFj
+0V3OGfwX+T4KzHsvmDVv5LqDhfX/s3bjohhy1d915b83KG6Tj9g+LkYPuma
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
gSKn3yAOr1yPa0+XYbf2zfkM7kJkSPVb87DTMoxJkK3eO/saFUQSRNYeLUPs
xFPPSvkCtMh2g77j5jIIBh3oUrZ5hcQz3P8WXl6Gltfe59tz85EPXzGE8CzD
ednPzMcm8lDTu/FkQ5ZlWOEtOnjpQh5iEOdwkNpdAo2uml6x0JdIA9+5xTG1
BG0l43K3J3NRmkIw/2bXEtTRtfg0385FI99rybrwElxiTlXf/ZiD+O8v978r
XAL26qfjWhdzkM0wX2VY0hKkHNH5pVHyAlWZPogxDliCsab3ac4XX6C9pVhz
WZslOHT8PI36x2wk59Z8/bjuEty6bHXSXyUbhZPtHd+WXwJeWXaON3+yUNfT
C/+6LyzBlS7Wx17OWejIAdOukuNLsP1ob/b1gSykn5r+NpJ+CSxizsYtlWai
/JNdIWYbi9B7WT2ORSsTLb6mfXxjdBFq6v9o5+9nIDFRdI372yJ08f6sY9LM
QB61Dof2qhch5NhEwm5JOmqQK1j69XIRbEU2dfnY0hHD1z+t5bGLcN1p4rqS
93Okdve/lzFei8DzqpFRZD4NJQ0o+ViaLcIPG2bzMoM0NPTER1tRcxGKjJjR
h/5UxD9fLsojswh/WHReyuumIiunGSZSoUVQ0pW/ZzScgsr2uKb6Dy9CmtOd
k1IWKWgnSPNTFeUivA9tll/cSUYhnOxXT48ugNV6crLDs2R0UNh/Yah6AXQK
6vX5RZNRJpp/kRS7AG4r3Un9/UnonOp9LVWzBUgoV/gcG52EsH4DA43MAhjV
nsh7cScJqdgK18HhBdCOKk2h5ElCvb4pjs5L89BZ5iNx70ASMomlFBD+Mg/W
zdUTNnxJaDPbZnA8cx4Ms32LihySUEDp79h0l3kIYVnjSORIRoSGG/KaqvNQ
7DEbGaabgjK7ircZ+echh0tncb44DZ37y1HUuD8HO+fZ/3nHZ6LatWBDz545
yF5b3xo9kYsUqFbYL76bg9sXnnAUyb1FvWx6X2eD5uC/H23jpLZFyITvi2+O
3hz8vhN8yzH9Nlq9JCqmKzYH50ov5DUNp4OPQsb0AaY5cFsvkrNZzAXCfbqM
1r+zoK1/ijtzsRDSTB3V/T/MAst8fU+PZT7wuw1RX42fBY6/gh1i/xWjqqfK
tcsWs9CY9mU84001UkitsCmQmwVRa9qs47UVqOv1CR4Djlk45R2iP29VivRr
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
fkUDunx2Mwcd0P8nSOMb
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], Thickness[Tiny], 
     LineBox[CompressedData["
1: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
fdZZVbNyuxx0fpf7PYW+AreWlFjIwSfBfwvNhLikjmOiULBZDui7Wp/koTvi
OinZG+Tg8sd1pj94f6/4frdIKpEDNR/FXLOFXDJh+nluvL4ctC+2fl2IFrx8
8HfEKjnQNHdc+Q9NXbTg614NOVhSOHh7lzCXLA089d57mRzkDLuW3UWvecp5
uUcZ11vWPgsFES7ZqnW1aycb18tri7nxaOdTa5ss6HKwQ7DTfhwdNNUEJrJy
8KirQX/XIi6Jsbe7ZSCJ9TumtrQDnXln+IrWIjmYET762VyUSy4yQv5TXSAH
8y2Llveib0XxnWXzy0Gcc0vmYTEuefLmeBr1LxVUVDtr7cW55MV6WqLYbyrU
i3zplJHgkk9FxYcFJ6iQkRkgvRiP/52vEzo7ToU+g59n5dDiPg98Jz5SIWtR
fiOgOS2WrmPvqCDabt7Yjedrr3hlN/SaCs1XcieTpbjE5KTvtr5+KhQ5fd1b
hd75/ZdJxzM83z5mlRXa2+aowaMOKtwM+tIeiz54U0qrtpkKv+r3znxCp1DP
L61qpELQprYGb2kuyT+4glVWT4WhBTeFvqKvDtyRKbxLhYfU06aRFC6pN9y8
6MwtKpyq+Ca/SIZLugp6+NMqqbBVOeP9efTwXPfphCtUmG728taX5ZJJ929f
DxdToWAi4FgPesGjwx9CC6kQoRpqFkblEvmlIq/88qlgF3fwqpwcl6gdy+l2
y6FC5eiTNkAbflZudsikwi7N3Xd85blk27Yb9VYnqJC5O+yEPI1LXK6tqzZN
poJ/Qg23FR0i1V5O4qkAj1ud4+hcEhe6q0jnCBXmvhLIJgwuyXr+8ezyCCpo
p6/T+Icu1tufrhRGhctmg+YPmFxSc1YgiRZMBfOaa+IpClzSMpsWJelHhVVn
ZgrsWVzycrdCmJAnFXpfximpsbnkS32ZH58rFSo6sh7wc7hkjpK+29QuKuxR
pBQPoiWPPrIf30kF2S1Js/cVuURpxMZy2JoK15+u+laqxCU6ZkMbB7ZS4fMu
1crTi7nEtCxwbZcpFUS22genKHOJg+isVtN6KrS9LXc5qsIlvkHJqvWGVPj7
dWn10SVccqhTll2tR4VY4cnLx5dyyQntItkKbSroeySEnVXlkoIsTdGL6rje
Nldvv7qMSyp/1QnkqeJ8Oo9Et6hxSYPD1j8Zi6l4fWEYf13OJT13+78ls6gQ
s2JJL02dS0aYXiPRNCo0Sjcmb9PAPDny89UBGSq8U2spPLYS8+RtzLNACSrk
r98W1KHJJQwT8RauCBXWlHYYMbUxTy7l3XeaT4UDXv7eoaswT4SW3baZS4WV
u8SNe3QwT3yrK7bMysKepEvK63QxT1pNLhr/koVlrbv239TjkjD1rly9H7JA
1ek8rbMG8yRtT4bGuCyImrlO1Btgnvz4nKTyURaE4tx/2RlyyWXbiCPMd7Jw
2C6MOkMwT24t2E95LQss1pPWy+swT+Sy/EX6ZaHGODTbaz3mSYSiO/8zWfgp
3jWtaYJ58vKqw3S7LLjf7YsV3sQlAkaGVt+aZKF9NO7hd1PMkwvNm0YeykJO
4DqHj2ZcoiJgb/gaZEHnrsu7L+aYJ9z32j13ZKG/9Izo/G2YJ49DlrXelIWQ
nUkp6laYJ6pzOA3XZGHBA2Oaz3bMk5RU6p0yWbChjUffsuWSI+M0scpLsnAk
xSedaod5Ylkyr+SCLGzOnaOa6oB5Uqkzcy5PFj4rq2jKOXFJlXTD96zTslCi
aXq+ZjfmSZjVx+MZstA6VhIR4op50vvqdVyqLEgQh+4NHpgn+n49EUk43ita
bepemCe5v1v2xsnCSoXJ3FW+XCL67+gD7yhZqKwIO7ozAPPERbpmz0EcX9bI
26xgzJMH56/uDJWFeznrFH/u45L1i9UvWQTJgkDV3cchBzBPEu7mmfjKgufQ
oSDpSMyTj5szDbiy8NbWoaM3CvNky/NkLRdZ6Gx/fPt+LObJFfdo1V2yMCb/
l9adwCW5Yt/3s3fKggzRFxRLwTwJjgqgWsvCnyNbSkNPYp50iXiIbZWFwT7z
3QtPccnTVWccBU3x+MaL/7XnYJ5kq1jPGsvCUekdix/nY578vmE6sVYWwpcd
uzNZiHmyy5iM6cqCs0/OPucSzJPa9lVDWrJA0bU+NbeCS1RZTmp9K2ShoLUl
//0NzJOYUU7HUlnw1b+8XfQO5sm7/XKPlLD+vaP3DtVzye6N88RrFWSB+8ly
ld5jzJPidMEqeVn4xz3KNWnHPFnImr1MkYWU8F8Ol3owT/yu/LggjuunICva
/RXmSZv+aI6wLMR4JVfHvOeSao3HgycFZUHMWMhuwRfMk3Tb5wlzZOF3kofh
zBTmycRQ6+EZGdA+nPTSY44n+bwjqCF0SgY6uYvMtgp7kr/VszV+32Ug7T3b
/A7Fk4jTjl1z+ywDz/1O7r3N8iScQ9RihxEZiPBlLrFW8yTar4vyrd7KgOGx
suaTup7EZJ3WKdNXMjA972BztIkn2VkIx0ifDBTTBBs0t3sS73kWMTrdMnCo
nllY6eJJIjxfHFjeLgOHZR+2SwR7kpQnXoFKTTIgWly+0zXak+Qvm/SgPZSB
a2u2KVane5Krx2N3SQIe3xe7cmmRJ7n/RXy70B0ZqPNRHWit9iRdVvmb+W7K
QIyJoUp9qycZvr7MaOqqDDTpmtPZ7zzJFOW2zvhlGbjqdkJbbMaTCB3YuHz4
ogzEW/l1X6V4Efn+LsWB8zIgEF70Qn2lF1EzcJHvypWB82PbLO5YeBHD/HHx
pmwZ0NztTUsM8CKWfJHz69NlYHv+w/mdJ72Ii6vQ31vHZSDrs3jDQJUXCWnI
mihPlIGGP/N1f770IvHKSmNFsTIw1XBWNETIm2QnXnuTe1gGfvZ9T6vR9SbF
o4a9GeEysO2QyaihnzepMW9pS94nA16MJ8/j/vMmLeX2D6MDZcDhd72g8pA3
eSX+4c4BHxkoZE4sfrbYh3zZu68y0EMGTm8Y/uEa5EPmPJtTwt0jA08OvU5o
uO9DpFafOOfkKAOXKhiaNKYvUcqhZ9nskAGa6AH/2lhfovOnJGWLlQwk5owl
mP70JaZOq2ONzWWgR+DV24v7/IhDXUO43iYZKBfRWqgu4E/82NZBGsYy8Ey3
bF3NRX9yKPY1V2WtDDizZGSadgeQE8N+TkxdGXjINDS9rRVIzm+a3k7RkgFq
qhj9n1QQqSxJMBNZgfM1pKfy4HwQaRCmrONfKgMiqQJvzmwKJj3+F1ZPK8pA
7vV1uRbCe8lIu/qKb0wZeKOg5X5kYi+ZXnlPaUROBqx0XCwDFu0jwplmtNfS
MlAg/oNOdQ8ljMnnEj1iMnB5oeGBeSL7ibqdx4LWhTJwI8SyR4YdToxqvv99
ME8G3o/cd5VriSDW9CM/a/hkoObbs1JHsyjifnjRp2t/KBC3fDREZjaahA2e
GSqepMAZn+zINp14kmC8pO/cNwooZVxwvHwnieT8V9We9YkCrdfV9Z88O0Eu
C65vPP6BAjV7LmrOcUgn97w67sYNUeCLVZVItV8IaWtyuh7xkgIfw18qmq8u
qBtUGyvZ20uB3wnre3eZZtV9Tz1Q4N1FgbtrcsRq6/YQgW/zsve0UaD5V9Yz
1o0SQtmecXznEwrIf/uhaON8g6hUseIsGihw5c+WRfE9mURPtvygSR2OjwR7
mXxLqNsSvibYoIYCR+5fMcsVP1e368VjT60qCrT18s+0up2oC1i7w1n1KgU+
mMZsLvt5khw599aGfZkC39d3+Dd/TSPpc4K3UC9SgH594p644XFS6PZ3ndh5
CoRajayofZZAqh4e0xXMpQCsuV26bzKWPFKRU5/NokBjRmac7vJo0pd0cfFE
GgU0Xi1glxkeJqNjWvSxFAq8EzTvpihGkJmt9ZJDCRQYGPGr175zgIhetRDq
i6GAhLS/U3d3GGFJDvxrP0QBn3/zZlq2hpKV+7wnGw9QIPqhaVOB6D6yvmfy
070QCnAEbedfEAwhtrpxb28EUKDKP6/0xtK9hHtGov+yNwX2auluZwQGkwMz
+R0X3Ckw/w9/7lR7EEl2VnuUs5sCKY+f7qRuCiK5cPveSQcKTDvMUxc6H0jK
OZtuJNhSIPXArKtuZwCpi+suPWxJgZjeCftH9ADy9L3L+dAtFFD93BhWE+lP
3pp+yfbbSIGKX+cW9I77kYnSyFS3dVh/n7eph4L8iOCihfEOBhRYbmdzNOqf
L6EGZkdYraaAV9KifvEzvkT1qdJeU00K/NQ7P1ph6EsMtCq9yHJcL783X5X9
5EO2niK7dZZQ4FbxykGt8z5k91SL7XJFXJ8r/Q1lnXxIsL2DuRKTAtWskoAf
TB8Sc+eDMU2OApsOhBRLvPcmmYxQPUlpClzlMK41X/MmF6PmagiJUWCXe7Jz
XLQ3qX5zQplvIQVWz1zJy7fxJk/WMxhTAhRgUOd7Bqt6kxdFpVLj/6ThvFPW
5Kq53uTzfN2Fw9PSMB6eFj/W70X+eT/kG/gpDVtFrfNUrnsR8Rbrqc6v0mBO
az9Wn+hFOCsGPz8ZkwaNaDnJVXZeRPuk/zt4Lw2X4nd3BNC8yMbv0/233kiD
kNjF9O2PME9sEp+WD+DnXbNk7d2IeXKT8rjouTScjVgz3OXPJRHUwtrcTmkg
P1eNl3xxJ8cPalRltErDnoGr4C7oRvIH7l1OfiwNQfpNJ+reeJOrhlsuRD+Q
hutjynK2v0LI/YLe0wdqpWFofn2lFieUdM/lngi8LQ1h867YDPzdR4bdf8Rz
b0hD1Xm7EmWNADLVeCTSqUIazm2ZeSIz5FYntFQ0xKZUGnSTVLt0K93raMfO
em8pkoaRjMzLXvrKRO3zkj3GBdLQX3jE0NLTlxhuu7lD76w02KQNZ2zlxhHL
a+u3amTh++9wSv83nURcpZ6uV0mTBp+ZFn/XV/tISKizPjNFGjJrgopPJ1iT
+OdjGpQEaRCmukYdFdhVl60XriISIw3y99ye2wz51pWcFWTyH5IGy8SPH9fZ
epCa2Qzp6f3SkBXVePVyXihp2c0W/rZXGpjBfz60/Qolr+rL54z4S8NH78y9
xVP7yFdFg1+vvKTBIuDkhJhyEJlz9Mn4MzdpkMn22xCp5EGkRnYMtzhLA8Wj
+Sjv94PFZu9ePLCXhgTtcu4yvB/QKQvurLGRhseJdp7LujyJqei/x9e2ScO1
v91nJKS9iENQSl2xmTQIZMiWLlnqRfw65W6eM5GGsoeHZBqWeJHD2pfKsoyk
QZnwWbQwvMiJLO3C42ukwcBL+sPjRV7k/K/6nDgdadgQqTmc98eTXHfYdjJi
pTRk3O6mPRvxJA13B47uVZMGI3cde6MeT9LD9DnkrSIN9NjBdvMGTzJyZCpk
D0cayrPDCtSve5LpoTifnQxpGJDM2f33gicRNpF0saBKQ2Ba+djdDE/CuHRu
p4mUNMxVrNvtEe9J1IWWWxiISkPP2OnKT/s9yTrfmg1aQtLw8JOej4mvJ7Fu
3bRGVUAatCoiVrjs9iTu6s9Wsv9JwYNL86+utPEkYWmuS6jTUvDUw2pJyWZP
kvjjC1PspxTovsg6W0M8SY7tIYrgVylglpb+tNfxJJdvLRSZHZWC4rdl4pHL
Pck9udNzJ4al4NN5jQqZxZ6kPWLx79FBKTgm7xXEYniSwZeVX968kILM17IP
T+L93Hdi9L63Rwpub/L9sVvUkwhcaB1ofyoFB11eOiTM9yQyAo5djS1SsOPG
3mdz8f5QhTvy5N4jKYh1//Dy+TSX6D0OhRv3pWCkxDBD5yeXbFHlv3X5nhQo
rKUM/Mb7TaeUk1cuVEvBr5tLvnz5iP3JOOO/nOtSYJzok/zlLfYnlpfPnCyX
AvO+qUQRvH9Nr9RNSyiRAtncmAt2/Vzyn3RjwuH/pECo3XB7LN7vVoVtPxx6
TgpGBYos5nZyyaPewX1+Z6QA3ttaT7RwSZ9+gK/bKSnIP7VFvbSRS8Zy/7g4
nJQCg4w1yQYPsD/5m2hndUwKBu9nRbwF7E9cZLaZHpWC5AN95zvvcQnrQaEJ
iZaChWOrRjRruERz8UoDnUgpOJxxJ295FfYnCbWay/dLAaehly/vGpfYftyy
VGkvvr9Pfu9MOZd4bulToPlLwXiTWMDOMi4Jv8KVkfSSgoHzjltSsD9IFpsQ
EXKTgs6P15QjL2J/EhzNz+csBRukU3MzsJ8o7xKdnrTDepZF2DcWcAmsyv36
ebsU6Dt3K4tg//E0e+mHdxZS8K4jLMf1LJe8/X3z5YvNUpB44Wvh49Nc8tNx
Q3fnBim4Gn49eW0Wl8yvfdr0hEgBfRGjCDKwP2Htrgd9KYg8ctLCKg37k5hP
t26tkoI7iZVvx1O5xOBdeHm5hhSYyJTfP439ksXG+UVFy7A+OWLmFsnYnxRn
ns1VlgK2y6m3oolcEryQk57BxvGN937ti8f+xK8iMZkuBcrdL16XYz+W2WYQ
FS0rBU7/pbKPR2N/otEUekBSCoIlA9X2Yf9Wnb7TL3CRFOzV9jjkdohLmibe
uXIX4HEdVo5DBJcM7Nhr78QvBTqL94rah3PJ5+p/22z+SsJl+/GDzvu55J/8
8Y1bfkvC7j89p3xCuUT8kPxa4wlJ+LFhz6ZDIVzCeX1JS++LJAg4Jsjz+k3t
datUNUYlQfyNcdGNQC7ZWHifpTIsCVYW9eH9mBd28yxlmYOSwBk7kLfAj0t8
PF8uoryQBI3jR88b+WCePPEREOmRhJHv0f9FYb97fNmv6blPJcHwahZnP5dL
8o/Hf/vdLAnqLE/7WDcuufpFcuRroyQkpaXn5LtwyX2rglcf6iXhdcC1O9Q9
XNJ9ffmzV3cl4ZjXbatzzlzynnKn+dktSUieyr6+HvvxX/tN77dUSoLO0qyc
YezXhfqfVT+4Igk7SOHCjdjP0wzcKmqKJUEp3XGh6g4uUcv/WnStEMe3fMTR
yoZLDPkO5xbn4+v/sFbYbucSS1fhjHM5krBCOfLBKSsucW04nZSVKQml4dfZ
xtu4ZJ+y8pHjJySh0/n+RI85lxxNvB4WlywJbms8E23NuCR71Mg/Il4Stnoo
JT035ZIS8za3vUckYdWnT7YGm7ikptzRwTtCEsr0aD/oJlzSIv7Rck+YJJxW
r47qNeaSV3vDNu0MlgSRSw9GDhtxyddufkMLP6xvRcxNMUMumbs6TdvEUxI+
UW71HV3DJdI5zGUGrpLgPt8l4ZUulyz+c5mt5SQJmVkcNTEdLlntpEdVtZME
v/8CukW1uMS0rlGUvV0Sjmh81u5Q5xIHts08qoUkgPGyNevUuMQv9s0f0c2S
8B/fks+mS7jk8HDA93kbJOHUdoPVDYpccnLTzMiMIdbj88KF0UwuuVCS9PqH
niT8FWwGHSqXXBeW7RnVloSIoUOiB8W5pMH/v5Y36rgeEzi7SwS5pKd95YNe
VUnYE3aM1fLbg4ysrLvdvlgS1AxFTjmMeJDpDPOrjSxJ2Eb3EOpv9yAik30X
79EkoUj6va9SmQdh2nnm3ZCRBLGdUzr8YR5EvWYi47KEJMSmJWnasDzIOnpM
8gURXJ+1q/0b09yJ9WGx6Jz5kvA0lfJk9JQbcR/M3X9yriQor9P1za5yIWHG
qgEJsxJQJuK6++QhR5L43y33w78koOW8U9B6TyNyRtDEMfSHBDRGV6/QyvGs
K/PqtPIbl4BY+Yux0xXxdfeadpu6fZSAeLNi8KQcrGtX+2zo8E4Cji3dsWdd
uhUZTD24yuq1BMw/OHVkbWco+f51vpppvwTUdAR6hr6LJQLbT3HIMwkYNRRa
yYk7QmSqOHI6HRJgvL/qt+0W/7olslfFljdLwGHP3FMbH+2v0w9fK6jUKAET
8tlu7F7rui0vmmbk6yUgofND//lXKcRprd0PibsSUN15PbvPPokEnBv+uOCW
BBh+qLy4Y1kEOTInZPDfNQmQ2bBSdWpiA0l343s+WSYBPyf+NS8Siq/77+Hx
1s+XJEB+tHTp4umEupsqtIZ3FyTANfv2EtNI97rHScU1L/Lw/XS3PjRRtCR9
Y6uudZ6WAEHrlyHCyq5kbOuDS08yJKAkac2jvI2YJxWW+ZAqAadLzq5XwfsT
UclXmbeSJEDtt8vTkxLehLXP91h5HNZP89egc7w30ez5FV0UJQH+zLJFz+95
kw26Rw/kHpSAsao/X42ee5MdZ6QCM0Il4IW11KTeoDfxnCnwSA6SgOSJY8nl
6HDnFbuifSUgveX+EamX3iQZ7lgf4EpAm5hKwwyen8vZvDnQRQL7qW+7v3Z6
k/K4HsLdJQHZ64Uretu8Cbx303HaifWr37dmQ4s36TT9pmZjLQEkZXBbcrM3
eVd6WHHLVgnoKF0hNojHf4qIyBubSkBn6MbN7h3eZH5gjrjeegkI92jeuLjH
m1CfKs/XMMT6BMoLcF55E1WtG7PKehKw+keR3KYRb2Jwat0EQxvnX3m9N3fC
m1hMtY1Kq0uAZXH2MpW5PmSP/a43wqp4vP9F2kdx7E/ufHw+d7EErFcpas1U
8CGxjP1tvxUk4NTWodtr1XzIqSiBh1/lJaCpTvVsjJYPufgm7c4HigRMPp2T
baXuQ6rXK1S+EpeAd5RGw1BpH9JUVFb8TFgCImc2yLm0epOB+frnWgQloNJi
/2rrFd5k3PvRqQdzJODkKseO7Oee5F+zTUrNjDiILxoKnHjjTiRWDMVcmxKH
B0KHCrblOhLFk4Hhxd/FwZgi1fJPfGOd9veZwHOfxWGwjTMRnRdVt9EmmZs1
Ig47vqzoj+pMqbO7Ket0/K04cD8dMWe98qjzoRZtj3slDhd2bXxed3oviTyo
aRbRJw5rnx9LywuII8cH6oz2douDgbPVEfX3qeSc4dbV3u3iIPxs2d57gkHk
WkH/8j1N4mA0UGtc4Rpad3+ul9L/KjrveCq7AI5fe3MrKSKyoowKReEgFaJE
vHbIvdde2SOirCSUUSIkJJVRsnJOQiozs7LJyt6y3tOf38/xnOf7POfp/s5P
T7f/aonoQMQx5j4tD9hus8xzCRER52u9R1kWTmC0LmTXuQoiohucar6iFwbW
xIiMiiVEJA+VCiWC/QHz3dTtE4VE9Fns0rgIFc6T6SPL4vlEJFU9tfe/XXZQ
8nLpH4EcIlq/WELd8T0cKheeG9qXSUTuL6XMeqq9oe6etm72VCIq2PqueHD0
HLT2tGymSyYiJPo46PAxPeDRNV27GU9ELQ+ireKKzEGYgn/l4j0iSprW0gq+
YwWSUhiLJyOIaK3SXthpyhq82Ep4MRhKRKEnPTu7yq+DimtC6d03iWjP+Ofx
kNM2oOFjQWKzL/aLVkmyiLEBfULK9+o8iCjn5RaVab0NmLvzLfSDCxExz4p/
1lywAdTjRn5v7Ylo99BOZvsuEuDUGnV9SSIiI5/8faQjuJ/k36BkWhLR3+cT
t/iUSeAUO5XFI1MiCmr6Pm9xiQQ0XWOuxhoSkZUisyqnGQmYfD9wMfwKETlO
udb3UkjAUfaF6k1tvN56J3KOupPAzcST8p4XiGjy6RWaS/4kELv2ScpRjYjE
OoqMgkJJINPkish1JSI6Q+8r/ieKBIor+w6YyBNRNq+CY1EcCdQedNx9RYaI
Lk7cjJxJIoGu4HVGDSkiEmQKtytOxXkyFLajLE5ETt2Hh4nPcJ6oc67ICePn
Q6UO7snFeZKTMSXBT0RupsJedf/yhEl6WIgH3/9B56LjhSRwzKHyB89e7H87
udzsHc6TRs2WXUR8/PKFMp0yEtCX7qpjZCGiIoLrCtMHEiDF2XzYoSOiqfg7
1ImIBLwW54tXCEQ0WNvctfyJBIgvt6/+WuVApv5qSxKfSUDWhVvtyzQHCn0e
6KT8lQSMZGSl3w9zoKl9qTsSjSTgv3qJ9/kPDrTT1cq1gfMvrcKO6UEzB+rp
+Dif950EqoNurwTXciBOmwYx0EECo2efDjtXcKC4npTfpV0kwMRY3mJWyIFm
4yXecv8kAYmG9g9aORwoYfXTqes9JKAbO5snn8qBtq5zfErsIwGPq8zJog84
0MS5ixwlAySQtF/kDmckB9oftMBfPYT7bw9wpw7iQLv/On6tGCGBvnSTa3Me
HCite2322SgJUJM8tfvsOdCmrd6eAJzfIuKxCg2WHOh95atx9UkS0JjOEy03
5ECRVG+Fdv7g56Gwdk+uNgdy6a9LfjlNAvc9BwiJahyIN8bwrdYsCRQpbEyH
ynMgvwo57t45Eujc2vvLTYoDZb53abu+gNfz47H6a8IcqCkmw7R/kQT4wi6+
0+HhQKV5IXK6/97v1iJnniFyoLrVwqGSFRKwYb91X5yeA7Wi7f49ayQQ8T0l
YN8mO/pqfz2H8u/fUyeW2NEtsKMe5695RX9JoMmk1XBxjB3liar/t7xBAgsH
p84O9rIjaerDXMe2SIBrmP54cxs7qjt969L1bRJQyDl08MMXdiQ35035976I
mYMiy0vIjp4e9294S8D9Tfq/teR37Kj2tdNyG/78yFp0+x32kh3Zh5d7T1Pj
fvY++rtHBjuSUHQ4Qk1LBpP+OdA6iR3xGv+4vIcO9y+V6nzde+xo+U0QuwDe
P52g7X2kHMqO6m1/hLIx4H5Vvxom4cuOyBIGE3P/vn8nercHjws78g5bc/r3
fUJPdCWtGEnsqF0rouMXE+5LnBqXVkzY0X9zcuLfmHE/6rY+M6LLjlbe9Ma8
YyED+tRAse/n2VHEA5JpCivuP1bJe5EiO1I587opgA33HZFi6tcn2FGO2142
E3bcbyYaZ1PE2JGUF/Wef99v9fDVeE/kQXYUJ9wczoD3f6VuNF+9OdlRWBAQ
6sTcI3fwPYmZHfHrdEw83oX7ybp8lj4BX4/M8gej3biPVOnHqa6wobmAx/vl
9+D+EeJ8U3qKDZWFr59m48R943ykA98QGwo/2DTYgfkec5YRSzcb2lt0xvzR
XtwnmqrOrTeyIWH5wynGXLg/xP84MfaJDTVEjsru24f7guESf0cZG9pxUXb8
jvnAAQ62T2/YUJEZve1dvH9V7hf/W/CcDT2VWdZU48b7/2fqY2kpbKhrYEVz
FXMY5Vp7dBwbcigrFnrJg/f3R/0++oWzIfueiWirA3g/P/vwtW0gGzrWZPPt
KC/evxe/STG8wYYEmsdZ5zFz+nyNULdjQyzXjtHG8OH9ueJvzxPX2NDK8NdA
abyfNiEQrgsYsCHKzYn6dsw3a3h02S/i63v4XtSfnwwyIuSUNlXY0HO/Or9D
Anh/ra17ZPIkG5LvIut9xjxOdNjXLcGGEo4q33Q8RAasHXdo6wTZ0MNP7lNE
QTKQfpQ+X7yfDVWKkx+9xaxnXtGXwY6Pt5uL+A/v770OdX67T8uGwoTEPq1j
fvx7rjTwLysyDmrWSxEmgw8vWLId5ljRB51UdUURMhhwEn1gPMqKDtHsyunB
THtCNfhCDyuipquMChAlA7EVUye576xIspiLhvcwGVws9zIRqmdFK3slxSow
O9+Mu7CrihVFCzVwm+C+Ea+WL7tTzIoef7xPt465hP7zoekXrEhRO+REsjgZ
/Pg6yP7rKSuyNC3bK38E7y9jNjfqE1iRAH2ExQ/MAvr7JkrusqKaK435/kfJ
QH3fic6sW6xI9+5pT1bcbyi/tD/Fe7MiV2m/fmfMUU8pBcFOrAipGh+lkSSD
19dDUp2vY3/aSa1nmL8fTo0yM2ZF6bY89kCKDJb/vPfWusyK+ieKtzsx7y/4
biN/jhVNHdIKssN9StFj+oroGVbkEOG3ewWzpTwj4DzOiuAbifHwY2QQuiko
QX2YFdm1be3xPI77PlLinuNlRcG8FmTVE7jf3zai79vNitJ8vxUWYZ7RuLH4
jZEVTT5j2KDH/W0XW8xA2TYLIqjbqIpglm3NbcxZYkHwbMjEL8xGCZ/KEyZZ
kH3mdW11OTIIMO7LCR1gQYP6XBe5cB98yrf+0K2TBQVvhBGKMFcP7gm51sCC
NPufKnOdwv36uZSLTjULMrG4xHkbM7O9ptmZUhakVXsl9Qrul5JSNprir1nQ
h9c+cmwKuC8v3Dy5L4sFnXSZ767A7FHySIjuMQt6OO3+k3SaDJL93hIX77Og
AbeOYXbcVyuUm7cG7uDzsYSplWPuo56cbPJnQZV2D4zcFHG//UzbXenGghio
/ZvOKJGB6F3+2jwKC3rm3cLbiVnz8umiZHMWdPVJy5gT7sOOewyehumzIOVM
qYO7AO6nXS7RHpos6PB47uUyzMUpUb7WgAUlk89Q2eA+3XntOVlXjgWpfIsy
J6qSwV8hpK98lAWpjx3TqMJ8cPynisQhFnSOYeKjE+7jqvnLkjz7WNA7meMP
Dp4lAxtX4gFGNhYknTjd2II5QvYo4wo1C8pwYmG+o04G+WvnlofXmNFipf30
adzvmysth1pnmBFS4Oed//e+Q7B/MxxhRoPlJ0pzcT/iOpdY+eonMxryg9NW
F8jgNFPhi5QWZlSpk1XJq0EG5o3fEiPrmNGFu5xHf2AOjhsN9a5kRsqUAvUk
TZwnBlRupCI87pXK/Z8WGdRz81ro5zIjOy1+uP8iGfzpPXlRNY0Z+Rin6PZg
Zs+8Ii/9kBn9ysyfzNDGeUJ2FOGLYkZL+8442umQgeGR8N0swczoPWw+euwS
GfjOZOyseTKjAuE1hXHMT4oqp0YdmBH/A4jyLuM88er60W7FjKKTX7He1CWD
kdMLddX/MaNZ9d0vrlwhA4Yd1rcFOszI7wh1togezpNPhzPSzjKjW9aMLX8x
XwpXi4lWYEaiXbfiW/XJwP2iub+fNDN6xLNLOO8qGSRw+NjaijCjjN130m4b
4DxpizcwPMCMyCV8tFaGOE+SXqmp72JG3BLJsuA/MiCY1UufYMDXk7xVc9CI
DIQEhnkFtpjQ8Xuu9duYz49sMbEvMiHtWr3sIWOcJ7n7VzfGmZDCU/OQLhMy
iHGUGZnoY0LLObTLn03JoPDYpdaudiakW33gc4kZzpMl26rar0yobMf4dc6/
3z+Vhr4sRkxItOz+1RQLnCeBackZJUzIU3FqKO4aGQDVsjv385lw47B0vmuJ
84Su3T0wkwlV7/rLHGGF8+TLzDWHZCYUGJr8Pdwa58k9Jh3jGCYU7nVgNuo6
GTReET594TYeX6atiLPBebIXHJbzY0JVV9dAKgnnyU9jTiFX7Fd/efQNGedJ
mgfVLjITcg0gD0IKGZha35/ZNmVCpJRitUZbnCeieb+mrjChJY6h4UE7Msic
rKn/eYEJcQQuJW3Yk0Ht6/539UpMaE0lO4jbkQwm3P9mlsgwIS2rc5QzTjhP
Tu2NzRJnQnaCljpWzmRwbEM6MJ6fCf3+EnjurgsZ6EMt++C9TIjpNvAscyUD
71DSf84sTEjYZubQlBvOkwvB6mZUTOiF1a0+oRtkUMWSclxrlREpclELWXuQ
wWDzu4Py04zoBHkm4qUnGdA9bGERHWZEhcXTXkRvnCdGf9b2/GBE2krXqB77
kIE2L/0oVTMjYmJfP1joSwYuAwJtszWMaJ3Nxe+rH86TrDOot5wR6Y97C9EG
4DyxNXz1rYARuUxaLf77fepPCbfHZdmMKNnu0lHjIDLYmrsbnvOEEdXzH2Tk
u4Xz5F22R0I8I4pj1Au+GoLzxPejVWgEI3KgdFGiQ8nAVqnnkttNRjT1ese/
8DYZ3KVaPXPNgxFNWlyf67uD86R2l7iOPSNKHCZrDYXjPImU4DpjyYjyEtls
qyPJYEXnAo24ISPKf5fNHnKXDLh3W89xaTOiZTcl/V33cJ50BvTSqjEiui+G
o+OYLR8nfV04xYjE8w9p2N0ng9sWRe8HJLF/BhfL5TgyyBFszGoSYkTktB4r
jQc4T0bH4iq5GdGFPZvh5xJwnuRRB+VxMCLBJO/mgkQy2O3C55hMx4g8CGXy
2slkICcjbxy2wYDoJxOV+B7jPFnVO+8xz4DOHzBP2E7BeVLhJGM9xoB8i92v
TaSSQXpQhIBuLwPKfFKa0POUDD6dfcam3MaAjKL8tbszcJ4wVP09+oUBVS8K
tvY8w3nS0D3GDRkQU2S67+RznCexi+0M7xgQuYX+EVUuGVy5yl69nMeAWnt9
AgTzcJ7sF38znI59FM/b6eTjPOk5+6Q1kQGRUgsehbzGeZJuEQmjGZDuPtOT
1QVk0G/j6/UqhAGlls5rsBbjPBF/eD3FhwEtK2ulW77DeTL9WjfSmQHVHvKN
r3qP86Twi5K3DQP6qyBLFi4nAyfPkSMkEwYU0bTv/b1KnCcKO/v0dRnQlISa
z0wVGbzd4qZTPc+AvJphr9BHMuj6KLsgpciA6m5PrPJ9IoONO5f7eU8woInv
Yo7363CeaNk3MIsxINPQ3oq9X8lAjf1O2RofA2ou5HUTayQD0ven2aN7GJDw
gwsuUi1kEJlY/qCdiQEtuR3+eL4N54lJR3D1Dj1q5ZZP+vf3Oy0H55wKlunR
ntFcf5qfZLA4xGya9oce/bI5bLLVSwb7ckQ0ogfpUWBWiWXyIM4TBxU5vy56
lOIVa207QgYW0qaCto306J2Ny0b4KBncWvTkMPxEj0KMdcYpEzhP3sduni2j
R1zm+zg/T+E88X85cfwNPap/zh55dY4MpkBdJ/9zetTL2Wy9tkgGHLSDn9hS
6NHM+6C4zFWcJ/UbBRux9MiTauyLzAbOk2iutIkwehQwoX0obpsM/HSP3+0K
oEeOw4F/tGkoIJVT26fWnR713GXot2GkANRNJhXb0qPH5kEP11gpYOTJLb0M
C3pk7fZI/9YuCmC0egLuX6VHNxtOS/JzUcBRkfcSgVr0qJN1t8dPHgq4NNHK
7aBCj+j4XpqU8FOA+6speuOT9KjlSMunt8IUkOjGsHRegh4l0IzKdIlTQJmc
4KCsID3id2Pj5pemgJ51xSbB/fRIpz599J4sBRCq/qsgstOj4LDrh0VOU4BQ
iHvuNg09YimUTh4FFHDh/L2EqXU6lJn2hdR+jgLsmXNDfs7SIcf7NR3zFykg
pqnapf43HYqQmB48q0cBhfG9ZiW/6FDhxwTRdiMK6DBc08xqpUN1JWbxH69R
wBrPnlPxn+nQjRUlG3sKBfD2SwoHf6BDhoctXs27UgB4prHLuZgObXk8vGnj
TwHXKde3TV/QoaYJja8Xgykg7OjNP5pP6dAt9Zjk4NsUkDeb3H0qgQ4tXD7t
7h9FAY3FxbUid+lQruaKWt9DCpj3birac4sOPSM2qzq9pABOxYmnVN50yHIT
fGR7TwHyBNp7s450iGXptFtbBQWY1hz067WmQ2+43UrKEAUERShQvhnh6z/U
G3OzlgIyta9eLbtEh74KXpt80EkBdUQX1Rx1OrS4E3mDPE4BE+2RUgmn6RCx
g3opdYkC2B5lHQg9RofYx8browi24Jg5ZHQTpcPP41IZG5stuHro57IFLx2q
mhvhPcdjC7x/Lw1p76ZDXWsPRE+J2YKUFxwtpxnpkFp2a/P4SVtQ5XTkg9g2
LfJQe060Om8Lho6fy+NaokXNh9Z5XxjaArqVa0m0k7RI2Oy3QgPFFoiX+91e
6KdFjv0bj7t8bYH2zQS3gQ5apHCAzfBntC1wVSuwaPpGi8qtpB1+p9uCB/Tf
LlZ+pEWcbZa9LCW24P3X3/J572kR/Z+zP6wbbMHPGIJo8itaRLtYNU41Ygu2
9Q7sCXtGiyZFdGRotmzBoX0nCR6PaFF+aNq30H124Nwv3Wmr+7SItNbCkiVj
B2yfOvy8fIcWNWhLU0dcsQPR18M+K/nTooy3jPP/udmBN4cz3h51o0VR4VMj
Kg/swPc/FRncFPzzL5xInu/twMqbzhgGc1rUb5B4TqrPDvB4zPsv69GikATv
xy8Z7IGSPKvdsAYtkh9q65eTtQeWm6KGrcq0SDZw5Cq/jT24jVTPQlladFXu
c2ptkj3IvW127NURWvSu17HsQbM9+KbhzZciQItO7ohY0rI6gBnWeOZILlo0
UhU8kqXjAHa35q96sdIiMc+w9/sTHIBcwucRG2paVHZBsoJv2AEYGw+16q3R
II7Eicdx8o4ggG+rSmWGBpHLNm/4JDqC9MF9+VIjNGioSk2abtsRfHp+4hHv
Txr0fNcdjixXJzBmpxPG3EKD5G7mizDOOQFmKdsba7U0qGHSMVXxpjOQWgix
HK2gQdm+tCcq+FzAlZJUnfZCGlSlP5Qe2eoCPP1KT1fn0KDCpmMmBZdcQbJy
2+GCVBpUP0enN1ftCiqpZzjTHtAgq6mj/I4abqC/jpE6OpIGWcgze7cNuQGa
u0KzvkE0qGh5sG8o0R2IXlbuoXjSoBIBnbka+xtAa4/xFwMHGhQp3VuZRvYA
Tl03Ss5a0aARmY0u8wRPEJcS8+z4fzRIhFAQ+YfOG7y99iKWX4cGBWiFkDYb
fEC3UE0g21katCywt6WBwR9sjPXZb8jTIO/GVX/hgUDAn7/+34QUDeo6czGw
vD4YqLlynusSpkEKzHet4uRCAVlW+kQtDw1iZLDhbjAJA5FrmvzFRBp0rYnV
eHQsEryqtGHNoKdBhCHJbLvmSNASHLQes0mNNB/TJTQIOsIl9cejAQvU6O0y
r3ehyjO4j+ldm/04NYp1d1G9yfcYnmlsRkZ91Ois+5AX2dwfWsRNvjrfTo1O
VB/0LKtJACEGdCmyX6kRQ1jD5xPCb8FzboEIQUSNVHyudqsPF4Avvac9iSXU
6N30n3bhhbtgKsPAevslNUoymuAu8b0DiWTXy1MZ1OiP0RSjhGUqlDlyV/Fn
EjVy3YBJr19nwP9mnovX36NGaXF2netDxsCvCHGVhFKjhp2J6pnyCJDm9Ysm
y5capefLxcY/DwcfT6/MxblQI3I14yK0vQ1+bxP7gkjUSDJa/mN47i3A+Ono
NydTaiTbWH6ImS8ISISfLzW9Qo0mDGoTG2f8weWLVs81L1AjCW+fizrBvsCd
IyD+lBI1MvN7tfgy1RsktiUGichQo78WtVxegl6gLKnQcY84NWI/9p+cwLIH
6DVtMKbip0YC8/KGsTQegCAwdn6Wkxqt7yezV6vcAMIjVLK9zNToMi91ktwz
d3Ahl/fQNwI1yqWuv/BbyB04OJ5iL1uhQg8F4n3iP7iBmGN6G9lTVEhP19T3
oqMbKFpyHH84RIU450x090m6gY7S8I6Qbio0lUozXL7lCtYDMqtdm6jQmF1e
9P0eV8Cr+uGNRQ0VapJyGyPVuwIVuu4n2uVU6LWV8yU35Aquf1mIPF1AhUCh
eLVCjSsIv8fmLZZNhUojTj2Ib3MFeVfEbLieUKFtg6i8hzOuoGnv2Su08VRI
lRAVmrLXDcz/MFdeCKdC8nsYFs5quoG9aT5HBwKp0Nn/6qMdotyAvPWD/U03
qFBEIqFf6qcbMBN9TVdpR4WqZy8sDCm4g6DJ+oUX16jQg/GkmzQv3cGz18P9
SQbY51GiIqP0DVDnvt1w5yIVqklUvUj3+QaYPMldfkOVCsnlPff96e4B2DZk
cqxOUSGXR7u27aU9wXF46eFlSSo0aYsMMhY8wdVQu1tKQlQor3T+qUimF/C5
cNv5KDcVEublLDXY9AIpLE9NuTmoUFoW8xiLiReAzWUaDHRUqN1EPFxuwR0M
PWiXW/5LQAydI1HFR80BvdGs4PAcAbXMZpfKqQZBcV5mYusoAU0x2MS9iHoK
dQaEt6p6CGhtyYTW4WQ0dM0Ck/nfCcjiyc3jbTOJ4KGtSdfjegLKfSGxz/vV
C/BewrMmooqAmhxvNZD534Jfc/cLvd4SEBV7prKoUQ7YfpuXZpNHQIRRC+X/
MvOgoG/tXb10AgpQiSVuNhXDc0oDPiqJBGQtItZFMCiGdlQbJKloAnLTq/2a
ejIdRtfu1ecNIaCbSvovWlwKQUHkMRVmHwLKe+5x/dJKEWjTuSi55kRArJHK
7qsy2WB1F5ln9DoBtb8RO/We5h7g6QxmaDcmoLv6p9t8bz2Gyo9Tlj5eJqBO
w646c9EkaGVRMvjmHAGBSZkHmo7W8LZga1PqGQIak3R+ORnrBnJH/1TcPU5A
2QKkpBZZX/Atj/6F72ECcpftEGVb8wOzzocSKXwElMZD5L1b7Qd2yyiGGuwh
oCWHGkOpEV9wctXQ9SwTvr8S7JfOtvmAIq/hcuvtHdgpDw0Vq7zB3+39CcqT
O7C07o11EfICKuGXXHg6d6By2We1rD5PEMFxW3Pl4w6MMcuckd3vCZqSyoS+
v9qBLe0vW67gz2sugdmtV492oKNc0JPrH28As1zh7sg7O/BqRUhU47EbIOuY
SRHJbQdmRlYE1ha6g8nS+9Gq5jtwOF+vWUHNHZxQrSXzae5AtZtPgjP73YDP
l78q67I78KnGx88NkW4AXTl2oENgB27etZfwU3QD9D9JywWsO/D+ru1XF1Zc
wSXrlObotW2YVXdU69h7V/BwsuWF7cg2ZNs71pF80xX0uNPfVm/ZhrsERV1/
XXQFghtnLAQqt6GCgxSHw0FXYB/qJr+Zsw19js+6/fjjAgpYcnZ3P9iGS+CV
W2eWC1h70DNVHLQN60ONXFRsXIAy7+7P9x224Ydw3V/moi4gLOtChsN/29D+
GNdI8pwzaJAI9L9wdhumaT9mifjoDDjfFRkISW/DgNvfxQ8nOwMTpXHpHZ5t
6Op0223ihjPIrOVj/kW/DedVubsdrjqDcR39kZKFLbhBOLZ1TcEZHOuMqIrv
24LZ6l6GdwSdgZdFVbLz1y14S2tQJZvDGVSNLrprlWxB19EDNokEZ0DrIq4j
mrkFy7+cyj6+7AS0Vy0OU8dsQfOr0w6m004gPughVZ/vFjzKEcG0Pe4EfjJ8
/VVG2oLNfIuGzJgFYnfeJVzZgnG79l/znnQCtvvlYt2UtmDpaRkRNbx/eJ1u
b68jvgU1dF/7O607gRWxdHXxvVuwfXX/OBW9M1As7DhIR7UFqRm577NxOYPb
CizrA1Ob8NDQ3UNZ4s7g60eVtsruTXhPT/Fjn4oz2K3l9Sq5ZhPyNm42/TJ1
BkbfX4Z7FGxC8vJ6dJWfM0g3GbTSfbIJEzseer1OdQajQ1yKEhGbkD5N7XBn
jTOQcNDmYvTYhOl0NB+t8P33WLw1N3xtE95KfZQTKOACyv3ff4UXN6Ge1J97
ZgYugJp2Oivl1CYcjXve63vfBWhECwZ5C21CFdX54HS834nlNDLW59iExzVO
lVoRXUH3k3sy0hsb8DLpS76frCs4KPKJjWVsA8qnUnxWjFyBzau1sdHvG5Ak
pnBQJsgV5MtJVVdXbcClp6eorz13BUsfrj9Jy9uA/3FWRyXj/Dh9/pGXX+IG
nNInZe8Mu4LgpiZdw5ANaKUf/2QI50O9Ie3RE84b0INH/eqRH66A2K9Ax26y
Ae0tD9PfC3UFhhSX/olzG3Dl+SqHiJELeDKbVVZ7fAOOKnr2ej5xACPePx9k
8G1A1uxNOg54HUgQiM6BTBsQco5lsN3QBO4R5zSMl//Ch5JiyYX2TqCU6C8o
N/gXalSrOL+tvAcIjwo2iY1/IZ2CQV7ebBzQODTaOVX6F/YOcdyR04kHMS8O
FNZn/YWvcrqFNsvugPbjV+5mxf6FLQusPKVnHkHe8jBScMBf+PWc94JVSTq0
VqsEZrZ/4diWiQ3MuQ9zv85zy1/9Czcjnu2O0aGAOb3DS3tU/kLTZs6kWysZ
QP6XWdPs0b/QOYkcolX3Gty8Hp/7bd9fyNP4yde0PQHU/PkckkPzF+apvmII
mHKFrB5bZqGz6/DFnLX/J+6H8OrmiVPXfq1D2ep7w466GfDxbdtdZz6vQ319
hd9shdFwgDXtD1fxOmT/IdT4UTUciCW01S6krcMBpK6grnkfuPIxpTdFrUPW
03+Fp2Pvg5Lnyn55Xutwc6Q3V+9lBNiU9LgaZr0OWyPOj9bE6gD1khdS1pfW
4cOxA535m8dgtHI/o/LpddjijlZYNq+A73Wcw9yi69AsW4udkd8S7L+s9WF5
1zrcc2GRY+mMDbDsCkpq3VqDa177o80qySD32ju3VxNrkLEyhGnKwhbMjE1e
jOxYg3r3G48m3rEDsq4CoqSPa/C5ovXdTtw/AtYMCKqv1uBS+pq3Io8DqAm+
+5P30RqUdrNLVnrvAJiZPr5du70GBXyMDj477wh041Zi2l3XYBazwVGbZkeQ
zC1hV2C2BgvT+M+cMnQCAxlWZ6M18Pnkktu8+5yA6JEkPlvZNWhKpTD/2t4Z
OBY1rJ4VWIOlf3ZYxjadwdvT1N/5WdfgzKhe+2CiC9isPpW/sboK879dYjrI
5wrULjqFdQ2vwia1BZezHq4goi3Tsrh5Fd4t/3r+VasraDHtPn2/YhVmTFLW
T5x0A/tH2PY65KxCSjh58UOmG7BwPDt7/sEqXDr5YY/ufneQteTzRTBoFapK
TV5mTnYHUwGvn23br0KkbjojI3QDyNKNBP40XIUxCqfL1SpuAL973EYlaqvQ
5NmHpBErD4D2Xj4RL7UKy/tpZ5i5PQFj2m1WZ55VeOiXs/vakCfQFS0f1aRf
hefjbaj1qr1A4utZJLKwAjnNEEmm3Bv0nBRJoepbgcFqp4maTT5AGJp49n5Z
ger+Zy7MUfsBxwuxl8vercDHl2W8r5n7g6LmWvGEjBVIr8pN82M4AKz9t0Hj
dm8FdtFwuv1JvQlUBo71afuuQJNVAyUrrWAQZksuFSOtwJHBotA6u1ugYS4l
nvbKCsy+dG1jqzgEcPq2Og4orsBm1bR6p+O3gRkVw4VKsRU4xf6Jz2rqDsiM
VDyUzLkCxczneMznw8H4LveNG4QV+PB+zlfNy1Hg2OOcjstTy9BDiLNljese
8BHsfXO0exkmmqeHmkvEgqq83VEMNcswTMDUn4c9HtDKaNgMv1mGPEOd9BZC
D4F2RaAyTFmG8ex++76J4P3Y2eL9KeHL0LqxO1H9eBL4+W18wevGMhySydU2
fJoEBK4ebNS7tgw3Z9ssLn7JArY9+jlSF5fh+H35txvH8X7KJvIW86ll+GAu
pudNRzFYmaoyHRVchmlTzf1PfFOBoueSXDX7Mox2QO7Wku7w9pY4Me3vErRe
JXx5VFYCGu5cm/QdXYJt/6lFEHsawG72hBqD70vwZYL7a7kbv4FR4te041VL
sMFKPD15fRWkHyT4suUtQXmfKgH9jikwni2nP5GwBDlcOXM/ZbQDKWkHydpb
S9BQfPnWhPcn4PE+nSHDaQm2fJka7OtNA5WgczDAeAmyv0saYD4SC2nrWSqN
zi1Bv3t7WMSHCoCWrmqi7PElSD24vVAECkFst5crkW8JblrfY7D79Ax0W+Zr
TTHi80voGKZ5pAOBiUHh+qVFWOsPsvsy0wHZbd/Os4FFWK0RJv42Pw3kr2v/
CGpYhF/3hXF6+qWApVshxaali7A70dZENywZKDKX3juVtQidZ9+2ob+4T8ZP
U/bELsLyEY8BnvYHoJ5HSG3WfxE+SnzlJU4bD4jPjHi/URZh5jvhv5wBscDo
aMxKtv4iLGj56jtiHgPSij+1hIBF6MHX9UxDOBqMnFnPszi6CI2XnRRVTkcB
iRqpO6f3LcKAl64xfPERwEPb5hoXzSJU+U/QcVIgHJS3P1JYmFmA3y4I57f3
3gEE8+Y9TT8XoK7kw7nSj7eBxm/amRd1C5BKr0rjc10oiHU6XX+naAFe/Cp7
Q3E8BHQuu2RapS3AI4e1Dh4VDAG8N58HKEUtwM6qIPsrbreADf0vQ26vBUgZ
6f+y+j0Y5MUQjy9bLUB2+3OMXerBYI7rPEurzgIMzHqTxRAVBOSf+v/OV1iA
LSGSi5XPboLgw4UwQmQB+oGntKztgaDuzegjm10L8L8DvGEp+wMBqzyvh8rW
PNw2Y9lt7xIArqIrl3gn5uGJz90vUac/eKIRLrbWPg8V1WS+HNbxB0MtldTt
aB6ueZ+xs2j1A2LGCz1v8ueh0/ZAp561H3AdPPz+bvI8HLCd+sK74wtK7czj
KLfn4fvJey/Xsn3B9ny8w1nXeTi1vtNy1tgXqPvVn+M3m4edYT8ifff6gmjq
bf6NC/NQIvfL+LFfPqA9SuZvp8w8tH2nJHcgzwfw7LFrL+Kfh0PHrm1Qh/gA
y5S01zEs8/CsnUHJN2sfkCvUHmG/OgezyyT2uWv7gLmXTNfPD8/BE0VJ86zA
B5yUBUqCzXPwQ5tBf9NpHxBQ6bFvu3wOxtp+L2ZU8QE16nnzP7Ln4E+3nmGJ
yz6AtbH/27v4ORioLLar3dYH6BnszY67OQfVOs4sV9/zAcm9WsFO9nNQcOvm
9HyVDxggBZtoGs7B44/eXU3c8gFiM+9k8UYShlgdNJG86Aucvf6wU0nh4036
jMJe+IK32wITPdxz8Pw5fccGHj+wGWb4qZRuDhqbKQepZfqBiIP7z4gPz8Kp
Ut1uufP+gFM6dHagfBbWJ/deL2YIAOlg5lly/Cxc6osyfjgVAI7pGhvp2s9C
n8yDZtqbgQBZ1rAyqs1CIz3Od+dVgoC2m/RHyD0L/5OcYuQgB4PuW489vedn
4GFPxgcTBreAbTzdEekvM3DySEUqq18IWMt07RtNn4G5wkG/qAZDwe3iX/Fp
PjPQwNSOb/7xHUCsOX/BUHcGVhEVggzLw0F6e+EGm9gMZDaNdBI7gz9/f/MW
1O5Mw+36Bc0jWdGgcjncJrBrGlr+cHx1f2800KBf3C/3Zhq2dDcyAV5n0M1l
0TgVNg1DeEVZHrzLhraHv9zKspiGJ6t3N9s4F8ClU7InzU5OQxCqmPkiMx0G
azyd3MM+DdU/JDjteu4PicbMT7/9noI98Yfj4gYfgyd2nvqhH6Ygu82tRsWO
UiDmN8BwJmEKdp9UkXwaA0Fp1MXKBccp+Lq48dxCexbQSClxzVOfgg81N8IC
1eVB+8tDIta8UzCOPU2V50kitKyM/sG99AdmPeBrf/QmF841rN5r/fYHPt6O
WVWXfQODe63VIp/9gSj+0il8FGSdaVxR8f8Dp98Kh1m8tgfJ2/Iv1/T+wJ+K
s7SRcf5AjCPrWsGRPzDxOst7N7oAUMrPwWlL/Qfqs9sMeRL8gPoxv3r+n5Pw
3W95xq/13qBF5XdAV+EkfE2ztnClyxNYXtE9fj8ScwDDON0ZDzBnVfH7vNUk
ZBak/Sk56Q4C3EUfb8tPwngNu8o9XW6AMTTuUglxEkrYcd3SWHYFyQ82qZ3H
J2D6ZsajF6ddgVgW5b0ImoC1Z8XC/ZVdQOnb7w69SRPQzJPTNx33M5VaJYEE
lwmoz9e1m8fcCbR05LZrX5iAjH+fHDfPcASWo3siafknoEBgaYY/wRGMr9xU
qlwZh021b8U+eToAH4bJ+RtN41CkDz7w2LIHjPsNso9mj8NMT60f0Q/x/RFD
JsOB41Ca+dfLFHl7IKZwlCPFYBzy6J6myxqzAwWaiZ/0JMfhvvaXPLTpdkDF
hMqHmW4crpsX/bC2tAMt9o4S1T1jkPf6XHTGYTtg5N814Pt2DLIwo+ctS7Zg
/K5awvHoMVidlDIp+tkW+Dx5pTlxfQz2/wj0/5tqCxhf7d9OPzMGFelPqFb4
2ILkD6FFRnvGoM6HNq8ZQ1sg0DRDJv4ZhfeyxYlH5W1BQZ/xgfrqUahrstjI
xWsLVGZrmoMej0Kqhxw916ltQf2O9O1T7qOw49ut3qZJCjAipsjPao7CV60R
unwdFDAuQD+dfQgfD/IVeD9SgM9xtwyL9d8wqkaN8elrCiCo9Rhwtf6Gd4Iq
X9xMpYBYvQvMTbm/Ia2jyKfkexQgcL2o6k7wbyhVS8XcfJMCCm7w3VAy+g3j
6xdL6N0oQP52xOFl6d9wRv0xm5gNBdQ/XPyVz/Abpma2LfMZYZ/nFrE2/SPQ
cYrxWYc29nn3RZ33/QiMHFc7r6xGAa51suttMSMwSVDns4Y89ul6+uoueQTS
OesFjUlhnzFm67PKI1CVi36STRT7rHlybewdgYcOcMsU8FFALuPg16LpYVgh
02lcvRf7cGsH2dcOQ9unH4xOsmMf8fcygqnDMGCDimqbHvucFhz/4TEMdwwN
0skEChjQuvckTnsYbtvH5nj9JQNX0zVdTeFh6PviRYrHEhkQHK/TUW0OwY8h
04cSZ8ggNqCprLRtCJ7K+KX0dpwM9t9TcHZ9OQRjkPTi7mHcN1KzBMVCh6DW
kvFSax8ZyL/m6Oo3GYJRMTMDuT/JoL7K727SiSEYzR1Vm9JJBrrNv8FlZvzz
5/rjKr6TwUC/7hL90CCsa3hZM9aEfeYqcqvKBuHj1laP39/IYI1w2NwrbhCu
MXYy0H4hg4hd8buk7AZh86P03Sc/Yx/BrdrfKoOQqyiw9hQezz1h65e6fxB6
7Rfgt2jAPmfbpAzmBmDGV6UIVEoGSF95mLV+AO6dYejqzMU+Ni+Sap4OwEpV
t/1XsrCPB6d2gPcARFHH+c0zycD2ThBB9vIA1OmNpR3CvJYw+faP6ADcs8+O
9Uk+GRB1Xn4/v9UPDSxWIwhFZHDM+daZkvx+uNsZpQ89x/Pf/y9LxKwfGg8L
Lbk9IQPLAkm2BJZ+6Fkgpa3wgAyCW2m8aCv6IEH0gYvIHTJIX/jRd8O+D1af
7xkR8SeDgj0FF4a5+2Bg/SdF5igyaJENK9D70guHHxlwtNwngzkDM+5qn14o
ye8taI6Z6H0i5LhYL4T6gdfH8HwCyYx/0rt6YNWrpyJCrmSgUtanTwzvgTyQ
0b/PHfv8fFsZdLIHvv6wXeDijX02okRmf/+CGWsjGhs+eP15rWIsEn5BGTaj
N8y+2Efp1Gqj+i/46oz0FRs83mLBZqm09BOeCiSLW+Lj54KG6/Of/YQ5lXqv
xLzw85RRdpxX/yeUTvyt1O6BfarvP75L/RN6s/4Jd7mBfYZJNBuFP2BAao4Q
9T8fWkVHe6sf0I5lszUW+7qK7O74QfwBH+26lH3QBfucH1fSRN3Q2ONX3isn
7EOpyi516YbCvFQqwBH7RDzkEOPvhg/9fhm02+P1fGHvk9TUBdPe28Y62WGf
byqD9De74OnoMQsWW+wzxaXlJdkFr+lYsLwmYx+26aLfPZ1wOP5IrQEJr5/U
pwMG0Z2QUdUwl9oG+1x+dLvmTCessa2rfmuNfVxdpmX+dMDmC0v7HK2wT9w5
w2ePO6DPjWfPxCzx81Z0AO7W6oBJnYOmkxbYp23+cMh6Ozwfd+dEoTn2Wf4c
O5/bDk9/1uYKNMPrx5W2bmnUDq/UlS7qmOLn6ZSHdQtDOzw8UfJOyAT7GGl9
A+/bIDeTyPl/71e5+grIviG3wYLPijG9/2GfxytPDnK1wVNZc14fDfHzVNFA
F1P7HbYzaU68MMA+PZnOWx7foU/Kz6bEq9hny6fLUfg7bGmK2h2hj9fv4GWV
nrZW2DI5nhGoh31URF5cDG2FYMDLwfsK9rHa2FVxohX+2KfB5amLfUJa/Y4M
tcA2pWYqr8vY51nO8KO4Ftj4lMbO/xJ+nmoCtZlUW2DQfr6u2zr4/n7LsZ8f
aIZ1PcKEeG08znZVsQU0w6eWyt8yL2LfywT2N2lNMLLSTvK9FvaLy++/t9UI
BVmV6Jo18Xq1GxU6mjXCz7V9Jyc18PPCRRd6saIBygVqvGH8976eUeHVIzwN
UO+NWsuRC/h6H5uLMvl+g5sH4h/qnsf3u5dpbazrK4xYMdnwOYd9+Eu+1J38
Co8EI5MsdTyflXXK84Qv0DfyWNX3s9jnGbvT7aV62Prg7X7af9+n9Ltc+bp+
PYzu+GIir4Z9xChEtaLPMPQll6eLKp7Pfs+QwK7PUK6m3OiFCvbJh8U7LnXw
o8+l1d8A+8w43OlrqoVqe36oiWAmHN//3wfJWrhDUy9JUcbz3agRexJdA50r
x/JeKmGfd65//f58gmefmL9aUMQ+q7wNxlqf4NELmWKKmAcUvqTKv6iGvrX+
xIgzeL4AT5d9jNXQO2vFqPM09qk6pLpC/gj5h8xWRDEHE5p2d9QiuHJNrNdX
Afuo+Y0UCyNYIjNF1SyPmUnHUYQBwmfnjhiLYlaJec4xXPMB99mNzqBTeHz3
dlF6SCW8+1zF+ddJPJ5kaGihUgFPzIWxK2AOPvBm/cB2Gbx9/U1qshz2SWdI
/VFRCqNO8o2uy+JxYUuVJN/3MIn9V4cZZsKL0uGrp0ogdxtr6icZPJ/krvDd
y29h85vfpyQwo0K7Iy1FxdCldnUt4QQeP1ndeM+1CHJI65KoMKNyHreLUoXQ
V80t0fk4nu/mqNju7jewOt8ouvcY5vAkl3v6r+BT91uql/5xrEYJY3Me5Cxk
e4OksU/y+maoVi40PPS9UfYfZ+Sd3al9DjPeZiXmSWHOM43yU30Gd7i9qAX/
cTFr63JlOozRNGFOkcTz+fpLD7k+gYd2383Z+4+jeiu7KUmQz9q2LU4C8xOg
1WwRD7krvMM5/rHZ2Td3X0ZBVc3rH2KO/vNl+OrzKBgu9a85c/zjCKkHSXz2
cHtBLDHuCOaWWzS2BmagPZ5Ocu8/ljD6FqTgD1bdPko+Fse8NPb1++twcGDp
dbzAPx7f1e0+EAtszwPDXDHMnW+0AiYSwOItqhvH/3GNzoc7C4+BfGfG8L/3
wQnFf6TvbzwFNpXjmRcwB7eoX9EOyQThJ8pftoti/vyAuZX+Obixxblu/Y+r
hj4Z3M0BLxZ2hS2I4ONLjgf+5MgDShrDOqH/+FXwyWsP80HDZNvFvf84q3l2
eP8bYPjrvH+uMD5e5/7Vt00FYCK+pEsRs8qXk4UrxCJg4PLW7LsQXk/1PjYF
/WJwWWKczg6zCrpj75/wFmzc4Ggm/Bs/I/n5Q9c7oPdyq/iRIJ7vfbsQgec9
uOTwpEAGM0EmIFjNrBT3umnUdAiPvxbqvZ1WBgw8FwfsMROOfFP4PFAO/iRG
sjJiRs/dE5mEKsGBZHWVbAF8vkM8ixdJH8DHKZLPOczoycfLMTlVoFruZOFv
fjy+3y6/ZQLi8QNjYZgJWhG3mRIREPgdyyWOGTH0FB059REMtvIrNhzE56+V
HrzY/RGEJl2/6opZJTSUw8m3GqSpspjtxSyg2qUUw/MJnFycvVzBh/88bx9x
fFPxCTA6FUpYY06vvPm4xawGmCsemGXCbOn3vX5+qwa8f3TkYREvnk9edHX3
01pwQblzvxlmwoqviKxKHXD1E/Cjx4yKG/UNBuuAnAD3u8ID2MftUIhXyGfA
cb63zhyzpbRnQZJQPSDNJeYzYxaYru8rrakHLlUB10t5sE8eL9tP0hfw5Gnr
OBlzuq3rmQ36r0AmekSBi+ff/x9eY8eb+xX8VSFerePGPiP7kpU0vwHtrXJZ
b8yETIc6i8lvQFzd8IcYZnQNLgXdbQCaqRbg1348H98eoQyJRqBhbGoTg9ny
F/lKdWMjGP2v75wa5v8Bb7tahg==
      "]]}, 
    {GrayLevel[0], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], Thickness[Large], 
     LineBox[CompressedData["
1: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
SMZxGae/bOy6ffLAbStvyPYxiusaY+MZeJSYsd4b8jnHJRxGyeeDIp5c0POG
ktaGiNYRNqrkC79d0vCGqii5aavvbFxoHdJ/V8kbHq7cFfzsGxvrLpWl9Ut7
Q+OnrF+mA2z0/uk7zpzlDa8ufPKq+czGRpPl73mjXtBtvnTAsJ+NDlU56/Gz
F3z66+da2cdGv8XXZ/3X6QU/rlX16vaycfjM/nlZz73gz+5Ze26+Y6NPgbip
eq0XzJI2f63ZycbZPvJpVWVeMK/6lE1eBxvT7i0b21fgBfLebU3sdjZea9Yy
lsvwAmWW8uaMVjYyReScX53xArWWg3X0Fja67lq4+UqUFyyLLICk52zsPRDf
FRXsBfq6P6pkGtkY+1Furp+HFxh/1NePe8rGHSMHy70PeIH5+cPFEvVs9BIR
vDxk6wXWZnVakXVsDA4z3pRk7gWO4/Pyp2vYGN2pJ3LP0AsO5ltzQx6wUaHq
4ZcRHS/w2HUxc/QeGz2fZ39bqe4F/vN6FIVVbGzfd388WtELjtxVPz9YwcYb
AzvHPkt7wQkPD1leGRu/JVLb7ES94LTK7bi+EjaW62+PaBnzhIvP/0rsu8XG
8ZnSr46DnnAp3DjyzQ02LvVmi/zs8YRrOtHTttfZuMw67kHyK08oed8U3JzP
RjUnD6PNTz3h3lnKqGUeGwtXHAqQrPaEug27vetz2Why/HpwW4knPB+9NGBy
iY1Z6QUvi656QvuVL67VmWwc7b3/7ny6J/Ts1H6/Op3st2+r/4tN9IQvcwL3
lKWwcfH3O1FxJzxhpPLea50LbEy4uLYtJdQTJgSzdxQmsfGBftafUqEniDIs
nmucZePtscLyLldPkGo8szn3NBtPOC4/J7vbEyiHX9cxE9i4hRKrb73dE1SW
MY1TY8nzdsivv2TqCYt6XO5SY9io071JbnqNJ2ifua6feJyNoezxahcdTzBY
/7NY6hgbU0WTCjvUPcH4p8HSmKNsXLSdPejA8ASL3PD82UfYOJX3I6Bf1hNs
bB9zw0PZ+Ng8yeyIhCfsFpfOmghmo2PgVWfulAe4lO9QCgxko9TCz39fjXiA
Jy/1/IgfG/2lDI3OfvaAQPp7WU8fNvKdq885vvOA8Kca8V+82Bi/8N067VYP
iDnkNcfFg8ynuMsvmacecGZJWWSPgI26Uueipqo9IKVrctqRx0Y9db+O0VIP
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
Ab1I06rbpCP8D4A8RwQ=
      "]]}}, {{}, {}}},
  AspectRatio->0.2,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {True, False}},
  FrameLabel->{{None, None}, {
     FormBox[
      TagBox["\"PPM\"", HoldForm], TraditionalForm], None}},
  FrameStyle->Directive[{
     Thickness[Large], 
     GrayLevel[0]}],
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`ScaledTicks[
      "Reverse", {-#& , -#& }, "Nice", WorkingPrecision -> 
       15.954589770191003`, RotateLabel -> 0], 
      Charting`ScaledFrameTicks[{-#& , -#& }]}}, {{
     Automatic, Automatic}, {{{0., 
        FormBox["0", TraditionalForm], {0.01, 0.}}, {-1., 
        FormBox["1", TraditionalForm], {0.01, 0.}}, {-2., 
        FormBox["2", TraditionalForm], {0.01, 0.}}, {-3., 
        FormBox["3", TraditionalForm], {0.01, 0.}}, {-4., 
        FormBox["4", TraditionalForm], {0.01, 0.}}, {-5., 
        FormBox["5", TraditionalForm], {0.01, 0.}}, {-6., 
        FormBox["6", TraditionalForm], {0.01, 0.}}, {-0.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, {{
       0., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {-1., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {-2., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {-3., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {-4., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {-5., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {-6., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {-0.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}}}],
  GridLines->{{0, -1, -2, -3, -4, -5, -6}, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->750,
  LabelStyle->{Bold, 14, 
    GrayLevel[0]},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (-#& )[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (-#& )[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-6., 0.}, {-0.8053782425998921, 1.5134147724103053`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[
     "Reverse", {-#& , -#& }, "Nice", WorkingPrecision -> 15.954589770191003`,
       RotateLabel -> 0], Automatic}, {{{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}}, {-1., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {-2., 
       FormBox["2", TraditionalForm], {0.01, 0.}}, {-3., 
       FormBox["3", TraditionalForm], {0.01, 0.}}, {-4., 
       FormBox["4", TraditionalForm], {0.01, 0.}}, {-5., 
       FormBox["5", TraditionalForm], {0.01, 0.}}, {-6., 
       FormBox["6", TraditionalForm], {0.01, 0.}}, {-0.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-0.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-0.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-0.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-1.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-1.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-1.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-1.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-2.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-2.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-2.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-2.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-3.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-3.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-3.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-3.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-4.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-4.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-4.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-4.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-5.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-5.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-5.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-5.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, 
     Automatic}]]], "Output",
 CellChangeTimes->{{3.8709405773124175`*^9, 3.87094059847921*^9}},
 CellLabel->
  "Out[177]=",ExpressionUUID->"bc02be8e-0c22-4954-865f-4312ca869c8d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["STEAM", "Subsubsection",
 CellChangeTimes->{{3.7517856346602097`*^9, 3.7517856380873747`*^9}},
 CellTags->"c:78",ExpressionUUID->"11b0bc08-716e-4837-a55b-d3c98505048d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"field", ",", "nuc", ",", "bw"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"7", ",", "\"\<1H\>\"", ",", "3000"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"te", ",", "tm"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"50", ",", "100"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"out", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sys", "=", 
        RowBox[{"GetSpinSystem", "[", 
         RowBox[{"#", ",", 
          RowBox[{"CenterFrequency", "->", "4.8"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"din", ",", "struct"}], "}"}], "=", 
        RowBox[{"SimHamiltonian", "[", 
         RowBox[{"sys", ",", 
          RowBox[{"FieldStrength", "\[Rule]", "field"}], ",", 
          RowBox[{"SimNucleus", "\[Rule]", "nuc"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dout", "=", 
        RowBox[{"SequenceSteam", "[", 
         RowBox[{"din", ",", "struct", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"te", ",", "tm"}], "}"}], "/", "1000"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"SimReadout", "[", 
        RowBox[{"dout", ",", "struct", ",", 
         RowBox[{"ReadoutSamples", "\[Rule]", "2048"}], ",", 
         RowBox[{"ReadoutBandwith", "\[Rule]", "bw"}], ",", 
         RowBox[{"Linewidth", "\[Rule]", "10"}]}], "]"}]}], 
      "\[IndentingNewLine]", ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
      ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spec", "=", 
   RowBox[{"ShiftedFourier", "[", 
    RowBox[{"Total", "@", 
     RowBox[{"out", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"pl", "=", 
  RowBox[{"PlotSpectra", "[", 
   RowBox[{"spec", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "bw"}], ",", 
      RowBox[{"GetGyro", "[", 
       RowBox[{"field", ",", "nuc"}], "]"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "6"}], "}"}], ",", "Full"}], "}"}]}], ",", 
    RowBox[{"CenterFrequency", "->", "4.8"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.7481818389400015`*^9, 3.7481819043061547`*^9, {3.748182035959757*^9, 
   3.7481820635046773`*^9}, {3.748182213971154*^9, 3.7481822141298923`*^9}, {
   3.748182985022589*^9, 3.7481829851078463`*^9}, {3.748183176701327*^9, 
   3.748183191138928*^9}, {3.7481837396375275`*^9, 3.7481837399500513`*^9}, {
   3.7481848422946672`*^9, 3.748184842377087*^9}, {3.7482302286989613`*^9, 
   3.748230234199986*^9}, {3.748235208171048*^9, 3.748235241162552*^9}, 
   3.7483399007853546`*^9, {3.7483400698624706`*^9, 3.748340071613772*^9}, {
   3.748340674871582*^9, 3.748340676398965*^9}, 3.748615857818198*^9, {
   3.7517856460385566`*^9, 3.751785648340697*^9}, {3.754894903115119*^9, 
   3.7548949094661736`*^9}, {3.8374881412516994`*^9, 3.837488214103676*^9}, {
   3.8374882714432406`*^9, 3.83748827157574*^9}, {3.8454688866769295`*^9, 
   3.8454688917548285`*^9}, {3.8709405862090445`*^9, 3.8709406037443295`*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"d097a75f-b5e4-4687-abe5-6b28aa73ed5f"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {GrayLevel[0.5], PointSize[
      NCache[
       Rational[1, 180], 0.005555555555555556]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
Y4LvSq0RV/R/aHfV4xa6DgJnyXq2j7EiBQbrurVbBL7TuSx0bwfS93p/aek6
gTtMzK3rGZHDo9CiuXoC7+nJdsjbioIkNrMmawg9uTukzZf+qiZmZZ0cqSCw
+872sLZV1bwl3rj+iwSeTxjn+zuvWmVyNaSniMCTujfcmZ6p3mqR9W7PI/Cv
Wdn62afdD7nuOV7PIrDR5zPG8fPdY1HGFlfSCHxYUjsjebV7YWxSvyyFwL0P
Loo++tv9V8lPvfAEoSfdx/5e+la8q2xNPjOGiDPTmU80MWLhzVTJlHACUy2f
OI/uwNKuHGKxQf/HTX42m6xY4/4l/hBfAtuWfH9f+B+2EDvA4e1B4FeX6N/U
c2KvtA4mJ2eC3/mpyfkeEo75pLNpYUfE+78PcY/z4DMGL38YWBJYyi3OaZkX
X7zm9lnDhMiXotmE7hDA19i+zSgaEPg9d5SZqBDuDj0xLq1NzMe5MDJFmIKH
R3YMi6sT5/e1L2odoOKZwxceCikT+Lf0ocgjNLx6XuwuSf7/fp+Y+U9fBDOu
t9xkOUTMc/VHiaCtKOZxUKunP0Dkj3/4V+wjhvd2D1asixP5R2pup8fsxkco
9ueXaUS99trgxXRxbJgynz0vSOD56sn7xXuw0/vI1CkyPzDdKWvlbNiLQ7Tp
40c5ibjBzvbJLgmcUpsbOshK8AUvXKE83YcLdwj59DIT9com9d+9249rAhqc
OhmIeKNGGOXHAdw2pGDZsskHaus2y1NMUvix9EODunU+oDsk8SyXVRpP5Jtr
VPzgA8pr3PL9gjT+vDqtcP4bH7D/aMwtFjmI/1kFSeUs8kFSqp3ryaaDmP3O
H7FTH4jzz/2EWhQPYRp/hsDxd3xQVPG4d/eDQ1jmBDdn+CQfnLnSZTFjIoO1
pqqZ/V7xwa+Q1WdzkzLYWv0gnetzPqhoK9M85CuLfaq7f1oP8gHfRtitRz9k
cdw2wy9Gj/igt3XoUH3KYZzlPT6rdZ8PuuDu8Cs2OVz+2GtCuZsPwJPjslmZ
HL6+b3VY5g4f5N6Kfsi/Tx73ZCf3SdziAx+vU5ayd+TxyFfWbup1PmiXehFW
pqOA35uW3iLX80FMAcdRm1EF/PPm3ga2Gj5wkeH77umpiJm42yoZKwj+q9ua
+lYVMV/M0QsbJXxg8kr7akKqEt4/8Sxn9Rwf1M7cJWVxHcEqys6nFnMJPy4M
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
0P8Aosos2g==
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[
      NCache[
       Rational[1, 180], 0.005555555555555556]], Thickness[Tiny], 
     LineBox[CompressedData["
1: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
1XkGg23oXVlfQgfiZMBm3vreT2hHgRDfrpMy8DGxSuo32tdpsUfLcRmY/f3y
9FIjzJPa5P3Pw2TA84GFDhOdosDZW3VUBhbE26jy318VxN42LvOVgeM33h/Y
hq4Y0dl6y0sGBjpG2/jvw14Z16+/6i4DwecS4w6j/yu2Ukt3loELKu9j+O/X
vooPKiQ5yECUyGTtBbSAn69srA2Oz/3RHQVo0tt/khGWMnB96aTUY7T8urPC
gbtkoO2QuvIbtFaazDyvnTJwoq/v1Ge04Z/r0876MiBkoa02h7axXztuqysD
kXdC5CWN8XzypObj7o14PfmJg0roY2yzbkMtGcjW/fKDQCec+O81sQbbq137
di86Z/DQC61VMnBSskvwCP/96PZfVSqKMvDi4/kzMfz3oYUxZfIcGVBc4OTE
f9/avlTyFl1WBp5ue5JYhv7slZNLoslAwMZV5Cb072aVNCFJGSjx05j4hF6q
/ihRQFQGtpW5rxDgv49ONjw5vUQGxg08Hknz3z//fBs2vkAGPDR6bmrw3zdb
O/sN/pWGviTfP/z30eYV3zx6fksDueXzTXe0CyP8QOuUNHT8m/fkBDogfKlV
/VdpqFU4r5WNPtV3yaR6RBpuJvmTH6HT9BS2lQ9Kg7Nykm0H+sa1uxtu90mD
3utu4Sl0peCWNfnd0vD0oaWihCnmiXuTYma7NOi/WlLKf7/fV2/HTH4tDU6L
SEXG6MlVw+S4BmkghlJlDqMXJAYujXouDW/7m2dPo6UmFswPrpEG9SdzewrR
ChZJv7wfS4M713/FS7R2GfOra7k05C64GDiM3km9NWh/Vxp2KL3RE96FeRK8
vseyWBqeVBQlrkQf6a57Y1QoDW/qK/aboCM2Wb7UuyYNYd8yy7zRSdn9T9Zn
S8Oqz8uSz6OvzvO+r5YuDbe12+b4f99xz3n2luJF9GTjjy503bPTV5nnsH/d
v4T/RXcqUtOl4qThyiKtDK4Z5snpa+dETkrD/FXPzXagZ0fXnFpwXBoGVFuz
vdHLTJ8cmwmVhuADefEpaLkSY/+JQGkIJ3JlqtBrSO8ODflIQ9UrQ5NPaD1/
N8deT2moWay5Qmw35kn7lFW7mzSIPGTc1ka7akeZNjpJg2Rg96ATOihdTL/W
HvufebjlLPrMbMbGR9bSUNA76vsQfdlBWb3UQhoi5l9/PYguggcrCk2lIfOl
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

      "]]}, 
    {GrayLevel[0], PointSize[
      NCache[
       Rational[1, 180], 0.005555555555555556]], Thickness[Large], 
     LineBox[CompressedData["
1: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
hoafbeeUeZJsMG9X8dRNGvaKsu3sSLbyfnd+7DoN983IMYFklwdE1nAJDY8u
fK6qS/Ih9X/JfZdp6GkY57WK5Kjk5KPPLtDw7XyNfjWS08fkQtvOkO8reJ69
guSL26+wG7Jo+GBnwSlNkm9W6vlUp9PwYMOTXn2SWyiNrteTaahlWHhoE8k9
AjvHwnga7qQlOOwk+VNPn9W5GNI+Kp+TAkj+Y+S/MTOChsIP3JTiSV5ybmpd
UjAND6XGLCskWelfrFYMl4bGhyV8HpKsvV9yecghGlbr9Kh8I9ms6TyN7UdD
6EA7BdKejss1JX28aJj19MHnbSR7x9csdHOnoWyTyJyjJAd/3PLP0ZmGtcnF
6XUkJ1q/+GHtRMPy4V8F0ySfuebx2Ww7DSvvOZmYkP6+Jj4+ZGhNwyO3jTxj
Sa4nIl5qb6bhwhhjWifJnc8WdaptpKHuwUUHGWR8Da093aJoTMPMpkO7+SRP
Zi+/K72Ohp3udh87SBaZrryxeA0Nmyhlyppk/Mq6mJYIa9Jwal3xkjSSV9a3
X5hWo6EjK/zaFMnrGXuzv7FouLwqStSLzA+bmJGUEQUaGnxRX/GCZLd3/NgB
Kg3v7ZWSsCbzi71ZOKxbioZn2r603ic5piiNaF9Kw3ktqTstyPzMXKTo2yxK
w7K1o40PSb4ccNWtdh4NX01RKTvI/K7qMHCq/CePpVF29m9IfqjdYl08LY8z
QSNHeGR9eHVyh9mFH/J4w2/ftcVkPfk8OWiQPS6P67x39RaT/HfnodWpo/J4
4Xa6lA1ZjyTuzCw/9l4e1VN/uX4nmUU7Tg9/I4+7GnMbz5P1TDdCRorbJ4+R
cde22pP1zmKgQNT/P3lcrpkys4Csj7s26gjt75JHkS93B5tI9i2o/7mrXR51
Sj/POUbW09D5Nl9sH8ij3ZOvPtZk/U32efnWokkee5c+oMmS9Tnvofcr43p5
zLDPVx0h+fqqyU7dO+T+5Gfp9WR9b0g50qp+Ux4FV95655L1/9nXpfXM6/K4
/WDs9TBSH97Zn71JLZHHFUQ23+P/enJj5VXxy+Q6TavJltSbhTJV+SIX5PFT
RuJFU1KP5IM3nZ7NlcfopwxFA1KvNF49TZ08JY+BBdmma0k9MzF2PzaaJo9p
zQ8pBqT+2eV9DhtKksfrP1oum5L6uF8olPMyTh5TlV78tSX1k+OxwK/ziDzm
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
      "]]}}, {{}, {}}},
  AspectRatio->0.2,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {True, False}},
  FrameLabel->{{None, None}, {
     FormBox[
      TagBox["\"PPM\"", HoldForm], TraditionalForm], None}},
  FrameStyle->Directive[{
     Thickness[Large], 
     GrayLevel[0]}],
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`ScaledTicks[
      "Reverse", {-#& , -#& }, "Nice", WorkingPrecision -> 
       15.954589770191003`, RotateLabel -> 0], 
      Charting`ScaledFrameTicks[{-#& , -#& }]}}, {{
     Automatic, Automatic}, {{{0., 
        FormBox["0", TraditionalForm], {0.01, 0.}}, {-1., 
        FormBox["1", TraditionalForm], {0.01, 0.}}, {-2., 
        FormBox["2", TraditionalForm], {0.01, 0.}}, {-3., 
        FormBox["3", TraditionalForm], {0.01, 0.}}, {-4., 
        FormBox["4", TraditionalForm], {0.01, 0.}}, {-5., 
        FormBox["5", TraditionalForm], {0.01, 0.}}, {-6., 
        FormBox["6", TraditionalForm], {0.01, 0.}}, {-0.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, {{
       0., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {-1., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {-2., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {-3., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {-4., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {-5., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {-6., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {-0.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}}}],
  GridLines->{{0, -1, -2, -3, -4, -5, -6}, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->750,
  LabelStyle->{Bold, 14, 
    GrayLevel[0]},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (-#& )[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (-#& )[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-6., 0.}, {-0.7544246103046199, 1.4854306634725858`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[
     "Reverse", {-#& , -#& }, "Nice", WorkingPrecision -> 15.954589770191003`,
       RotateLabel -> 0], Automatic}, {{{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}}, {-1., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {-2., 
       FormBox["2", TraditionalForm], {0.01, 0.}}, {-3., 
       FormBox["3", TraditionalForm], {0.01, 0.}}, {-4., 
       FormBox["4", TraditionalForm], {0.01, 0.}}, {-5., 
       FormBox["5", TraditionalForm], {0.01, 0.}}, {-6., 
       FormBox["6", TraditionalForm], {0.01, 0.}}, {-0.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-0.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-0.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-0.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-1.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-1.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-1.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-1.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-2.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-2.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-2.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-2.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-3.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-3.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-3.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-3.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-4.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-4.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-4.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-4.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-5.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-5.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-5.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-5.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, 
     Automatic}]]], "Output",
 CellChangeTimes->{3.8709406106942453`*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"18767010-9b1b-4d9b-834b-2decdda4c4dc"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fat STEAM with various TEs", "Subsection",
 CellChangeTimes->{{3.751785834342079*^9, 3.7517858461181536`*^9}},
 CellTags->"c:79",ExpressionUUID->"6705b400-369d-4acb-94b1-826717b38934"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "simuluate", " ", "STEAM", " ", "j", " ", "coupling", " ", "for", " ", 
    "various", " ", "TEs"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"TEs", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"10", ",", "100", ",", "10"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"field", ",", "nuc", ",", "bw"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"3", ",", "\"\<1H\>\"", ",", "2500"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"out", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"din", ",", "struct"}], "}"}], "=", 
          RowBox[{"SimHamiltonian", "[", 
           RowBox[{"#", ",", 
            RowBox[{"FieldStrength", "\[Rule]", "field"}], ",", 
            RowBox[{"SimNucleus", "\[Rule]", "nuc"}], ",", 
            RowBox[{"CenterFrequency", "->", "4.8"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"dout", "=", 
             RowBox[{"SequenceSteam", "[", 
              RowBox[{"din", ",", "struct", ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", "16"}], "}"}], "/", "1000"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"SimReadout", "[", 
             RowBox[{"dout", ",", "struct", ",", 
              RowBox[{"ReadoutSamples", "\[Rule]", "1024"}], ",", 
              RowBox[{"ReadoutBandwith", "\[Rule]", "bw"}], ",", 
              RowBox[{"Linewidth", "\[Rule]", "20"}], ",", 
              RowBox[{"LinewidthShape", "->", "\"\<Voigt\>\""}]}], "]"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "TEs"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ")"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
        ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"spec", "=", 
     RowBox[{"ShiftedFourier", "/@", 
      RowBox[{"Total", "[", 
       RowBox[{"out", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}], "]"}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.746847702956359*^9, 3.746847705100912*^9}, {
   3.7468479330417895`*^9, 3.746847952202388*^9}, {3.746848216013152*^9, 
   3.746848222191821*^9}, {3.746867356897272*^9, 3.7468673656261845`*^9}, {
   3.7469409624679255`*^9, 3.746940997218149*^9}, {3.7469412837966795`*^9, 
   3.7469413006612544`*^9}, {3.746947619898952*^9, 3.746947642884818*^9}, {
   3.7469743198506145`*^9, 3.7469743256202364`*^9}, {3.746974428086774*^9, 
   3.746974429134055*^9}, {3.74702703695601*^9, 3.747027064566635*^9}, {
   3.747027165936557*^9, 3.7470271708788805`*^9}, 3.7470273367688255`*^9, {
   3.7470347282528763`*^9, 3.747034737261882*^9}, {3.74711149700712*^9, 
   3.747111525534052*^9}, 3.7471116676340513`*^9, {3.747111911059723*^9, 
   3.747111917714374*^9}, {3.747114588771387*^9, 3.7471146516068797`*^9}, {
   3.7471166314768953`*^9, 3.747116631987259*^9}, {3.747127234573103*^9, 
   3.7471272350985055`*^9}, {3.7471306683493767`*^9, 3.747130668924918*^9}, {
   3.7471315273127337`*^9, 3.7471315516455436`*^9}, {3.7471321219486876`*^9, 
   3.7471321847326574`*^9}, {3.7476337305343657`*^9, 
   3.7476337744916043`*^9}, {3.747633832030656*^9, 3.747633836796017*^9}, {
   3.7476342984003572`*^9, 3.747634306030753*^9}, {3.747634466656008*^9, 
   3.747634468544018*^9}, {3.747635769872473*^9, 3.747635780432063*^9}, {
   3.7476363974099693`*^9, 3.747636398321417*^9}, {3.74763650353691*^9, 
   3.7476365081429768`*^9}, {3.7476393842920556`*^9, 3.747639385170397*^9}, {
   3.74764448938281*^9, 3.7476444908432393`*^9}, {3.7476477306289525`*^9, 
   3.7476477314119787`*^9}, {3.747647779191697*^9, 3.7476477810777893`*^9}, {
   3.747647829237409*^9, 3.7476478295081244`*^9}, 3.7476500709523573`*^9, {
   3.747654333852504*^9, 3.7476543406161475`*^9}, {3.747654371015292*^9, 
   3.7476543755804176`*^9}, {3.747654422730257*^9, 3.747654429002034*^9}, {
   3.7476675470303087`*^9, 3.7476675588223953`*^9}, 3.7477280521847553`*^9, 
   3.7477356641071596`*^9, {3.7477361631787443`*^9, 3.7477361853068104`*^9}, {
   3.7477363563671713`*^9, 3.7477364114518213`*^9}, {3.747739148767829*^9, 
   3.747739149101492*^9}, {3.7479780758682137`*^9, 3.7479780763334537`*^9}, {
   3.7479781439989133`*^9, 3.747978148798498*^9}, 3.7479792037889395`*^9, {
   3.747979391919927*^9, 3.747979392126504*^9}, {3.7479799066708283`*^9, 
   3.747979907452491*^9}, {3.747980692702307*^9, 3.7479807026207476`*^9}, 
   3.7479808276809664`*^9, {3.7479809349769087`*^9, 3.7479809358236504`*^9}, {
   3.7479809894711394`*^9, 3.7479810158581653`*^9}, {3.747981348595498*^9, 
   3.7479813646464586`*^9}, {3.74798319683325*^9, 3.7479832002891583`*^9}, 
   3.7479842186745553`*^9, {3.747995457844248*^9, 3.747995510024599*^9}, 
   3.7479958258832617`*^9, {3.74807035312002*^9, 3.748070356575066*^9}, {
   3.748070871569313*^9, 3.748070907324333*^9}, {3.748070996381597*^9, 
   3.7480709968789206`*^9}, {3.748071062064003*^9, 3.7480710622434826`*^9}, {
   3.7480715415038767`*^9, 3.748071542000207*^9}, {3.748155127640109*^9, 
   3.748155141911248*^9}, {3.748155187464883*^9, 3.7481551884560943`*^9}, {
   3.748155911609275*^9, 3.7481559358457966`*^9}, {3.74815596876221*^9, 
   3.748155970425609*^9}, {3.748163734305396*^9, 3.748163734499945*^9}, {
   3.7481638602877836`*^9, 3.7481638611199694`*^9}, {3.7481639585134196`*^9, 
   3.748164021183906*^9}, {3.7481641352187877`*^9, 3.7481641355206037`*^9}, 
   3.748164233552312*^9, 3.748164520050725*^9, {3.7481650363078775`*^9, 
   3.748165037298518*^9}, {3.748183627588142*^9, 3.748183630401523*^9}, {
   3.74818374905184*^9, 3.7481837531270247`*^9}, {3.748184010324383*^9, 
   3.7481840350810156`*^9}, {3.748184901581254*^9, 3.7481849016752176`*^9}, {
   3.748184963572925*^9, 3.748185002889196*^9}, {3.748185244432699*^9, 
   3.748185244495197*^9}, {3.7481853966725035`*^9, 3.748185409793804*^9}, 
   3.7482356701465745`*^9, {3.748236803697485*^9, 3.748236935330164*^9}, 
   3.748236996960808*^9, {3.7482372353783035`*^9, 3.7482372416149197`*^9}, 
   3.7482384531850214`*^9, {3.7482385653166056`*^9, 3.748238584817676*^9}, 
   3.7482387650455165`*^9, {3.748238885012453*^9, 3.7482388851718793`*^9}, {
   3.748239053475803*^9, 3.7482390569960413`*^9}, {3.7482392158578467`*^9, 
   3.74823921592115*^9}, 3.748241105142406*^9, {3.748241442903722*^9, 
   3.748241442947858*^9}, 3.7482516734992294`*^9, {3.748260670691536*^9, 
   3.7482606708134456`*^9}, 3.7483232357717247`*^9, {3.7483237520266685`*^9, 
   3.7483237571758156`*^9}, {3.7483238221696987`*^9, 3.748323840248466*^9}, {
   3.748340712448462*^9, 3.7483407347322335`*^9}, 3.7484211561194906`*^9, {
   3.74842123880229*^9, 3.7484213926426015`*^9}, {3.748421629781578*^9, 
   3.7484216299536457`*^9}, {3.748429378027416*^9, 3.748429382407913*^9}, {
   3.7484294783384333`*^9, 3.7484295103613825`*^9}, 3.7486823458223124`*^9, 
   3.7486846945995955`*^9, {3.74868594788026*^9, 3.74868594808681*^9}, {
   3.7486859934652977`*^9, 3.748685994134081*^9}, 3.748690600121831*^9, {
   3.7486907570038414`*^9, 3.748690766999828*^9}, {3.7517857312706747`*^9, 
   3.751785742947794*^9}, {3.7548949310998926`*^9, 3.7548949712902346`*^9}, {
   3.837488244180147*^9, 3.837488265541151*^9}, 3.837488302136152*^9, {
   3.837488392412905*^9, 3.837488395635414*^9}, {3.8374884264035497`*^9, 
   3.837488440679239*^9}, {3.8374885402627897`*^9, 3.8374885476874027`*^9}, {
   3.8454689717438955`*^9, 3.845468975459876*^9}, {3.8655858381860075`*^9, 
   3.865585838647933*^9}, 3.8709406392146215`*^9, {3.8709407382454824`*^9, 
   3.870940745792889*^9}, {3.870940921280701*^9, 3.8709409503992786`*^9}, {
   3.8709411212486787`*^9, 3.870941130546567*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"3edd32fa-7110-4380-a1ac-e91a7e073cb0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"define", " ", "the", " ", "T2", " ", "relaxation"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"t2sim", "=", "90"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T2relax", "=", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "TEs"}], "/", "t2sim"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"max", "=", 
     RowBox[{
      RowBox[{"T2relax", "[", 
       RowBox[{"[", "1", "]"}], "]"}], 
      RowBox[{"Max", "[", 
       RowBox[{"Abs", "@", "spec"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"pls", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PlotSpectra", "[", 
         RowBox[{
          RowBox[{"#1", " ", "#2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "bw"}], ",", 
            RowBox[{"GetGyro", "[", 
             RowBox[{"field", ",", "nuc"}], "]"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", ".5"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"Method", "->", "\"\<Re\>\""}], ",", 
          RowBox[{"CenterFrequency", "->", "4.8"}]}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"spec", "/", "max"}], ",", "T2relax"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7482369404648113`*^9, 3.7482369435500307`*^9}, {
   3.7482369917619576`*^9, 3.74823700190097*^9}, {3.748237046433651*^9, 
   3.748237163011227*^9}, {3.7482372480360584`*^9, 3.7482372551559963`*^9}, 
   3.7482386052210474`*^9, {3.7483234243515415`*^9, 3.748323428072304*^9}, {
   3.748325389244517*^9, 3.7483253896906757`*^9}, 3.748325462450378*^9, {
   3.7483255575170727`*^9, 3.7483255582841234`*^9}, {3.7483411264195046`*^9, 
   3.7483411281903915`*^9}, {3.748343977350229*^9, 3.748344058210185*^9}, {
   3.748344088963969*^9, 3.7483440922413635`*^9}, 3.748421279533637*^9, {
   3.7484213472454386`*^9, 3.748421385632394*^9}, {3.748421426973504*^9, 
   3.7484215145800934`*^9}, {3.748429497485859*^9, 3.748429515080805*^9}, {
   3.7484296177337627`*^9, 3.748429617827312*^9}, {3.748429653038226*^9, 
   3.748429655905289*^9}, {3.748431245924173*^9, 3.7484312512832603`*^9}, 
   3.7484313278619294`*^9, {3.7486670014810476`*^9, 3.748667008235139*^9}, 
   3.748667040122573*^9, {3.751785801650653*^9, 3.7517858077166452`*^9}, {
   3.7517858690923147`*^9, 3.7517858693640347`*^9}, {3.754894949211228*^9, 
   3.754894957913658*^9}, {3.8374883253961544`*^9, 3.837488332564783*^9}, {
   3.837488368283723*^9, 3.8374883716035175`*^9}, {3.8374884800688906`*^9, 
   3.8374885281168756`*^9}, 3.87094075806684*^9, {3.870940993007964*^9, 
   3.870940993264604*^9}, {3.8709412108517323`*^9, 3.8709412110239143`*^9}},
 CellLabel->
  "In[232]:=",ExpressionUUID->"1aef8f21-e40a-49dc-bf08-ddabcbdf3501"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"pls", "[", 
    RowBox[{"[", "n", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "\"\<echo time\>\""}], "}"}], ",", "1", ",", 
     RowBox[{"Length", "[", "pls", "]"}], ",", "1"}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.754894922908832*^9, 3.754894926506301*^9}, {
  3.754894978542844*^9, 3.754895009340332*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"04a56dc3-b7cd-4cbf-ac36-5103d5b1f965"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cardiac data processing and simulation", "Chapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7584420169007683`*^9, 
   3.758442023511436*^9}},ExpressionUUID->"b6662280-803b-4ab0-8481-\
332a70f0e978"],

Cell[CellGroupData[{

Cell["Simulate Cardiac Shape", "Subsection",
 CellChangeTimes->{{3.758442083934099*^9, 3.7584420913366747`*^9}},
 CellTags->"c:80",ExpressionUUID->"6a10872d-dcba-422d-a092-ff6bf02d5699"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"73", ",", "2.85", ",", "2.8", ",", "0.02", ",", "0.38"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"62.9", ",", "3.35", ",", "7.9", ",", "0.17"}], "}"}], ",", 
     "106"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6711726287505345`*^9, 3.671172644021535*^9}, 
   3.6797325739582977`*^9, {3.7583551753746085`*^9, 3.758355194706151*^9}},
 CellLabel->
  "In[474]:=",ExpressionUUID->"22f5062f-e958-45c9-8d1c-7514a2cedd75"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mask", ",", "vox", ",", "pars"}], "}"}], "=", 
   RowBox[{"CreateHeart", "[", "pars", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.671170073521743*^9, {3.679738162513242*^9, 3.679738179287202*^9}},
 CellLabel->
  "In[475]:=",ExpressionUUID->"da2e39d9-15b9-45d3-b9f6-8a42e2783620"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"voxn", "=", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Round", "@", 
    RowBox[{"RescaleData", "[", 
     RowBox[{"mask", ",", 
      RowBox[{"{", 
       RowBox[{"vox", ",", "voxn"}], "}"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"vox", "=", "voxn"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.6691045104681473`*^9, {3.66910496414051*^9, 3.6691049808451805`*^9}, {
   3.6711694406624904`*^9, 3.671169475574981*^9}, {3.671170020538472*^9, 
   3.6711700775777426`*^9}, {3.671184338392166*^9, 3.671184365792906*^9}, 
   3.671184409626419*^9, {3.7583529541897182`*^9, 3.7583529581785526`*^9}, {
   3.7583531072015476`*^9, 3.7583531097914815`*^9}, 3.758355257583712*^9},
 CellLabel->
  "In[476]:=",ExpressionUUID->"84325218-4520-4673-b3ba-afbcc56e439e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"maskR", "=", 
   RowBox[{"Round", "[", 
    RowBox[{"DataTransformation", "[", 
     RowBox[{"mask", ",", "vox", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10", ",", "10"}], "}"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7550036180647516`*^9, 3.7550036920620947`*^9}, {
   3.755004077409649*^9, 3.7550041133533134`*^9}, 3.7554934700311456`*^9, {
   3.755493502350135*^9, 3.7554935405656757`*^9}, 3.7554972023038435`*^9, {
   3.755497234848613*^9, 3.7554972378395543`*^9}, {3.758355062662741*^9, 
   3.758355112130682*^9}, 3.75835525956623*^9, 3.758442139575473*^9},
 CellLabel->
  "In[479]:=",ExpressionUUID->"4f50d823-b631-4620-97d5-9d9b11e937c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{"mask", " ", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"50", ",", "10"}], "]"}], ",", 
      RowBox[{"Dimensions", "[", "mask", "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758443079672928*^9, 3.758443105879885*^9}, {
  3.7584511955891147`*^9, 3.758451243536791*^9}},
 CellLabel->
  "In[480]:=",ExpressionUUID->"44816932-b5e2-4726-bf22-347533cdb0c9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Analyse Cardiac shape", "Subsection",
 CellChangeTimes->{{3.7584421602015347`*^9, 3.7584421684585533`*^9}},
 CellTags->"c:81",ExpressionUUID->"6cd6b54a-4e4f-4aea-a7ef-4153f6ba4485"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"off", ",", "vec", ",", "inout", ",", "pl"}], "}"}], "=", 
   RowBox[{"CentralAxes", "[", 
    RowBox[{"mask", ",", "vox", ",", 
     RowBox[{"ShowPlot", "->", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"off", ",", "vec", ",", "inout", ",", "pl"}], "}"}], "=", 
   RowBox[{"CentralAxes", "[", 
    RowBox[{"maskR", ",", "vox", ",", 
     RowBox[{"ShowPlot", "->", "True"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.758353130065507*^9, 3.758353147954149*^9}, {
  3.7583550943091393`*^9, 3.758355096722599*^9}, {3.758443040536918*^9, 
  3.7584430641494007`*^9}, {3.8656545115045977`*^9, 3.865654518801812*^9}},
 CellLabel->
  "In[551]:=",ExpressionUUID->"4ae0be06-8a05-47af-8c0b-17138c61cb58"],

Cell["Calculate Wall distance map", "Text",
 CellChangeTimes->{{3.7584421911028123`*^9, 
  3.758442200666338*^9}},ExpressionUUID->"ee141871-d592-4801-b4c6-\
06c9322a3a60"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"wall", ",", "der", ",", "fit"}], "}"}], "=", 
   RowBox[{"CalculateWallMap", "[", 
    RowBox[{"maskR", ",", "vox", ",", 
     RowBox[{"ShowPlot", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6711700713787427`*^9, 3.6711700745297427`*^9}, {
   3.671170685798001*^9, 3.6711706882142425`*^9}, {3.6711711323666534`*^9, 
   3.671171133541771*^9}, {3.671171315428958*^9, 3.671171315683983*^9}, {
   3.671184389482274*^9, 3.6711844172556562`*^9}, {3.6797384566840677`*^9, 
   3.679738458062146*^9}, {3.679738548876341*^9, 3.679738549318366*^9}, {
   3.7583529454490724`*^9, 3.758352946378356*^9}, 3.758352988257947*^9, 
   3.7583531242259703`*^9, {3.7583533925323286`*^9, 3.7583533930065994`*^9}, {
   3.758353722052821*^9, 3.7583537247038784`*^9}, 3.758354258037384*^9, 
   3.758354777272771*^9, 3.758355318565279*^9, {3.7584526895705156`*^9, 
   3.7584526911680527`*^9}, {3.798870015193198*^9, 3.798870017479393*^9}},
 CellLabel->
  "In[553]:=",ExpressionUUID->"eef5b238-54fe-43d1-bd93-2cc99019cdde"],

Cell["Calculate the myocardial coordinate system.", "Text",
 CellChangeTimes->{{3.7584421911028123`*^9, 3.758442200666338*^9}, {
  3.758542044128895*^9, 
  3.7585420520169334`*^9}},ExpressionUUID->"86ae354a-5496-40d5-835c-\
bbdc239e0f78"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rad", ",", "nor", ",", "cir"}], "}"}], ",", "plots"}], "}"}], 
   "=", 
   RowBox[{"CardiacCoordinateSystem", "[", 
    RowBox[{"maskR", ",", "vox", ",", 
     RowBox[{"ShowPlot", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7585419984134264`*^9, 3.7585420150426145`*^9}, {
  3.798870030593651*^9, 3.79887003772896*^9}},
 CellLabel->
  "In[557]:=",ExpressionUUID->"c47fd3a1-5f7e-4d66-8267-f71f16f1cd07"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cardiac Segmentation", "Subsection",
 CellChangeTimes->{{3.7584525644687185`*^9, 3.758452569896508*^9}},
 CellTags->"c:82",ExpressionUUID->"ea78aaa4-62b6-43d1-8ebd-0d555a671dc5"],

Cell[CellGroupData[{

Cell["perform segmentation", "Subsubsection",
 CellChangeTimes->{{3.758452603945456*^9, 3.758452608436533*^9}},
 CellTags->"c:83",ExpressionUUID->"fe1a8b13-333a-4024-9b40-6c8541119d74"],

Cell["\<\
Segment the hart according to the AH17 model and provide the segments as \
masks and radial sampleling points\
\>", "Text",
 CellChangeTimes->{{3.75845099394211*^9, 
  3.7584510201006393`*^9}},ExpressionUUID->"f9338d84-3437-449b-8a9e-\
62f482b4cfcf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"segmask", ",", "segang", ",", 
     RowBox[{"{", 
      RowBox[{"points", ",", "slices"}], "}"}]}], "}"}], "=", 
   RowBox[{"CardiacSegment", "[", 
    RowBox[{"dat", ",", "mask", ",", "off"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584429249714117`*^9, 3.7584429280846834`*^9}, {
  3.7584431103117285`*^9, 3.7584431337012405`*^9}},
 CellLabel->
  "In[559]:=",ExpressionUUID->"33509e0d-e0ac-4c7c-b9c9-867caa05b830"],

Cell["Plot The masks", "Text",
 CellChangeTimes->{{3.758451023845028*^9, 
  3.7584510285338435`*^9}},ExpressionUUID->"76d3418d-f144-42c4-8284-\
ff4c2b7979a6"],

Cell[BoxData[
 RowBox[{"PlotSegmentMask", "[", 
  RowBox[{"mask", ",", "segmask", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.758450904627673*^9, 3.7584509230557327`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"6eb068fe-9f84-4efd-b749-d180d41ea529"],

Cell["Plot the radial samples", "Text",
 CellChangeTimes->{{3.7584510309326878`*^9, 
  3.758451038916531*^9}},ExpressionUUID->"0cfab279-b4c7-44c9-9d88-\
d558f0a95c00"],

Cell[BoxData[
 RowBox[{"PlotSegments", "[", 
  RowBox[{"mask", ",", "dat", ",", "segang"}], "]"}]], "Input",
 CellChangeTimes->{{3.758450944853326*^9, 3.758450960033723*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"9a749ece-1497-44de-9d20-8276379966d7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Analyse data based on segmentation", "Subsubsection",
 CellChangeTimes->{{3.7584526136039176`*^9, 3.7584526254543796`*^9}},
 CellTags->"c:84",ExpressionUUID->"10f96f22-e10c-41bb-8f35-b9a1e773fe6a"],

Cell["Use the Radial samples to sample a dataset", "Text",
 CellChangeTimes->{{3.7584510452203364`*^9, 3.7584510649454217`*^9}, 
   3.7584525493282986`*^9},ExpressionUUID->"9b1bd386-1371-4f5e-8b89-\
df8892452f7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MeanStd", "[", 
    RowBox[{"GetMaskData", "[", 
     RowBox[{"dat", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
  "segmask"}]], "Input",
 CellChangeTimes->{{3.7584510677161164`*^9, 3.7584511118888845`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"68b4bbc1-c884-4771-a4a4-89c7c31471d7"],

Cell[BoxData[
 RowBox[{"Hist", "[", 
  RowBox[{"GetMaskData", "[", 
   RowBox[{"dat", ",", "mask"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.75845117163688*^9, 3.7584511860977283`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"9237ea30-acbb-44b6-ae7b-59a12af15f19"],

Cell[BoxData[
 RowBox[{"TableForm", "@", 
  RowBox[{"GetMaskMeans", "[", 
   RowBox[{"dat", ",", 
    RowBox[{"Transpose", "[", "segmask", "]"}], ",", "\"\<noise\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7584511158445263`*^9, 3.7584511463046584`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"aeacb816-877d-4070-923e-0cb7b292d179"],

Cell["Perform Radial sampling of data based on the segmentation", "Text",
 CellChangeTimes->{{3.758452144548445*^9, 
  3.758452161909641*^9}},ExpressionUUID->"5d1a0efe-d941-4939-ae1e-\
441bfbb8a97a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pts", ",", "radSamp"}], "}"}], "=", 
   RowBox[{"RadialSample", "[", 
    RowBox[{"mask", ",", "dat", ",", "segang"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758443213356582*^9, 3.758443259558839*^9}, {
  3.75845127304208*^9, 3.7584512994885883`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"50655e5f-6b23-440f-9239-f6decae57cbd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Visualize results", "Subsubsection",
 CellChangeTimes->{{3.7584526331563873`*^9, 3.758452643792627*^9}},
 CellTags->"c:85",ExpressionUUID->"0428555f-bf06-485e-bd86-110e5b03fd5d"],

Cell["\<\
Visualisation can be done using Busleyeplots or transmural profiles\
\>", "Text",
 CellChangeTimes->{{3.758452171971097*^9, 
  3.7584521947412176`*^9}},ExpressionUUID->"de8c27c7-f11b-40ba-bc10-\
c57fae6efe95"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"radSampF", "=", 
   RowBox[{"Flatten", "/@", "radSamp"}]}], ";"}], "\n", 
 RowBox[{"BullseyePlot", "[", 
  RowBox[{"radSampF", ",", 
   RowBox[{"BullPlotMethod", "\[Rule]", "\"\<Static\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.758452108915594*^9, 3.758452131439727*^9}, 
   3.7584521693298206`*^9, {3.758452245779707*^9, 3.758452248678297*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"a8fa823f-5049-4764-952f-4982177a5eb8"],

Cell[BoxData[
 RowBox[{"BullseyePlot", "[", 
  RowBox[{"radSampF", ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7584532873976264`*^9, 3.7584532914109397`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"2a2cc6eb-c726-4d33-8a51-fd9f5741739f"],

Cell["Make a trans mural plot of the data for segment 5", "Text",
 CellChangeTimes->{{3.758452358196032*^9, 3.758452382862898*^9}, {
  3.7584524245605936`*^9, 
  3.7584524246418853`*^9}},ExpressionUUID->"58fb01eb-5f6b-4f00-a0d7-\
e39e5bdc8042"],

Cell[BoxData[
 RowBox[{"TransmuralPlot", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"radSamp", "[", 
     RowBox[{"[", "5", "]"}], "]"}], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7584523162289815`*^9, 3.7584523486908674`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"e0072549-5fd7-4ee8-bfdd-74509f90111a"],

Cell["Make a trans mural plot of the wall distance map", "Text",
 CellChangeTimes->{{3.758452394069051*^9, 
  3.758452421469365*^9}},ExpressionUUID->"1b39c1fa-f998-4e08-a4f1-\
d548eb3441f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"wall", ",", "der"}], "}"}], "=", 
   RowBox[{"CalculateWallMap", "[", 
    RowBox[{"mask", ",", "vox", ",", 
     RowBox[{"ShowFit", "\[Rule]", "False"}], ",", 
     RowBox[{"MaskWallMap", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6711700713787427`*^9, 3.6711700745297427`*^9}, {
   3.671170685798001*^9, 3.6711706882142425`*^9}, {3.6711711323666534`*^9, 
   3.671171133541771*^9}, {3.671171315428958*^9, 3.671171315683983*^9}, {
   3.671184389482274*^9, 3.6711844172556562`*^9}, {3.6797384566840677`*^9, 
   3.679738458062146*^9}, {3.679738548876341*^9, 3.679738549318366*^9}, {
   3.7583529454490724`*^9, 3.758352946378356*^9}, 3.758352988257947*^9, 
   3.7583531242259703`*^9, {3.7583533925323286`*^9, 3.7583533930065994`*^9}, {
   3.758353722052821*^9, 3.7583537247038784`*^9}, 3.758354258037384*^9, 
   3.758354777272771*^9, 3.758355318565279*^9, {3.7584526895705156`*^9, 
   3.7584527190887866`*^9}, {3.7584539817336683`*^9, 3.758453985428482*^9}, {
   3.7584541340364633`*^9, 3.7584541548380938`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"ec281848-13c5-468f-8682-1fe31a677497"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pts", ",", "wallSamp"}], "}"}], "=", 
   RowBox[{"RadialSample", "[", 
    RowBox[{"mask", ",", 
     RowBox[{"100", "wall"}], ",", "segang"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584524090245485`*^9, 3.7584524132972326`*^9}, {
  3.7584524654917526`*^9, 3.758452494177825*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"352e5c6f-0915-4a3d-b3e0-c936c5c3b118"],

Cell[BoxData[
 RowBox[{"TransmuralPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"wallSamp", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", "1"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "100"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7584523162289815`*^9, 3.7584523486908674`*^9}, {
  3.7584524360667057`*^9, 3.7584524427690344`*^9}, {3.7584524880681143`*^9, 
  3.7584525053482847`*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"0b24b278-9787-4678-90fa-fb2efe7345ec"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.870330780722248*^9},ExpressionUUID->"d4defec7-9941-4d35-9eb4-\
78fe131065cf"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1904, 1101},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{
 "DocuToolsSettings" -> {
   "$ApplicationName" -> "QMRITools", "$LinkBase" -> "QMRITools", 
    "$DocumentationDirectory" -> 
    "D:\\werk\\workspace\\QMRITools\\QMRITools\\Documentation\\English\\", 
    "$ApplicationDirectory" -> "D:\\werk\\workspace\\QMRITools\\QMRITools"}, 
  "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
Magnification:>1. Inherited,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"51f5dbed-bdd4-4eff-9933-ee2bccf2ca77"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "c:1"->{
  Cell[580, 22, 181, 2, 98, "Title",ExpressionUUID->"934d8265-4fcc-4427-9f34-640074773381",
   CellTags->"c:1"]},
 "c:2"->{
  Cell[1825, 52, 245, 3, 54, "Subsection",ExpressionUUID->"d9089451-56b6-4385-8261-4b613f418e39",
   CellTags->"c:2"]},
 "c:3"->{
  Cell[173001, 2984, 229, 3, 54, "Subsection",ExpressionUUID->"39e70345-88c4-43ed-a9b1-cbbbf33d0989",
   CellTags->"c:3"]},
 "c:4"->{
  Cell[173866, 3007, 196, 2, 38, "Subsection",ExpressionUUID->"1037c5ba-e19a-4732-8360-f60e7a2fa01d",
   CellTags->"c:4"]},
 "c:5"->{
  Cell[176364, 3068, 173, 2, 38, "Subsection",ExpressionUUID->"8ee5c0ae-81ad-4d98-953f-c7e16140406d",
   CellTags->"c:5"]},
 "c:6"->{
  Cell[203737, 3539, 177, 2, 54, "Subsection",ExpressionUUID->"1e0a6fa4-16c6-4324-b877-be71023bb362",
   CellTags->"c:6"]},
 "c:7"->{
  Cell[205877, 3601, 234, 3, 38, "Subsection",ExpressionUUID->"ef8f60c6-1123-44e0-aa4c-01d9fab680a3",
   CellTags->"c:7"]},
 "c:8"->{
  Cell[210380, 3724, 202, 2, 38, "Subsection",ExpressionUUID->"b78c9120-ccf2-40e5-87d7-a484213417b3",
   CellTags->"c:8"]},
 "c:9"->{
  Cell[222665, 4012, 179, 2, 38, "Subsection",ExpressionUUID->"0d830d7c-dc92-4a0f-96b0-5cb8ad6ed729",
   CellTags->"c:9"]},
 "c:20"->{
  Cell[224857, 4070, 181, 2, 38, "Subsection",ExpressionUUID->"f6a0af4d-c709-4e10-972b-30d8c0b63b74",
   CellTags->"c:20"]},
 "c:10"->{
  Cell[228189, 4169, 172, 2, 54, "Subsection",ExpressionUUID->"d51e43d8-34ee-4df9-8bf3-5b69733ed3ff",
   CellTags->"c:10"]},
 "c:11"->{
  Cell[228386, 4175, 181, 2, 45, "Subsubsection",ExpressionUUID->"968fa70b-c4b4-4d48-a949-8da4355d6428",
   CellTags->"c:11"]},
 "c:12"->{
  Cell[230865, 4242, 187, 2, 37, "Subsubsection",ExpressionUUID->"267579d6-9b73-4c4b-aa48-be3e08dfda04",
   CellTags->"c:12"]},
 "c:13"->{
  Cell[231919, 4272, 180, 2, 37, "Subsubsection",ExpressionUUID->"9c3fe646-8c82-4fa5-ba13-4d6d8bf9eb94",
   CellTags->"c:13"]},
 "c:14"->{
  Cell[233207, 4306, 181, 2, 37, "Subsubsection",ExpressionUUID->"55749168-63df-4963-aab6-cb1fc8c970cf",
   CellTags->"c:14"]},
 "c:15"->{
  Cell[234457, 4341, 180, 2, 54, "Subsection",ExpressionUUID->"93607360-ed31-4145-8241-5b261eccc5b0",
   CellTags->"c:15"]},
 "c:16"->{
  Cell[234662, 4347, 185, 2, 45, "Subsubsection",ExpressionUUID->"4f8cb032-dea0-497b-bd1c-d723913ce783",
   CellTags->"c:16"]},
 "c:17"->{
  Cell[237358, 4421, 194, 2, 37, "Subsubsection",ExpressionUUID->"2e5b960f-ce39-4cd9-a390-ec4c724d0794",
   CellTags->"c:17"]},
 "c:18"->{
  Cell[239965, 4493, 242, 3, 54, "Subsection",ExpressionUUID->"6033b32e-4c89-4553-869f-3243e5607bf1",
   CellTags->"c:18"]},
 "c:19"->{
  Cell[250825, 4805, 175, 2, 54, "Subsection",ExpressionUUID->"6ac426ee-2cf2-4609-a70a-b7bbae6bed70",
   CellTags->"c:19"]},
 "c:21"->{
  Cell[252828, 4863, 171, 2, 38, "Subsection",ExpressionUUID->"8519decb-a647-4082-a417-8490e787bc1d",
   CellTags->"c:21"]},
 "c:22"->{
  Cell[254939, 4917, 190, 2, 38, "Subsection",ExpressionUUID->"a08bed25-3efe-40d5-bc4e-9f803924dddc",
   CellTags->"c:22"]},
 "c:23"->{
  Cell[259233, 5037, 175, 2, 54, "Subsection",ExpressionUUID->"47e835ce-4699-4923-898e-db43e06f49d0",
   CellTags->"c:23"]},
 "c:24"->{
  Cell[260252, 5068, 173, 2, 38, "Subsection",ExpressionUUID->"586003b9-59ba-4f2a-a670-aeb201812c92",
   CellTags->"c:24"]},
 "c:25"->{
  Cell[260450, 5074, 196, 2, 45, "Subsubsection",ExpressionUUID->"69a2c8a5-fb3b-4839-94de-bdb3a0a3b69c",
   CellTags->"c:25"],
  Cell[264187, 5178, 227, 3, 37, "Subsubsection",ExpressionUUID->"1dec97a9-0a89-48cc-a6cf-b9fd05136c2b",
   CellTags->"c:25"]},
 "c:26"->{
  Cell[269070, 5306, 250, 3, 37, "Subsubsection",ExpressionUUID->"ded5d62a-f398-4005-9427-e92efe288312",
   CellTags->"c:26"]},
 "c:27"->{
  Cell[277353, 5522, 187, 2, 54, "Subsection",ExpressionUUID->"cf83491c-53d6-4317-902a-83e581aa5dc7",
   CellTags->"c:27"]},
 "c:28"->{
  Cell[279304, 5576, 175, 2, 54, "Subsection",ExpressionUUID->"932638bc-7c62-479b-bb0d-3cffa205baac",
   CellTags->"c:28"]},
 "c:29"->{
  Cell[281072, 5628, 187, 2, 38, "Subsection",ExpressionUUID->"5c27d6f6-8cde-4515-862a-aa9c9642bd78",
   CellTags->"c:29"]},
 "c:30"->{
  Cell[295317, 5983, 295, 4, 38, "Subsection",ExpressionUUID->"c10c058b-a500-4c2d-bffa-2955b14de21a",
   CellTags->"c:30"]},
 "c:31"->{
  Cell[295637, 5991, 184, 2, 45, "Subsubsection",ExpressionUUID->"adaf1997-c6af-46c4-ae60-0fb87f7483c2",
   CellTags->"c:31"]},
 "c:32"->{
  Cell[299954, 6086, 193, 2, 37, "Subsubsection",ExpressionUUID->"f38c2344-3618-4b65-86d0-b42b8689639d",
   CellTags->"c:32"]},
 "c:33"->{
  Cell[302944, 6161, 196, 2, 54, "Subsection",ExpressionUUID->"52e9fa03-400d-4512-9bf9-1437a0e5fcb7",
   CellTags->"c:33"]},
 "c:34"->{
  Cell[306585, 6253, 292, 4, 54, "Subsection",ExpressionUUID->"a6da33c3-efdf-4208-ba9d-24feeed10a88",
   CellTags->"c:34"]},
 "c:35"->{
  Cell[306902, 6261, 236, 3, 45, "Subsubsection",ExpressionUUID->"2edddb44-1bfb-48ca-829f-4e01ababe642",
   CellTags->"c:35"]},
 "c:36"->{
  Cell[316157, 6499, 218, 3, 37, "Subsubsection",ExpressionUUID->"67a583ec-d68b-4d8e-ae56-a358819f36f5",
   CellTags->"c:36"]},
 "c:37"->{
  Cell[318006, 6542, 198, 3, 54, "Subsection",ExpressionUUID->"7b0ca489-2d98-4b70-8d0f-822a0387c0f1",
   CellTags->"c:37"]},
 "c:38"->{
  Cell[318229, 6549, 178, 2, 45, "Subsubsection",ExpressionUUID->"177a1753-5f03-4991-89d8-98a1aa966a50",
   CellTags->"c:38"]},
 "c:39"->{
  Cell[321687, 6644, 199, 2, 37, "Subsubsection",ExpressionUUID->"fad4d634-1ff8-466d-8264-61cf6051a1dc",
   CellTags->"c:39"]},
 "c:40"->{
  Cell[325496, 6747, 232, 3, 37, "Subsubsection",ExpressionUUID->"1b109d2e-a32c-48ad-9a6b-09b964323db5",
   CellTags->"c:40"]},
 "c:41"->{
  Cell[327507, 6801, 222, 3, 37, "Subsubsection",ExpressionUUID->"202a85c6-aa77-469d-80b0-13a415d3aa61",
   CellTags->"c:41"]},
 "c:42"->{
  Cell[338421, 7059, 238, 3, 54, "Subsection",ExpressionUUID->"6f5b2db9-e346-4bd8-a44c-8cca8c836fad",
   CellTags->"c:42"]},
 "c:43"->{
  Cell[348992, 7328, 245, 3, 38, "Subsection",ExpressionUUID->"33202e28-0fa0-4880-a579-60fd33dd0adb",
   CellTags->"c:43"]},
 "c:44"->{
  Cell[354326, 7471, 180, 2, 38, "Subsection",ExpressionUUID->"6c868790-2893-463e-a2d0-1a9a571113d7",
   CellTags->"c:44"]},
 "c:45"->{
  Cell[574984, 11452, 177, 2, 54, "Subsection",ExpressionUUID->"b8cae968-01be-4d76-93c4-914725dacb60",
   CellTags->"c:45"]},
 "c:46"->{
  Cell[577123, 11511, 187, 2, 38, "Subsection",ExpressionUUID->"e4d814b7-307b-44b1-8176-77d613190d5c",
   CellTags->"c:46"]},
 "c:47"->{
  Cell[588701, 11795, 190, 2, 38, "Subsection",ExpressionUUID->"a32b7405-2d28-4efa-ad38-9fc2d3fe6ff7",
   CellTags->"c:47"]},
 "c:48"->{
  Cell[600579, 12123, 187, 2, 54, "Subsection",ExpressionUUID->"8445ef95-5973-4648-871d-e56f6b632789",
   CellTags->"c:48"]},
 "c:49"->{
  Cell[607076, 12313, 192, 2, 38, "Subsection",ExpressionUUID->"d12758da-d1d5-43a6-8aaa-503db8464fff",
   CellTags->"c:49"]},
 "c:50"->{
  Cell[609515, 12378, 180, 2, 38, "Subsection",ExpressionUUID->"3661d520-8d0a-475a-b073-957f7c24d670",
   CellTags->"c:50"]},
 "c:51"->{
  Cell[613900, 12501, 192, 2, 54, "Subsection",ExpressionUUID->"25adc37f-e4d2-4d9f-a5ed-8612c20d46c3",
   CellTags->"c:51"]},
 "c:52"->{
  Cell[616504, 12577, 179, 2, 38, "Subsection",ExpressionUUID->"37567aef-8b97-425f-abdf-d82ae053b962",
   CellTags->"c:52"]},
 "c:53"->{
  Cell[617924, 12615, 386, 5, 38, "Subsection",ExpressionUUID->"29712ec0-7f9d-4363-bd69-fedc89b926de",
   CellTags->"c:53"]},
 "c:54"->{
  Cell[618335, 12624, 178, 2, 45, "Subsubsection",ExpressionUUID->"7b6f1d42-3372-4eae-9f3b-52b01fd6c20a",
   CellTags->"c:54"]},
 "c:55"->{
  Cell[621402, 12706, 183, 2, 37, "Subsubsection",ExpressionUUID->"75236b9f-93a9-4123-9f0b-e0d6063ca27a",
   CellTags->"c:55"]},
 "c:56"->{
  Cell[624355, 12787, 199, 2, 37, "Subsubsection",ExpressionUUID->"d4ebefef-2c40-4afa-86e2-01e82ef7e608",
   CellTags->"c:56"]},
 "c:57"->{
  Cell[626576, 12842, 178, 2, 54, "Subsection",ExpressionUUID->"194fc7a6-9250-4380-ab91-b6f48a0893c5",
   CellTags->"c:57"]},
 "c:58"->{
  Cell[626779, 12848, 217, 3, 45, "Subsubsection",ExpressionUUID->"c83a9054-dd74-47d7-ad95-3b9d6619e603",
   CellTags->"c:58"]},
 "c:59"->{
  Cell[702580, 14225, 254, 3, 37, "Subsubsection",ExpressionUUID->"37c42ac9-91fe-46e0-b5f0-8a8055e0e5be",
   CellTags->"c:59"]},
 "c:60"->{
  Cell[705312, 14301, 209, 2, 37, "Subsubsection",ExpressionUUID->"e507394d-7fce-45ce-bab9-205bc132c31e",
   CellTags->"c:60"]},
 "c:61"->{
  Cell[706972, 14344, 228, 3, 54, "Subsection",ExpressionUUID->"46cb5c22-df36-42f1-8278-128db9e6546d",
   CellTags->"c:61"]},
 "c:62"->{
  Cell[707225, 14351, 182, 2, 45, "Subsubsection",ExpressionUUID->"46110b45-9f52-4171-ae7f-cc9053aa8a39",
   CellTags->"c:62"]},
 "c:63"->{
  Cell[718044, 14637, 300, 4, 37, "Subsubsection",ExpressionUUID->"5df7f489-c3af-447f-892b-2d741b7472b9",
   CellTags->"c:63"]},
 "c:64"->{
  Cell[727777, 14872, 243, 3, 37, "Subsubsection",ExpressionUUID->"e037ed65-c2cd-4cc5-8065-ba7af72e972b",
   CellTags->"c:64"]},
 "c:65"->{
  Cell[731539, 14981, 189, 2, 54, "Subsection",ExpressionUUID->"d31f39f7-0271-44c7-bb22-4483ca591ade",
   CellTags->"c:65"]},
 "c:66"->{
  Cell[740197, 15229, 249, 3, 38, "Subsection",ExpressionUUID->"09dc6daf-59ee-4840-bd77-0dfd2bff5562",
   CellTags->"c:66"]},
 "c:67"->{
  Cell[742900, 15301, 180, 2, 38, "Subsection",ExpressionUUID->"f1a32196-e07f-40de-9d22-2a3e291b7dda",
   CellTags->"c:67"]},
 "c:68"->{
  Cell[760243, 15725, 179, 2, 54, "Subsection",ExpressionUUID->"01c3231d-098c-4ccb-98c5-ca29c556a67d",
   CellTags->"c:68"]},
 "c:69"->{
  Cell[762466, 15779, 249, 3, 38, "Subsection",ExpressionUUID->"7b2df312-5a60-4afc-9c09-a780d1b79f27",
   CellTags->"c:69"]},
 "c:70"->{
  Cell[765564, 15866, 261, 3, 38, "Subsection",ExpressionUUID->"d662ecba-578b-4489-8e5f-fa36d3871aa7",
   CellTags->"c:70"]},
 "c:71"->{
  Cell[789365, 16438, 224, 3, 54, "Subsection",ExpressionUUID->"16e4c173-1b98-4694-a73e-a9458b44e628",
   CellTags->"c:71"]},
 "c:72"->{
  Cell[789614, 16445, 192, 2, 45, "Subsubsection",ExpressionUUID->"2d7a5585-863f-40ad-b02f-be363d7913a3",
   CellTags->"c:72"]},
 "c:73"->{
  Cell[814447, 17146, 184, 2, 37, "Subsubsection",ExpressionUUID->"26074711-b967-4b74-9ac1-52cb8c789745",
   CellTags->"c:73"]},
 "c:74"->{
  Cell[822475, 17396, 243, 3, 54, "Subsection",ExpressionUUID->"2cfca995-51c1-4930-93bd-525f0bdfb9d5",
   CellTags->"c:74"]},
 "c:75"->{
  Cell[826722, 17493, 262, 3, 38, "Subsection",ExpressionUUID->"bdc44691-f744-4c66-a1dd-7438bdd242a3",
   CellTags->"c:75"]},
 "c:76"->{
  Cell[827009, 17500, 181, 2, 45, "Subsubsection",ExpressionUUID->"59807f79-d229-49e5-b637-790a17413076",
   CellTags->"c:76"]},
 "c:77"->{
  Cell[832707, 17617, 276, 4, 37, "Subsubsection",ExpressionUUID->"dab93187-a908-4ba7-ae93-e35b0b7d7535",
   CellTags->"c:77"]},
 "c:78"->{
  Cell[973018, 20054, 174, 2, 37, "Subsubsection",ExpressionUUID->"11b0bc08-716e-4837-a55b-d3c98505048d",
   CellTags->"c:78"]},
 "c:79"->{
  Cell[1113495, 22498, 190, 2, 54, "Subsection",ExpressionUUID->"6705b400-369d-4acb-94b1-826717b38934",
   CellTags->"c:79"]},
 "c:80"->{
  Cell[1125862, 22745, 186, 2, 54, "Subsection",ExpressionUUID->"6a10872d-dcba-422d-a092-ff6bf02d5699",
   CellTags->"c:80"]},
 "c:81"->{
  Cell[1129216, 22836, 187, 2, 38, "Subsection",ExpressionUUID->"6cd6b54a-4e4f-4aea-a7ef-4153f6ba4485",
   CellTags->"c:81"]},
 "c:82"->{
  Cell[1132307, 22913, 184, 2, 38, "Subsection",ExpressionUUID->"ea78aaa4-62b6-43d1-8ebd-0d555a671dc5",
   CellTags->"c:82"]},
 "c:83"->{
  Cell[1132516, 22919, 185, 2, 45, "Subsubsection",ExpressionUUID->"fe1a8b13-333a-4024-9b40-6c8541119d74",
   CellTags->"c:83"]},
 "c:84"->{
  Cell[1134343, 22970, 203, 2, 37, "Subsubsection",ExpressionUUID->"10f96f22-e10c-41bb-8f35-b9a1e773fe6a",
   CellTags->"c:84"]},
 "c:85"->{
  Cell[1136357, 23024, 184, 2, 37, "Subsubsection",ExpressionUUID->"0428555f-bf06-485e-bd86-110e5b03fd5d",
   CellTags->"c:85"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"c:1", 1141500, 23155},
 {"c:2", 1141624, 23158},
 {"c:3", 1141754, 23161},
 {"c:4", 1141888, 23164},
 {"c:5", 1142022, 23167},
 {"c:6", 1142156, 23170},
 {"c:7", 1142290, 23173},
 {"c:8", 1142424, 23176},
 {"c:9", 1142558, 23179},
 {"c:20", 1142693, 23182},
 {"c:10", 1142829, 23185},
 {"c:11", 1142965, 23188},
 {"c:12", 1143104, 23191},
 {"c:13", 1143243, 23194},
 {"c:14", 1143382, 23197},
 {"c:15", 1143521, 23200},
 {"c:16", 1143657, 23203},
 {"c:17", 1143796, 23206},
 {"c:18", 1143935, 23209},
 {"c:19", 1144071, 23212},
 {"c:21", 1144207, 23215},
 {"c:22", 1144343, 23218},
 {"c:23", 1144479, 23221},
 {"c:24", 1144615, 23224},
 {"c:25", 1144751, 23227},
 {"c:26", 1145017, 23232},
 {"c:27", 1145156, 23235},
 {"c:28", 1145292, 23238},
 {"c:29", 1145428, 23241},
 {"c:30", 1145564, 23244},
 {"c:31", 1145700, 23247},
 {"c:32", 1145839, 23250},
 {"c:33", 1145978, 23253},
 {"c:34", 1146114, 23256},
 {"c:35", 1146250, 23259},
 {"c:36", 1146389, 23262},
 {"c:37", 1146528, 23265},
 {"c:38", 1146664, 23268},
 {"c:39", 1146803, 23271},
 {"c:40", 1146942, 23274},
 {"c:41", 1147081, 23277},
 {"c:42", 1147220, 23280},
 {"c:43", 1147356, 23283},
 {"c:44", 1147492, 23286},
 {"c:45", 1147628, 23289},
 {"c:46", 1147765, 23292},
 {"c:47", 1147902, 23295},
 {"c:48", 1148039, 23298},
 {"c:49", 1148176, 23301},
 {"c:50", 1148313, 23304},
 {"c:51", 1148450, 23307},
 {"c:52", 1148587, 23310},
 {"c:53", 1148724, 23313},
 {"c:54", 1148861, 23316},
 {"c:55", 1149001, 23319},
 {"c:56", 1149141, 23322},
 {"c:57", 1149281, 23325},
 {"c:58", 1149418, 23328},
 {"c:59", 1149558, 23331},
 {"c:60", 1149698, 23334},
 {"c:61", 1149838, 23337},
 {"c:62", 1149975, 23340},
 {"c:63", 1150115, 23343},
 {"c:64", 1150255, 23346},
 {"c:65", 1150395, 23349},
 {"c:66", 1150532, 23352},
 {"c:67", 1150669, 23355},
 {"c:68", 1150806, 23358},
 {"c:69", 1150943, 23361},
 {"c:70", 1151080, 23364},
 {"c:71", 1151217, 23367},
 {"c:72", 1151354, 23370},
 {"c:73", 1151494, 23373},
 {"c:74", 1151634, 23376},
 {"c:75", 1151771, 23379},
 {"c:76", 1151908, 23382},
 {"c:77", 1152048, 23385},
 {"c:78", 1152188, 23388},
 {"c:79", 1152328, 23391},
 {"c:80", 1152466, 23394},
 {"c:81", 1152604, 23397},
 {"c:82", 1152742, 23400},
 {"c:83", 1152880, 23403},
 {"c:84", 1153021, 23406},
 {"c:85", 1153162, 23409}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 181, 2, 98, "Title",ExpressionUUID->"934d8265-4fcc-4427-9f34-640074773381",
 CellTags->"c:1"],
Cell[764, 26, 721, 13, 104, "Text",ExpressionUUID->"22b0e3d8-9903-4283-b556-9ad31d8e7f65"],
Cell[CellGroupData[{
Cell[1510, 43, 290, 5, 69, "Chapter",ExpressionUUID->"4d401d3b-2658-4bc0-bbef-6cc2152ecc5c"],
Cell[CellGroupData[{
Cell[1825, 52, 245, 3, 54, "Subsection",ExpressionUUID->"d9089451-56b6-4385-8261-4b613f418e39",
 CellTags->"c:2"],
Cell[2073, 57, 341, 7, 35, "Text",ExpressionUUID->"a102f725-94d2-43a9-822e-d1dd3b7c0c23"],
Cell[2417, 66, 701, 14, 50, "Input",ExpressionUUID->"cae7997b-5732-4630-8297-a72d2ca96db1"],
Cell[CellGroupData[{
Cell[3143, 84, 157, 2, 29, "Input",ExpressionUUID->"11531ecd-a5a4-442f-a5d1-0084ab6853c1"],
Cell[3303, 88, 161174, 2682, 85, "Output",ExpressionUUID->"19e14949-1f4e-4ce6-b5a4-261d5e771f29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164514, 2775, 500, 10, 50, "Input",ExpressionUUID->"806bff7c-106b-4eb2-952c-cd89f993a8f1"],
Cell[165017, 2787, 7935, 191, 335, "Output",ExpressionUUID->"b443a540-3dce-450c-9c61-7991121238f4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[173001, 2984, 229, 3, 54, "Subsection",ExpressionUUID->"39e70345-88c4-43ed-a9b1-cbbbf33d0989",
 CellTags->"c:3"],
Cell[173233, 2989, 392, 7, 35, "Text",ExpressionUUID->"d87aed66-5047-4dad-9433-3a26fa35e172"],
Cell[173628, 2998, 201, 4, 50, "Input",ExpressionUUID->"a558d44a-819d-4c6d-8542-a3c82d017a78"]
}, Closed]],
Cell[CellGroupData[{
Cell[173866, 3007, 196, 2, 38, "Subsection",ExpressionUUID->"1037c5ba-e19a-4732-8360-f60e7a2fa01d",
 CellTags->"c:4"],
Cell[174065, 3011, 409, 8, 35, "Text",ExpressionUUID->"9def143d-308d-45ea-9146-337b684f48fb"],
Cell[174477, 3021, 531, 9, 29, "Input",ExpressionUUID->"66f0941d-b74d-4f23-a6d3-c5e28a3d33c5"],
Cell[175011, 3032, 517, 8, 29, "Input",ExpressionUUID->"2daef7a9-1b9d-41bf-a8ae-40d232f006a0"],
Cell[175531, 3042, 266, 5, 29, "Input",ExpressionUUID->"017dd998-8132-4761-a2ee-0fc908034fca"],
Cell[175800, 3049, 527, 14, 29, "Input",ExpressionUUID->"aab0b17b-4665-4b8a-a984-f94dd7cd5cc1"]
}, Closed]],
Cell[CellGroupData[{
Cell[176364, 3068, 173, 2, 38, "Subsection",ExpressionUUID->"8ee5c0ae-81ad-4d98-953f-c7e16140406d",
 CellTags->"c:5"],
Cell[176540, 3072, 344, 7, 35, "Text",ExpressionUUID->"0f188b1d-4afc-4876-b969-fb73e86a3aa4"],
Cell[176887, 3081, 205, 3, 29, "Input",ExpressionUUID->"a66d2a05-f5eb-4f7c-8218-62ea88883b7a"],
Cell[177095, 3086, 370, 8, 35, "Text",ExpressionUUID->"0b15c18e-462f-410c-a373-4af09d51be09"],
Cell[177468, 3096, 25904, 429, 722, "Input",ExpressionUUID->"538c1a9a-c29d-462c-aafe-1d9d7b0e26f9"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[203421, 3531, 291, 4, 69, "Chapter",ExpressionUUID->"fa1ebb06-be4c-4fd9-86a2-22990e083b10"],
Cell[CellGroupData[{
Cell[203737, 3539, 177, 2, 54, "Subsection",ExpressionUUID->"1e0a6fa4-16c6-4324-b877-be71023bb362",
 CellTags->"c:6"],
Cell[203917, 3543, 226, 5, 35, "Text",ExpressionUUID->"efd8d2f7-3c25-48fa-8a75-1436a1fefc61"],
Cell[204146, 3550, 502, 13, 50, "Input",ExpressionUUID->"1ba38701-07bb-494e-82ee-7d21f0bb7296"],
Cell[204651, 3565, 188, 3, 35, "Text",ExpressionUUID->"61e99b7e-eee7-40e2-bb66-b5dfceb70997"],
Cell[204842, 3570, 184, 4, 29, "Input",ExpressionUUID->"b43b9775-acff-4fd1-995d-6f0beb3f15d3"],
Cell[205029, 3576, 420, 8, 58, "Text",ExpressionUUID->"d94c84c5-f9c9-40aa-9e19-7f2d8597b49a"],
Cell[205452, 3586, 194, 4, 29, "Input",ExpressionUUID->"ec69b542-77af-4c0e-bf6a-9c11fe192c0f"],
Cell[205649, 3592, 191, 4, 29, "Input",ExpressionUUID->"fbd8dc75-cbe9-45b8-b0ca-9e88bdcb7310"]
}, Closed]],
Cell[CellGroupData[{
Cell[205877, 3601, 234, 3, 38, "Subsection",ExpressionUUID->"ef8f60c6-1123-44e0-aa4c-01d9fab680a3",
 CellTags->"c:7"],
Cell[206114, 3606, 229, 5, 35, "Text",ExpressionUUID->"f051523a-5e41-48b6-80af-3536deff8048"],
Cell[206346, 3613, 393, 8, 50, "Input",ExpressionUUID->"7d5996b5-b119-4a70-987f-a14d8037aa23"],
Cell[206742, 3623, 671, 16, 50, "Input",ExpressionUUID->"b4b1c6b9-f877-461e-a79b-2b02af76c0f4"],
Cell[207416, 3641, 309, 7, 35, "Text",ExpressionUUID->"f189dc01-e90e-463b-b0e9-f84b0047f19b"],
Cell[207728, 3650, 475, 11, 50, "Input",ExpressionUUID->"8df64434-479f-48f3-bbf6-1802ed564d7c"],
Cell[208206, 3663, 583, 15, 50, "Input",ExpressionUUID->"badbbd02-e57d-4ec4-810d-6622b65b0f90"],
Cell[208792, 3680, 745, 19, 50, "Input",ExpressionUUID->"81cf639d-6f31-468e-b872-cad9f6306326"],
Cell[209540, 3701, 803, 18, 50, "Input",ExpressionUUID->"c8c8f4f5-4916-4152-948c-043243f8ee7f"]
}, Closed]],
Cell[CellGroupData[{
Cell[210380, 3724, 202, 2, 38, "Subsection",ExpressionUUID->"b78c9120-ccf2-40e5-87d7-a484213417b3",
 CellTags->"c:8"],
Cell[210585, 3728, 399, 9, 58, "Text",ExpressionUUID->"dc9dff42-f5b7-4251-8736-a0dca6b379bb"],
Cell[CellGroupData[{
Cell[211009, 3741, 860, 21, 70, "Input",ExpressionUUID->"696f126b-efab-4a13-8aa9-b44de55e3f44"],
Cell[211872, 3764, 10150, 228, 140, "Print",ExpressionUUID->"c8595e3b-1c54-4fb4-a178-be69b55183bc"]
}, Open  ]],
Cell[222037, 3995, 591, 12, 50, "Input",ExpressionUUID->"41ec57c1-ef10-4a83-b8a8-146c45bdf378"]
}, Closed]],
Cell[CellGroupData[{
Cell[222665, 4012, 179, 2, 38, "Subsection",ExpressionUUID->"0d830d7c-dc92-4a0f-96b0-5cb8ad6ed729",
 CellTags->"c:9"],
Cell[222847, 4016, 192, 3, 35, "Text",ExpressionUUID->"aef90da1-5cda-43d0-ba41-fc9641543c86"],
Cell[223042, 4021, 864, 19, 110, "Input",ExpressionUUID->"2c5f1eed-b1d2-413a-a711-e9e26a4cb615"],
Cell[223909, 4042, 911, 23, 130, "Input",ExpressionUUID->"0711c021-52b7-4374-b710-c62812e3419e"]
}, Closed]],
Cell[CellGroupData[{
Cell[224857, 4070, 181, 2, 38, "Subsection",ExpressionUUID->"f6a0af4d-c709-4e10-972b-30d8c0b63b74",
 CellTags->"c:20"],
Cell[CellGroupData[{
Cell[225063, 4076, 175, 3, 45, "Subsubsection",ExpressionUUID->"014127e0-d730-46e1-bfe9-a6f749fdb158"],
Cell[225241, 4081, 179, 3, 35, "Text",ExpressionUUID->"f5dfccdd-d0a8-49d0-9956-18c3955c2e22"],
Cell[225423, 4086, 502, 10, 29, "Input",ExpressionUUID->"0cc0a0a1-1e6b-4975-916e-86206f067c29"]
}, Closed]],
Cell[CellGroupData[{
Cell[225962, 4101, 189, 3, 37, "Subsubsection",ExpressionUUID->"23fea064-6b37-41fa-9165-a2081fe0b5aa"],
Cell[226154, 4106, 532, 13, 70, "Input",ExpressionUUID->"e25e9312-5f35-40c7-bfca-fe72bc85ed2c"]
}, Closed]],
Cell[CellGroupData[{
Cell[226723, 4124, 170, 3, 37, "Subsubsection",ExpressionUUID->"143d21bd-6321-4173-ad93-05a606106c8b"],
Cell[226896, 4129, 180, 3, 35, "Text",ExpressionUUID->"3134327b-eef2-428f-94bf-02a86341a4d8"],
Cell[227079, 4134, 466, 12, 50, "Input",ExpressionUUID->"87060ca1-4ed9-453e-b81b-530b00a81a85"],
Cell[227548, 4148, 174, 3, 35, "Text",ExpressionUUID->"dad8cf23-94a8-4b2e-8483-0afd4b43de7d"],
Cell[227725, 4153, 415, 10, 50, "Input",ExpressionUUID->"645596ea-f203-4c73-8ef1-2d912a79b250"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[228189, 4169, 172, 2, 54, "Subsection",ExpressionUUID->"d51e43d8-34ee-4df9-8bf3-5b69733ed3ff",
 CellTags->"c:10"],
Cell[CellGroupData[{
Cell[228386, 4175, 181, 2, 45, "Subsubsection",ExpressionUUID->"968fa70b-c4b4-4d48-a949-8da4355d6428",
 CellTags->"c:11"],
Cell[228570, 4179, 243, 6, 35, "Text",ExpressionUUID->"8247c756-42fb-4cde-ab32-71f7738c8599"],
Cell[228816, 4187, 581, 12, 50, "Input",ExpressionUUID->"0ec03379-9273-43c8-969d-41d370813788"],
Cell[229400, 4201, 444, 10, 50, "Input",ExpressionUUID->"74538836-333a-4a62-b9e6-38ff5ee95d7f"],
Cell[229847, 4213, 238, 4, 29, "Input",ExpressionUUID->"5d2b3531-cdd4-413e-b108-ae67e2b9af5b"],
Cell[230088, 4219, 499, 12, 50, "Input",ExpressionUUID->"63dc3f77-e418-418a-bf38-bffe8d178bb3"],
Cell[230590, 4233, 238, 4, 29, "Input",ExpressionUUID->"13b3872f-1f90-4567-aefb-ea163cfd148c"]
}, Closed]],
Cell[CellGroupData[{
Cell[230865, 4242, 187, 2, 37, "Subsubsection",ExpressionUUID->"267579d6-9b73-4c4b-aa48-be3e08dfda04",
 CellTags->"c:12"],
Cell[231055, 4246, 253, 6, 35, "Text",ExpressionUUID->"8a76c358-d64d-4f4b-b485-c80d35efd628"],
Cell[231311, 4254, 357, 8, 29, "Input",ExpressionUUID->"9298008e-ebb6-4839-b787-3eb2650efb20"],
Cell[231671, 4264, 211, 3, 29, "Input",ExpressionUUID->"c002fff5-58c3-459d-bd3c-c4ccbb6ca90d"]
}, Closed]],
Cell[CellGroupData[{
Cell[231919, 4272, 180, 2, 37, "Subsubsection",ExpressionUUID->"9c3fe646-8c82-4fa5-ba13-4d6d8bf9eb94",
 CellTags->"c:13"],
Cell[232102, 4276, 798, 18, 70, "Input",ExpressionUUID->"8d1daacd-8970-4659-9835-8f732610f46c"],
Cell[232903, 4296, 267, 5, 29, "Input",ExpressionUUID->"30981062-8ace-4811-b1a0-840f0ffb8e73"]
}, Closed]],
Cell[CellGroupData[{
Cell[233207, 4306, 181, 2, 37, "Subsubsection",ExpressionUUID->"55749168-63df-4963-aab6-cb1fc8c970cf",
 CellTags->"c:14"],
Cell[233391, 4310, 218, 5, 35, "Text",ExpressionUUID->"a314f89f-489d-428a-b3e4-44c58b98ad36"],
Cell[233612, 4317, 796, 18, 110, "Input",ExpressionUUID->"95428a0b-7e40-4b51-92e8-5da74f819672"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[234457, 4341, 180, 2, 54, "Subsection",ExpressionUUID->"93607360-ed31-4145-8241-5b261eccc5b0",
 CellTags->"c:15"],
Cell[CellGroupData[{
Cell[234662, 4347, 185, 2, 45, "Subsubsection",ExpressionUUID->"4f8cb032-dea0-497b-bd1c-d723913ce783",
 CellTags->"c:16"],
Cell[234850, 4351, 248, 6, 35, "Text",ExpressionUUID->"d945c358-7984-4b6f-99a0-004c192287e4"],
Cell[235101, 4359, 695, 17, 70, "Input",ExpressionUUID->"3cd642da-fd22-4802-9288-f01565803535"],
Cell[235799, 4378, 252, 4, 29, "Input",ExpressionUUID->"203bb6e8-79b2-4927-b104-77c6b4bb166c"],
Cell[236054, 4384, 568, 13, 70, "Input",ExpressionUUID->"a26cc5d9-e803-45fa-b22e-fae71af4e8d4"],
Cell[236625, 4399, 216, 3, 29, "Input",ExpressionUUID->"3309429c-25c3-464f-a97a-6193bde41c61"],
Cell[236844, 4404, 477, 12, 50, "Input",ExpressionUUID->"c7b59436-5334-4cdf-8c43-2d2fe93b3917"]
}, Closed]],
Cell[CellGroupData[{
Cell[237358, 4421, 194, 2, 37, "Subsubsection",ExpressionUUID->"2e5b960f-ce39-4cd9-a390-ec4c724d0794",
 CellTags->"c:17"],
Cell[237555, 4425, 2119, 56, 190, "Input",ExpressionUUID->"ccc5fd89-681d-4742-9855-ddf4ecfe57a6"],
Cell[239677, 4483, 239, 4, 29, "Input",ExpressionUUID->"53fddc99-c4e8-45c0-a9f3-8bc732aba17d"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[239965, 4493, 242, 3, 54, "Subsection",ExpressionUUID->"6033b32e-4c89-4553-869f-3243e5607bf1",
 CellTags->"c:18"],
Cell[CellGroupData[{
Cell[240232, 4500, 161, 3, 45, "Subsubsection",ExpressionUUID->"ea8bc95a-8f0e-4b12-99a0-56426ab51ec4"],
Cell[240396, 4505, 214, 5, 35, "Text",ExpressionUUID->"31deae2e-9563-4b77-8989-bf812ff3c948"],
Cell[240613, 4512, 654, 18, 50, "Input",ExpressionUUID->"a0948096-3a17-480e-88aa-5f8f54122f9a"],
Cell[241270, 4532, 1172, 34, 50, "Input",ExpressionUUID->"414b81d5-a5f7-405e-88ec-356977cae10c"],
Cell[242445, 4568, 572, 11, 81, "Text",ExpressionUUID->"7f20e0cc-33ba-4b02-a0c9-60eb0f4f1498"],
Cell[243020, 4581, 237, 4, 29, "Input",ExpressionUUID->"33670142-c814-4498-b5e7-7e7f8a967c11"]
}, Closed]],
Cell[CellGroupData[{
Cell[243294, 4590, 177, 3, 37, "Subsubsection",ExpressionUUID->"3ace22ec-97f7-4ba5-933b-08968226a40f"],
Cell[243474, 4595, 1454, 41, 70, "Input",ExpressionUUID->"58d93156-a8c6-41f9-b9b1-fcef6a398386"],
Cell[244931, 4638, 679, 16, 50, "Input",ExpressionUUID->"e6b3fb20-ac33-4f43-b582-08fbcf2dfdcb"],
Cell[245613, 4656, 1407, 39, 29, "Input",ExpressionUUID->"e09870e4-80d3-45a8-9a7b-26fea92ecc83"],
Cell[247023, 4697, 360, 7, 29, "Input",ExpressionUUID->"fc9202f0-a708-46b9-8993-d99ef8b9d57b"],
Cell[247386, 4706, 219, 5, 35, "Text",ExpressionUUID->"80e50c85-aa4a-47c4-beb7-0309b49cd6c2"],
Cell[247608, 4713, 509, 12, 29, "Input",ExpressionUUID->"73c1be5e-ad36-4648-8909-3528e2e910da"],
Cell[248120, 4727, 1368, 35, 90, "Input",ExpressionUUID->"de6395af-73f2-4054-8b7c-bf1b424351e4"]
}, Closed]],
Cell[CellGroupData[{
Cell[249525, 4767, 176, 3, 37, "Subsubsection",ExpressionUUID->"3d38093a-d085-4139-a1ba-086e58ea732c"],
Cell[249704, 4772, 221, 5, 35, "Text",ExpressionUUID->"cf35c9c2-e6f8-484d-8070-2365047438e9"],
Cell[249928, 4779, 490, 10, 50, "Input",ExpressionUUID->"f0370879-7fa9-4d95-9ac3-91e74e92672f"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[250479, 4796, 321, 5, 69, "Chapter",ExpressionUUID->"2d81b315-c178-4a19-82de-edec401ad759"],
Cell[CellGroupData[{
Cell[250825, 4805, 175, 2, 54, "Subsection",ExpressionUUID->"6ac426ee-2cf2-4609-a70a-b7bbae6bed70",
 CellTags->"c:19"],
Cell[251003, 4809, 301, 7, 35, "Text",ExpressionUUID->"0d5ac3c1-0a5f-441b-82aa-56ceb05deba1"],
Cell[251307, 4818, 1241, 34, 70, "Input",ExpressionUUID->"17b788ed-dfdb-4bc8-8387-cc24a2843518"],
Cell[252551, 4854, 240, 4, 29, "Input",ExpressionUUID->"59e4d47e-c682-496c-8f5f-8a3d84d8ebfe"]
}, Closed]],
Cell[CellGroupData[{
Cell[252828, 4863, 171, 2, 38, "Subsection",ExpressionUUID->"8519decb-a647-4082-a417-8490e787bc1d",
 CellTags->"c:21"],
Cell[253002, 4867, 163, 3, 35, "Text",ExpressionUUID->"2542e184-2b55-431e-8712-57b4010b0208"],
Cell[253168, 4872, 703, 14, 50, "Input",ExpressionUUID->"dfd024d4-6cd0-4f3e-978b-924b02a9eace"],
Cell[253874, 4888, 176, 3, 35, "Text",ExpressionUUID->"8bd6ea94-2eed-481c-aad6-78ae01eb6ab7"],
Cell[254053, 4893, 849, 19, 50, "Input",ExpressionUUID->"fb343542-47c9-446d-80da-03fd3e2252ae"]
}, Closed]],
Cell[CellGroupData[{
Cell[254939, 4917, 190, 2, 38, "Subsection",ExpressionUUID->"a08bed25-3efe-40d5-bc4e-9f803924dddc",
 CellTags->"c:22"],
Cell[255132, 4921, 240, 4, 35, "Text",ExpressionUUID->"69abaf44-84b6-4abe-bd7d-0b63dd967e4e"],
Cell[255375, 4927, 455, 10, 29, "Input",ExpressionUUID->"7d4f3e83-d26e-4cd2-9549-83ece73a5532"],
Cell[255833, 4939, 355, 8, 29, "Input",ExpressionUUID->"eecbc129-2d09-4c25-91df-5406a1cd99e8"],
Cell[256191, 4949, 363, 8, 29, "Input",ExpressionUUID->"d0a3c222-4a31-4f3f-b352-e910a84f88bf"],
Cell[256557, 4959, 360, 8, 29, "Input",ExpressionUUID->"3687dac5-32c8-484e-8e0a-e79866596754"],
Cell[256920, 4969, 268, 6, 35, "Text",ExpressionUUID->"91fc0eea-f728-45cb-8c20-ef67f376c886"],
Cell[257191, 4977, 817, 22, 110, "Input",ExpressionUUID->"94169326-674a-4442-b858-2906e886a2b0"],
Cell[258011, 5001, 495, 12, 50, "Input",ExpressionUUID->"2b83ea3b-6e52-4222-9a3a-9c2ffa1e2c9f"],
Cell[258509, 5015, 363, 7, 50, "Input",ExpressionUUID->"3bdb8d5b-aba4-46e3-94d0-0ebf4e2145f5"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[258921, 5028, 287, 5, 69, "Chapter",ExpressionUUID->"ff48cf42-cb85-4663-b23e-43657c60dfe7"],
Cell[CellGroupData[{
Cell[259233, 5037, 175, 2, 54, "Subsection",ExpressionUUID->"47e835ce-4699-4923-898e-db43e06f49d0",
 CellTags->"c:23"],
Cell[259411, 5041, 804, 22, 70, "Input",ExpressionUUID->"d9902e8c-2a9f-40e9-88a5-9c6eca85b9c9"]
}, Closed]],
Cell[CellGroupData[{
Cell[260252, 5068, 173, 2, 38, "Subsection",ExpressionUUID->"586003b9-59ba-4f2a-a670-aeb201812c92",
 CellTags->"c:24"],
Cell[CellGroupData[{
Cell[260450, 5074, 196, 2, 45, "Subsubsection",ExpressionUUID->"69a2c8a5-fb3b-4839-94de-bdb3a0a3b69c",
 CellTags->"c:25"],
Cell[260649, 5078, 380, 8, 58, "Text",ExpressionUUID->"6450432f-96f9-42ed-9572-f7f4702bc1a4"],
Cell[261032, 5088, 832, 22, 90, "Input",ExpressionUUID->"76a2f7e3-7d49-45ab-aaf7-cdffb72eccbf"],
Cell[261867, 5112, 295, 6, 29, "Input",ExpressionUUID->"a853d33f-3e4d-4a97-be23-2d351b6b6b09"],
Cell[262165, 5120, 389, 6, 35, "Text",ExpressionUUID->"6119300d-5d55-4ad9-bd65-06c5d7b92c0c"],
Cell[262557, 5128, 665, 19, 50, "Input",ExpressionUUID->"2647c4b3-f621-4519-96f4-10b1e7b67da7"],
Cell[263225, 5149, 249, 4, 35, "Text",ExpressionUUID->"846c20fb-e5ad-4363-923d-91a579a1bd20"],
Cell[263477, 5155, 673, 18, 50, "Input",ExpressionUUID->"a338063b-2315-4387-8406-f2705350e3af"]
}, Closed]],
Cell[CellGroupData[{
Cell[264187, 5178, 227, 3, 37, "Subsubsection",ExpressionUUID->"1dec97a9-0a89-48cc-a6cf-b9fd05136c2b",
 CellTags->"c:25"],
Cell[264417, 5183, 328, 7, 35, "Text",ExpressionUUID->"e0643ea0-003f-48a0-b7b3-9ccba6e37a8e"],
Cell[264748, 5192, 266, 5, 29, "Input",ExpressionUUID->"302b44be-ef86-48c9-aa2c-564b391aa0b2"],
Cell[265017, 5199, 334, 7, 29, "Input",ExpressionUUID->"03e3091e-977d-4e2f-81d5-da8fb825aec4"],
Cell[265354, 5208, 551, 14, 29, "Input",ExpressionUUID->"b1b59af8-238e-45ed-aa75-edbfe25101fd"],
Cell[265908, 5224, 529, 11, 29, "Input",ExpressionUUID->"90b9f4a2-b104-45e2-93f3-8188b310c05e"],
Cell[266440, 5237, 408, 9, 58, "Text",ExpressionUUID->"b2a29537-e3dd-40af-9ab3-396f946f0c7f"],
Cell[266851, 5248, 446, 9, 29, "Input",ExpressionUUID->"ca643546-dc1d-430e-b21a-ecac262f9a1e"],
Cell[267300, 5259, 501, 10, 29, "Input",ExpressionUUID->"0ca068e9-45ab-4193-b700-ea079aa30009"],
Cell[267804, 5271, 529, 11, 29, "Input",ExpressionUUID->"3c45e684-0113-4b2f-9a58-889dba598670"],
Cell[268336, 5284, 160, 3, 35, "Text",ExpressionUUID->"cc0b2c2b-3f9b-46a3-812b-fdd16430c436"],
Cell[268499, 5289, 292, 6, 29, "Input",ExpressionUUID->"0653d5ab-e1f9-42eb-9a3c-efc992067962"],
Cell[268794, 5297, 239, 4, 29, "Input",ExpressionUUID->"06c51025-4365-4585-b0fb-f98b6c96c521"]
}, Closed]],
Cell[CellGroupData[{
Cell[269070, 5306, 250, 3, 37, "Subsubsection",ExpressionUUID->"ded5d62a-f398-4005-9427-e92efe288312",
 CellTags->"c:26"],
Cell[269323, 5311, 316, 6, 35, "Text",ExpressionUUID->"30dac8a6-273d-4495-981c-2a1d6d3a8f80"],
Cell[269642, 5319, 687, 16, 90, "Input",ExpressionUUID->"5d3cf964-b905-48d5-a57a-61d50ebef712"],
Cell[270332, 5337, 293, 5, 29, "Input",ExpressionUUID->"0a118751-0dac-4729-ad1e-d7f094a26af9"],
Cell[270628, 5344, 347, 7, 35, "Text",ExpressionUUID->"1f4758f5-443f-4df8-b208-0f642bb70f02"],
Cell[270978, 5353, 528, 11, 29, "Input",ExpressionUUID->"4434b8fb-f66c-460e-a0c4-571c04a56121"],
Cell[271509, 5366, 353, 6, 29, "Input",ExpressionUUID->"9365ecdb-b734-4c5d-8503-bb51d35b6eac"],
Cell[271865, 5374, 292, 4, 35, "Text",ExpressionUUID->"460b4f2c-53bc-49cd-9398-41759cefa4a4"],
Cell[272160, 5380, 591, 14, 29, "Input",ExpressionUUID->"3e8ca21d-0805-49fc-aa4d-9912aeb2dfcd"],
Cell[272754, 5396, 508, 12, 50, "Input",ExpressionUUID->"b537de9b-c104-43d8-880b-c1a199590c8f"],
Cell[273265, 5410, 297, 5, 29, "Input",ExpressionUUID->"9f532b89-2b9a-45c6-a97a-44e8cda1cce1"]
}, Closed]],
Cell[CellGroupData[{
Cell[273599, 5420, 196, 3, 37, "Subsubsection",ExpressionUUID->"344c9d85-ee70-472b-9f36-9f65fe863cee"],
Cell[273798, 5425, 265, 6, 35, "Text",ExpressionUUID->"1b611f18-649c-473d-992a-229c3cb8c4f4"],
Cell[274066, 5433, 603, 13, 50, "Input",ExpressionUUID->"abe1de54-7eda-49dd-816f-028249e80717"],
Cell[274672, 5448, 1055, 25, 50, "Input",ExpressionUUID->"524331ef-fe4b-4ceb-9bd0-466fdbff5ae8"]
}, Closed]],
Cell[CellGroupData[{
Cell[275764, 5478, 176, 3, 37, "Subsubsection",ExpressionUUID->"0a29fdea-136b-424d-b4e5-29e30a513b70"],
Cell[275943, 5483, 181, 3, 35, "Text",ExpressionUUID->"726f5912-6fe1-4cf0-b67e-2d661dfbc98b"],
Cell[276127, 5488, 401, 10, 29, "Input",ExpressionUUID->"6ffb097a-81f0-4f7b-994e-a5ecaff9ecde"],
Cell[276531, 5500, 211, 3, 29, "Input",ExpressionUUID->"793842ff-54de-40e7-8b1e-caad93d21916"],
Cell[276745, 5505, 213, 3, 29, "Input",ExpressionUUID->"5130ff98-956a-4b72-a8af-0af211b0903e"],
Cell[276961, 5510, 343, 6, 29, "Input",ExpressionUUID->"fe0f0767-29b1-46ab-89a9-7c9514129412"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[277353, 5522, 187, 2, 54, "Subsection",ExpressionUUID->"cf83491c-53d6-4317-902a-83e581aa5dc7",
 CellTags->"c:27"],
Cell[277543, 5526, 551, 12, 70, "Input",ExpressionUUID->"295b97a0-e9dc-4121-923c-5eaf1358301e"],
Cell[278097, 5540, 802, 18, 90, "Input",ExpressionUUID->"f34b5322-4762-42a1-b96d-7c26a6f0c9fb"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[278948, 5564, 331, 8, 69, "Chapter",ExpressionUUID->"7e315242-c9a0-48d7-a79c-e62367557aee"],
Cell[CellGroupData[{
Cell[279304, 5576, 175, 2, 54, "Subsection",ExpressionUUID->"932638bc-7c62-479b-bb0d-3cffa205baac",
 CellTags->"c:28"],
Cell[279482, 5580, 1553, 43, 170, "Input",ExpressionUUID->"fbf5ef71-e74a-4a87-867e-8a3346fab1f4"]
}, Closed]],
Cell[CellGroupData[{
Cell[281072, 5628, 187, 2, 38, "Subsection",ExpressionUUID->"5c27d6f6-8cde-4515-862a-aa9c9642bd78",
 CellTags->"c:29"],
Cell[281262, 5632, 163, 3, 35, "Text",ExpressionUUID->"4c5eacb3-63dd-4261-bae3-aa2546f96de9"],
Cell[281428, 5637, 1533, 35, 50, "Input",ExpressionUUID->"63000fed-904c-4a4f-b696-9368e0f79cb4"],
Cell[282964, 5674, 625, 12, 29, "Input",ExpressionUUID->"816e27ef-b777-4331-a0c7-f21e570a53c8"],
Cell[283592, 5688, 277, 5, 29, "Input",ExpressionUUID->"914da50d-8987-45c6-86c2-efa574454895"],
Cell[283872, 5695, 322, 7, 35, "Text",ExpressionUUID->"71e298ab-c4f6-4b0e-9225-05f491f97805"],
Cell[284197, 5704, 241, 4, 29, "Input",ExpressionUUID->"e2c62f91-87ae-4684-9c45-f35ac0d1d1e7"],
Cell[284441, 5710, 376, 8, 29, "Input",ExpressionUUID->"baed26dd-0455-4c7c-8a1b-0fa20555865e"],
Cell[284820, 5720, 238, 4, 29, "Input",ExpressionUUID->"d10f611a-3618-4a47-bf35-3dfcdb3b7e18"],
Cell[CellGroupData[{
Cell[285083, 5728, 2337, 38, 90, "Input",ExpressionUUID->"1c36b922-6e1f-438c-8272-93926ea59256"],
Cell[287423, 5768, 1674, 49, 287, "Output",ExpressionUUID->"91b3804e-00a3-4f43-a637-29d56f933084"]
}, Open  ]],
Cell[289112, 5820, 290, 5, 29, "Input",ExpressionUUID->"d025626d-5335-4f65-a1ec-307255980dc0"],
Cell[289405, 5827, 247, 6, 35, "Text",ExpressionUUID->"9b6ebdf0-bddb-44b7-968e-d85858606ab3"],
Cell[289655, 5835, 530, 12, 29, "Input",ExpressionUUID->"da3d4eea-df63-4b2e-b74e-059cacab7254"],
Cell[290188, 5849, 365, 6, 29, "Input",ExpressionUUID->"102974f4-2d9b-4cde-bfaf-358b8fb9ac16"],
Cell[290556, 5857, 278, 6, 35, "Text",ExpressionUUID->"619ccb59-1402-4b29-83d1-c92d637ab02a"],
Cell[CellGroupData[{
Cell[290859, 5867, 1641, 45, 90, "Input",ExpressionUUID->"8ceb4c98-d616-490c-8fb5-4843ba78006c"],
Cell[292503, 5914, 2403, 54, 101, "Output",ExpressionUUID->"b571bc39-3187-4676-862f-4693e2ed9c3d"]
}, Open  ]],
Cell[294921, 5971, 359, 7, 29, "Input",ExpressionUUID->"09229319-c33b-4e4a-ba78-73bea25fef4c"]
}, Closed]],
Cell[CellGroupData[{
Cell[295317, 5983, 295, 4, 38, "Subsection",ExpressionUUID->"c10c058b-a500-4c2d-bffa-2955b14de21a",
 CellTags->"c:30"],
Cell[CellGroupData[{
Cell[295637, 5991, 184, 2, 45, "Subsubsection",ExpressionUUID->"adaf1997-c6af-46c4-ae60-0fb87f7483c2",
 CellTags->"c:31"],
Cell[295824, 5995, 290, 6, 35, "Text",ExpressionUUID->"8fc205d5-3384-40ca-a0e5-a8c9f829c920"],
Cell[296117, 6003, 2332, 39, 29, "Input",ExpressionUUID->"646203ff-d303-4507-9da0-c6c6b2da4b18"],
Cell[298452, 6044, 176, 3, 35, "Text",ExpressionUUID->"869142fd-77a5-4044-bfa0-ffaeaff29d3f"],
Cell[298631, 6049, 1286, 32, 90, "Input",ExpressionUUID->"c5d26f17-e5d3-4460-99c6-c6d6d4fc11dd"]
}, Closed]],
Cell[CellGroupData[{
Cell[299954, 6086, 193, 2, 37, "Subsubsection",ExpressionUUID->"f38c2344-3618-4b65-86d0-b42b8689639d",
 CellTags->"c:32"],
Cell[300150, 6090, 245, 5, 35, "Text",ExpressionUUID->"8b20a75d-31f3-4056-ac74-f1127d0d96dd"],
Cell[300398, 6097, 1155, 23, 29, "Input",ExpressionUUID->"e8e00cae-5dc7-462d-8948-526b28aeb597"],
Cell[301556, 6122, 1339, 33, 90, "Input",ExpressionUUID->"a8ab54f5-bbbb-4ea9-a109-96d066fc16c2"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[302944, 6161, 196, 2, 54, "Subsection",ExpressionUUID->"52e9fa03-400d-4512-9bf9-1437a0e5fcb7",
 CellTags->"c:33"],
Cell[303143, 6165, 1215, 26, 29, "Input",ExpressionUUID->"3efd9f8d-ac18-4503-896c-60556b22f764"],
Cell[304361, 6193, 275, 7, 29, "Input",ExpressionUUID->"0cbe21c8-5790-42e6-a0ba-1f030e3e5997"],
Cell[304639, 6202, 1298, 27, 29, "Input",ExpressionUUID->"27a1cde0-d94a-47cf-abeb-3c946e78e8b6"],
Cell[305940, 6231, 398, 9, 29, "Input",ExpressionUUID->"d1be5a12-791a-4350-96bc-97a8b33f7dcb"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[306387, 6246, 173, 3, 69, "Chapter",ExpressionUUID->"bd72d8f9-e5f9-4dc6-8f74-865e5a0d73d1"],
Cell[CellGroupData[{
Cell[306585, 6253, 292, 4, 54, "Subsection",ExpressionUUID->"a6da33c3-efdf-4208-ba9d-24feeed10a88",
 CellTags->"c:34"],
Cell[CellGroupData[{
Cell[306902, 6261, 236, 3, 45, "Subsubsection",ExpressionUUID->"2edddb44-1bfb-48ca-829f-4e01ababe642",
 CellTags->"c:35"],
Cell[307141, 6266, 8979, 228, 536, "Input",ExpressionUUID->"d0d98fe3-f920-45fd-9b74-f8e903adc023"]
}, Closed]],
Cell[CellGroupData[{
Cell[316157, 6499, 218, 3, 37, "Subsubsection",ExpressionUUID->"67a583ec-d68b-4d8e-ae56-a358819f36f5",
 CellTags->"c:36"],
Cell[316378, 6504, 1579, 32, 70, "Input",ExpressionUUID->"d423f709-b17a-4168-aefa-f5fb52bd609f"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[318006, 6542, 198, 3, 54, "Subsection",ExpressionUUID->"7b0ca489-2d98-4b70-8d0f-822a0387c0f1",
 CellTags->"c:37"],
Cell[CellGroupData[{
Cell[318229, 6549, 178, 2, 45, "Subsubsection",ExpressionUUID->"177a1753-5f03-4991-89d8-98a1aa966a50",
 CellTags->"c:38"],
Cell[318410, 6553, 491, 9, 58, "Text",ExpressionUUID->"87f508a6-1540-4424-bb30-6ac782debcec"],
Cell[318904, 6564, 551, 13, 29, "Input",ExpressionUUID->"423e2d86-3a51-46b3-9197-72f7f0028581"],
Cell[319458, 6579, 669, 18, 50, "Input",ExpressionUUID->"58d81c30-8194-49d8-99f2-afe922769900"],
Cell[320130, 6599, 251, 4, 29, "Input",ExpressionUUID->"d5065ca8-34be-491d-8e7c-859fa128d3ef"],
Cell[320384, 6605, 180, 3, 35, "Text",ExpressionUUID->"5d8722a6-0f30-46da-9a66-70fc6e81a4e1"],
Cell[320567, 6610, 1083, 29, 90, "Input",ExpressionUUID->"cdcc633d-9298-474d-8926-467ed718c7df"]
}, Closed]],
Cell[CellGroupData[{
Cell[321687, 6644, 199, 2, 37, "Subsubsection",ExpressionUUID->"fad4d634-1ff8-466d-8264-61cf6051a1dc",
 CellTags->"c:39"],
Cell[321889, 6648, 214, 3, 35, "Text",ExpressionUUID->"c7901d06-820c-4d80-adf0-e69af1db8e84"],
Cell[CellGroupData[{
Cell[322128, 6655, 1774, 47, 110, "Input",ExpressionUUID->"f00cc5d1-3776-4533-888e-d37a4fe114b1"],
Cell[323905, 6704, 358, 6, 33, "Output",ExpressionUUID->"e73b77e8-feae-4bac-b7a0-574ab653978c"],
Cell[324266, 6712, 317, 4, 33, "Output",ExpressionUUID->"7688f73e-6f44-4217-87b4-3b8bee104dd3"]
}, Open  ]],
Cell[324598, 6719, 240, 4, 29, "Input",ExpressionUUID->"43524089-a0eb-4e17-8202-245f84006519"],
Cell[324841, 6725, 618, 17, 29, "Input",ExpressionUUID->"0d87a2c4-dbb9-4b69-9cbd-5329e4c7140f"]
}, Closed]],
Cell[CellGroupData[{
Cell[325496, 6747, 232, 3, 37, "Subsubsection",ExpressionUUID->"1b109d2e-a32c-48ad-9a6b-09b964323db5",
 CellTags->"c:40"],
Cell[325731, 6752, 561, 11, 29, "Input",ExpressionUUID->"d7bdf8d5-6e6b-401a-9fb0-4bd3e02954af"],
Cell[326295, 6765, 567, 13, 29, "Input",ExpressionUUID->"bc8e7efa-dd51-4c32-b014-721652d5ace8"],
Cell[326865, 6780, 605, 16, 29, "Input",ExpressionUUID->"346bed12-bfcb-401c-8796-fa1043ebaeac"]
}, Closed]],
Cell[CellGroupData[{
Cell[327507, 6801, 222, 3, 37, "Subsubsection",ExpressionUUID->"202a85c6-aa77-469d-80b0-13a415d3aa61",
 CellTags->"c:41"],
Cell[327732, 6806, 222, 3, 35, "Text",ExpressionUUID->"e24414a3-74e8-46ce-b0b6-aa68e3bb6b37"],
Cell[327957, 6811, 305, 5, 29, "Input",ExpressionUUID->"61f94af4-5685-4721-b8e5-76cc0311a7c5"],
Cell[328265, 6818, 212, 5, 35, "Text",ExpressionUUID->"f029d1df-9364-4a0f-aa02-4b00dc60486b"],
Cell[CellGroupData[{
Cell[328502, 6827, 2010, 38, 50, "Input",ExpressionUUID->"df9ae3da-52fc-492a-9b8d-9589c9e0af8a"],
Cell[330515, 6867, 623, 10, 33, "Output",ExpressionUUID->"5eb3a8e6-5a64-494f-93fd-265358dd1a69"]
}, Open  ]],
Cell[331153, 6880, 210, 3, 29, "Input",ExpressionUUID->"b57474ca-c936-4652-9fd6-663016d6a0c8"],
Cell[331366, 6885, 346, 8, 29, "Input",ExpressionUUID->"6b4cf163-3775-42de-9877-12d6df906e42"],
Cell[331715, 6895, 903, 18, 29, "Input",ExpressionUUID->"3b55af4b-60ef-43ab-be1f-e829b9d3ed23"],
Cell[332621, 6915, 1057, 22, 29, "Input",ExpressionUUID->"1bb71494-5ac8-49d8-92ef-45d8ca18d99e"],
Cell[333681, 6939, 209, 3, 29, "Input",ExpressionUUID->"5d51a2d1-42ce-414b-9912-b705c804ab94"],
Cell[333893, 6944, 425, 9, 29, "Input",ExpressionUUID->"d640f839-5ffc-4132-865e-cae8836aa204"],
Cell[334321, 6955, 419, 9, 29, "Input",ExpressionUUID->"5f8b9cc7-a71a-4c83-b65d-69c317df4b2a"],
Cell[334743, 6966, 385, 6, 29, "Input",ExpressionUUID->"db9ffc7c-3d10-42ae-b9b5-62c501a3cb07"],
Cell[335131, 6974, 778, 16, 29, "Input",ExpressionUUID->"8b5b27ec-0057-4a86-964e-d0783ae008fb"],
Cell[335912, 6992, 635, 13, 29, "Input",ExpressionUUID->"ef9d930e-46b1-4c08-ab9d-54b1b8bc8691"],
Cell[336550, 7007, 294, 6, 35, "Text",ExpressionUUID->"625f8eae-ed64-4f89-b2e8-8ef3060fd8cb"],
Cell[336847, 7015, 418, 11, 29, "Input",ExpressionUUID->"264346c4-6b3f-4ece-bceb-9414c6eb6281"],
Cell[337268, 7028, 657, 14, 29, "Input",ExpressionUUID->"894f94a1-23b7-4463-b2d5-abe725435936"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[337986, 7049, 410, 6, 69, "Chapter",ExpressionUUID->"992e29c7-eb37-4be7-8ec9-9e6018497ff7"],
Cell[CellGroupData[{
Cell[338421, 7059, 238, 3, 54, "Subsection",ExpressionUUID->"6f5b2db9-e346-4bd8-a44c-8cca8c836fad",
 CellTags->"c:42"],
Cell[338662, 7064, 258, 7, 29, "Input",ExpressionUUID->"85354d95-4da5-435b-a9a0-c401d639ef3f"],
Cell[338923, 7073, 1320, 34, 150, "Input",ExpressionUUID->"ca9c1bf2-57fe-44ba-a162-d1be1d85a590"],
Cell[340246, 7109, 794, 19, 70, "Input",ExpressionUUID->"4c0239ee-d9ac-403c-a918-dd9d399cea36"],
Cell[341043, 7130, 2514, 60, 170, "Input",ExpressionUUID->"f1884fe1-586b-4852-b44e-8ac602f5e42f"],
Cell[343560, 7192, 2523, 60, 170, "Input",ExpressionUUID->"53fc9933-5872-4125-b0f8-f68f33bb3a1a"],
Cell[346086, 7254, 2626, 62, 170, "Input",ExpressionUUID->"75be3c89-2250-4c15-8fc1-95fc5153710d"],
Cell[348715, 7318, 240, 5, 29, "Input",ExpressionUUID->"ea6aef23-0e48-4bd6-8dc9-a82b13ee01d7"]
}, Closed]],
Cell[CellGroupData[{
Cell[348992, 7328, 245, 3, 38, "Subsection",ExpressionUUID->"33202e28-0fa0-4880-a579-60fd33dd0adb",
 CellTags->"c:43"],
Cell[349240, 7333, 1610, 41, 90, "Input",ExpressionUUID->"753b0a2a-9d05-49da-9bee-81c36f6f89af"],
Cell[350853, 7376, 1561, 40, 90, "Input",ExpressionUUID->"400f995e-d5ab-42fe-a587-30e34e83f443"],
Cell[352417, 7418, 1872, 48, 90, "Input",ExpressionUUID->"b43542ca-c929-4028-8aee-c7176c7cf527"]
}, Closed]],
Cell[CellGroupData[{
Cell[354326, 7471, 180, 2, 38, "Subsection",ExpressionUUID->"6c868790-2893-463e-a2d0-1a9a571113d7",
 CellTags->"c:44"],
Cell[CellGroupData[{
Cell[354531, 7477, 2343, 67, 70, "Input",ExpressionUUID->"1ef20ff1-6d49-4deb-877d-7de44dfed40d"],
Cell[356877, 7546, 67975, 1187, 247, "Output",ExpressionUUID->"fc697f41-9796-4b72-97da-115bdecd868d"],
Cell[424855, 8735, 69942, 1216, 246, "Output",ExpressionUUID->"00fe73f4-bf7a-43a7-9356-87c5a7cebdbb"],
Cell[494800, 9953, 66677, 1182, 245, "Output",ExpressionUUID->"bd8bc93e-af9d-4dbf-b8bd-a497c26dd040"]
}, Open  ]],
Cell[CellGroupData[{
Cell[561514, 11140, 2426, 59, 110, "Input",ExpressionUUID->"e9c3029c-e293-4798-9790-fdf3c938956f"],
Cell[563943, 11201, 10687, 236, 338, "Output",ExpressionUUID->"ec627cee-3a0e-4f2e-9e46-744c73a851fb"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[574691, 11444, 268, 4, 69, "Chapter",ExpressionUUID->"b341beda-5ee8-44a9-9312-619b2c8f81f1"],
Cell[CellGroupData[{
Cell[574984, 11452, 177, 2, 54, "Subsection",ExpressionUUID->"b8cae968-01be-4d76-93c4-914725dacb60",
 CellTags->"c:45"],
Cell[575164, 11456, 423, 8, 35, "Text",ExpressionUUID->"838c8185-e694-4949-9dd0-0c59b961e8bf"],
Cell[575590, 11466, 685, 19, 70, "Input",ExpressionUUID->"b207c621-7de3-43fa-8bdf-ef8e64f0d8bd"],
Cell[576278, 11487, 808, 19, 70, "Input",ExpressionUUID->"6a0e43c3-6e49-4acf-a0d5-faa81d3c50fd"]
}, Closed]],
Cell[CellGroupData[{
Cell[577123, 11511, 187, 2, 38, "Subsection",ExpressionUUID->"e4d814b7-307b-44b1-8176-77d613190d5c",
 CellTags->"c:46"],
Cell[577313, 11515, 222, 4, 35, "Text",ExpressionUUID->"08e92c98-8105-4c77-848e-fff3f471f75e"],
Cell[577538, 11521, 821, 21, 50, "Input",ExpressionUUID->"b1483bf9-66dd-4581-84a9-c843d760fb15"],
Cell[CellGroupData[{
Cell[578384, 11546, 602, 15, 29, "Input",ExpressionUUID->"e6d0f667-bae9-4dd4-a3f7-1cb0f0305255"],
Cell[578989, 11563, 6376, 137, 209, "Output",ExpressionUUID->"f78ee4cb-fa48-404d-aa06-ea0bf8ec82eb"]
}, Open  ]],
Cell[585380, 11703, 261, 6, 35, "Text",ExpressionUUID->"84309912-9796-472d-8aa5-a93ea74bc056"],
Cell[585644, 11711, 2257, 59, 150, "Input",ExpressionUUID->"83924ee4-b18d-4de6-b618-a5e212f482da"],
Cell[587904, 11772, 760, 18, 50, "Input",ExpressionUUID->"d3e7e3d0-876a-4f04-a706-ec1533d2392e"]
}, Closed]],
Cell[CellGroupData[{
Cell[588701, 11795, 190, 2, 38, "Subsection",ExpressionUUID->"a32b7405-2d28-4efa-ad38-9fc2d3fe6ff7",
 CellTags->"c:47"],
Cell[588894, 11799, 192, 3, 35, "Text",ExpressionUUID->"07ba9190-658c-49b3-addf-eafc175f6ae3"],
Cell[CellGroupData[{
Cell[589111, 11806, 983, 21, 29, "Input",ExpressionUUID->"2b8f0007-7a5b-43a9-8a6e-74ff32e52a1c"],
Cell[590097, 11829, 443, 12, 33, "Output",ExpressionUUID->"e3534870-9bdc-4750-9122-5004353c44ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[590577, 11846, 983, 21, 29, "Input",ExpressionUUID->"42ec77b4-7ad7-4fd9-a626-d9584a62749e"],
Cell[591563, 11869, 443, 12, 33, "Output",ExpressionUUID->"ad6e83cc-ca97-4a17-9d24-028404d7a9fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[592043, 11886, 984, 21, 29, "Input",ExpressionUUID->"4e602531-e8ac-4a28-9dbc-6c382d3115d2"],
Cell[593030, 11909, 368, 9, 33, "Output",ExpressionUUID->"0b26a214-4c8d-4832-9f77-0e4f22c66c4a"]
}, Open  ]],
Cell[593413, 11921, 247, 6, 35, "Text",ExpressionUUID->"691708d6-126e-4d41-be2c-d857f4226500"],
Cell[CellGroupData[{
Cell[593685, 11931, 474, 12, 29, "Input",ExpressionUUID->"4b0a9093-cbed-430e-a3b8-9877643a7ed4"],
Cell[594162, 11945, 257, 5, 23, "Print",ExpressionUUID->"d61108cc-d590-4f51-a3ea-792bce6605ac"]
}, Open  ]],
Cell[594434, 11953, 254, 6, 35, "Text",ExpressionUUID->"fd6e9fa0-b5a6-4e96-bc4d-c468cb86b649"],
Cell[CellGroupData[{
Cell[594713, 11963, 1056, 22, 29, "Input",ExpressionUUID->"8de819ca-705a-4220-8130-c192af8d549b"],
Cell[CellGroupData[{
Cell[595794, 11989, 207, 4, 23, "Print",ExpressionUUID->"6046eeda-0000-41ec-9858-fe14e3104f85"],
Cell[596004, 11995, 385, 9, 23, "Print",ExpressionUUID->"1f80f1e7-b14c-4a4e-b7f6-163241a702fc"],
Cell[596392, 12006, 273, 5, 23, "Print",ExpressionUUID->"ce18d13e-041a-43b1-9088-fc6517baae2b"]
}, Open  ]]
}, Open  ]],
Cell[596692, 12015, 470, 11, 29, "Input",ExpressionUUID->"47a0659c-4df1-4f1b-9d7b-b96779ba5cb1"],
Cell[597165, 12028, 547, 13, 29, "Input",ExpressionUUID->"8c52458d-45d5-40ed-949c-38e8440a1f60"],
Cell[597715, 12043, 173, 3, 35, "Text",ExpressionUUID->"3ef473e1-450e-4731-ae4d-89c5b79bd2a1"],
Cell[CellGroupData[{
Cell[597913, 12050, 876, 20, 29, "Input",ExpressionUUID->"01f5867e-d0e6-4ecc-92aa-dfbb4af4d59e"],
Cell[598792, 12072, 255, 5, 23, "Print",ExpressionUUID->"eae537a1-ef92-451e-8098-af28b66a1d19"]
}, Open  ]],
Cell[599062, 12080, 400, 10, 29, "Input",ExpressionUUID->"3e9a97a0-dd2f-4ec4-bfe3-85b303b130d6"],
Cell[599465, 12092, 471, 11, 29, "Input",ExpressionUUID->"6a2dbfc3-df24-43c6-a38b-c46b51dc77c7"],
Cell[599939, 12105, 212, 3, 29, "Input",ExpressionUUID->"5ffc8d0e-c31a-4ed0-8c25-b069aff53b11"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[600200, 12114, 354, 5, 69, "Chapter",ExpressionUUID->"206c273f-0ccf-4695-9121-5be90826dd71"],
Cell[CellGroupData[{
Cell[600579, 12123, 187, 2, 54, "Subsection",ExpressionUUID->"8445ef95-5973-4648-871d-e56f6b632789",
 CellTags->"c:48"],
Cell[600769, 12127, 922, 24, 90, "Input",ExpressionUUID->"57234781-617a-4162-9879-35e308aaf866"],
Cell[601694, 12153, 956, 29, 90, "Input",ExpressionUUID->"24da691e-d6de-410f-b0ef-1d2de61863d9"],
Cell[602653, 12184, 662, 20, 70, "Input",ExpressionUUID->"8984a19f-eabf-4e62-97e2-98267e2bcc61"],
Cell[603318, 12206, 394, 9, 81, "Text",ExpressionUUID->"054abc16-56b6-40bf-a212-835aa4516f1a"],
Cell[603715, 12217, 3324, 91, 130, "Input",ExpressionUUID->"ace4a269-d905-4882-89d8-90bd356cd7f9"]
}, Closed]],
Cell[CellGroupData[{
Cell[607076, 12313, 192, 2, 38, "Subsection",ExpressionUUID->"d12758da-d1d5-43a6-8aaa-503db8464fff",
 CellTags->"c:49"],
Cell[607271, 12317, 712, 17, 29, "Input",ExpressionUUID->"552a216f-db51-4a52-837c-8826af038d2c"],
Cell[607986, 12336, 718, 17, 29, "Input",ExpressionUUID->"75ab4e15-7874-4e05-accb-830a5a8437a0"],
Cell[608707, 12355, 771, 18, 29, "Input",ExpressionUUID->"e5f441ab-6c4e-4b17-a787-cc5a724424cb"]
}, Closed]],
Cell[CellGroupData[{
Cell[609515, 12378, 180, 2, 38, "Subsection",ExpressionUUID->"3661d520-8d0a-475a-b073-957f7c24d670",
 CellTags->"c:50"],
Cell[609698, 12382, 2361, 67, 70, "Input",ExpressionUUID->"2df86a65-6a91-4969-a35f-485561eeaf98"],
Cell[612062, 12451, 1530, 36, 110, "Input",ExpressionUUID->"c373eede-fb5d-4af4-906d-3ef381ffe28c"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[613641, 12493, 234, 4, 69, "Chapter",ExpressionUUID->"47034db1-d0d6-4b23-af6e-0f6546045b3b"],
Cell[CellGroupData[{
Cell[613900, 12501, 192, 2, 54, "Subsection",ExpressionUUID->"25adc37f-e4d2-4d9f-a5ed-8612c20d46c3",
 CellTags->"c:51"],
Cell[614095, 12505, 199, 3, 35, "Text",ExpressionUUID->"ea42799b-6877-4b38-b569-13addb9d2db3"],
Cell[614297, 12510, 1148, 34, 110, "Input",ExpressionUUID->"27dca582-2b36-49e0-88a2-e3bb99bd2d01"],
Cell[615448, 12546, 245, 5, 29, "Input",ExpressionUUID->"9d2e7d89-461c-48fc-92b8-0015aa0d0da2"],
Cell[615696, 12553, 366, 8, 29, "Input",ExpressionUUID->"512a6259-5ab7-4fd1-b670-1393be8510df"],
Cell[616065, 12563, 178, 3, 35, "Text",ExpressionUUID->"06fed56e-cf72-4eab-877f-8a2fa48264d1"],
Cell[616246, 12568, 221, 4, 29, "Input",ExpressionUUID->"505f5e4d-61b2-45a6-8a8a-10a30bdf2cee"]
}, Closed]],
Cell[CellGroupData[{
Cell[616504, 12577, 179, 2, 38, "Subsection",ExpressionUUID->"37567aef-8b97-425f-abdf-d82ae053b962",
 CellTags->"c:52"],
Cell[616686, 12581, 1201, 29, 90, "Input",ExpressionUUID->"b6a6e3c8-61e2-4f74-8ee2-1ecd45f55cfc"]
}, Closed]],
Cell[CellGroupData[{
Cell[617924, 12615, 386, 5, 38, "Subsection",ExpressionUUID->"29712ec0-7f9d-4363-bd69-fedc89b926de",
 CellTags->"c:53"],
Cell[CellGroupData[{
Cell[618335, 12624, 178, 2, 45, "Subsubsection",ExpressionUUID->"7b6f1d42-3372-4eae-9f3b-52b01fd6c20a",
 CellTags->"c:54"],
Cell[618516, 12628, 290, 6, 35, "Text",ExpressionUUID->"27abfcd5-f584-46cd-8df8-6aa1f69b339e"],
Cell[618809, 12636, 1075, 27, 110, "Input",ExpressionUUID->"e685e2ff-8cec-433d-90f3-cd1e4ba107a4"],
Cell[619887, 12665, 246, 5, 29, "Input",ExpressionUUID->"2c219bff-98ca-4149-8f73-f5d4c18d1d6f"],
Cell[620136, 12672, 267, 5, 29, "Input",ExpressionUUID->"58a620c5-fd10-4d1a-b298-19131a1f4f75"],
Cell[620406, 12679, 623, 15, 50, "Input",ExpressionUUID->"82cbf336-e0f4-43db-94e4-46d687594afa"],
Cell[621032, 12696, 333, 5, 29, "Input",ExpressionUUID->"e78c9670-4878-485f-9214-babcab9aa322"]
}, Closed]],
Cell[CellGroupData[{
Cell[621402, 12706, 183, 2, 37, "Subsubsection",ExpressionUUID->"75236b9f-93a9-4123-9f0b-e0d6063ca27a",
 CellTags->"c:55"],
Cell[621588, 12710, 265, 6, 35, "Text",ExpressionUUID->"8f267ee5-face-4d96-81f2-eb7a65fb2c80"],
Cell[621856, 12718, 740, 14, 29, "Input",ExpressionUUID->"b25ec0c8-9dee-4355-8b9d-d5d64b8430a5"],
Cell[622599, 12734, 681, 17, 29, "Input",ExpressionUUID->"2421eea9-a6e2-44b3-aab6-fe2b35f370c9"],
Cell[623283, 12753, 218, 5, 35, "Text",ExpressionUUID->"645118b4-3efb-4e87-b82b-7000552f32c3"],
Cell[623504, 12760, 484, 13, 29, "Input",ExpressionUUID->"3d0989cb-3f8b-44de-811e-bb762ce4f8ac"],
Cell[623991, 12775, 327, 7, 29, "Input",ExpressionUUID->"cb791753-16a4-485a-856b-2d0dfaadcfaf"]
}, Closed]],
Cell[CellGroupData[{
Cell[624355, 12787, 199, 2, 37, "Subsubsection",ExpressionUUID->"d4ebefef-2c40-4afa-86e2-01e82ef7e608",
 CellTags->"c:56"],
Cell[624557, 12791, 229, 4, 35, "Text",ExpressionUUID->"fcfdba04-a6f9-409b-bf78-69c9d9a513ea"],
Cell[624789, 12797, 886, 18, 29, "Input",ExpressionUUID->"bd7f1df1-29c6-4ca4-a54c-3c906bd69bd4"],
Cell[625678, 12817, 188, 3, 35, "Text",ExpressionUUID->"2c663dae-ce55-4c0e-9ead-798d28b2441d"],
Cell[625869, 12822, 658, 14, 29, "Input",ExpressionUUID->"9b20175a-57c0-4449-83ec-169ccd6f1d3d"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[626576, 12842, 178, 2, 54, "Subsection",ExpressionUUID->"194fc7a6-9250-4380-ab91-b6f48a0893c5",
 CellTags->"c:57"],
Cell[CellGroupData[{
Cell[626779, 12848, 217, 3, 45, "Subsubsection",ExpressionUUID->"c83a9054-dd74-47d7-ad95-3b9d6619e603",
 CellTags->"c:58"],
Cell[626999, 12853, 235, 6, 35, "Text",ExpressionUUID->"c0285daf-d6f8-45d3-b7b0-a5175ce9af64"],
Cell[627237, 12861, 772, 20, 70, "Input",ExpressionUUID->"2c24046e-db0b-4e2d-93ce-548abb04f40d"],
Cell[628012, 12883, 194, 3, 35, "Text",ExpressionUUID->"ee6a7083-6d3f-4950-8cbe-77fbc5364897"],
Cell[CellGroupData[{
Cell[628231, 12890, 1209, 27, 110, "Input",ExpressionUUID->"fea884d6-0f69-4111-9d39-fa9e2a661e4d"],
Cell[629443, 12919, 35583, 635, 141, "Output",ExpressionUUID->"00844d33-5a68-4ccb-9868-d7f3a13305a4"],
Cell[665029, 13556, 37502, 663, 141, "Output",ExpressionUUID->"7860f507-370e-4501-a80e-a0259b7c3ac2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[702580, 14225, 254, 3, 37, "Subsubsection",ExpressionUUID->"37c42ac9-91fe-46e0-b5f0-8a8055e0e5be",
 CellTags->"c:59"],
Cell[702837, 14230, 219, 5, 35, "Text",ExpressionUUID->"0f42b6f0-0ac9-4f04-a3fa-eb1d2d31934f"],
Cell[703059, 14237, 860, 21, 50, "Input",ExpressionUUID->"9b64546e-04bc-4e97-994c-1aede4a4f620"],
Cell[703922, 14260, 452, 11, 29, "Input",ExpressionUUID->"18361a8d-0015-46b1-91d8-24b5e8b80e9a"],
Cell[704377, 14273, 445, 10, 29, "Input",ExpressionUUID->"7a02e95a-55d3-4dcf-811f-6f7a57c0aed4"],
Cell[704825, 14285, 450, 11, 29, "Input",ExpressionUUID->"c8cd8936-aaa0-4ffd-bcc6-64ae1a6de48c"]
}, Closed]],
Cell[CellGroupData[{
Cell[705312, 14301, 209, 2, 37, "Subsubsection",ExpressionUUID->"e507394d-7fce-45ce-bab9-205bc132c31e",
 CellTags->"c:60"],
Cell[705524, 14305, 263, 6, 35, "Text",ExpressionUUID->"f1339e48-5568-4181-9103-13343d87b5ba"],
Cell[705790, 14313, 684, 14, 29, "Input",ExpressionUUID->"01726389-dcb2-4df4-a42f-14741a4d3969"],
Cell[706477, 14329, 446, 9, 29, "Input",ExpressionUUID->"377f4aec-7083-4a3a-92f1-91ca05e12f9b"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[706972, 14344, 228, 3, 54, "Subsection",ExpressionUUID->"46cb5c22-df36-42f1-8278-128db9e6546d",
 CellTags->"c:61"],
Cell[CellGroupData[{
Cell[707225, 14351, 182, 2, 45, "Subsubsection",ExpressionUUID->"46110b45-9f52-4171-ae7f-cc9053aa8a39",
 CellTags->"c:62"],
Cell[707410, 14355, 242, 4, 29, "Input",ExpressionUUID->"4cc308f1-c626-492a-91a8-f47d2cfafa5c"],
Cell[707655, 14361, 180, 3, 35, "Text",ExpressionUUID->"9b1f7978-adca-4e60-bbe3-3c5f3c0ab3f1"],
Cell[CellGroupData[{
Cell[707860, 14368, 211, 3, 29, "Input",ExpressionUUID->"a1f009cc-d181-4348-ab4c-2221322f7f8f"],
Cell[708074, 14373, 556, 12, 33, "Output",ExpressionUUID->"cb0fa58f-6071-4c9c-a759-23c567d033ef"]
}, Open  ]],
Cell[708645, 14388, 938, 17, 29, "Input",ExpressionUUID->"3cde8bc5-3047-4773-bee2-bea3209a1f6d"],
Cell[709586, 14407, 186, 3, 35, "Text",ExpressionUUID->"c1085988-fab4-4e7a-b40f-1be293ded423"],
Cell[CellGroupData[{
Cell[709797, 14414, 496, 11, 70, "Input",ExpressionUUID->"61179b73-6cfe-420a-8029-ad2d32a322e9"],
Cell[710296, 14427, 357, 9, 33, "Output",ExpressionUUID->"8f80dc84-d34c-4493-901f-a83e603aa9a9"]
}, Open  ]],
Cell[710668, 14439, 185, 3, 35, "Text",ExpressionUUID->"be4e95c3-60da-4f88-9331-306f45cd1c4e"],
Cell[710856, 14444, 889, 22, 50, "Input",ExpressionUUID->"81b68c3e-6296-44bd-95a1-16e20540b96c"],
Cell[711748, 14468, 677, 17, 29, "Input",ExpressionUUID->"5feffc29-319a-4d91-98df-d76aafbbbd23"],
Cell[712428, 14487, 350, 8, 29, "Input",ExpressionUUID->"8b0730ee-7362-439c-a55d-7b48c7668c7d"],
Cell[712781, 14497, 489, 10, 29, "Input",ExpressionUUID->"9a36fc92-d1e1-461a-affd-7a4634929124"],
Cell[713273, 14509, 420, 9, 29, "Input",ExpressionUUID->"c10b5f5f-1c4e-46fc-8457-7ae8c5de5e55"],
Cell[713696, 14520, 418, 9, 29, "Input",ExpressionUUID->"53def0d8-f168-477c-b7cb-c8fe6942331d"],
Cell[714117, 14531, 343, 7, 35, "Text",ExpressionUUID->"b7b2a8a2-13df-4751-8d89-c4d73b0ea43f"],
Cell[714463, 14540, 1500, 36, 50, "Input",ExpressionUUID->"0e3b5a12-1999-4716-a93f-1cb468138eef"],
Cell[715966, 14578, 301, 6, 29, "Input",ExpressionUUID->"9219a9f5-b371-4dfb-9bc4-f5c419d321ba"],
Cell[716270, 14586, 447, 11, 29, "Input",ExpressionUUID->"d95b158f-77db-4726-b332-9f2e44c6093c"],
Cell[716720, 14599, 270, 6, 35, "Text",ExpressionUUID->"db2d0a1f-9d4a-4bf6-94d9-6893ddbeb429"],
Cell[716993, 14607, 671, 17, 29, "Input",ExpressionUUID->"81d0d641-85ea-42a6-9641-aa770949ecd2"],
Cell[717667, 14626, 340, 6, 29, "Input",ExpressionUUID->"28bec43e-e76d-4463-9d29-c32ba0fd6212"]
}, Closed]],
Cell[CellGroupData[{
Cell[718044, 14637, 300, 4, 37, "Subsubsection",ExpressionUUID->"5df7f489-c3af-447f-892b-2d741b7472b9",
 CellTags->"c:63"],
Cell[718347, 14643, 699, 17, 90, "Input",ExpressionUUID->"24c3899b-694b-4771-a7d6-cec18d60bac9"],
Cell[719049, 14662, 387, 10, 29, "Input",ExpressionUUID->"3c550b97-fb74-42b7-bd13-854bf4fdc94d"],
Cell[719439, 14674, 306, 7, 35, "Text",ExpressionUUID->"827dae19-915f-47c7-88e0-29476a68b6eb"],
Cell[719748, 14683, 408, 7, 29, "Input",ExpressionUUID->"6288443b-53ef-46c2-adb6-5fd242877ecd"],
Cell[720159, 14692, 561, 16, 29, "Input",ExpressionUUID->"7d283bc0-0b1c-4f90-843a-7e94e6175fe9"],
Cell[720723, 14710, 192, 3, 35, "Text",ExpressionUUID->"c7e1f636-4a65-44ba-97f5-3c532c2ec232"],
Cell[CellGroupData[{
Cell[720940, 14717, 750, 21, 70, "Input",ExpressionUUID->"016438a3-9162-4cbf-bae2-0cd4f7115cfa"],
Cell[721693, 14740, 2416, 46, 284, "Output",ExpressionUUID->"452a4606-7043-40ac-a997-ae2b5dacc5de"],
Cell[724112, 14788, 2468, 46, 284, "Output",ExpressionUUID->"a786636f-6085-4660-b164-cc314056772b"]
}, Open  ]],
Cell[726595, 14837, 240, 6, 35, "Text",ExpressionUUID->"811ccd9c-c131-4267-85e8-406bc2e46d47"],
Cell[726838, 14845, 902, 22, 29, "Input",ExpressionUUID->"a7a27062-ebb2-4ed3-a1d1-3025b602e14b"]
}, Closed]],
Cell[CellGroupData[{
Cell[727777, 14872, 243, 3, 37, "Subsubsection",ExpressionUUID->"e037ed65-c2cd-4cc5-8065-ba7af72e972b",
 CellTags->"c:64"],
Cell[728023, 14877, 277, 6, 35, "Text",ExpressionUUID->"da9608bd-9f5a-4fa4-b8a1-f1650dab7c2a"],
Cell[CellGroupData[{
Cell[728325, 14887, 222, 4, 29, "Input",ExpressionUUID->"ff560c23-792c-49a2-9cd2-ce9d09a17f64"],
Cell[728550, 14893, 392, 9, 33, "Output",ExpressionUUID->"e896aa8b-c98c-49f3-bfa8-6fd7d7341e2a"]
}, Open  ]],
Cell[728957, 14905, 436, 9, 29, "Input",ExpressionUUID->"3fe6c7c2-00b5-4d1e-b4f8-750688380984"],
Cell[729396, 14916, 244, 5, 29, "Input",ExpressionUUID->"25e62b7b-fcf3-450b-9801-5da78cc91f73"],
Cell[729643, 14923, 219, 4, 29, "Input",ExpressionUUID->"d05c621c-17a6-4dab-b5a8-744183e72ded"],
Cell[729865, 14929, 227, 5, 35, "Text",ExpressionUUID->"c2e709da-971c-4de4-a9f5-34d1b012c9b1"],
Cell[730095, 14936, 660, 18, 50, "Input",ExpressionUUID->"cfeacfe6-ee62-43ac-999d-2a12cb57a737"],
Cell[730758, 14956, 381, 9, 29, "Input",ExpressionUUID->"ecc0c585-9da4-4f6a-a6fe-b989e06865e6"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[731200, 14972, 314, 5, 69, "Chapter",ExpressionUUID->"1751ae4d-03af-43ab-814a-5f1f74188c44"],
Cell[CellGroupData[{
Cell[731539, 14981, 189, 2, 54, "Subsection",ExpressionUUID->"d31f39f7-0271-44c7-bb22-4483ca591ade",
 CellTags->"c:65"],
Cell[731731, 14985, 189, 3, 70, "Text",ExpressionUUID->"10ef7ece-7769-4d88-bcb0-24ae840e2ae7"],
Cell[731923, 14990, 1648, 49, 70, "Input",ExpressionUUID->"5bf5b320-1c49-437a-99de-8917ff7c9d0c"],
Cell[733574, 15041, 231, 4, 70, "Text",ExpressionUUID->"924a6c5c-f5e2-49c7-9aec-d99cba543428"],
Cell[733808, 15047, 1790, 56, 70, "Input",ExpressionUUID->"ac329d16-f122-4398-9d78-bd98c3eb7a70"],
Cell[735601, 15105, 225, 6, 70, "Text",ExpressionUUID->"1460edd8-ebc9-4085-89c9-9648c5994b0c"],
Cell[735829, 15113, 928, 24, 70, "Input",ExpressionUUID->"8ef48365-f337-4591-929a-e3834a62a6b4"],
Cell[736760, 15139, 152, 3, 70, "Text",ExpressionUUID->"a46f428a-dc95-4a9c-94ee-db51bba31c07"],
Cell[736915, 15144, 638, 15, 70, "Input",ExpressionUUID->"4c01170b-1dc6-4a6f-94bb-326f8fac8dcb"],
Cell[737556, 15161, 283, 4, 70, "Text",ExpressionUUID->"26edf3b3-8ad9-461c-86ea-f42fcabaaf29"],
Cell[737842, 15167, 618, 15, 70, "Input",ExpressionUUID->"dc246c71-2d8c-4755-93db-3ddef0094fa6"],
Cell[738463, 15184, 325, 6, 70, "Text",ExpressionUUID->"2870d320-5902-4ad9-9183-18b8640c365a"],
Cell[738791, 15192, 1369, 32, 70, "Input",ExpressionUUID->"bc673003-00c7-4136-ab12-9df2d7f84eeb"]
}, Closed]],
Cell[CellGroupData[{
Cell[740197, 15229, 249, 3, 38, "Subsection",ExpressionUUID->"09dc6daf-59ee-4840-bd77-0dfd2bff5562",
 CellTags->"c:66"],
Cell[740449, 15234, 920, 21, 70, "Input",ExpressionUUID->"936e9f89-0d66-473b-9277-3d000d5d55d5"],
Cell[741372, 15257, 223, 5, 70, "Text",ExpressionUUID->"8fa6be86-0e1e-4c2d-92fd-815afc33504c"],
Cell[741598, 15264, 631, 15, 70, "Input",ExpressionUUID->"16a20155-a9d0-46dd-9004-3126334dafa9"],
Cell[742232, 15281, 631, 15, 70, "Input",ExpressionUUID->"d9be655b-99c1-4a49-92e9-1066227e6a3d"]
}, Closed]],
Cell[CellGroupData[{
Cell[742900, 15301, 180, 2, 38, "Subsection",ExpressionUUID->"f1a32196-e07f-40de-9d22-2a3e291b7dda",
 CellTags->"c:67"],
Cell[743083, 15305, 246, 4, 70, "Text",ExpressionUUID->"ca482818-c0ff-4fd6-a65d-7ccf593d5fbc"],
Cell[743332, 15311, 1831, 49, 70, "Input",ExpressionUUID->"e1644f4b-cc91-419f-a202-938b3f310269"],
Cell[745166, 15362, 294, 4, 70, "Text",ExpressionUUID->"eb75b5be-106f-402c-87c8-a260f27e02a9"],
Cell[745463, 15368, 2010, 52, 70, "Input",ExpressionUUID->"73bedda0-2b21-40b2-b6f2-ac649cc09720"],
Cell[747476, 15422, 1471, 33, 70, "Input",ExpressionUUID->"e72fb9d0-91ec-427c-bffa-63847b71c7e9"],
Cell[748950, 15457, 6704, 149, 70, "Input",ExpressionUUID->"659a2995-7727-4d66-9c45-aaeb505470d5"],
Cell[755657, 15608, 1241, 31, 70, "Input",ExpressionUUID->"7039e879-900b-4789-b0f3-47a256fa0bbf"],
Cell[756901, 15641, 1521, 33, 70, "Input",ExpressionUUID->"e4f0b636-a1bc-40f5-a4ba-1f9a6c814878"],
Cell[758425, 15676, 1294, 32, 70, "Input",ExpressionUUID->"9ea6aef0-d1d8-4b93-aa04-3764b091c42d"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[759768, 15714, 450, 7, 69, "Chapter",ExpressionUUID->"bc90db84-1b9a-464f-bfcb-7bfcdc17cc16"],
Cell[CellGroupData[{
Cell[760243, 15725, 179, 2, 54, "Subsection",ExpressionUUID->"01c3231d-098c-4ccb-98c5-ca29c556a67d",
 CellTags->"c:68"],
Cell[760425, 15729, 2004, 45, 110, "Input",ExpressionUUID->"3d03fde1-41a5-4faa-a08e-3aa8eeca546a"]
}, Closed]],
Cell[CellGroupData[{
Cell[762466, 15779, 249, 3, 38, "Subsection",ExpressionUUID->"7b2df312-5a60-4afc-9c09-a780d1b79f27",
 CellTags->"c:69"],
Cell[762718, 15784, 192, 3, 35, "Text",ExpressionUUID->"5f0b1bca-e3d5-41ed-9a70-a694208969b4"],
Cell[762913, 15789, 391, 9, 29, "Input",ExpressionUUID->"d2775a6c-75c0-463c-becb-f6bfa512909f"],
Cell[763307, 15800, 245, 5, 29, "Input",ExpressionUUID->"12720b56-7e2e-45cc-952c-34693e5f7fe2"],
Cell[763555, 15807, 190, 3, 35, "Text",ExpressionUUID->"dcc0e6b5-0a89-49d9-90d4-a98753f46dde"],
Cell[763748, 15812, 364, 9, 29, "Input",ExpressionUUID->"f8f69f22-ac8e-4445-9f50-f25c1374ad4c"],
Cell[764115, 15823, 414, 10, 29, "Input",ExpressionUUID->"9dfec1b0-002d-4e9b-8152-5110df278580"],
Cell[764532, 15835, 375, 8, 29, "Input",ExpressionUUID->"b35d80d6-8ab6-4048-8c66-b1b21e5c335c"],
Cell[764910, 15845, 617, 16, 29, "Input",ExpressionUUID->"dec053e8-f133-47db-9804-5e67c2ee6d0f"]
}, Closed]],
Cell[CellGroupData[{
Cell[765564, 15866, 261, 3, 38, "Subsection",ExpressionUUID->"d662ecba-578b-4489-8e5f-fa36d3871aa7",
 CellTags->"c:70"],
Cell[765828, 15871, 908, 22, 50, "Input",ExpressionUUID->"e94f71ad-35d3-45b1-b3f9-da7a4a305fbf"],
Cell[766739, 15895, 352, 8, 29, "Input",ExpressionUUID->"67eef561-a4d4-4ecb-820a-70cda30789b1"],
Cell[767094, 15905, 221, 5, 35, "Text",ExpressionUUID->"416dd865-07cf-4983-831e-47ee4c74ed0e"],
Cell[767318, 15912, 575, 12, 29, "Input",ExpressionUUID->"d1993912-fbeb-4d5c-9270-ec462e67e431"],
Cell[767896, 15926, 181, 3, 35, "Text",ExpressionUUID->"0e98120e-f12a-4c08-9535-de77cbef1e91"],
Cell[768080, 15931, 1209, 31, 110, "Input",ExpressionUUID->"9b120239-90bf-4ad0-aecf-298d967ccc6f"],
Cell[769292, 15964, 552, 9, 29, "Input",ExpressionUUID->"563e0d28-bc72-4f64-8c7f-3ab5a3ead7ec"],
Cell[769847, 15975, 362, 8, 29, "Input",ExpressionUUID->"ae4be570-d512-46ce-8fcc-f542bee08aea"],
Cell[770212, 15985, 333, 7, 35, "Text",ExpressionUUID->"29a9ffcf-a4f5-4810-b77b-7ca390550ef8"],
Cell[770548, 15994, 236, 5, 29, "Input",ExpressionUUID->"46fa9c0a-f8eb-4dbd-baf9-6b99cc953583"],
Cell[CellGroupData[{
Cell[770809, 16003, 4471, 72, 170, "Input",ExpressionUUID->"fca4f62e-c46f-4fc6-9fcc-f999350245f8"],
Cell[CellGroupData[{
Cell[775305, 16079, 366, 9, 23, "Print",ExpressionUUID->"dc7404bb-5745-4d34-92bd-a1d6a92fca23"],
Cell[775674, 16090, 370, 9, 23, "Print",ExpressionUUID->"fc3eba46-2cbf-424e-961d-52ae16bd5445"],
Cell[776047, 16101, 396, 9, 23, "Print",ExpressionUUID->"68716cf5-b308-42d1-b7c1-4226be43e7ec"],
Cell[776446, 16112, 364, 9, 23, "Print",ExpressionUUID->"60811df8-b2e8-4f6a-93df-90cbda10cc26"],
Cell[776813, 16123, 592, 14, 23, "Print",ExpressionUUID->"d1262a54-b653-4867-86e7-39a83c46f0f1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[777454, 16143, 402, 8, 29, "Input",ExpressionUUID->"98003f04-256e-486f-9e6a-32988ea12280"],
Cell[777859, 16153, 4133, 95, 130, "Output",ExpressionUUID->"c9cd08c7-862b-437c-b807-8b6ac5ca3dc0"]
}, Open  ]],
Cell[782007, 16251, 484, 12, 29, "Input",ExpressionUUID->"dfb82d14-cf33-4b95-95f5-3ae78e89659c"],
Cell[782494, 16265, 259, 4, 35, "Text",ExpressionUUID->"8e9aaa2a-5ea2-4fb3-8ba8-9490bfc44b9a"],
Cell[782756, 16271, 1244, 31, 70, "Input",ExpressionUUID->"ff53edd7-43f6-4728-b267-8c4a1d5935e8"],
Cell[784003, 16304, 317, 5, 35, "Text",ExpressionUUID->"ba6f53aa-656b-4275-bc02-f3f4ec042568"],
Cell[CellGroupData[{
Cell[784345, 16313, 3490, 81, 130, "Input",ExpressionUUID->"5c5b6aeb-5210-4c32-9ff9-41545e4bea0f"],
Cell[787838, 16396, 145, 3, 25, "EchoTiming",ExpressionUUID->"603291bf-ef25-48fa-ab7a-d605c659171d"]
}, Open  ]],
Cell[787998, 16402, 330, 5, 35, "Text",ExpressionUUID->"32d1c8b1-1348-4f6b-8174-3144dd70f39a"],
Cell[788331, 16409, 305, 6, 29, "Input",ExpressionUUID->"561ac5b4-5038-4726-95ec-7c7e6d324fe5"],
Cell[788639, 16417, 456, 8, 29, "Input",ExpressionUUID->"9ea64246-3b66-408e-ba59-b74224025c00"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[789144, 16431, 196, 3, 69, "Chapter",ExpressionUUID->"3b817272-df1a-4e68-aaea-c22d9c35e327"],
Cell[CellGroupData[{
Cell[789365, 16438, 224, 3, 54, "Subsection",ExpressionUUID->"16e4c173-1b98-4694-a73e-a9458b44e628",
 CellTags->"c:71"],
Cell[CellGroupData[{
Cell[789614, 16445, 192, 2, 45, "Subsubsection",ExpressionUUID->"2d7a5585-863f-40ad-b02f-be363d7913a3",
 CellTags->"c:72"],
Cell[789809, 16449, 214, 5, 35, "Text",ExpressionUUID->"a933a9a3-528b-4c0e-a038-17f710e1fe43"],
Cell[CellGroupData[{
Cell[790048, 16458, 944, 25, 70, "Input",ExpressionUUID->"07aa0cbd-4fe8-4a6b-9db7-30e546e930eb"],
Cell[790995, 16485, 501, 11, 33, "Output",ExpressionUUID->"c6bc561d-ff78-4ad6-810e-a23853b23ac2"],
Cell[791499, 16498, 22899, 642, 791, "Output",ExpressionUUID->"e697d960-349e-4eaf-afe5-7160ff5507f0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[814447, 17146, 184, 2, 37, "Subsubsection",ExpressionUUID->"26074711-b967-4b74-9ac1-52cb8c789745",
 CellTags->"c:73"],
Cell[CellGroupData[{
Cell[814656, 17152, 1565, 45, 90, "Input",ExpressionUUID->"1d338fd5-7504-4d71-a854-b193d2d7194f"],
Cell[816224, 17199, 3098, 94, 143, "Output",ExpressionUUID->"58710267-d72a-4d32-a49f-f729eb9e7b8f"],
Cell[819325, 17295, 3089, 94, 143, "Output",ExpressionUUID->"8f9d5880-6555-4d71-8cc1-a267d64d3e9f"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[822475, 17396, 243, 3, 54, "Subsection",ExpressionUUID->"2cfca995-51c1-4930-93bd-525f0bdfb9d5",
 CellTags->"c:74"],
Cell[822721, 17401, 3964, 87, 210, "Input",ExpressionUUID->"b250ee77-119c-4a6c-ae60-654c651ae432"]
}, Closed]],
Cell[CellGroupData[{
Cell[826722, 17493, 262, 3, 38, "Subsection",ExpressionUUID->"bdc44691-f744-4c66-a1dd-7438bdd242a3",
 CellTags->"c:75"],
Cell[CellGroupData[{
Cell[827009, 17500, 181, 2, 45, "Subsubsection",ExpressionUUID->"59807f79-d229-49e5-b637-790a17413076",
 CellTags->"c:76"],
Cell[827193, 17504, 5477, 108, 250, "Input",ExpressionUUID->"869625c4-c640-4b6d-963c-5879d140481b"]
}, Closed]],
Cell[CellGroupData[{
Cell[832707, 17617, 276, 4, 37, "Subsubsection",ExpressionUUID->"dab93187-a908-4ba7-ae93-e35b0b7d7535",
 CellTags->"c:77"],
Cell[CellGroupData[{
Cell[833008, 17625, 2976, 74, 210, "Input",ExpressionUUID->"7e2a2150-d80c-4034-83d6-d9565cf12a88"],
Cell[835987, 17701, 136982, 2347, 210, "Output",ExpressionUUID->"bc02be8e-0c22-4954-865f-4312ca869c8d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[973018, 20054, 174, 2, 37, "Subsubsection",ExpressionUUID->"11b0bc08-716e-4837-a55b-d3c98505048d",
 CellTags->"c:78"],
Cell[CellGroupData[{
Cell[973217, 20060, 3503, 86, 210, "Input",ExpressionUUID->"d097a75f-b5e4-4687-abe5-6b28aa73ed5f"],
Cell[976723, 20148, 136711, 2343, 210, "Output",ExpressionUUID->"18767010-9b1b-4d9b-834b-2decdda4c4dc"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1113495, 22498, 190, 2, 54, "Subsection",ExpressionUUID->"6705b400-369d-4acb-94b1-826717b38934",
 CellTags->"c:79"],
Cell[1113688, 22502, 8183, 143, 230, "Input",ExpressionUUID->"3edd32fa-7110-4380-a1ac-e91a7e073cb0"],
Cell[1121874, 22647, 3064, 68, 110, "Input",ExpressionUUID->"1aef8f21-e40a-49dc-bf08-ddabcbdf3501"],
Cell[1124941, 22717, 583, 14, 29, "Input",ExpressionUUID->"04a56dc3-b7cd-4cbf-ac36-5103d5b1f965"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1125573, 22737, 264, 4, 69, "Chapter",ExpressionUUID->"b6662280-803b-4ab0-8481-332a70f0e978"],
Cell[CellGroupData[{
Cell[1125862, 22745, 186, 2, 54, "Subsection",ExpressionUUID->"6a10872d-dcba-422d-a092-ff6bf02d5699",
 CellTags->"c:80"],
Cell[1126051, 22749, 550, 14, 29, "Input",ExpressionUUID->"22f5062f-e958-45c9-8d1c-7514a2cedd75"],
Cell[1126604, 22765, 350, 9, 29, "Input",ExpressionUUID->"da2e39d9-15b9-45d3-b9f6-8a42e2783620"],
Cell[1126957, 22776, 957, 23, 70, "Input",ExpressionUUID->"84325218-4520-4673-b3ba-afbcc56e439e"],
Cell[1127917, 22801, 772, 16, 29, "Input",ExpressionUUID->"4f50d823-b631-4620-97d5-9d9b11e937c4"],
Cell[1128692, 22819, 487, 12, 29, "Input",ExpressionUUID->"44816932-b5e2-4726-bf22-347533cdb0c9"]
}, Closed]],
Cell[CellGroupData[{
Cell[1129216, 22836, 187, 2, 38, "Subsection",ExpressionUUID->"6cd6b54a-4e4f-4aea-a7ef-4153f6ba4485",
 CellTags->"c:81"],
Cell[1129406, 22840, 828, 20, 50, "Input",ExpressionUUID->"4ae0be06-8a05-47af-8c0b-17138c61cb58"],
Cell[1130237, 22862, 171, 3, 35, "Text",ExpressionUUID->"ee141871-d592-4801-b4c6-06c9322a3a60"],
Cell[1130411, 22867, 1087, 19, 29, "Input",ExpressionUUID->"eef5b238-54fe-43d1-bd93-2cc99019cdde"],
Cell[1131501, 22888, 238, 4, 35, "Text",ExpressionUUID->"86ae354a-5496-40d5-835c-bbdc239e0f78"],
Cell[1131742, 22894, 528, 14, 29, "Input",ExpressionUUID->"c47fd3a1-5f7e-4d66-8267-f71f16f1cd07"]
}, Closed]],
Cell[CellGroupData[{
Cell[1132307, 22913, 184, 2, 38, "Subsection",ExpressionUUID->"ea78aaa4-62b6-43d1-8ebd-0d555a671dc5",
 CellTags->"c:82"],
Cell[CellGroupData[{
Cell[1132516, 22919, 185, 2, 45, "Subsubsection",ExpressionUUID->"fe1a8b13-333a-4024-9b40-6c8541119d74",
 CellTags->"c:83"],
Cell[1132704, 22923, 260, 6, 35, "Text",ExpressionUUID->"f9338d84-3437-449b-8a9e-62f482b4cfcf"],
Cell[1132967, 22931, 490, 12, 29, "Input",ExpressionUUID->"33509e0d-e0ac-4c7c-b9c9-867caa05b830"],
Cell[1133460, 22945, 158, 3, 35, "Text",ExpressionUUID->"76d3418d-f144-42c4-8284-ff4c2b7979a6"],
Cell[1133621, 22950, 259, 4, 29, "Input",ExpressionUUID->"6eb068fe-9f84-4efd-b749-d180d41ea529"],
Cell[1133883, 22956, 167, 3, 35, "Text",ExpressionUUID->"0cfab279-b4c7-44c9-9d88-d558f0a95c00"],
Cell[1134053, 22961, 253, 4, 29, "Input",ExpressionUUID->"9a749ece-1497-44de-9d20-8276379966d7"]
}, Closed]],
Cell[CellGroupData[{
Cell[1134343, 22970, 203, 2, 37, "Subsubsection",ExpressionUUID->"10f96f22-e10c-41bb-8f35-b9a1e773fe6a",
 CellTags->"c:84"],
Cell[1134549, 22974, 213, 3, 70, "Text",ExpressionUUID->"9b1bd386-1371-4f5e-8b89-df8892452f7f"],
Cell[1134765, 22979, 329, 8, 70, "Input",ExpressionUUID->"68b4bbc1-c884-4771-a4a4-89c7c31471d7"],
Cell[1135097, 22989, 270, 5, 70, "Input",ExpressionUUID->"9237ea30-acbb-44b6-ae7b-59a12af15f19"],
Cell[1135370, 22996, 341, 7, 70, "Input",ExpressionUUID->"aeacb816-877d-4070-923e-0cb7b292d179"],
Cell[1135714, 23005, 199, 3, 70, "Text",ExpressionUUID->"5d1a0efe-d941-4939-ae1e-441bfbb8a97a"],
Cell[1135916, 23010, 404, 9, 70, "Input",ExpressionUUID->"50655e5f-6b23-440f-9239-f6decae57cbd"]
}, Closed]],
Cell[CellGroupData[{
Cell[1136357, 23024, 184, 2, 37, "Subsubsection",ExpressionUUID->"0428555f-bf06-485e-bd86-110e5b03fd5d",
 CellTags->"c:85"],
Cell[1136544, 23028, 219, 5, 35, "Text",ExpressionUUID->"de8c27c7-f11b-40ba-bc10-c57fae6efe95"],
Cell[1136766, 23035, 517, 10, 50, "Input",ExpressionUUID->"a8fa823f-5049-4764-952f-4982177a5eb8"],
Cell[1137286, 23047, 288, 6, 29, "Input",ExpressionUUID->"2a2cc6eb-c726-4d33-8a51-fd9f5741739f"],
Cell[1137577, 23055, 244, 4, 35, "Text",ExpressionUUID->"58fb01eb-5f6b-4f00-a0d7-e39e5bdc8042"],
Cell[1137824, 23061, 336, 7, 29, "Input",ExpressionUUID->"e0072549-5fd7-4ee8-bfdd-74509f90111a"],
Cell[1138163, 23070, 190, 3, 35, "Text",ExpressionUUID->"1b39c1fa-f998-4e08-a4f1-d548eb3441f4"],
Cell[1138356, 23075, 1185, 21, 29, "Input",ExpressionUUID->"ec281848-13c5-468f-8682-1fe31a677497"],
Cell[1139544, 23098, 438, 11, 29, "Input",ExpressionUUID->"352e5c6f-0915-4a3d-b3e0-c936c5c3b118"],
Cell[1139985, 23111, 565, 14, 29, "Input",ExpressionUUID->"0b24b278-9787-4678-90fa-fb2efe7345ec"],
Cell[1140553, 23127, 147, 3, 50, "Input",ExpressionUUID->"d4defec7-9941-4d35-9eb4-78fe131065cf"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

